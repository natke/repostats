[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/857237460",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7981#issuecomment-857237460",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7981",
        "id": 857237460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzIzNzQ2MA==",
        "user": {
            "login": "stevenlix",
            "id": 38092805,
            "node_id": "MDQ6VXNlcjM4MDkyODA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38092805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevenlix",
            "html_url": "https://github.com/stevenlix",
            "followers_url": "https://api.github.com/users/stevenlix/followers",
            "following_url": "https://api.github.com/users/stevenlix/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevenlix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevenlix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevenlix/subscriptions",
            "organizations_url": "https://api.github.com/users/stevenlix/orgs",
            "repos_url": "https://api.github.com/users/stevenlix/repos",
            "events_url": "https://api.github.com/users/stevenlix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevenlix/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T22:50:45Z",
        "updated_at": "2021-06-08T22:50:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "Do you also covert FP32 to FP16 in the graph body? The error message indicate FP16 (10) is expected but it got FP32 (1) (or vice versa)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/857237460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/857239418",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7981#issuecomment-857239418",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7981",
        "id": 857239418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzIzOTQxOA==",
        "user": {
            "login": "TomWildenhain-Microsoft",
            "id": 67606533,
            "node_id": "MDQ6VXNlcjY3NjA2NTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67606533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomWildenhain-Microsoft",
            "html_url": "https://github.com/TomWildenhain-Microsoft",
            "followers_url": "https://api.github.com/users/TomWildenhain-Microsoft/followers",
            "following_url": "https://api.github.com/users/TomWildenhain-Microsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomWildenhain-Microsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomWildenhain-Microsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomWildenhain-Microsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/TomWildenhain-Microsoft/orgs",
            "repos_url": "https://api.github.com/users/TomWildenhain-Microsoft/repos",
            "events_url": "https://api.github.com/users/TomWildenhain-Microsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomWildenhain-Microsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T22:54:20Z",
        "updated_at": "2021-06-08T22:54:20Z",
        "author_association": "MEMBER",
        "body": "Here is a readable view of the model:\r\n\r\n```python\r\n\"\"\"\r\nRun this script to recreate the original onnx model.\r\nExample usage:\r\npython f16model_bad.py out_model_path.onnx\r\n\"\"\"\r\n\r\nfrom onnx import helper, numpy_helper, TensorProto\r\n\r\nimport onnx\r\nimport numpy as np\r\nimport sys\r\n\r\ndef order_repeated_field(repeated_proto, key_name, order):\r\n    order = list(order)\r\n    repeated_proto.sort(key=lambda x: order.index(getattr(x, key_name)))\r\n\r\ndef make_node(op_type, inputs, outputs, name=None, doc_string=None, domain=None, **kwargs):\r\n    node = helper.make_node(op_type, inputs, outputs, name, doc_string, domain, **kwargs)\r\n    if doc_string == '':\r\n        node.doc_string = ''\r\n    order_repeated_field(node.attribute, 'name', kwargs.keys())\r\n    return node\r\n\r\ndef make_graph(*args, doc_string=None, **kwargs):\r\n    graph = helper.make_graph(*args, doc_string=doc_string, **kwargs)\r\n    if doc_string == '':\r\n        graph.doc_string = ''\r\n    return graph\r\n\r\nmodel = helper.make_model(\r\n    opset_imports=[helper.make_operatorsetid('', 9)],\r\n    ir_version=4,\r\n    producer_name='OnnxMLTools',\r\n    producer_version='1.8.1',\r\n    domain='onnxconverter-common',\r\n    model_version=0,\r\n    doc_string='onnx.fn: loop_test',\r\n    graph=make_graph(\r\n        name='loop_test',\r\n        inputs=[helper.make_tensor_value_info('data', TensorProto.FLOAT16, shape=[None, None])],\r\n        outputs=[helper.make_tensor_value_info('y1', TensorProto.FLOAT16, shape=[None]), helper.make_tensor_value_info('y2', TensorProto.FLOAT16, shape=[None, None])],\r\n        value_info=[\r\n            helper.make_tensor_value_info('loop_test_shape0', TensorProto.INT64, shape=[2]),\r\n            helper.make_tensor_value_info('loop_test_constant20', TensorProto.INT64, shape=[]),\r\n            helper.make_tensor_value_info('loop_test_gather0', TensorProto.INT64, shape=[]),\r\n            helper.make_tensor_value_info('loop_test_constant201', TensorProto.INT64, shape=[1]),\r\n            helper.make_tensor_value_info('loop_test_gather01', TensorProto.INT64, shape=[1]),\r\n            helper.make_tensor_value_info('loop_test_constant_of_shape0', TensorProto.FLOAT16, shape=[None]),\r\n            helper.make_tensor_value_info('loop_test_constant202', TensorProto.BOOL, shape=[]),\r\n            helper.make_tensor_value_info('final_total', TensorProto.FLOAT16, shape=None),\r\n            helper.make_tensor_value_info('scan_res', TensorProto.FLOAT16, shape=[None, None]),\r\n        ],\r\n        nodes=[\r\n            make_node('Shape', inputs=['data'], outputs=['loop_test_shape0'], name='loop_test_shape', domain=''),\r\n            make_node('Constant', inputs=[], outputs=['loop_test_constant20'], name='loop_test_constant2', domain='', value=numpy_helper.from_array(np.array(0, dtype=np.int64), name='c')),\r\n            make_node('Gather', inputs=['loop_test_shape0', 'loop_test_constant20'], outputs=['loop_test_gather0'], name='loop_test_gather', domain='', axis=0),\r\n            make_node('Constant', inputs=[], outputs=['loop_test_constant201'], name='loop_test_constant21', domain='', value=numpy_helper.from_array(np.array([1], dtype=np.int64), name='c1')),\r\n            make_node('Gather', inputs=['loop_test_shape0', 'loop_test_constant201'], outputs=['loop_test_gather01'], name='loop_test_gather1', domain='', axis=0),\r\n            make_node(\r\n                'ConstantOfShape',\r\n                inputs=['loop_test_gather01'],\r\n                outputs=['loop_test_constant_of_shape0'],\r\n                name='loop_test_constant_of_shape',\r\n                domain='',\r\n                value=numpy_helper.from_array(np.array([0.0], dtype=np.float16), name='cos'),\r\n            ),\r\n            make_node('Constant', inputs=[], outputs=['loop_test_constant202'], name='loop_test_constant22', domain='', value=numpy_helper.from_array(np.array(True, dtype=np.bool), name='c2')),\r\n            make_node(\r\n                'Loop',\r\n                inputs=['loop_test_gather0', 'loop_test_constant202', 'loop_test_constant_of_shape0'],\r\n                outputs=['final_total', 'scan_res'],\r\n                name='loop_test_loop',\r\n                domain='',\r\n                body=make_graph(\r\n                    name='range_body',\r\n                    inputs=[\r\n                        helper.make_tensor_value_info('iter_n', TensorProto.INT64, shape=[1]),\r\n                        helper.make_tensor_value_info('cond', TensorProto.BOOL, shape=[]),\r\n                        helper.make_tensor_value_info('total', TensorProto.FLOAT16, shape=[None]),\r\n                    ],\r\n                    outputs=[\r\n                        helper.make_tensor_value_info('c_o', TensorProto.BOOL, shape=[]),\r\n                        helper.make_tensor_value_info('total_o', TensorProto.FLOAT16, shape=[None]),\r\n                        helper.make_tensor_value_info('scan_o', TensorProto.FLOAT16, shape=[None]),\r\n                    ],\r\n                    value_info=[\r\n                        helper.make_tensor_value_info('range_body_squeeze0', TensorProto.INT64, shape=[]),\r\n                        helper.make_tensor_value_info('range_body_gather0', TensorProto.FLOAT16, shape=[None]),\r\n                        helper.make_tensor_value_info('range_body_add0', TensorProto.FLOAT16, shape=[None]),\r\n                    ],\r\n                    nodes=[\r\n                        make_node('Squeeze', inputs=['iter_n'], outputs=['range_body_squeeze0'], name='range_body_squeeze', domain='', axes=[0]),\r\n                        make_node('Gather', inputs=['data', 'range_body_squeeze0'], outputs=['range_body_gather0'], name='range_body_gather', domain='', axis=0),\r\n                        make_node('Add', inputs=['total', 'range_body_gather0'], outputs=['range_body_add0'], name='range_body_add', domain=''),\r\n                        make_node('Identity', inputs=['loop_test_constant202'], outputs=['c_o'], name='range_body_identity', domain=''),\r\n                        make_node('Identity', inputs=['range_body_add0'], outputs=['total_o'], name='range_body_identity1', domain=''),\r\n                        make_node('Identity', inputs=['range_body_add0'], outputs=['scan_o'], name='range_body_identity2', domain=''),\r\n                    ],\r\n                ),\r\n            ),\r\n            make_node('Identity', inputs=['final_total'], outputs=['y1'], name='loop_test_identity', domain=''),\r\n            make_node('Identity', inputs=['scan_res'], outputs=['y2'], name='loop_test_identity1', domain=''),\r\n        ],\r\n    ),\r\n)\r\n\r\nif __name__ == '__main__' and len(sys.argv) == 2:\r\n    _, out_path = sys.argv\r\n    onnx.save(model, out_path)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/857239418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/859097338",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7981#issuecomment-859097338",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7981",
        "id": 859097338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTA5NzMzOA==",
        "user": {
            "login": "TomWildenhain-Microsoft",
            "id": 67606533,
            "node_id": "MDQ6VXNlcjY3NjA2NTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67606533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomWildenhain-Microsoft",
            "html_url": "https://github.com/TomWildenhain-Microsoft",
            "followers_url": "https://api.github.com/users/TomWildenhain-Microsoft/followers",
            "following_url": "https://api.github.com/users/TomWildenhain-Microsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomWildenhain-Microsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomWildenhain-Microsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomWildenhain-Microsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/TomWildenhain-Microsoft/orgs",
            "repos_url": "https://api.github.com/users/TomWildenhain-Microsoft/repos",
            "events_url": "https://api.github.com/users/TomWildenhain-Microsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomWildenhain-Microsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T21:44:36Z",
        "updated_at": "2021-06-10T21:44:36Z",
        "author_association": "MEMBER",
        "body": "This similar model reproduces the error on 1.7.0: \r\nhttps://microsoft-my.sharepoint-df.com/:u:/p/tomwi/EeP2VtvQPjhPqWSEfmhLzfMB0XLbfZENP8qH1B0t_oILmw?e=fyZToM",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/859097338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]