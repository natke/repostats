[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1553936086",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1553936086",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1553936086,
        "node_id": "IC_kwDOCVq1mM5cny7W",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-19T03:04:17Z",
        "updated_at": "2023-05-19T03:04:17Z",
        "author_association": "NONE",
        "body": "Are there any comments for this problem ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1553936086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1554819072",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1554819072",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1554819072,
        "node_id": "IC_kwDOCVq1mM5crKgA",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-19T16:26:11Z",
        "updated_at": "2023-05-19T16:26:11Z",
        "author_association": "MEMBER",
        "body": "@HoaNguyen55, You can build from source to enable dumping node inputs and outputs (see https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/core/framework/debug_node_inputs_outputs_utils.h for detail). \r\nAn example is like the following:\r\n```\r\ngit clone http://github.com/microsoft/onnxruntime\r\ncd onnxruntime\r\npython3 -m pip install cmake\r\nsh build.sh  --config Release  --build_shared_lib --parallel  --build_wheel --skip_test --cmake_extra_defines onnxruntime_DEBUG_NODE_INPUTS_OUTPUTS=1 --compile_no_warning_as_error --skip_submodule_sync\r\npython3 -m pip install build/Linux/Release/dist/onnxruntime_gpu-*.whl --force-reinstall\r\nexport ORT_DEBUG_NODE_IO_DUMP_INPUT_DATA=1\r\nexport ORT_DEBUG_NODE_IO_DUMP_OUTPUT_DATA=1\r\nexport ORT_DEBUG_NODE_IO_SNIPPET_THRESHOLD=0\r\npython3 test_my_model.py\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1554819072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555377522",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1555377522",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1555377522,
        "node_id": "IC_kwDOCVq1mM5ctS1y",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-19T23:46:05Z",
        "updated_at": "2023-05-19T23:46:05Z",
        "author_association": "NONE",
        "body": "Thank you so much, I will try your debugging now.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555377522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555881081",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1555881081",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1555881081,
        "node_id": "IC_kwDOCVq1mM5cvNx5",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-20T10:20:27Z",
        "updated_at": "2023-05-20T10:20:27Z",
        "author_association": "NONE",
        "body": "Hi @tianleiwu , I setup as your mention but the result is still wrong as I expect. Could you please give me more detail how to dump node inputs and outputs in test_my_model.py.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555881081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555881647",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1555881647",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1555881647,
        "node_id": "IC_kwDOCVq1mM5cvN6v",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-20T10:23:55Z",
        "updated_at": "2023-05-20T10:23:55Z",
        "author_association": "NONE",
        "body": "I tried this code:\r\n```\r\nimport json\r\nimport onnxruntime\r\n\r\nlabels_file = \"/content/drive/MyDrive/hinhhoc/labels.json\"\r\nonnx_model_path = \"/content/drive/MyDrive/hinhhoc/model.onnx\"\r\nwith open(labels_file) as f:\r\n    classes = json.load(f)\r\nprint(classes)\r\ntry:\r\n    session = onnxruntime.InferenceSession(onnx_model_path, providers=['CPUExecutionProvider'])\r\n    print(\"ONNX model loaded...\")\r\nexcept Exception as e: \r\n    print(\"Error loading ONNX file: \", str(e))\r\n\r\nmodel = onnx.load(\"model.onnx\")\r\noutput =[node.name for node in model.graph.output]\r\n\r\ninput_all = [node.name for node in model.graph.input]\r\ninput_initializer =  [node.name for node in model.graph.initializer]\r\nnet_feed_input = list(set(input_all)  - set(input_initializer))\r\n\r\nprint('Inputs: ', net_feed_input)\r\nprint('Outputs: ', output)\r\n```\r\nAnd result is:\r\n```\r\n\r\n1s\r\nimport json\r\nimport onnxruntime\r\n\r\nlabels_file = \"/content/drive/MyDrive/hinhhoc/labels.json\"\r\nonnx_model_path = \"/content/drive/MyDrive/hinhhoc/model.onnx\"\r\nwith open(labels_file) as f:\r\n    classes = json.load(f)\r\nprint(classes)\r\ntry:\r\n    session = onnxruntime.InferenceSession(onnx_model_path, providers=['CPUExecutionProvider'])\r\n…\r\nprint('Inputs: ', net_feed_input)\r\nprint('Outputs: ', output)\r\n['duongphangiac', 'gocvuong', 'none_hash_marks', 'one_degree', 'one_hash_marks', 'three_hash_marks', 'two_hash_marks']\r\nONNX model loaded...\r\nInputs:  ['input1']\r\nOutputs:  ['output1']\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555881647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555885169",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1555885169",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1555885169,
        "node_id": "IC_kwDOCVq1mM5cvOxx",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-20T10:47:55Z",
        "updated_at": "2023-05-20T10:47:55Z",
        "author_association": "NONE",
        "body": "Here is my_test_model.py code:\r\n```\r\nimport json\r\nimport onnxruntime\r\nimport onnx\r\nfrom google.colab.patches import cv2_imshow\r\n\r\nlabels_file = \"/content/drive/MyDrive/hinhhoc/labels.json\"\r\nonnx_model_path = \"/content/drive/MyDrive/hinhhoc/model.onnx\"\r\nwith open(labels_file) as f:\r\n    classes = json.load(f)\r\nprint(classes)\r\ntry:\r\n    session = onnxruntime.InferenceSession(onnx_model_path, providers=['CPUExecutionProvider'])\r\n    print(\"ONNX model loaded...\")\r\nexcept Exception as e: \r\n    print(\"Error loading ONNX file: \", str(e))\r\n\r\nmodel = onnx.load(onnx_model_path)\r\noutput =[node.name for node in model.graph.output]\r\n\r\ninput_all = [node.name for node in model.graph.input]\r\ninput_initializer =  [node.name for node in model.graph.initializer]\r\nnet_feed_input = list(set(input_all)  - set(input_initializer))\r\n\r\nprint('Inputs: ', net_feed_input)\r\nprint('Outputs: ', output)\r\n\r\nsess_input = session.get_inputs()\r\nsess_output = session.get_outputs()\r\nprint(f\"No. of inputs : {len(sess_input)}, No. of outputs : {len(sess_output)}\")\r\n\r\nfor idx, input_ in enumerate(range(len(sess_input))):\r\n    input_name = sess_input[input_].name\r\n    input_shape = sess_input[input_].shape\r\n    input_type = sess_input[input_].type\r\n    print(f\"{idx} Input name : { input_name }, Input shape : {input_shape}, \\\r\n    Input type  : {input_type}\")  \r\n\r\nfor idx, output in enumerate(range(len(sess_output))):\r\n    output_name = sess_output[output].name\r\n    output_shape = sess_output[output].shape\r\n    output_type = sess_output[output].type\r\n    print(f\" {idx} Output name : {output_name}, Output shape : {output_shape}, \\\r\n    Output type  : {output_type}\")\r\n\r\nbatch, channel, height_onnx_crop_size, width_onnx_crop_size = session.get_inputs()[0].shape\r\n\r\nimport glob\r\nimport numpy as np\r\nfrom PIL import Image\r\nimport matplotlib.pyplot as plt\r\n\r\ndef preprocess(image, resize_size, crop_size_onnx):\r\n    \"\"\"Perform pre-processing on raw input image\r\n    \r\n    :param image: raw input image\r\n    :type image: PIL image\r\n    :param resize_size: value to resize the image\r\n    :type image: Int\r\n    :param crop_size_onnx: expected height of an input image in onnx model\r\n    :type crop_size_onnx: Int\r\n    :return: pre-processed image in numpy format\r\n    :rtype: ndarray 1xCxHxW\r\n    \"\"\"\r\n    \r\n    import cv2\r\n    import numpy as np\r\n\r\n    image = image.convert('RGB')\r\n    \r\n    image = image.resize((resize_size, resize_size))\r\n    # center crop\r\n    left = int((resize_size - crop_size_onnx) / 2)\r\n    top = int((resize_size - crop_size_onnx) / 2)\r\n    right = int((resize_size + crop_size_onnx) / 2)\r\n    bottom = int((resize_size + crop_size_onnx) / 2)\r\n    image = image.crop((left, top, right, bottom))\r\n\r\n    # Convert PIL image to NumPy array\r\n    np_image = np.array(image)\r\n\r\n    # Display the image using cv2_imshow\r\n    cv2_imshow(np_image)\r\n\r\n    # HWC -> CHW\r\n    np_image = np_image.transpose(2, 0, 1) # CxHxW\r\n    # normalize the image\r\n    mean_vec = np.array([0.485, 0.456, 0.406])\r\n    std_vec = np.array([0.229, 0.224, 0.225])\r\n    norm_img_data = np.zeros(np_image.shape).astype('float32')\r\n    for i in range(np_image.shape[0]):\r\n        norm_img_data[i,:,:] = (np_image[i,:,:]/255 - mean_vec[i])/std_vec[i]\r\n             \r\n    np_image = np.expand_dims(norm_img_data, axis=0) # 1xCxHxW\r\n    return np_image\r\n\r\n# following code loads only batch_size number of images for demonstrating ONNX inference\r\n# make sure that the data directory has at least batch_size number of images\r\n\r\ntest_images_path = \"/content/drive/MyDrive/hinhhoc/train_kyhieu_1/duongphangiac/*\" # replace with path to images\r\n# Select batch size needed\r\nbatch_size = 8\r\n# you can modify resize_size based on your trained model\r\nresize_size = 224\r\n# height and width will be the same for classification\r\ncrop_size_onnx = height_onnx_crop_size \r\n\r\nimage_files = glob.glob(test_images_path)\r\nimg_processed_list = []\r\nfor i in range(batch_size):\r\n    img = Image.open(image_files[i])\r\n    img_processed_list.append(preprocess(img, resize_size, crop_size_onnx))\r\n    \r\nif len(img_processed_list) > 1:\r\n    img_data = np.concatenate(img_processed_list)\r\nelif len(img_processed_list) == 1:\r\n    img_data = img_processed_list[0]\r\nelse:\r\n    img_data = None\r\n\r\nassert batch_size == img_data.shape[0]\r\n\r\ndef get_predictions_from_ONNX(onnx_session, img_data):\r\n    \"\"\"Perform predictions with ONNX runtime\r\n    \r\n    :param onnx_session: onnx model session\r\n    :type onnx_session: class InferenceSession\r\n    :param img_data: pre-processed numpy image\r\n    :type img_data: ndarray with shape 1xCxHxW\r\n    :return: scores with shapes\r\n            (1, No. of classes in training dataset) \r\n    :rtype: numpy array\r\n    \"\"\"\r\n\r\n    sess_input = onnx_session.get_inputs()\r\n    sess_output = onnx_session.get_outputs()\r\n    print(f\"No. of inputs : {len(sess_input)}, No. of outputs : {len(sess_output)}\")    \r\n    # predict with ONNX Runtime\r\n    output_names = [ output.name for output in sess_output]\r\n    scores = onnx_session.run(output_names=output_names,\\\r\n                                               input_feed={sess_input[0].name: img_data})\r\n    \r\n    return scores[0]\r\n\r\nscores = get_predictions_from_ONNX(session, img_data)\r\nprint(scores)\r\n```\r\n\r\nAnd the all of ouputs figure as below:\r\n```\r\n['duongphangiac', 'gocvuong', 'none_hash_marks', 'one_degree', 'one_hash_marks', 'three_hash_marks', 'two_hash_marks']\r\nONNX model loaded...\r\nInputs:  ['input1']\r\nOutputs:  ['output1']\r\nNo. of inputs : 1, No. of outputs : 1\r\n0 Input name : input1, Input shape : ['batch', 3, 224, 224],     Input type  : tensor(float)\r\n 0 Output name : output1, Output shape : ['batch', 7],     Output type  : tensor(float)\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47AE30>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47B0A0>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47B0A0>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47AE30>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47AE30>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47B0A0>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47B0A0>\r\n<PIL.Image.Image image mode=RGB size=224x224 at 0x7EFE4E47AE30>\r\nNo. of inputs : 1, No. of outputs : 1\r\n[[-2.5387685 -4.613551   1.6050177 -1.478127  11.003676  -3.3664706\r\n  -1.6885184]\r\n [-2.2556834 -4.495757   1.0914903 -1.6126914 11.314987  -3.302256\r\n  -1.6397996]\r\n [-2.4460323 -4.6656237  1.4101638 -1.5492203 11.335225  -3.4933643\r\n  -1.6240411]\r\n [-2.4801817 -4.6250753  1.1665765 -1.812707  11.900105  -3.349548\r\n  -1.8201928]\r\n [-2.6595576 -4.5535645  1.289092  -1.6866236 11.466214  -3.3111863\r\n  -1.7553685]\r\n [-2.4439638 -4.561487   1.2498547 -1.5473092 11.29254   -3.3785443\r\n  -1.6108303]\r\n [-2.6311693 -5.0982523  1.9837017 -1.6397297 11.519654  -3.5250905\r\n  -1.8508596]\r\n [-2.3932076 -4.4917784  1.0236381 -1.8083414 11.582106  -3.3170178\r\n  -1.6593685]]\r\n\r\n````\r\n\r\nI still can't figure out why the results are still the same and approximately the same.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1555885169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1556381557",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16001#issuecomment-1556381557",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16001",
        "id": 1556381557,
        "node_id": "IC_kwDOCVq1mM5cxH91",
        "user": {
            "login": "HoaNguyen55",
            "id": 69840669,
            "node_id": "MDQ6VXNlcjY5ODQwNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/69840669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoaNguyen55",
            "html_url": "https://github.com/HoaNguyen55",
            "followers_url": "https://api.github.com/users/HoaNguyen55/followers",
            "following_url": "https://api.github.com/users/HoaNguyen55/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoaNguyen55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoaNguyen55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoaNguyen55/subscriptions",
            "organizations_url": "https://api.github.com/users/HoaNguyen55/orgs",
            "repos_url": "https://api.github.com/users/HoaNguyen55/repos",
            "events_url": "https://api.github.com/users/HoaNguyen55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoaNguyen55/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-22T01:34:00Z",
        "updated_at": "2023-05-22T01:34:00Z",
        "author_association": "NONE",
        "body": "Any news on this? I'm working on a project that requires this functionality to work properly, and this issue is completely blocking me",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1556381557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]