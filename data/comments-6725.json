[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/780724514",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-780724514",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 780724514,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDcyNDUxNA==",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-17T17:35:18Z",
        "updated_at": "2021-02-17T17:35:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "@tlh20 It looks like spinning in the `WorkerLoop` is taking more time than expected. Is this a known issue with the new threadpool implementation and/or are there any options for configuring it?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/780724514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/780738414",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-780738414",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 780738414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDczODQxNA==",
        "user": {
            "login": "tlh20",
            "id": 66783730,
            "node_id": "MDQ6VXNlcjY2NzgzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/66783730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlh20",
            "html_url": "https://github.com/tlh20",
            "followers_url": "https://api.github.com/users/tlh20/followers",
            "following_url": "https://api.github.com/users/tlh20/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlh20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlh20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlh20/subscriptions",
            "organizations_url": "https://api.github.com/users/tlh20/orgs",
            "repos_url": "https://api.github.com/users/tlh20/repos",
            "events_url": "https://api.github.com/users/tlh20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlh20/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2021-02-17T17:57:29Z",
        "updated_at": "2021-02-17T17:57:29Z",
        "author_association": "MEMBER",
        "body": "@mrry At the ORT level, the threadpool broadly matches OpenMP with a OMP_WAIT_POLICY=ACTIVE configuration.  It implements a spin-then-block policy meaning that the threads will sleep if they remain inactive, but (as with OpenMP) a periodic low load can keep them active.  \r\n\r\nThe ORT session options expose control over the number of threads in use via session options https://github.com/microsoft/onnxruntime/blob/master/include/onnxruntime/core/session/onnxruntime_cxx_api.h#L300.  If this is dialed back to 1 thread then it will avoid creating a thread pool, and use some simpler single-thread code paths.  I am not familiar with all the WinML libraries, but believe the relevant code is https://github.com/microsoft/onnxruntime/blob/master/winml/lib/Api/LearningModelSession.cpp#L124-L144 which provides control over the thread count (and reflects the behavior seen here with the performance-focused default to use the full system).\r\n\r\nInternally, ORT does have a control analogous to OMP_WAIT_POLICY=PASSIVE, typically achieving lower CPU consumption at reduced performance.  (low_latency_hint=false at https://github.com/microsoft/onnxruntime/blob/master/include/onnxruntime/core/platform/threadpool.h#L147-L160)  I am not sure if that is plumbed through the APIs.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/780738414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/784050154",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-784050154",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 784050154,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDA1MDE1NA==",
        "user": {
            "login": "paul-allais",
            "id": 64973054,
            "node_id": "MDQ6VXNlcjY0OTczMDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64973054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paul-allais",
            "html_url": "https://github.com/paul-allais",
            "followers_url": "https://api.github.com/users/paul-allais/followers",
            "following_url": "https://api.github.com/users/paul-allais/following{/other_user}",
            "gists_url": "https://api.github.com/users/paul-allais/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paul-allais/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paul-allais/subscriptions",
            "organizations_url": "https://api.github.com/users/paul-allais/orgs",
            "repos_url": "https://api.github.com/users/paul-allais/repos",
            "events_url": "https://api.github.com/users/paul-allais/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paul-allais/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-23T09:58:38Z",
        "updated_at": "2021-02-23T09:58:38Z",
        "author_association": "NONE",
        "body": "Many thanks for addressing the problem! I will try and limit the number of threads through SetIntraOpNumThreads. If it prevents the use of the threadpool, it will certainly do the job for us, as we do not intend to rely strongly on parallel processing.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/784050154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/784082769",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-784082769",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 784082769,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDA4Mjc2OQ==",
        "user": {
            "login": "paul-allais",
            "id": 64973054,
            "node_id": "MDQ6VXNlcjY0OTczMDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64973054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paul-allais",
            "html_url": "https://github.com/paul-allais",
            "followers_url": "https://api.github.com/users/paul-allais/followers",
            "following_url": "https://api.github.com/users/paul-allais/following{/other_user}",
            "gists_url": "https://api.github.com/users/paul-allais/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paul-allais/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paul-allais/subscriptions",
            "organizations_url": "https://api.github.com/users/paul-allais/orgs",
            "repos_url": "https://api.github.com/users/paul-allais/repos",
            "events_url": "https://api.github.com/users/paul-allais/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paul-allais/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-23T10:18:49Z",
        "updated_at": "2021-02-23T10:18:49Z",
        "author_association": "NONE",
        "body": "I've done it, using the how-to documented here: https://docs.microsoft.com/en-us/windows/ai/windows-ml/native-apis/intraopnumthreads. For potential future readers, you need to include <unkwn.h> _before_ WinML headers or the example won't compile.\r\nThis absolutely solved the problem. The threadpool is not used, and the CPU load now matches the inference computational complexity. Once more, many thanks for helping.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/784082769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/787989894",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-787989894",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 787989894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4Nzk4OTg5NA==",
        "user": {
            "login": "paul-allais",
            "id": 64973054,
            "node_id": "MDQ6VXNlcjY0OTczMDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/64973054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paul-allais",
            "html_url": "https://github.com/paul-allais",
            "followers_url": "https://api.github.com/users/paul-allais/followers",
            "following_url": "https://api.github.com/users/paul-allais/following{/other_user}",
            "gists_url": "https://api.github.com/users/paul-allais/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paul-allais/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paul-allais/subscriptions",
            "organizations_url": "https://api.github.com/users/paul-allais/orgs",
            "repos_url": "https://api.github.com/users/paul-allais/repos",
            "events_url": "https://api.github.com/users/paul-allais/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paul-allais/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-01T14:27:45Z",
        "updated_at": "2021-03-01T14:27:45Z",
        "author_association": "NONE",
        "body": "Hey, I'd like to close the issue as we're not impacted anymore, but going single-threaded is essentially a workaround.\r\n\r\nI've not seen the low_latency_hint being exposed in the ORT interface (I may be wrong, I'm not familiar enough with the API). In any case, it is not accessible from WinML interfaces.\r\nWould it be possible to make it accessible through the APIs - especially the WinML interface? That would solve the root problem, even with multithreading.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/787989894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/943763220",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/6725#issuecomment-943763220",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/6725",
        "id": 943763220,
        "node_id": "IC_kwDOCVq1mM44QK8U",
        "user": {
            "login": "martinb35",
            "id": 42186431,
            "node_id": "MDQ6VXNlcjQyMTg2NDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42186431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinb35",
            "html_url": "https://github.com/martinb35",
            "followers_url": "https://api.github.com/users/martinb35/followers",
            "following_url": "https://api.github.com/users/martinb35/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinb35/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinb35/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinb35/subscriptions",
            "organizations_url": "https://api.github.com/users/martinb35/orgs",
            "repos_url": "https://api.github.com/users/martinb35/repos",
            "events_url": "https://api.github.com/users/martinb35/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinb35/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-14T21:51:11Z",
        "updated_at": "2021-10-14T21:51:11Z",
        "author_association": "MEMBER",
        "body": "@paul-allais - we added a new method to the native WinML API here to address this: https://github.com/microsoft/onnxruntime/pull/7498: ILearningModelSessionOptionsNative1::SetIntraOpThreadSpinning(), which passes through to the underlying Onnx Runtime method mentioned above. Hopefully that solves your issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/943763220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]