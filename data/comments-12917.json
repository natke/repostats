[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1255663611",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12917#issuecomment-1255663611",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12917",
        "id": 1255663611,
        "node_id": "IC_kwDOCVq1mM5K1-f7",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-22T23:44:14Z",
        "updated_at": "2022-09-22T23:44:14Z",
        "author_association": "MEMBER",
        "body": "I will add a check that the bias/scale are a valid size in a separate PR so there's no overrun, but what's the real-world use case where bias and scale would require broadcasting? \r\n\r\nIn the PyTorch spec I believe those are learned values that do not require broadcasting. \r\n\r\nhttps://pytorch.org/docs/stable/generated/torch.nn.LayerNorm.html\r\n\r\n```\r\n~LayerNorm.weight – the learnable weights of the module of shape \\text{normalized\\_shape}normalized_shape when elementwise_affine is set to True. The values are initialized to 1.\r\n\r\n~LayerNorm.bias – the learnable bias of the module of shape \\text{normalized\\_shape}normalized_shape when elementwise_affine is set to True. The values are initialized to 0.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1255663611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]