[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939201226",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-939201226",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 939201226,
        "node_id": "IC_kwDOCVq1mM43-xLK",
        "user": {
            "login": "RyanUnderhill",
            "id": 38674843,
            "node_id": "MDQ6VXNlcjM4Njc0ODQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38674843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RyanUnderhill",
            "html_url": "https://github.com/RyanUnderhill",
            "followers_url": "https://api.github.com/users/RyanUnderhill/followers",
            "following_url": "https://api.github.com/users/RyanUnderhill/following{/other_user}",
            "gists_url": "https://api.github.com/users/RyanUnderhill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RyanUnderhill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RyanUnderhill/subscriptions",
            "organizations_url": "https://api.github.com/users/RyanUnderhill/orgs",
            "repos_url": "https://api.github.com/users/RyanUnderhill/repos",
            "events_url": "https://api.github.com/users/RyanUnderhill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RyanUnderhill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-09T01:38:20Z",
        "updated_at": "2021-10-09T01:38:20Z",
        "author_association": "MEMBER",
        "body": "I'm not sure if C# is affecting this, but onnxruntime_providers_shared.so is where Provider_GetHost is defined.\r\n\r\nonnxruntime_providers_shared.so is very simple and is just this file with these two functions:\r\nhttps://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/providers/shared/common.cc\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939201226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939250116",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-939250116",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 939250116,
        "node_id": "IC_kwDOCVq1mM43-9HE",
        "user": {
            "login": "egortech",
            "id": 13813684,
            "node_id": "MDQ6VXNlcjEzODEzNjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13813684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/egortech",
            "html_url": "https://github.com/egortech",
            "followers_url": "https://api.github.com/users/egortech/followers",
            "following_url": "https://api.github.com/users/egortech/following{/other_user}",
            "gists_url": "https://api.github.com/users/egortech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/egortech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/egortech/subscriptions",
            "organizations_url": "https://api.github.com/users/egortech/orgs",
            "repos_url": "https://api.github.com/users/egortech/repos",
            "events_url": "https://api.github.com/users/egortech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/egortech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-09T07:48:45Z",
        "updated_at": "2021-10-09T07:55:04Z",
        "author_association": "NONE",
        "body": "Yes, but libonnxruntime_providers_cuda.so miss reference to onnxruntime_providers_shared.so. Looks like it linkers phase-related error.  I don't know should it be loaded load-lime or dynamically (via dlopen). Another provider may be affected by this (actually I accidentally placed a screenshot TensorRT provider but CUDA one so have the same situation). Windows version of this library loaded successfully with this approach. I saw a reference in the import table to  onnxruntime_providers_shared.dll:\r\n![image](https://user-images.githubusercontent.com/13813684/136649372-5204925e-8513-4fe8-9bb8-5efbff2f2fc8.png)\r\n\r\nBut the Linux version of this file doesn't point to libonnxruntime_providers_shared.so (as you see in objdump output)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/939250116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940606615",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-940606615",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 940606615,
        "node_id": "IC_kwDOCVq1mM44EISX",
        "user": {
            "login": "RyanUnderhill",
            "id": 38674843,
            "node_id": "MDQ6VXNlcjM4Njc0ODQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38674843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RyanUnderhill",
            "html_url": "https://github.com/RyanUnderhill",
            "followers_url": "https://api.github.com/users/RyanUnderhill/followers",
            "following_url": "https://api.github.com/users/RyanUnderhill/following{/other_user}",
            "gists_url": "https://api.github.com/users/RyanUnderhill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RyanUnderhill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RyanUnderhill/subscriptions",
            "organizations_url": "https://api.github.com/users/RyanUnderhill/orgs",
            "repos_url": "https://api.github.com/users/RyanUnderhill/repos",
            "events_url": "https://api.github.com/users/RyanUnderhill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RyanUnderhill/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-12T02:45:30Z",
        "updated_at": "2021-10-12T02:45:30Z",
        "author_association": "MEMBER",
        "body": "Hmm, thank you for debugging further. The process to load it on Linux goes like this:\r\n\r\nonnxruntime.so dynamically loads (dlopen) onnxruntime_providers_shared.so with RTLD_GLOBAL\r\nThen onnxruntime.so dynamically loads onnxruntime_providers_cuda.so (with RTLD_LOCAL).\r\n(On Windows there's no global/local stuff, this is Linux specific).\r\n\r\nThe RTLD_GLOBAL should make it see Provider_GetHost from onnxruntime_providers_cuda.so. Can you tell if it's getting preloaded somehow with the wrong setting?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940606615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940624509",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-940624509",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 940624509,
        "node_id": "IC_kwDOCVq1mM44EMp9",
        "user": {
            "login": "egortech",
            "id": 13813684,
            "node_id": "MDQ6VXNlcjEzODEzNjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13813684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/egortech",
            "html_url": "https://github.com/egortech",
            "followers_url": "https://api.github.com/users/egortech/followers",
            "following_url": "https://api.github.com/users/egortech/following{/other_user}",
            "gists_url": "https://api.github.com/users/egortech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/egortech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/egortech/subscriptions",
            "organizations_url": "https://api.github.com/users/egortech/orgs",
            "repos_url": "https://api.github.com/users/egortech/repos",
            "events_url": "https://api.github.com/users/egortech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/egortech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-12T03:31:27Z",
        "updated_at": "2021-10-12T03:47:58Z",
        "author_association": "NONE",
        "body": "@RyanUnderhill, it's the point because of NativeLibrary.Load load with RTLD_LOCAL. Other libraries load without problems with RTLD_LOCAL because their function is pointed in the symbol table in so with its name, but only Provider_GetHost not (So it need to load library which contains an implementation of function with RTLD_GLOBAL).\r\n\r\nUsing dlopen with the right set of flags solves my problems locally, but unfortunately, there is a lack of NET API to set load flags for Linux portable way.\r\n\r\nIs it possible to further update to set a reference to onnxruntime_provider_shared.so for function Provider_GetHost to load all with RTLD_LOCAL.\r\n\r\nThank you for help",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/940624509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1101941400",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-1101941400",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 1101941400,
        "node_id": "IC_kwDOCVq1mM5BrkqY",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-04-19T02:53:42Z",
        "updated_at": "2022-04-19T02:53:42Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1101941400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1452515232",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-1452515232",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 1452515232,
        "node_id": "IC_kwDOCVq1mM5Wk5-g",
        "user": {
            "login": "sttell",
            "id": 63280507,
            "node_id": "MDQ6VXNlcjYzMjgwNTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63280507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sttell",
            "html_url": "https://github.com/sttell",
            "followers_url": "https://api.github.com/users/sttell/followers",
            "following_url": "https://api.github.com/users/sttell/following{/other_user}",
            "gists_url": "https://api.github.com/users/sttell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sttell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sttell/subscriptions",
            "organizations_url": "https://api.github.com/users/sttell/orgs",
            "repos_url": "https://api.github.com/users/sttell/repos",
            "events_url": "https://api.github.com/users/sttell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sttell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-02T20:41:20Z",
        "updated_at": "2023-03-03T10:04:21Z",
        "author_association": "NONE",
        "body": "Hello everyone Faced with a similar problem of an undefined Provider_GetHost symbol. This time the problem was reproduced when building the project with onnxruntime with CUDA provider support in the images of docker centos 7, 8. The ONNX Runtime library is correctly assembled, there are no Warnings and Error. \r\n\r\nAt the same time, when linking to the project, the undefined reference symbol Provider_GetHost error occurs. I tried to install the pip package with onnxruntime-gpu and link the project to the libraries supplied via pip, but the same error still reproduces. \r\n\r\nThe ONNX Runtime version is 1.13.1.\r\n\r\nWithout GPU support, the library links wonderfully and without errors. Build instructions used:\r\n```\r\n./build.sh --config Release --skip_tests --build_shared_lib --cuda_home ${CUDA_HOME} --cudnn_home ${CUDNN_HOME} --use_cuda --cmake_extra_defines CMAKE_INSTALL_PREFIX=${SYSTEM_INSTALL_PREFIX} --cmake_extra_defines 'CMAKE_CUDA_ARCHITECTURES=52;60;61;70;75;86'\r\n```\r\n```\r\n[root@a28967f13572 lib64]# objdump -TC libonnxruntime_providers_cuda.so | grep \"GetHost\"\r\n0000000000000000      D  *UND*\t0000000000000000              Provider_GetHost\r\n\r\n[root@a28967f13572 lib64]# objdump -TC libonnxruntime_providers_shared.so\r\n\r\nlibonnxruntime_providers_shared.so:     file format elf64-x86-64\r\n\r\nDYNAMIC SYMBOL TABLE:\r\n0000000000000000  w   DF *UND*\t0000000000000000  GLIBC_2.2.5 __cxa_finalize\r\n0000000000000000  w   D  *UND*\t0000000000000000              _ITM_deregisterTMCloneTable\r\n0000000000000000  w   D  *UND*\t0000000000000000              __gmon_start__\r\n0000000000000000  w   D  *UND*\t0000000000000000              _ITM_registerTMCloneTable\r\n0000000000000600 g    DF .text\t000000000000000b  VERS_1.0    Provider_SetHost\r\n0000000000000000 g    DO *ABS*\t0000000000000000  VERS_1.0    VERS_1.0\r\n00000000000005f0 g    DF .text\t000000000000000b  VERS_1.0    Provider_GetHost\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1452515232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1630214115",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9309#issuecomment-1630214115",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9309",
        "id": 1630214115,
        "node_id": "IC_kwDOCVq1mM5hKxfj",
        "user": {
            "login": "andrea-cimatoribus-pix4d",
            "id": 121491611,
            "node_id": "U_kgDOBz3Qmw",
            "avatar_url": "https://avatars.githubusercontent.com/u/121491611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrea-cimatoribus-pix4d",
            "html_url": "https://github.com/andrea-cimatoribus-pix4d",
            "followers_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/followers",
            "following_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/subscriptions",
            "organizations_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/orgs",
            "repos_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/repos",
            "events_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrea-cimatoribus-pix4d/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-11T06:21:40Z",
        "updated_at": "2023-07-11T06:21:40Z",
        "author_association": "NONE",
        "body": "Not sure if this is relevant, it's not about C# in any case, but I have noticed since long strange inconsistencies in how libraries are dynamically loaded in onnxruntime. No real clue on the source of the problem. See https://stackoverflow.com/questions/76531829/rpath-propagation-failing-for-python-bindings for some details.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1630214115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]