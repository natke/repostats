[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998311963",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-998311963",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 998311963,
        "node_id": "IC_kwDOCVq1mM47gQgb",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-20T22:17:11Z",
        "updated_at": "2021-12-20T22:17:11Z",
        "author_association": "MEMBER",
        "body": "Is the issue that SAME_LOWER needs to take into account whether pad_needed is negative? Would something like the below fix it?\r\n\r\n```cpp\r\n        case AutoPadType::SAME_LOWER: {\r\n          int64_t legacy_target_size = (in_size + stride - 1) / stride;\r\n          int64_t pad_needed = (legacy_target_size - 1) * stride + kernel - in_size;\r\n          *pad_head = (pad_needed < 0 ? pad_needed - 1 : pad_needed + 1) / 2;\r\n          *pad_tail = pad_needed - *pad_head;\r\n          *out_size = ComputeOutputSize(in_size, stride, kernel, pad_needed, dilation);\r\n          break;\r\n        }\r\n```\r\n\r\nDoes this negative padding actually occur in a real model or is it more of a theoretical issue?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998311963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998407108",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-998407108",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 998407108,
        "node_id": "IC_kwDOCVq1mM47gnvE",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T02:02:08Z",
        "updated_at": "2021-12-21T02:02:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is probably an invalid operator, based on ONNX spec for pads of Conv/Pool ops, \r\n> pads : list of ints\r\n> Padding for the beginning and ending along each spatial axis, it can take any value greater than or equal to 0.`\r\n\r\nOr, at least the behavior is undefined for negative padding. (crop the input image?)\r\n\r\nHowever, it will be nice ORT can throw on this case instead of moving forward with model execution.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998407108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998418779",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-998418779",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 998418779,
        "node_id": "IC_kwDOCVq1mM47gqlb",
        "user": {
            "login": "RunnerZhong",
            "id": 30307463,
            "node_id": "MDQ6VXNlcjMwMzA3NDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30307463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RunnerZhong",
            "html_url": "https://github.com/RunnerZhong",
            "followers_url": "https://api.github.com/users/RunnerZhong/followers",
            "following_url": "https://api.github.com/users/RunnerZhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/RunnerZhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RunnerZhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RunnerZhong/subscriptions",
            "organizations_url": "https://api.github.com/users/RunnerZhong/orgs",
            "repos_url": "https://api.github.com/users/RunnerZhong/repos",
            "events_url": "https://api.github.com/users/RunnerZhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RunnerZhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T02:30:45Z",
        "updated_at": "2021-12-21T02:30:45Z",
        "author_association": "NONE",
        "body": "> This is probably an invalid operator, based on ONNX spec for pads of Conv/Pool ops,\r\n> \r\n> > pads : list of ints\r\n> > Padding for the beginning and ending along each spatial axis, it can take any value greater than or equal to 0.`\r\n> \r\n> Or, at least the behavior is undefined for negative padding. (crop the input image?)\r\n> \r\n> However, it will be nice ORT can throw on this case instead of moving forward with model execution.\r\n\r\nYeah, Your case is only for explicit padding, but for auto_padding, the pad_value is calculated, it maybe negative (crop the input)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998418779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998420441",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-998420441",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 998420441,
        "node_id": "IC_kwDOCVq1mM47gq_Z",
        "user": {
            "login": "RunnerZhong",
            "id": 30307463,
            "node_id": "MDQ6VXNlcjMwMzA3NDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30307463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RunnerZhong",
            "html_url": "https://github.com/RunnerZhong",
            "followers_url": "https://api.github.com/users/RunnerZhong/followers",
            "following_url": "https://api.github.com/users/RunnerZhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/RunnerZhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RunnerZhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RunnerZhong/subscriptions",
            "organizations_url": "https://api.github.com/users/RunnerZhong/orgs",
            "repos_url": "https://api.github.com/users/RunnerZhong/repos",
            "events_url": "https://api.github.com/users/RunnerZhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RunnerZhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T02:35:18Z",
        "updated_at": "2021-12-21T02:35:18Z",
        "author_association": "NONE",
        "body": "> Is the issue that SAME_LOWER needs to take into account whether pad_needed is negative? Would something like the below fix it?\r\n> \r\n> ```c++\r\n>         case AutoPadType::SAME_LOWER: {\r\n>           int64_t legacy_target_size = (in_size + stride - 1) / stride;\r\n>           int64_t pad_needed = (legacy_target_size - 1) * stride + kernel - in_size;\r\n>           *pad_head = (pad_needed < 0 ? pad_needed - 1 : pad_needed + 1) / 2;\r\n>           *pad_tail = pad_needed - *pad_head;\r\n>           *out_size = ComputeOutputSize(in_size, stride, kernel, pad_needed, dilation);\r\n>           break;\r\n>         }\r\n> ```\r\n> \r\n> Does this negative padding actually occur in a real model or is it more of a theoretical issue?\r\n\r\nIt's not a REAL model, just be found during my own test. And for your demo fix, I think it's ok",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998420441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998421696",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-998421696",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 998421696,
        "node_id": "IC_kwDOCVq1mM47grTA",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T02:39:14Z",
        "updated_at": "2021-12-21T02:41:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "> > This is probably an invalid operator, based on ONNX spec for pads of Conv/Pool ops,\r\n> > > pads : list of ints\r\n> > > Padding for the beginning and ending along each spatial axis, it can take any value greater than or equal to 0.`\r\n> > \r\n> > \r\n> > Or, at least the behavior is undefined for negative padding. (crop the input image?)\r\n> > However, it will be nice ORT can throw on this case instead of moving forward with model execution.\r\n> \r\n> Yeah, Your case is only for explicit padding, but for auto_padding, the pad_value is calculated, it maybe negative (crop the input)\r\n\r\nIt does not matter whether it is explicit padding or auto padding, eventually the auto padding will be converted to explicit padding in the model execution. Seems ONNX is unclear about this area, please try to open an issue on ONNX.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/998421696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1100843528",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-1100843528",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 1100843528,
        "node_id": "IC_kwDOCVq1mM5BnYoI",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-04-17T09:53:39Z",
        "updated_at": "2022-04-17T09:53:39Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1100843528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1558402700",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10086#issuecomment-1558402700",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10086",
        "id": 1558402700,
        "node_id": "IC_kwDOCVq1mM5c41aM",
        "user": {
            "login": "bugxch",
            "id": 7610384,
            "node_id": "MDQ6VXNlcjc2MTAzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7610384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bugxch",
            "html_url": "https://github.com/bugxch",
            "followers_url": "https://api.github.com/users/bugxch/followers",
            "following_url": "https://api.github.com/users/bugxch/following{/other_user}",
            "gists_url": "https://api.github.com/users/bugxch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bugxch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bugxch/subscriptions",
            "organizations_url": "https://api.github.com/users/bugxch/orgs",
            "repos_url": "https://api.github.com/users/bugxch/repos",
            "events_url": "https://api.github.com/users/bugxch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bugxch/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-23T02:17:36Z",
        "updated_at": "2023-05-23T02:17:36Z",
        "author_association": "NONE",
        "body": "I come across the same issue for the negative pads with onnx runtime. I also compared the implementation of onnx and tensorflow, \r\n\r\n- tensorflow, treated the negativa pads as zero, i.e.,  the total_pad = max(total_pad, 0), so it equals VALID mode in tensorflow\r\n- onnx, crop the input with negative pads\r\n\r\nI think it's an onnx bug because they are totally different implementation, and only one is correct for the common conv2d operator",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1558402700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]