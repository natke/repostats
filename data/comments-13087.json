[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1263819765",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13087#issuecomment-1263819765",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13087",
        "id": 1263819765,
        "node_id": "IC_kwDOCVq1mM5LVFv1",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-30T17:13:23Z",
        "updated_at": "2022-09-30T17:13:23Z",
        "author_association": "MEMBER",
        "body": "OnnxRuntime can delegate portions of the ONNX graph (subgraphs) to execution providers that are enabled. OpenVINO does not support all ONNX operations. So OnnxRuntime + OpenVINO EP is able to support more ONNX models than OpenVINO on its own. This is true for other execution providers as well. see my response to https://github.com/microsoft/onnxruntime/issues/12083",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1263819765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1264279294",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13087#issuecomment-1264279294",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13087",
        "id": 1264279294,
        "node_id": "IC_kwDOCVq1mM5LW17-",
        "user": {
            "login": "jinfagang",
            "id": 21303438,
            "node_id": "MDQ6VXNlcjIxMzAzNDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/21303438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jinfagang",
            "html_url": "https://github.com/jinfagang",
            "followers_url": "https://api.github.com/users/jinfagang/followers",
            "following_url": "https://api.github.com/users/jinfagang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jinfagang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jinfagang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jinfagang/subscriptions",
            "organizations_url": "https://api.github.com/users/jinfagang/orgs",
            "repos_url": "https://api.github.com/users/jinfagang/repos",
            "events_url": "https://api.github.com/users/jinfagang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jinfagang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-01T07:44:46Z",
        "updated_at": "2022-10-01T07:44:46Z",
        "author_association": "NONE",
        "body": "@jywu-msft thanks. From my understanding, onnxruntime will using vendor API to execution certain op, but my question is, for different Vendor, their API mgiht not same as onnxrutnime itself, in this situation, how will it convert? For example, NMS should be different among all frameworks.\r\n\r\nOn the other hand, the graph optimization in OpenVINO might didn't in  onnxruntime, they can do their own passes, to suiting their simplified op (for less mem access), so that some ops actually didn't really fit onnx standared. How does onnxruntime compelete this  compare with pure openvino?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1264279294/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1284505373",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13087#issuecomment-1284505373",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13087",
        "id": 1284505373,
        "node_id": "IC_kwDOCVq1mM5Mj_8d",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-19T19:57:39Z",
        "updated_at": "2022-10-19T19:57:39Z",
        "author_association": "MEMBER",
        "body": "> @jywu-msft thanks. From my understanding, onnxruntime will using vendor API to execution certain op, but my question is, for different Vendor, their API mgiht not same as onnxrutnime itself, in this situation, how will it convert? For example, NMS should be different among all frameworks.\r\n> \r\n> On the other hand, the graph optimization in OpenVINO might didn't in onnxruntime, they can do their own passes, to suiting their simplified op (for less mem access), so that some ops actually didn't really fit onnx standared. How does onnxruntime compelete this compare with pure openvino?\r\n\r\nif i'm understanding your question correctly, you're asking if the kernel implementation in the native framework isn't compatible with ONNX or isn't optimized for ONNX, what happens?\r\nif they don't support the ONNX spec of the op, then there's not much we can do, since we are targeting ONNX models.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1284505373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]