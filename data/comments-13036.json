[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1254101850",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13036#issuecomment-1254101850",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13036",
        "id": 1254101850,
        "node_id": "IC_kwDOCVq1mM5KwBNa",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-21T18:54:28Z",
        "updated_at": "2022-09-21T18:54:28Z",
        "author_association": "MEMBER",
        "body": "Think if you have code like:\r\n```C\r\nvoid* p1=malloc(1024);\r\nvoid* p2=malloc(1024);\r\nfree(p1);\r\nvoid* p3=malloc(2048);\r\nfree(p2);\r\nfree(p3;\r\n```\r\nThen the peak memory usage could be 2048+1024 bytes instead of 4096 bytes if you know the code will be executed in such an order.  This is called static memory allocation planning.  It is more efficient than dynamic memory allocation(which the standard malloc/free functions do).\r\n\r\nBut when ParallelExecutor is in used, the sequence of malloc/free for input/output tensors is unterminated. We can't do such. \r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1254101850/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]