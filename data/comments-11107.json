[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088048540",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088048540",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088048540,
        "node_id": "IC_kwDOCVq1mM5A2k2c",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-04T21:52:11Z",
        "updated_at": "2022-04-04T22:36:01Z",
        "author_association": "MEMBER",
        "body": "1) `Slice(x, starts = [-1], ends = [INT_MIN], steps = [-1]) == x`\r\n\r\nWhen you say `== x` above in the expected behavior, I think you mean `Reverse(x)` because essentially that is what that Slice operation is performing - reversing x.\r\n\r\n2) When I did the Slice-10 implementation, the spec had this ambiguous comment [here](https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Slice-10): \"For slicing to the end of a dimension with unknown size, it is recommended to pass in INT_MAX\". The (obvious but unstated) assumption is that this is for slicing forward and by extension, INT_MIN should be used while slicing in reverse. But since this wasn't **explicitly** stated in the spec, the implementation was written such that `INT_MAX` was a \"special\" end value (like Numpy's `None`) to indicate the \"end\" of a dimension (while slicing in any direction). I **think** I asked for clarification on this when the op was versioned for opset-11 (I will dig up the old ONNX PR) and that is why we see this line in the spec now- \"For slicing to the end of a dimension with unknown size, it is recommended to pass in INT_MAX when slicing forward and 'INT_MIN' when slicing backward.\"\r\n\r\nI guess we could clean up that special handling of `INT_MAX` while slicing backwards and make life easier or we could make this ugly special casing limited to opset-10 since opset-11 and onwards no longer has this ambiguity\r\n\r\n3)   `I haven't yet tested to see if the behavior is correct with INT_MIN, but that should be checked as well.`\r\n\r\nThis should work just fine. It is the very next test in the list - https://github.com/microsoft/onnxruntime/blob/39d1b9e1c176c29d9d6814a8625e675ab39f73dc/onnxruntime/test/providers/cpu/tensor/slice_op.test.cc#L490 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088048540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088053878",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088053878",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088053878,
        "node_id": "IC_kwDOCVq1mM5A2mJ2",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-04T21:58:53Z",
        "updated_at": "2022-04-04T21:58:53Z",
        "author_association": "MEMBER",
        "body": "Special-casing with associated comment: \r\nhttps://github.com/microsoft/onnxruntime/blob/e23a22451880a1ba1f46b2af6a71bb4a1079108b/onnxruntime/core/providers/cpu/tensor/slice_helper.h#L139",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088053878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088131351",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088131351",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088131351,
        "node_id": "IC_kwDOCVq1mM5A25EX",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-04T23:55:31Z",
        "updated_at": "2022-04-04T23:55:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "> When you say == x above in the expected behavior, I think you mean Reverse(x)\r\n\r\nYes! Updated the issue desc.\r\n\r\nI agree with your interpretation of the Slice-10 spec.\r\nIf we're agreed then I guess we should also:\r\n* change the ONNX shape inference code to match.\r\n* change the description of Slice-10 to be explicit about the behavior, since it's sort of surprising.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088131351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088135248",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088135248",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088135248,
        "node_id": "IC_kwDOCVq1mM5A26BQ",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T00:01:23Z",
        "updated_at": "2022-04-05T00:01:23Z",
        "author_association": "MEMBER",
        "body": "When you say, \"change the ONNX shape inference code to match\",  do you mean change the ONNX shape inference for opset-10 Slice alone to treat `INT_MAX` as a special value (whatever be the direction of slicing) just like the runtime ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088135248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088136507",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088136507",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088136507,
        "node_id": "IC_kwDOCVq1mM5A26U7",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T00:03:46Z",
        "updated_at": "2022-04-05T00:03:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088136507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088150986",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1088150986",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1088150986,
        "node_id": "IC_kwDOCVq1mM5A293K",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T00:32:08Z",
        "updated_at": "2022-04-05T00:32:08Z",
        "author_association": "MEMBER",
        "body": "Sure. I guess that works.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1088150986/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1089583902",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1089583902",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1089583902,
        "node_id": "IC_kwDOCVq1mM5A8bse",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T00:41:39Z",
        "updated_at": "2022-04-06T00:41:39Z",
        "author_association": "MEMBER",
        "body": "@garymm : I will update Slice's behavior so that the \"special-casing\" of INT_MAX is only done for Slice-V10.\r\n\r\nI read the latest Slice's spec and I have a couple of things to call out (Please correct me if I am wrong):\r\n\r\nhttps://github.com/onnx/onnx/issues/4115\r\nhttps://github.com/onnx/onnx/issues/4116\r\n\r\nCC: @jcwchen ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1089583902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090656720",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1090656720",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1090656720,
        "node_id": "IC_kwDOCVq1mM5BAhnQ",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T19:09:50Z",
        "updated_at": "2022-04-06T19:09:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "@hariharans29 discussed this with @gramalingam and we decided that the special casing in ORT is wrong even for Slice-10. The spec doesn't really say that INT_MAX should be treated as a special flag. The behavior going all the way to the end of an axis is meant to be a consequence of setting an index that's larger than all the valid indices.\r\nSpecial handling of INT_MAX could be problematic if the `end` is int32 and the axis has more than INT32_MAX elements.\r\nSo we think the behavior should be consistent for all op sets, and that the current behavior is wrong for negative step.\r\nCan you please update the implementation in accordance with this interpretation?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090656720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090784532",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1090784532",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1090784532,
        "node_id": "IC_kwDOCVq1mM5BBA0U",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T20:53:00Z",
        "updated_at": "2022-04-06T20:53:00Z",
        "author_association": "MEMBER",
        "body": "Sure. \r\n\r\nI don't feel very strongly about this either way. It was just one of those spot decisions taken 3 years ago while implementing an ambiguously worded spec. :) I will fix the special casing while reverse slicing. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1090784532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1095737155",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1095737155",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1095737155,
        "node_id": "IC_kwDOCVq1mM5BT59D",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T00:36:04Z",
        "updated_at": "2022-04-12T00:36:04Z",
        "author_association": "MEMBER",
        "body": "> The spec doesn't really say that INT_MAX should be treated as a special flag.\r\n\r\nI think \"_For slicing to the end of a dimension with unknown size, it is recommended to pass in INT_MAX_\" in the opset 10 Slice spec is open to interpretation, as that sounds like a special flag to me given it doesn't qualify the statement with any mention of the direction. Opset 11 resolved that ambiguity. \r\n\r\nWhilst making the behavior consistent for all op sets is desirable, doesn't that ignore potentially breaking an existing model that relies on the current opset 10 behavior? Products using ORT that have backwards compatibility guarantees may disagree with a change to that. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1095737155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096990067",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1096990067",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1096990067,
        "node_id": "IC_kwDOCVq1mM5BYr1z",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T17:18:16Z",
        "updated_at": "2022-04-12T17:18:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "Both tensorflow-onnx and torch.onnx seem to have identical behavior for opset versions 10 and 11, so it seems pretty unlikely that anyone is relying on this difference to me. And even if someone is relying on it, IIUC they could also be relying on it for opset version 11 because the current ORT code doesn't differentiate. So if you want to maintain backwards compatibility, you're going to have to explicitly go against the ONNX spec.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096990067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1105828906",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1105828906",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1105828906,
        "node_id": "IC_kwDOCVq1mM5B6Zwq",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-21T22:39:54Z",
        "updated_at": "2022-04-21T22:39:54Z",
        "author_association": "MEMBER",
        "body": "@skottmckay \"Products using ORT that have backwards compatibility guarantees may disagree with a change to that.\" - I believe you are referring to WinML ? @pranavsharma : Should we check with WinML to see if this change in behavior to Slice-10 (which was based on my interpretation of the ambiguous V10 spec of Slice) will break anyone ?\r\n\r\nIf it is agreed that this change shouldn't affect anyone, #11132 is ready for a review. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1105828906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1105922688",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1105922688",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1105922688,
        "node_id": "IC_kwDOCVq1mM5B6wqA",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-22T01:50:46Z",
        "updated_at": "2022-04-22T01:50:46Z",
        "author_association": "MEMBER",
        "body": "WinML is particularly sensitive to breaking changes esp. given that a version of ORT is in the OS now. I don't think anyone can authoritatively say if a customer will be impacted by this. I would err on the side of caution though and be conservative.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1105922688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1108909358",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11107#issuecomment-1108909358",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11107",
        "id": 1108909358,
        "node_id": "IC_kwDOCVq1mM5CGJ0u",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-25T18:36:53Z",
        "updated_at": "2022-04-25T18:36:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "Fully maintaining backwards-compatibility means clearly diverging from the ONNX spec for opset version 11, which seems bad to me.\r\nAnd if you're not going to break BC for version 11, it seems better to me to just make it consistent.\r\nJust my two cents, you're the owners of this, so do as you think is best.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1108909358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]