[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1649759989",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16846#issuecomment-1649759989",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16846",
        "id": 1649759989,
        "node_id": "IC_kwDOCVq1mM5iVVb1",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-25T12:39:04Z",
        "updated_at": "2023-07-25T12:39:04Z",
        "author_association": "MEMBER",
        "body": "What is the error message? Does it work with `x = op.Cast(op.Constant(value_floats=[1.0]), to=FLOAT16.dtype)`?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1649759989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1662851655",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16846#issuecomment-1662851655",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16846",
        "id": 1662851655,
        "node_id": "IC_kwDOCVq1mM5jHRpH",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-08-02T19:24:24Z",
        "updated_at": "2023-08-02T19:24:24Z",
        "author_association": "MEMBER",
        "body": "Is this an issue with onnxruntime or onnx script? Please file the issue in an appropriate place.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1662851655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1664891880",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16846#issuecomment-1664891880",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16846",
        "id": 1664891880,
        "node_id": "IC_kwDOCVq1mM5jPDvo",
        "user": {
            "login": "justinchuby",
            "id": 11205048,
            "node_id": "MDQ6VXNlcjExMjA1MDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11205048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinchuby",
            "html_url": "https://github.com/justinchuby",
            "followers_url": "https://api.github.com/users/justinchuby/followers",
            "following_url": "https://api.github.com/users/justinchuby/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinchuby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinchuby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinchuby/subscriptions",
            "organizations_url": "https://api.github.com/users/justinchuby/orgs",
            "repos_url": "https://api.github.com/users/justinchuby/repos",
            "events_url": "https://api.github.com/users/justinchuby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinchuby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-08-04T02:38:15Z",
        "updated_at": "2023-08-04T02:38:54Z",
        "author_association": "MEMBER",
        "body": "Updated issue with error message. I think this is an issue with onnx shape inferencing. @gramalingam I wonder if this is part of the fix we have since 1.14?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1664891880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1664892982",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16846#issuecomment-1664892982",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16846",
        "id": 1664892982,
        "node_id": "IC_kwDOCVq1mM5jPEA2",
        "user": {
            "login": "justinchuby",
            "id": 11205048,
            "node_id": "MDQ6VXNlcjExMjA1MDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11205048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinchuby",
            "html_url": "https://github.com/justinchuby",
            "followers_url": "https://api.github.com/users/justinchuby/followers",
            "following_url": "https://api.github.com/users/justinchuby/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinchuby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinchuby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinchuby/subscriptions",
            "organizations_url": "https://api.github.com/users/justinchuby/orgs",
            "repos_url": "https://api.github.com/users/justinchuby/repos",
            "events_url": "https://api.github.com/users/justinchuby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinchuby/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-08-04T02:39:55Z",
        "updated_at": "2023-08-04T02:39:55Z",
        "author_association": "MEMBER",
        "body": "The error manifests itself in test like so:\r\n\r\n\r\n### Summary\r\n\r\nONNX Runtime raises `[ONNXRuntimeError] : 1 : FAIL : Node (_0x7b6efe0_n21) Op (Loop) [TypeInferenceError] Graph attribute inferencing failed: Node (_0x7b6efe0_n12) Op (If) [TypeInferenceError] Mismatched tensor element type: source=10 target=1` when executing test `ops_test.TestOutputConsistencyFullGraphCPU.test_output_match_opinfo__ops_aten_embedding_bag_cpu_float16` in ONNX Script `TorchLib`.\r\n\r\nTo recreate this report, use\r\n\r\n```bash\r\nCREATE_REPRODUCTION_REPORT=1 python -m pytest onnxscript/tests/function_libs/torch_lib/ops_test.py -k test_output_match_opinfo__ops_aten_embedding_bag_cpu_float16\r\n```\r\n\r\n### To reproduce\r\n\r\n```python\r\nimport google.protobuf.text_format\r\nimport numpy as np\r\nfrom numpy import array, float16, float32, float64, int32, int64\r\nimport onnx\r\nimport onnxruntime as ort\r\n\r\n# Run n times\r\nN = 1\r\n\r\nonnx_model_text = \"\"\"\r\nir_version: 8\r\nproducer_name: \"pytorch\"\r\nproducer_version: \"2.1.0\"\r\ngraph {\r\n  node {\r\n    output: \"_val_3\"\r\n    name: \"Constant_0\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        dims: 1\r\n        data_type: 7\r\n        raw_data: \"\\377\\377\\377\\377\\377\\377\\377\\377\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"input_1\"\r\n    input: \"_val_3\"\r\n    output: \"_val_4\"\r\n    name: \"Reshape_1\"\r\n    op_type: \"Reshape\"\r\n    attribute {\r\n      name: \"allowzero\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"_val_4\"\r\n    output: \"_val_5\"\r\n    name: \"Shape_2\"\r\n    op_type: \"Shape\"\r\n    attribute {\r\n      name: \"start\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    output: \"_val_6\"\r\n    name: \"Constant_3\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 7\r\n        raw_data: \"\\001\\000\\000\\000\\000\\000\\000\\000\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"_val_6\"\r\n    input: \"_val_5\"\r\n    output: \"_val_7\"\r\n    name: \"Expand_4\"\r\n    op_type: \"Expand\"\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"_val_7\"\r\n    input: \"input_0\"\r\n    output: \"_val_8\"\r\n    name: \"CastLike_5\"\r\n    op_type: \"CastLike\"\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"input_0\"\r\n    input: \"input_1\"\r\n    input: \"offsets\"\r\n    input: \"_val_8\"\r\n    output: \"_val_9\"\r\n    name: \"_aten_embedding_bag_onnx_6\"\r\n    op_type: \"_aten_embedding_bag_onnx\"\r\n    attribute {\r\n      name: \"include_last_offset\"\r\n      i: 1\r\n      type: INT\r\n    }\r\n    attribute {\r\n      name: \"mode\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n    domain: \"pkg.onnxscript.torch_lib\"\r\n  }\r\n  node {\r\n    input: \"input_1\"\r\n    output: \"_val_10\"\r\n    name: \"Shape_7\"\r\n    op_type: \"Shape\"\r\n    attribute {\r\n      name: \"end\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    attribute {\r\n      name: \"start\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"offsets\"\r\n    output: \"_val_11\"\r\n    name: \"Shape_8\"\r\n    op_type: \"Shape\"\r\n    attribute {\r\n      name: \"start\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    output: \"_val_12\"\r\n    name: \"Constant_9\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 7\r\n        raw_data: \"\\000\\000\\000\\000\\000\\000\\000\\000\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"_val_12\"\r\n    input: \"_val_11\"\r\n    output: \"_val_13\"\r\n    name: \"Expand_10\"\r\n    op_type: \"Expand\"\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"offsets\"\r\n    output: \"_val_14\"\r\n    name: \"Shape_11\"\r\n    op_type: \"Shape\"\r\n    attribute {\r\n      name: \"start\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    output: \"_val_15\"\r\n    name: \"Constant_12\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 7\r\n        raw_data: \"\\000\\000\\000\\000\\000\\000\\000\\000\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    doc_string: \"\"\r\n  }\r\n  node {\r\n    input: \"_val_15\"\r\n    input: \"_val_14\"\r\n    output: \"_val_16\"\r\n    name: \"Expand_13\"\r\n    op_type: \"Expand\"\r\n    doc_string: \"\"\r\n  }\r\n  name: \"torch_jit\"\r\n  input {\r\n    name: \"input_0\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 10\r\n        shape {\r\n          dim {\r\n            dim_value: 10\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  input {\r\n    name: \"input_1\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  input {\r\n    name: \"offsets\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  output {\r\n    name: \"_val_9\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 10\r\n        shape {\r\n          dim {\r\n            dim_value: 2\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  output {\r\n    name: \"_val_10\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  output {\r\n    name: \"_val_13\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  output {\r\n    name: \"_val_16\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_3\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_4\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_5\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_6\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_7\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_8\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 10\r\n        shape {\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_11\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_12\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_14\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  value_info {\r\n    name: \"_val_15\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 7\r\n        shape {\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nopset_import {\r\n  domain: \"pkg.onnxscript.torch_lib\"\r\n  version: 1\r\n}\r\nopset_import {\r\n  domain: \"\"\r\n  version: 18\r\n}\r\nfunctions {\r\n  name: \"_aten_embedding_bag_onnx\"\r\n  input: \"weight\"\r\n  input: \"indices\"\r\n  input: \"offsets\"\r\n  input: \"per_sample_weights\"\r\n  output: \"return_val\"\r\n  attribute: \"mode\"\r\n  attribute: \"include_last_offset\"\r\n  node {\r\n    output: \"neg_1\"\r\n    name: \"n0\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value_ints\"\r\n      ints: -1\r\n      type: INTS\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"indices\"\r\n    input: \"neg_1\"\r\n    output: \"indices_1d\"\r\n    name: \"n1\"\r\n    op_type: \"Reshape\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"weight\"\r\n    input: \"indices_1d\"\r\n    output: \"new_weight\"\r\n    name: \"n2\"\r\n    op_type: \"Gather\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"int64_1\"\r\n    name: \"n3\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 7\r\n        int64_data: 1\r\n        name: \"int64_1\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"per_sample_weights\"\r\n    input: \"int64_1\"\r\n    output: \"tmp\"\r\n    name: \"n4\"\r\n    op_type: \"Unsqueeze\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"new_weight\"\r\n    input: \"tmp\"\r\n    output: \"new_weight_0\"\r\n    name: \"n5\"\r\n    op_type: \"Mul\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"weight\"\r\n    output: \"tmp_1\"\r\n    name: \"n6\"\r\n    op_type: \"Shape\"\r\n    attribute {\r\n      name: \"start\"\r\n      i: 1\r\n      type: INT\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"tmp_1\"\r\n    input: \"neg_1\"\r\n    output: \"weight_dim_1\"\r\n    name: \"n7\"\r\n    op_type: \"Reshape\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"indices_1d\"\r\n    output: \"indices_size\"\r\n    name: \"n8\"\r\n    op_type: \"Shape\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"offsets\"\r\n    output: \"tmp_2\"\r\n    name: \"n9\"\r\n    op_type: \"Size\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"tmp_2\"\r\n    input: \"neg_1\"\r\n    output: \"num_bag\"\r\n    name: \"n10\"\r\n    op_type: \"Reshape\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"include_last_offset\"\r\n    name: \"n11\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value_int\"\r\n      type: INT\r\n      ref_attr_name: \"include_last_offset\"\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"include_last_offset\"\r\n    output: \"include_last_offset_as_bool\"\r\n    name: \"n12\"\r\n    op_type: \"Cast\"\r\n    attribute {\r\n      name: \"to\"\r\n      i: 9\r\n      type: INT\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"int64_True\"\r\n    name: \"n13\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 9\r\n        int32_data: 1\r\n        name: \"int64_True\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"include_last_offset_as_bool\"\r\n    input: \"int64_True\"\r\n    output: \"cond\"\r\n    name: \"n14\"\r\n    op_type: \"Equal\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"cond\"\r\n    output: \"offsets_8\"\r\n    output: \"num_bag_9\"\r\n    name: \"n15\"\r\n    op_type: \"If\"\r\n    attribute {\r\n      name: \"then_branch\"\r\n      g {\r\n        node {\r\n          output: \"int64_1_3\"\r\n          name: \"n0\"\r\n          op_type: \"Constant\"\r\n          attribute {\r\n            name: \"value\"\r\n            t {\r\n              data_type: 7\r\n              int64_data: 1\r\n              name: \"int64_1_3\"\r\n            }\r\n            type: TENSOR\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"int64_1_3\"\r\n          input: \"num_bag\"\r\n          output: \"int64_1_3_cast\"\r\n          name: \"n1\"\r\n          op_type: \"CastLike\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"num_bag\"\r\n          input: \"int64_1_3_cast\"\r\n          output: \"num_bag_4\"\r\n          name: \"n2\"\r\n          op_type: \"Sub\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"offsets\"\r\n          output: \"offsets_5\"\r\n          name: \"n3\"\r\n          op_type: \"Identity\"\r\n          domain: \"\"\r\n        }\r\n        name: \"thenGraph_23\"\r\n        output {\r\n          name: \"offsets_5\"\r\n          type {\r\n          }\r\n        }\r\n        output {\r\n          name: \"num_bag_4\"\r\n          type {\r\n          }\r\n        }\r\n      }\r\n      type: GRAPH\r\n    }\r\n    attribute {\r\n      name: \"else_branch\"\r\n      g {\r\n        node {\r\n          input: \"offsets\"\r\n          input: \"indices_size\"\r\n          output: \"offsets_6\"\r\n          name: \"n0\"\r\n          op_type: \"Concat\"\r\n          attribute {\r\n            name: \"axis\"\r\n            i: 0\r\n            type: INT\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"num_bag\"\r\n          output: \"num_bag_7\"\r\n          name: \"n1\"\r\n          op_type: \"Identity\"\r\n          domain: \"\"\r\n        }\r\n        name: \"elseGraph_23\"\r\n        output {\r\n          name: \"offsets_6\"\r\n          type {\r\n          }\r\n        }\r\n        output {\r\n          name: \"num_bag_7\"\r\n          type {\r\n          }\r\n        }\r\n      }\r\n      type: GRAPH\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"result\"\r\n    name: \"n16\"\r\n    op_type: \"SequenceEmpty\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"tmp_10\"\r\n    name: \"n17\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value_int\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"tmp_10\"\r\n    input: \"neg_1\"\r\n    output: \"index_tensor\"\r\n    name: \"n18\"\r\n    op_type: \"Reshape\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"index_tensor\"\r\n    input: \"num_bag_9\"\r\n    output: \"cond_11\"\r\n    name: \"n19\"\r\n    op_type: \"Less\"\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    output: \"true\"\r\n    name: \"n20\"\r\n    op_type: \"Constant\"\r\n    attribute {\r\n      name: \"value\"\r\n      t {\r\n        data_type: 9\r\n        int32_data: 1\r\n        name: \"true\"\r\n      }\r\n      type: TENSOR\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"\"\r\n    input: \"true\"\r\n    input: \"result\"\r\n    input: \"index_tensor\"\r\n    output: \"result_59\"\r\n    output: \"index_tensor_60\"\r\n    name: \"n21\"\r\n    op_type: \"Loop\"\r\n    attribute {\r\n      name: \"body\"\r\n      g {\r\n        node {\r\n          output: \"int64_1_14\"\r\n          name: \"n0\"\r\n          op_type: \"Constant\"\r\n          attribute {\r\n            name: \"value\"\r\n            t {\r\n              data_type: 7\r\n              int64_data: 1\r\n              name: \"int64_1_14\"\r\n            }\r\n            type: TENSOR\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"int64_1_14\"\r\n          input: \"index_tensor_13\"\r\n          output: \"int64_1_14_cast\"\r\n          name: \"n1\"\r\n          op_type: \"CastLike\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"index_tensor_13\"\r\n          input: \"int64_1_14_cast\"\r\n          output: \"tmp_15\"\r\n          name: \"n2\"\r\n          op_type: \"Add\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"offsets_8\"\r\n          input: \"index_tensor_13\"\r\n          input: \"tmp_15\"\r\n          output: \"start\"\r\n          name: \"n3\"\r\n          op_type: \"Slice\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          output: \"int64_1_16\"\r\n          name: \"n4\"\r\n          op_type: \"Constant\"\r\n          attribute {\r\n            name: \"value\"\r\n            t {\r\n              data_type: 7\r\n              int64_data: 1\r\n              name: \"int64_1_16\"\r\n            }\r\n            type: TENSOR\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"int64_1_16\"\r\n          input: \"index_tensor_13\"\r\n          output: \"int64_1_16_cast\"\r\n          name: \"n5\"\r\n          op_type: \"CastLike\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"index_tensor_13\"\r\n          input: \"int64_1_16_cast\"\r\n          output: \"tmp_17\"\r\n          name: \"n6\"\r\n          op_type: \"Add\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          output: \"int64_2\"\r\n          name: \"n7\"\r\n          op_type: \"Constant\"\r\n          attribute {\r\n            name: \"value\"\r\n            t {\r\n              data_type: 7\r\n              int64_data: 2\r\n              name: \"int64_2\"\r\n            }\r\n            type: TENSOR\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"int64_2\"\r\n          input: \"index_tensor_13\"\r\n          output: \"int64_2_cast\"\r\n          name: \"n8\"\r\n          op_type: \"CastLike\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"index_tensor_13\"\r\n          input: \"int64_2_cast\"\r\n          output: \"tmp_18\"\r\n          name: \"n9\"\r\n          op_type: \"Add\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"offsets_8\"\r\n          input: \"tmp_17\"\r\n          input: \"tmp_18\"\r\n          output: \"end\"\r\n          name: \"n10\"\r\n          op_type: \"Slice\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"start\"\r\n          input: \"end\"\r\n          output: \"cond_19\"\r\n          name: \"n11\"\r\n          op_type: \"Equal\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"cond_19\"\r\n          output: \"row_result_54\"\r\n          name: \"n12\"\r\n          op_type: \"If\"\r\n          attribute {\r\n            name: \"then_branch\"\r\n            g {\r\n              node {\r\n                output: \"tmp_20\"\r\n                name: \"n0\"\r\n                op_type: \"Constant\"\r\n                attribute {\r\n                  name: \"value_floats\"\r\n                  floats: 0.0\r\n                  type: FLOATS\r\n                }\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                output: \"tmp_21\"\r\n                name: \"n1\"\r\n                op_type: \"Constant\"\r\n                attribute {\r\n                  name: \"value_ints\"\r\n                  ints: 1\r\n                  type: INTS\r\n                }\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                input: \"tmp_21\"\r\n                input: \"weight_dim_1\"\r\n                output: \"tmp_22\"\r\n                name: \"n2\"\r\n                op_type: \"Concat\"\r\n                attribute {\r\n                  name: \"axis\"\r\n                  i: 0\r\n                  type: INT\r\n                }\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                input: \"tmp_20\"\r\n                input: \"tmp_22\"\r\n                output: \"row_result\"\r\n                name: \"n3\"\r\n                op_type: \"Expand\"\r\n                domain: \"\"\r\n              }\r\n              name: \"thenGraph_40\"\r\n              output {\r\n                name: \"row_result\"\r\n                type {\r\n                }\r\n              }\r\n            }\r\n            type: GRAPH\r\n          }\r\n          attribute {\r\n            name: \"else_branch\"\r\n            g {\r\n              node {\r\n                output: \"mode\"\r\n                name: \"n0\"\r\n                op_type: \"Constant\"\r\n                attribute {\r\n                  name: \"value_int\"\r\n                  type: INT\r\n                  ref_attr_name: \"mode\"\r\n                }\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                output: \"int64_0\"\r\n                name: \"n1\"\r\n                op_type: \"Constant\"\r\n                attribute {\r\n                  name: \"value\"\r\n                  t {\r\n                    data_type: 7\r\n                    int64_data: 0\r\n                    name: \"int64_0\"\r\n                  }\r\n                  type: TENSOR\r\n                }\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                input: \"mode\"\r\n                input: \"int64_0\"\r\n                output: \"cond_23\"\r\n                name: \"n2\"\r\n                op_type: \"Equal\"\r\n                domain: \"\"\r\n              }\r\n              node {\r\n                input: \"cond_23\"\r\n                output: \"row_result_53\"\r\n                name: \"n3\"\r\n                op_type: \"If\"\r\n                attribute {\r\n                  name: \"then_branch\"\r\n                  g {\r\n                    node {\r\n                      input: \"new_weight_0\"\r\n                      input: \"start\"\r\n                      input: \"end\"\r\n                      output: \"weight_rows\"\r\n                      name: \"n0\"\r\n                      op_type: \"Slice\"\r\n                      domain: \"\"\r\n                    }\r\n                    node {\r\n                      output: \"int64_0_1d\"\r\n                      name: \"n1\"\r\n                      op_type: \"Constant\"\r\n                      attribute {\r\n                        name: \"value\"\r\n                        t {\r\n                          dims: 1\r\n                          data_type: 7\r\n                          int64_data: 0\r\n                          name: \"int64_0_1d\"\r\n                        }\r\n                        type: TENSOR\r\n                      }\r\n                      domain: \"\"\r\n                    }\r\n                    node {\r\n                      input: \"weight_rows\"\r\n                      input: \"int64_0_1d\"\r\n                      output: \"row_result_24\"\r\n                      name: \"n2\"\r\n                      op_type: \"ReduceSum\"\r\n                      domain: \"\"\r\n                    }\r\n                    name: \"thenGraph_46\"\r\n                    output {\r\n                      name: \"row_result_24\"\r\n                      type {\r\n                      }\r\n                    }\r\n                  }\r\n                  type: GRAPH\r\n                }\r\n                attribute {\r\n                  name: \"else_branch\"\r\n                  g {\r\n                    node {\r\n                      output: \"mode_25\"\r\n                      name: \"n0\"\r\n                      op_type: \"Constant\"\r\n                      attribute {\r\n                        name: \"value_int\"\r\n                        type: INT\r\n                        ref_attr_name: \"mode\"\r\n                      }\r\n                      domain: \"\"\r\n                    }\r\n                    node {\r\n                      output: \"int64_1_26\"\r\n                      name: \"n1\"\r\n                      op_type: \"Constant\"\r\n                      attribute {\r\n                        name: \"value\"\r\n                        t {\r\n                          data_type: 7\r\n                          int64_data: 1\r\n                          name: \"int64_1_26\"\r\n                        }\r\n                        type: TENSOR\r\n                      }\r\n                      domain: \"\"\r\n                    }\r\n                    node {\r\n                      input: \"mode_25\"\r\n                      input: \"int64_1_26\"\r\n                      output: \"cond_27\"\r\n                      name: \"n2\"\r\n                      op_type: \"Equal\"\r\n                      domain: \"\"\r\n                    }\r\n                    node {\r\n                      input: \"cond_27\"\r\n                      output: \"row_result_52\"\r\n                      name: \"n3\"\r\n                      op_type: \"If\"\r\n                      attribute {\r\n                        name: \"then_branch\"\r\n                        g {\r\n                          node {\r\n                            input: \"new_weight_0\"\r\n                            input: \"start\"\r\n                            input: \"end\"\r\n                            output: \"weight_rows_28\"\r\n                            name: \"n0\"\r\n                            op_type: \"Slice\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            output: \"int64_1_29\"\r\n                            name: \"n1\"\r\n                            op_type: \"Constant\"\r\n                            attribute {\r\n                              name: \"value\"\r\n                              t {\r\n                                data_type: 7\r\n                                int64_data: 1\r\n                                name: \"int64_1_29\"\r\n                              }\r\n                              type: TENSOR\r\n                            }\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"int64_1_29\"\r\n                            input: \"num_bag_9\"\r\n                            output: \"int64_1_29_cast\"\r\n                            name: \"n2\"\r\n                            op_type: \"CastLike\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"num_bag_9\"\r\n                            input: \"int64_1_29_cast\"\r\n                            output: \"tmp_30\"\r\n                            name: \"n3\"\r\n                            op_type: \"Sub\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"index_tensor_13\"\r\n                            input: \"tmp_30\"\r\n                            output: \"cond_31\"\r\n                            name: \"n4\"\r\n                            op_type: \"Equal\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"cond_31\"\r\n                            output: \"row_result_43\"\r\n                            name: \"n5\"\r\n                            op_type: \"If\"\r\n                            attribute {\r\n                              name: \"then_branch\"\r\n                              g {\r\n                                node {\r\n                                  output: \"int64_0_1d_32\"\r\n                                  name: \"n0\"\r\n                                  op_type: \"Constant\"\r\n                                  attribute {\r\n                                    name: \"value\"\r\n                                    t {\r\n                                      dims: 1\r\n                                      data_type: 7\r\n                                      int64_data: 0\r\n                                      name: \"int64_0_1d_32\"\r\n                                    }\r\n                                    type: TENSOR\r\n                                  }\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"weight_rows_28\"\r\n                                  input: \"int64_0_1d_32\"\r\n                                  output: \"row_result_33\"\r\n                                  name: \"n1\"\r\n                                  op_type: \"ReduceSum\"\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"indices\"\r\n                                  output: \"tmp_34\"\r\n                                  name: \"n2\"\r\n                                  op_type: \"Shape\"\r\n                                  attribute {\r\n                                    name: \"end\"\r\n                                    i: 1\r\n                                    type: INT\r\n                                  }\r\n                                  attribute {\r\n                                    name: \"start\"\r\n                                    i: 0\r\n                                    type: INT\r\n                                  }\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"tmp_34\"\r\n                                  input: \"start\"\r\n                                  output: \"denominator\"\r\n                                  name: \"n3\"\r\n                                  op_type: \"Sub\"\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  output: \"int64_0_35\"\r\n                                  name: \"n4\"\r\n                                  op_type: \"Constant\"\r\n                                  attribute {\r\n                                    name: \"value\"\r\n                                    t {\r\n                                      data_type: 7\r\n                                      int64_data: 0\r\n                                      name: \"int64_0_35\"\r\n                                    }\r\n                                    type: TENSOR\r\n                                  }\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"int64_0_35\"\r\n                                  input: \"denominator\"\r\n                                  output: \"int64_0_35_cast\"\r\n                                  name: \"n5\"\r\n                                  op_type: \"CastLike\"\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"denominator\"\r\n                                  input: \"int64_0_35_cast\"\r\n                                  output: \"cond_36\"\r\n                                  name: \"n6\"\r\n                                  op_type: \"Greater\"\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"cond_36\"\r\n                                  output: \"row_result_40\"\r\n                                  name: \"n7\"\r\n                                  op_type: \"If\"\r\n                                  attribute {\r\n                                    name: \"then_branch\"\r\n                                    g {\r\n                                      node {\r\n                                        input: \"denominator\"\r\n                                        input: \"new_weight_0\"\r\n                                        output: \"tmp_37\"\r\n                                        name: \"n0\"\r\n                                        op_type: \"CastLike\"\r\n                                        domain: \"\"\r\n                                      }\r\n                                      node {\r\n                                        input: \"row_result_33\"\r\n                                        input: \"tmp_37\"\r\n                                        output: \"row_result_38\"\r\n                                        name: \"n1\"\r\n                                        op_type: \"Div\"\r\n                                        domain: \"\"\r\n                                      }\r\n                                      name: \"thenGraph_56\"\r\n                                      output {\r\n                                        name: \"row_result_38\"\r\n                                        type {\r\n                                        }\r\n                                      }\r\n                                    }\r\n                                    type: GRAPH\r\n                                  }\r\n                                  attribute {\r\n                                    name: \"else_branch\"\r\n                                    g {\r\n                                      node {\r\n                                        input: \"row_result_33\"\r\n                                        output: \"row_result_39\"\r\n                                        name: \"n0\"\r\n                                        op_type: \"Identity\"\r\n                                        domain: \"\"\r\n                                      }\r\n                                      name: \"elseGraph_56\"\r\n                                      output {\r\n                                        name: \"row_result_39\"\r\n                                        type {\r\n                                        }\r\n                                      }\r\n                                    }\r\n                                    type: GRAPH\r\n                                  }\r\n                                  domain: \"\"\r\n                                }\r\n                                name: \"thenGraph_51\"\r\n                                output {\r\n                                  name: \"row_result_40\"\r\n                                  type {\r\n                                  }\r\n                                }\r\n                              }\r\n                              type: GRAPH\r\n                            }\r\n                            attribute {\r\n                              name: \"else_branch\"\r\n                              g {\r\n                                node {\r\n                                  output: \"int64_0_1d_41\"\r\n                                  name: \"n0\"\r\n                                  op_type: \"Constant\"\r\n                                  attribute {\r\n                                    name: \"value\"\r\n                                    t {\r\n                                      dims: 1\r\n                                      data_type: 7\r\n                                      int64_data: 0\r\n                                      name: \"int64_0_1d_41\"\r\n                                    }\r\n                                    type: TENSOR\r\n                                  }\r\n                                  domain: \"\"\r\n                                }\r\n                                node {\r\n                                  input: \"weight_rows_28\"\r\n                                  input: \"int64_0_1d_41\"\r\n                                  output: \"row_result_42\"\r\n                                  name: \"n1\"\r\n                                  op_type: \"ReduceMean\"\r\n                                  domain: \"\"\r\n                                }\r\n                                name: \"elseGraph_51\"\r\n                                output {\r\n                                  name: \"row_result_42\"\r\n                                  type {\r\n                                  }\r\n                                }\r\n                              }\r\n                              type: GRAPH\r\n                            }\r\n                            domain: \"\"\r\n                          }\r\n                          name: \"thenGraph_49\"\r\n                          output {\r\n                            name: \"row_result_43\"\r\n                            type {\r\n                            }\r\n                          }\r\n                        }\r\n                        type: GRAPH\r\n                      }\r\n                      attribute {\r\n                        name: \"else_branch\"\r\n                        g {\r\n                          node {\r\n                            output: \"int64_1_44\"\r\n                            name: \"n0\"\r\n                            op_type: \"Constant\"\r\n                            attribute {\r\n                              name: \"value\"\r\n                              t {\r\n                                data_type: 7\r\n                                int64_data: 1\r\n                                name: \"int64_1_44\"\r\n                              }\r\n                              type: TENSOR\r\n                            }\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"int64_1_44\"\r\n                            input: \"num_bag_9\"\r\n                            output: \"int64_1_44_cast\"\r\n                            name: \"n1\"\r\n                            op_type: \"CastLike\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"num_bag_9\"\r\n                            input: \"int64_1_44_cast\"\r\n                            output: \"tmp_45\"\r\n                            name: \"n2\"\r\n                            op_type: \"Sub\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"index_tensor_13\"\r\n                            input: \"tmp_45\"\r\n                            output: \"cond_46\"\r\n                            name: \"n3\"\r\n                            op_type: \"Equal\"\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"cond_46\"\r\n                            output: \"weight_rows_49\"\r\n                            name: \"n4\"\r\n                            op_type: \"If\"\r\n                            attribute {\r\n                              name: \"then_branch\"\r\n                              g {\r\n                                node {\r\n                                  input: \"new_weight_0\"\r\n                                  input: \"start\"\r\n                                  input: \"indices_size\"\r\n                                  output: \"weight_rows_47\"\r\n                                  name: \"n0\"\r\n                                  op_type: \"Slice\"\r\n                                  domain: \"\"\r\n                                }\r\n                                name: \"thenGraph_61\"\r\n                                output {\r\n                                  name: \"weight_rows_47\"\r\n                                  type {\r\n                                  }\r\n                                }\r\n                              }\r\n                              type: GRAPH\r\n                            }\r\n                            attribute {\r\n                              name: \"else_branch\"\r\n                              g {\r\n                                node {\r\n                                  input: \"new_weight_0\"\r\n                                  input: \"start\"\r\n                                  input: \"end\"\r\n                                  output: \"weight_rows_48\"\r\n                                  name: \"n0\"\r\n                                  op_type: \"Slice\"\r\n                                  domain: \"\"\r\n                                }\r\n                                name: \"elseGraph_61\"\r\n                                output {\r\n                                  name: \"weight_rows_48\"\r\n                                  type {\r\n                                  }\r\n                                }\r\n                              }\r\n                              type: GRAPH\r\n                            }\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            output: \"int64_0_1d_50\"\r\n                            name: \"n5\"\r\n                            op_type: \"Constant\"\r\n                            attribute {\r\n                              name: \"value\"\r\n                              t {\r\n                                dims: 1\r\n                                data_type: 7\r\n                                int64_data: 0\r\n                                name: \"int64_0_1d_50\"\r\n                              }\r\n                              type: TENSOR\r\n                            }\r\n                            domain: \"\"\r\n                          }\r\n                          node {\r\n                            input: \"weight_rows_49\"\r\n                            input: \"int64_0_1d_50\"\r\n                            output: \"row_result_51\"\r\n                            name: \"n6\"\r\n                            op_type: \"ReduceMax\"\r\n                            domain: \"\"\r\n                          }\r\n                          name: \"elseGraph_49\"\r\n                          output {\r\n                            name: \"row_result_51\"\r\n                            type {\r\n                            }\r\n                          }\r\n                        }\r\n                        type: GRAPH\r\n                      }\r\n                      domain: \"\"\r\n                    }\r\n                    name: \"elseGraph_46\"\r\n                    output {\r\n                      name: \"row_result_52\"\r\n                      type {\r\n                      }\r\n                    }\r\n                  }\r\n                  type: GRAPH\r\n                }\r\n                domain: \"\"\r\n              }\r\n              name: \"elseGraph_40\"\r\n              output {\r\n                name: \"row_result_53\"\r\n                type {\r\n                }\r\n              }\r\n            }\r\n            type: GRAPH\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"result_12\"\r\n          input: \"row_result_54\"\r\n          output: \"result_55\"\r\n          name: \"n13\"\r\n          op_type: \"SequenceInsert\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          output: \"int64_1_56\"\r\n          name: \"n14\"\r\n          op_type: \"Constant\"\r\n          attribute {\r\n            name: \"value\"\r\n            t {\r\n              data_type: 7\r\n              int64_data: 1\r\n              name: \"int64_1_56\"\r\n            }\r\n            type: TENSOR\r\n          }\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"int64_1_56\"\r\n          input: \"index_tensor_13\"\r\n          output: \"int64_1_56_cast\"\r\n          name: \"n15\"\r\n          op_type: \"CastLike\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"index_tensor_13\"\r\n          input: \"int64_1_56_cast\"\r\n          output: \"index_tensor_57\"\r\n          name: \"n16\"\r\n          op_type: \"Add\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"index_tensor_57\"\r\n          input: \"num_bag_9\"\r\n          output: \"cond_58\"\r\n          name: \"n17\"\r\n          op_type: \"Less\"\r\n          domain: \"\"\r\n        }\r\n        node {\r\n          input: \"cond_58\"\r\n          output: \"cond_out\"\r\n          name: \"n18\"\r\n          op_type: \"Identity\"\r\n          domain: \"\"\r\n        }\r\n        name: \"loop_body\"\r\n        input {\r\n          name: \"infinite_loop\"\r\n          type {\r\n            tensor_type {\r\n              elem_type: 7\r\n              shape {\r\n              }\r\n            }\r\n          }\r\n        }\r\n        input {\r\n          name: \"cond\"\r\n          type {\r\n            tensor_type {\r\n              elem_type: 9\r\n              shape {\r\n              }\r\n            }\r\n          }\r\n        }\r\n        input {\r\n          name: \"result_12\"\r\n          type {\r\n          }\r\n        }\r\n        input {\r\n          name: \"index_tensor_13\"\r\n          type {\r\n          }\r\n        }\r\n        output {\r\n          name: \"cond_out\"\r\n          type {\r\n            tensor_type {\r\n              elem_type: 9\r\n              shape {\r\n              }\r\n            }\r\n          }\r\n        }\r\n        output {\r\n          name: \"result_55\"\r\n          type {\r\n          }\r\n        }\r\n        output {\r\n          name: \"index_tensor_57\"\r\n          type {\r\n          }\r\n        }\r\n      }\r\n      type: GRAPH\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"result_59\"\r\n    output: \"result_61\"\r\n    name: \"n22\"\r\n    op_type: \"ConcatFromSequence\"\r\n    attribute {\r\n      name: \"axis\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n    domain: \"\"\r\n  }\r\n  node {\r\n    input: \"result_61\"\r\n    input: \"weight\"\r\n    output: \"return_val\"\r\n    name: \"n23\"\r\n    op_type: \"CastLike\"\r\n    domain: \"\"\r\n  }\r\n  opset_import {\r\n    domain: \"\"\r\n    version: 18\r\n  }\r\n  domain: \"pkg.onnxscript.torch_lib\"\r\n}\r\n\r\n\"\"\"\r\n\r\nort_inputs = {'input_0': array([[ 2.664 , -6.777 ,  5.723 , -5.027 ,  0.3164],\r\n       [ 1.397 ,  8.945 , -0.0879, -8.93  ,  2.04  ],\r\n       [ 0.8613,  5.78  , -1.837 , -7.18  ,  1.143 ],\r\n       [-5.457 , -7.67  , -8.53  ,  1.046 ,  5.906 ],\r\n       [ 8.08  , -3.488 , -3.85  ,  5.484 ,  8.5   ],\r\n       [ 3.684 ,  3.7   , -8.09  ,  7.48  , -6.777 ],\r\n       [ 1.986 ,  0.9756, -4.527 ,  4.15  , -8.14  ],\r\n       [-7.664 ,  7.56  , -0.9756,  7.867 , -1.292 ],\r\n       [-6.04  ,  6.195 , -1.784 ,  1.424 ,  6.32  ],\r\n       [-0.5977,  5.977 ,  8.74  , -7.594 ,  5.09  ]], dtype=float16), 'input_1': array([9, 1, 4, 9, 6]), 'offsets': array([0, 2, 3])}\r\n\r\n# Set up the inference session\r\nsession_options = ort.SessionOptions()\r\nsession_options.graph_optimization_level = ort.GraphOptimizationLevel.ORT_DISABLE_ALL\r\nonnx_model = onnx.ModelProto()\r\ngoogle.protobuf.text_format.Parse(onnx_model_text, onnx_model)\r\n\r\n# Uncomment this line to save the model to a file for examination\r\n# onnx.save_model(onnx_model, \"test_output_match_opinfo__ops_aten_embedding_bag_cpu_float16.onnx\")\r\n\r\nonnx.checker.check_model(onnx_model)\r\nsession = ort.InferenceSession(onnx_model.SerializeToString(), session_options, providers=(\"CPUExecutionProvider\",))\r\n\r\n# Run the model\r\nfor _ in range(N):\r\n    ort_outputs = session.run(None, ort_inputs)\r\n\r\n```\r\n\r\n### Full error stack\r\n\r\n```\r\n[ONNXRuntimeError] : 1 : FAIL : Node (_0x7b6efe0_n21) Op (Loop) [TypeInferenceError] Graph attribute inferencing failed: Node (_0x7b6efe0_n12) Op (If) [TypeInferenceError] Mismatched tensor element type: source=10 target=1\r\n  File \"/home/justinchu/dev/onnx-script/onnxscript/tests/function_libs/torch_lib/ops_test_common.py\", line 533, in _capture_graph_and_evaluate_torch_script_evaluator\r\n    return _safe_ort_session_run(onnx_model.SerializeToString(), ort_inputs)\r\n  File \"/home/justinchu/dev/onnx-script/onnxscript/tests/function_libs/torch_lib/ops_test_common.py\", line 349, in _safe_ort_session_run\r\n    raise return_dict[\"error\"]\r\n\r\n```\r\n\r\n### Environment\r\n\r\n```\r\nOS: Linux-5.15.0-1042-azure-x86_64-with-glibc2.35\r\nPython version: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]\r\nonnx==1.15.0.dev20230731\r\nonnxruntime==1.15.1\r\nnumpy==1.25.1\r\ntorch==2.1.0.dev20230622+cpu\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1664892982/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]