[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1507307263",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15490#issuecomment-1507307263",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15490",
        "id": 1507307263,
        "node_id": "IC_kwDOCVq1mM5Z167_",
        "user": {
            "login": "wschin",
            "id": 3524474,
            "node_id": "MDQ6VXNlcjM1MjQ0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3524474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wschin",
            "html_url": "https://github.com/wschin",
            "followers_url": "https://api.github.com/users/wschin/followers",
            "following_url": "https://api.github.com/users/wschin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wschin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wschin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wschin/subscriptions",
            "organizations_url": "https://api.github.com/users/wschin/orgs",
            "repos_url": "https://api.github.com/users/wschin/repos",
            "events_url": "https://api.github.com/users/wschin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wschin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-13T17:04:42Z",
        "updated_at": "2023-04-13T17:04:42Z",
        "author_association": "MEMBER",
        "body": "You're right. That many `Cast`s slows the entire computation down and it's not an expected behavior. I am not quantization expert, so I tag the team for better ideas.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1507307263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1507692108",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15490#issuecomment-1507692108",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15490",
        "id": 1507692108,
        "node_id": "IC_kwDOCVq1mM5Z3Y5M",
        "user": {
            "login": "brevity2021",
            "id": 88120581,
            "node_id": "MDQ6VXNlcjg4MTIwNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/88120581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brevity2021",
            "html_url": "https://github.com/brevity2021",
            "followers_url": "https://api.github.com/users/brevity2021/followers",
            "following_url": "https://api.github.com/users/brevity2021/following{/other_user}",
            "gists_url": "https://api.github.com/users/brevity2021/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brevity2021/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brevity2021/subscriptions",
            "organizations_url": "https://api.github.com/users/brevity2021/orgs",
            "repos_url": "https://api.github.com/users/brevity2021/repos",
            "events_url": "https://api.github.com/users/brevity2021/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brevity2021/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-13T22:37:40Z",
        "updated_at": "2023-04-13T22:37:40Z",
        "author_association": "NONE",
        "body": "Thank you! That would be really helpful. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1507692108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1514117804",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15490#issuecomment-1514117804",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15490",
        "id": 1514117804,
        "node_id": "IC_kwDOCVq1mM5aP5qs",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-19T04:34:23Z",
        "updated_at": "2023-04-19T04:34:23Z",
        "author_association": "MEMBER",
        "body": "@brevity2021,\r\n\r\nThe recommended way for mixed precision conversion is like the following:\r\n(1) Export fp32 model to onnx using torch.onnx.export\r\n(2) Optimize onnx model with transformer optimization tool (https://onnxruntime.ai/docs/performance/transformers-optimization.html). For transformers model, make sure the Attention or MultiHeadAttention is fused.\r\n(3) Convert optimized FP32 model to mixed precision by calling [convert_float_to_float16](https://github.com/microsoft/onnxruntime/blob/8cd5f3ad9cf2367db8f5fd4f69bee7caa9ed59f1/onnxruntime/python/tools/transformers/float16.py#L167). \r\n\r\nNote that op_block_list is operators that computed in FP32. Normally, you can add LayerNormalization/SkipLayerNormalization and activation like Gelu/FastGelu to the list. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1514117804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1517272518",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15490#issuecomment-1517272518",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15490",
        "id": 1517272518,
        "node_id": "IC_kwDOCVq1mM5ab73G",
        "user": {
            "login": "brevity2021",
            "id": 88120581,
            "node_id": "MDQ6VXNlcjg4MTIwNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/88120581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brevity2021",
            "html_url": "https://github.com/brevity2021",
            "followers_url": "https://api.github.com/users/brevity2021/followers",
            "following_url": "https://api.github.com/users/brevity2021/following{/other_user}",
            "gists_url": "https://api.github.com/users/brevity2021/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brevity2021/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brevity2021/subscriptions",
            "organizations_url": "https://api.github.com/users/brevity2021/orgs",
            "repos_url": "https://api.github.com/users/brevity2021/repos",
            "events_url": "https://api.github.com/users/brevity2021/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brevity2021/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-21T05:15:05Z",
        "updated_at": "2023-04-21T05:33:32Z",
        "author_association": "NONE",
        "body": "Thank you @tianleiwu for your reply! \r\n\r\nHowever, the optimization tool you suggested does not seem to support any encoder-decoder model according to this [README](https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/python/tools/transformers/README.md#supported-models) page. Are you sure we can directly use it for an encoder-decoder model like Pegasus?\r\n\r\nFor the op_block_list, I was using [all op_type in the model **except** [\"Identity\", \"Constant\", \"Gather\", \"Shape\"]], since I consider them as \"safe\" operators.  \r\n\r\nMost of the operations in my [model](https://github.com/brevity2021/pegasus_onnx_tmp/blob/main/pegasus_onnx_encoder_fp32_graph.txt) with layer norms are \"Pow\"/\"Multiply\"/\"Div\" operators, so I'm trying to exclude operators not supporting float16 in https://github.com/microsoft/onnxruntime/blob/main/docs/OperatorKernels.md#cudaexecutionprovider. Unfortunately the operator you suggested (LayerNormalization/SkipLayerNormalization/Gelu/FastGelu) doesn't exist in my model..\r\n\r\nMaybe instead of op_block_list, I should use more explicit \"node_block_list\" to avoid casting nodes?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1517272518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1518159220",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15490#issuecomment-1518159220",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15490",
        "id": 1518159220,
        "node_id": "IC_kwDOCVq1mM5afUV0",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-21T17:56:48Z",
        "updated_at": "2023-04-21T17:58:06Z",
        "author_association": "MEMBER",
        "body": "@brevity2021, the supported model list is not up to date. We support encoder-decoder models like bart and t5 (T5 need nightly package). You can try use `--model_type bart` to see whether it could help.\r\n```\r\npython -m onnxruntime.transformers.optimizer --help\r\npython -m onnxruntime.transformers.optimizer --input pegasus.onnx --output pegasus_opt.onnx --model_type bart\r\n```\r\n\r\nWelcome to contribute for graph fusion for pegasus model if you found some part like self/crosss attention is not fused! \r\n\r\nop_block_list shall be as minimal as possible since those operators will be computed in fp32.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1518159220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]