[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500928527",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500928527",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500928527,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDkyODUyNw==",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2019-06-11T16:48:32Z",
        "updated_at": "2019-06-11T16:48:32Z",
        "author_association": "MEMBER",
        "body": "Hi, what model are you using and have you done all the appropriate preprocessing on the image to ensure the inputs are correct? ONNX Runtime is production ready and already powers many high-volume, high-scale production scenarios for Microsoft products and services. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500928527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500965754",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500965754",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500965754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk2NTc1NA==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T18:25:51Z",
        "updated_at": "2019-06-11T18:25:51Z",
        "author_association": "NONE",
        "body": "I am using squeezenet 1.3 and I am normalizing the inputs with appropriate mean and std-dev.\r\nHowever the results are very similar even if I don't do any normalization.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500965754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500970110",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500970110",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500970110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk3MDExMA==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T18:37:26Z",
        "updated_at": "2019-06-11T18:37:26Z",
        "author_association": "MEMBER",
        "body": "Hi, I have an alternative. I'm creating another demo for inception model on imagenet dataset. And the demo code uses the C API. I have checked the result, it's correct. If you are interested, you could use this new model.\r\nThe C API and runtime itself is good, if the result was wrong, mostly likely it's because of the model or preprocessing. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500970110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500979788",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500979788",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500979788,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk3OTc4OA==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T19:04:00Z",
        "updated_at": "2019-06-11T19:04:00Z",
        "author_association": "NONE",
        "body": "I'll be happy if I can take a look into this new demo, once it is available ! ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500979788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500987837",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500987837",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500987837,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk4NzgzNw==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T19:26:43Z",
        "updated_at": "2019-06-11T19:26:43Z",
        "author_association": "MEMBER",
        "body": "Hi @petrsm,\r\n\r\nI downloaded a sample image from the ONNX.JS squeezenet demo (the 'Granny Smith' apple) and ran a simple python script to check if the result label looked okay and it was fine. (I did this for 0.4.0 release and current master)\r\n\r\nThis is my python script - \r\n\r\nimport onnxruntime as rt\r\nimport numpy as np\r\nfrom PIL import Image\r\n\r\ndef preprocess(img_path):\r\n    img = Image.open(img_path)\r\n    img = img.resize((224, 224), Image.BILINEAR)\r\n    img_data = np.array(img, dtype=np.float32)\r\n    img_data = np.transpose(img_data, [2, 0, 1])\r\n    img_data = np.expand_dims(img_data, 0)\r\n    img_data = img_data[:,0:3,:,:] # Input is RGBA - so strip off A\r\n    return img_data\r\n\r\nsess = rt.InferenceSession(\"squeezenet.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\npred_onnx = sess.run(None, {input_name: preprocess(\"apple.png\")})[0]\r\n\r\nmax_index = np.argmax(pred_onnx)\r\n    \r\nprint(max_index)\r\n\r\nThis prints 948 which corresponds to 'Granny Smith' in the ImageNet categories. So this rules out any issue in the core runtime itself.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500987837/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501009450",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501009450",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501009450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAwOTQ1MA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T20:26:37Z",
        "updated_at": "2019-06-11T20:26:37Z",
        "author_association": "MEMBER",
        "body": "@petrsm - It would help if you showed (code snippet) how you were feeding in the images corresponding to these lines - \r\n\r\n\"\r\nWhen I however feed some images (very nice & clean from here: https://microsoft.github.io/onnxjs-demo/#/squeezenet)\r\n\r\nI get completely non-sensical results (ie for completely different images (cheetah / lighthouse)) network returns same resulting class.\r\n \"\r\nThe only explanation I can think of is that the pre-processing was incomplete/not correct.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501009450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501014567",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501014567",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501014567,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAxNDU2Nw==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T20:41:24Z",
        "updated_at": "2019-06-11T20:41:24Z",
        "author_association": "NONE",
        "body": "I guess there must be something wrong in my code, question is what :)\r\n\r\nI created simple repro by modifying C_API_sample.cpp. Entire solution with data can be\r\ndownloaded from here:\r\n\r\nhttps://drive.google.com/file/d/1EBYkoXMGjwRJSy9p7XJNpQ43nP9qMpxs/view?usp=sharing\r\n\r\n\r\nAs stated before, when feeding test pattern, all is OK. When feeding cheetah image, it is classified as 669 - 'mosquito net'. I tried various layouts of input data (can be seen in code) without any success.\r\n\r\nI really appreciate willingness to help from all of you !\r\n\r\nHere is relevant part of code where I feed input tensor data:\r\n\r\n  // initialize input data with values in [0.0, 1.0]\r\n\r\n#if 0\r\n\r\n  // This works as expected\r\n\r\n  for (size_t i = 0; i < input_tensor_size; i++)\r\n    input_tensor_values[i] = (float)i / (input_tensor_size + 1);\r\n#else\r\n\r\n  int img_sizex, img_sizey, img_channels;\r\n\r\n  stbi_uc * img_data = stbi_load(\"cheetah.png\", &img_sizex, &img_sizey, &img_channels, STBI_default);\r\n\r\n  assert(img_data);\r\n  assert(img_sizex == 224);\r\n  assert(img_sizey == 224);\r\n  assert(img_channels == 4);\r\n\r\n  struct S_Pixel\r\n  {\r\n\t  unsigned char RGBA[4];\r\n  };\r\n\r\n  static_assert(sizeof(S_Pixel) == 4, \"\");\r\n\r\n  const S_Pixel * imgPixels(reinterpret_cast<const S_Pixel *>(img_data));\r\n\r\n\r\n#if 1\r\n  const float mean[3]\t= { 0.485f, 0.456f, 0.406f };\r\n  const float stddev[3]\t= { 0.229f, 0.224f, 0.225f };\r\n#else\r\n\r\n  // Does not make any difference\r\n  const float mean[3]\t= { 0.0f, 0.0f, 0.0f };\r\n  const float stddev[3]\t= { 1.0f, 1.0f, 1.0f };\r\n#endif\r\n\r\n\r\n  size_t offs = 0;\r\n\r\n#if 1\r\n\r\n  // NCWH layout (this should be correct)\r\n  for (size_t c = 0; c < 3; c++)\r\n  {\r\n\t  for (size_t y = 0; y < 224; y++)\r\n\t  {\r\n\t\t  for (size_t x = 0; x < 224; x++, offs++)\r\n\t\t  {\r\n\t\t\t  const float val((float)imgPixels[y * 224 + x].RGBA[c] / 255);\r\n\r\n\t\t\t  input_tensor_values[offs] = (val - mean[c]) / stddev[c];\r\n\t\t  }\r\n\t  }\r\n  }\r\n#else\r\n\r\n  // Desperate attempt to try NWHC layout (fails miserably - same as passing vector of zeroes)\r\n  for (size_t y = 0; y < 224; y++)\r\n  {\r\n\t  for (size_t x = 0; x < 224; x++)\r\n\t  {\r\n\t\t  for (size_t c = 0; c < 3; c++, offs++)\r\n\t\t  {\r\n\t\t\t  const float val((float)imgPixels[y * 224 + x].RGBA[c] / 255);\r\n\r\n\t\t\t  input_tensor_values[offs] = (val - mean[c]) / stddev[c];\r\n\t\t  }\r\n\t  }\r\n  }\r\n#endif\r\n\r\n  assert(offs == input_tensor_size);\r\n\r\n\r\n\r\n#endif\r\n\r\n  // create input tensor object from data values\r\n  OrtAllocatorInfo* allocator_info;\r\n  CHECK_STATUS(OrtCreateCpuAllocatorInfo(OrtArenaAllocator, OrtMemTypeDefault, &allocator_info));\r\n  OrtValue* input_tensor = NULL;\r\n  CHECK_STATUS(OrtCreateTensorWithDataAsOrtValue(allocator_info, input_tensor_values.data(), input_tensor_size * sizeof(float), input_node_dims.data(), 4, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT, &input_tensor));\r\n  assert(OrtIsTensor(input_tensor));\r\n  OrtReleaseAllocatorInfo(allocator_info);\r\n\r\n...\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501014567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501021001",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501021001",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501021001,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAyMTAwMQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T21:00:19Z",
        "updated_at": "2019-06-11T21:00:19Z",
        "author_association": "MEMBER",
        "body": "Hi @petrsm,\r\n\r\nI see several things that can be tried - \r\n\r\n1) For now we can skip the mean subtraction and standard_deviation division (as the python code that works didn't require that)\r\n\r\n2) We can skip the division by 255 for each pixel (as the python code that works works with values in the range 0-255) (i.e.) un-normalized\r\n\r\n3) I **think** the correct format is NCHW (and not NCWH as you mention as \"should work\" in your comment). \r\n\r\n4) After using stbi_load(), what is the format of the data bytes- is it HWC or CHW or WHC ? That needs to be checked first. If the format is HWC then life becomes easier - since we just want to ditch the last channel, you could just consume the first 224 * 224 * 3 values and after appropriate float casts, can try feeding this to ORT.\r\n\r\nThanks\r\n\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501021001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501028925",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501028925",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501028925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAyODkyNQ==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T21:25:02Z",
        "updated_at": "2019-06-11T21:25:02Z",
        "author_association": "NONE",
        "body": "You hit the nail on the head !\r\nAfter removing normalization to <0, 1> range (and also mean/std dev) everything works fine.\r\n\r\nI blindly followed advice from here :\r\n\r\nhttps://github.com/onnx/models/tree/master/models/image_classification/squeezenet\r\n\r\n\"Preprocessing\r\nThe images have to be loaded in to a range of [0, 1] and then normalized using mean = [0.485, 0.456, 0.406] and std = [0.229, 0.224, 0.225]. The transformation should preferrably happen at preprocessing. Check imagenet_preprocess.py for code.\"\r\n\r\nNext time, when facing such issue, denormalization will be first thing to try :)\r\n\r\nThanks a lot for your help !\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501028925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501039870",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501039870",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501039870,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAzOTg3MA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T22:01:37Z",
        "updated_at": "2019-06-11T22:01:37Z",
        "author_association": "MEMBER",
        "body": "Glad you could get it working!\r\n\r\nClosing this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501039870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]