[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652266231",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-652266231",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 652266231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI2NjIzMQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-01T08:13:07Z",
        "updated_at": "2020-07-01T08:13:07Z",
        "author_association": "MEMBER",
        "body": "Each session is a standalone entity so there's not much you can do inter-session.\r\n\r\nOn a per-session level you should be able to use the new IOBinding feature to provide the inputs on GPU and potentially keep the outputs on GPU post-execution. Keeping the outputs on GPU requires you to know the size of each output in order to pre-allocate a buffer on GPU with the correct size/shape. \r\n\r\nWe're working on making this simpler as currently pytorch is required to do the allocation on GPU. That change should be available in the next couple of weeks and will remove the pytorch dependency. We will also be adding a mechanism to keep an output on GPU even if you don't know the size prior to model execution. \r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/master/onnxruntime/test/python/onnxruntime_test_python_iobinding.py has some example IOBinding usage, but possibly isn't clear enough about allocating memory on GPU. \r\n\r\nHere is a minimal example of how you'd currently allocate an output on GPU and bind that to the output 'output_name' from graph execution. When ORT executes the model it will write the output directly to this buffer with no copy to CPU. Similar approach for inputs. \r\n\r\nIn this example the model takes an input X with shape {1, 2} and produces an two outputs, Y (shape {1, 1}) and Z. For the sake of the example we provide the input on CPU, and ask for the Y output to be written to a pre-allocated buffer on GPU, and the Z output to be returned on CPU. Note that if you're using IOBinding you must bind all inputs and outputs. \r\n\r\n```\r\nimport numpy as np\r\nimport torch\r\nimport onnxruntime as ort\r\n\r\nsess = ort.InferenceSession(\"model.onnx\")\r\nio_binding = sess.io_binding()\r\n\r\n# create input 'X' with shape [1,2]. bind the input to the cpu object. ORT will handle any copy to GPU if needed\r\nx = np.array([1., 2.], np.float32).reshape(1, 2)\r\nio_binding.bind_cpu_input(\"X\", x)\r\n# the bind_cpu_input call is roughly equivalent to \r\n# io_binding.bind_input(\"X\", 'cpu', 0, np.float32, list([1, 2]), x.__array_interface__['data'][0])\r\n\r\n# create buffer for output 'Y' on cuda. \r\nd = torch.device(\"cuda\", 0)\r\ntorch_tensor = torch.zeros([1, 1], device=d, dtype=torch.float32)\r\nio_binding.bind_output(\"Y\", torch_tensor.device.type, torch_tensor.device.index, np.float32, [1,1], torch_tensor.data_ptr())\r\n\r\n# receive output Z on CPU (no preallocated buffer)\r\nio_binding.bind_output(\"Z\")\r\n\r\nsess.run_with_iobinding(io_binding)\r\n```\r\n\r\nOutput from `help(io_binding)`\r\n\r\n> class IOBinding(builtins.object)\r\n |  IOBinding(session)\r\n |  \r\n |  This class provides API to bind input/output to a specified device, e.g. GPU.\r\n |  \r\n |  Methods defined here:\r\n |  \r\n |  __init__(self, session)\r\n |      Initialize self.  See help(type(self)) for accurate signature.\r\n |  \r\n |  bind_cpu_input(self, name, arr_on_cpu)\r\n |      bind an input to array on CPU\r\n |      :param name: input name\r\n |      :param arr_on_cpu: input values as a python array on CPU\r\n |  \r\n |  bind_input(self, name, device_type, device_id, element_type, shape, buffer_ptr)\r\n |      :param name: input name\r\n |      :param device_type: e.g. CPU, CUDA\r\n |      :param device_id: device id, e.g. 0\r\n |      :param element_type: input element type\r\n |      :param shape: input shape\r\n |      :param buffer_ptr: memory pointer to input data\r\n |  \r\n |  bind_output(self, name, device_type='cpu', device_id=0, element_type=None, shape=None, buffer_ptr=None)\r\n |      :param name: output name\r\n |      :param device_type: e.g. CPU, CUDA, CPU by default\r\n |      :param device_id: device id, e.g. 0\r\n |      :param element_type: output element type\r\n |      :param shape: output shape\r\n |      :param buffer_ptr: memory pointer to output data\r\n |  \r\n |  clear_binding_inputs(self)\r\n |  \r\n |  clear_binding_outputs(self)\r\n |  \r\n |  get_outputs(self)\r\n |      Obtain outputs.\r\n\r\nAs the IOBinding feature is fairly new you may need to build ORT yourself or use a nightly package with GPU support.\r\n`pip install -U -i https://test.pypi.org/simple/ ort-nightly_gpu`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652266231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652547390",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-652547390",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 652547390,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjU0NzM5MA==",
        "user": {
            "login": "matt-deboer",
            "id": 1491381,
            "node_id": "MDQ6VXNlcjE0OTEzODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1491381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matt-deboer",
            "html_url": "https://github.com/matt-deboer",
            "followers_url": "https://api.github.com/users/matt-deboer/followers",
            "following_url": "https://api.github.com/users/matt-deboer/following{/other_user}",
            "gists_url": "https://api.github.com/users/matt-deboer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matt-deboer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matt-deboer/subscriptions",
            "organizations_url": "https://api.github.com/users/matt-deboer/orgs",
            "repos_url": "https://api.github.com/users/matt-deboer/repos",
            "events_url": "https://api.github.com/users/matt-deboer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matt-deboer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-01T17:20:07Z",
        "updated_at": "2020-07-01T17:20:07Z",
        "author_association": "NONE",
        "body": "Could you provide an example of how to accomplish this w/ the C or C++ api?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652547390/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652669321",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-652669321",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 652669321,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjY2OTMyMQ==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-01T22:05:59Z",
        "updated_at": "2020-07-01T22:05:59Z",
        "author_association": "MEMBER",
        "body": "> Could you provide an example of how to accomplish this w/ the C or C++ api?\r\n\r\nWe're currently adding IOBinding support to the C, C++ and C# APIs so that should be available in the next few weeks. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/652669321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/653562192",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-653562192",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 653562192,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzU2MjE5Mg==",
        "user": {
            "login": "ShaohongBai",
            "id": 37364351,
            "node_id": "MDQ6VXNlcjM3MzY0MzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37364351?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShaohongBai",
            "html_url": "https://github.com/ShaohongBai",
            "followers_url": "https://api.github.com/users/ShaohongBai/followers",
            "following_url": "https://api.github.com/users/ShaohongBai/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShaohongBai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShaohongBai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShaohongBai/subscriptions",
            "organizations_url": "https://api.github.com/users/ShaohongBai/orgs",
            "repos_url": "https://api.github.com/users/ShaohongBai/repos",
            "events_url": "https://api.github.com/users/ShaohongBai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShaohongBai/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-03T14:00:09Z",
        "updated_at": "2020-07-03T14:01:05Z",
        "author_association": "NONE",
        "body": "> I have a question about optimization of data transfers to and from the GPU. I have 4 sessions with different models running simultaneously on the GPU. I call the Run method on those sessions from 4 different threads. Is there a way to batch the input data going to those sessions in order to reduce the GPU memory transfer overhead?\r\n> \r\n> Are there any other device to host memory transfer optimizations that might be worth trying? When I profile my application 74 % of the CPU Time is spent in the `cuMemcpyDtoH_v2` function. I'd like to reduce this time as much as possible.\r\n> \r\n> I'm using the CUDA execution provider with the Nvidia GeForce RTX 2080 Ti Graphics Card.\r\n\r\nMaybe relevant, did you try to have a cluster GPU of 4 nodes, each of them have separate CPUs attachment, to do the same task, whether it will balance memory overhead? Not sure whether it will be fast or slower.  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/653562192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685908462",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-685908462",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 685908462,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTkwODQ2Mg==",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2020-09-02T18:11:32Z",
        "updated_at": "2020-09-02T18:11:32Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/685908462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/690863488",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4390#issuecomment-690863488",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4390",
        "id": 690863488,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDg2MzQ4OA==",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2020-09-11T04:15:47Z",
        "updated_at": "2020-09-11T04:15:47Z",
        "author_association": "NONE",
        "body": "This issue has been automatically closed due to inactivity. Please reactivate if further support is needed.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/690863488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]