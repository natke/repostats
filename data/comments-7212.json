[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812261167",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812261167",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812261167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjI2MTE2Nw==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T01:05:15Z",
        "updated_at": "2021-04-02T01:05:15Z",
        "author_association": "MEMBER",
        "body": "We'll investigate and get back. cc @RandyShuai ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812261167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812264238",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812264238",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812264238,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjI2NDIzOA==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T01:16:58Z",
        "updated_at": "2021-04-02T01:19:38Z",
        "author_association": "MEMBER",
        "body": "I think this is what is happening. In the pytorch case, you're calling tensor.to('cuda'....). This will incur the cost of copying the tensor from pinned memory to cuda *only once*; the subsequent iterations will be no-op. In the case of ORT, the copy is done every single time when you call run(). A better comparison is to ensure your input is copied to the GPU only once *in both cases* before run() is called. You can achieve this using iobinding.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812264238/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812691195",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812691195",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812691195,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjY5MTE5NQ==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T20:09:06Z",
        "updated_at": "2021-04-02T20:09:06Z",
        "author_association": "NONE",
        "body": "Thanks for the reply!\r\nDescription updated.\r\nDo you know how to synchronize cuda via ORT? It would help me to avoid gpu to cpu copy.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812691195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812694511",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812694511",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812694511,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjY5NDUxMQ==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T20:17:33Z",
        "updated_at": "2021-04-02T20:17:33Z",
        "author_association": "NONE",
        "body": "Allclose assert starts to fail after I increased a value in the channel dimension, should I report a bug?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812694511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812736627",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812736627",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812736627,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjczNjYyNw==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T22:13:14Z",
        "updated_at": "2021-04-02T22:13:14Z",
        "author_association": "NONE",
        "body": "Now ORT setup uses convDesc.mathType.CUDNN_DEFAULT_MATH in cudnnConvolutionForward which is different from pytorch CUDNN_TENSOR_OP_MATH maybe you know why?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812736627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812831577",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-812831577",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 812831577,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjgzMTU3Nw==",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-03T08:04:25Z",
        "updated_at": "2021-04-03T08:04:25Z",
        "author_association": "MEMBER",
        "body": "Do you see any difference in performance after using iobinding?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/812831577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813391260",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813391260",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813391260,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzM5MTI2MA==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T13:25:01Z",
        "updated_at": "2021-04-05T13:25:01Z",
        "author_association": "NONE",
        "body": "Yes, I still see difference. Current measurements after using iobinding:\r\npytorch:\r\nBatch shape [32, 896, 832]\r\naverage load+fwd 10.41 msec\r\nonnxruntime:\r\nBatch shape [32, 896, 832]\r\naverage load+fwd 35.92 msec",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813391260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813395659",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813395659",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813395659,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzM5NTY1OQ==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T13:34:56Z",
        "updated_at": "2021-04-05T14:03:08Z",
        "author_association": "NONE",
        "body": "May also sound interesting.\r\nThere are differences in cudnnFindConvolutionForwardAlgorithmEx functions \r\n<details>\r\n <summary>Pytorch</summary>\r\n<pre>\r\nI! CuDNN (v8005) function cudnnFindConvolutionForwardAlgorithmEx() called:\r\ni!     handle: type=cudnnHandle_t; streamId=(nil) (defaultStream);\r\ni!     srcDesc: type=cudnnTensorDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[32,896,1,832];\r\ni!         strideA: type=int; val=[745472,832,832,1];\r\ni!     srcData: location=dev; addr=0x7f1f46000000;\r\ni!     filterDesc: type=cudnnFilterDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         vect: type=int; val=0;\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[1792,896,1,19];\r\ni!         format: type=cudnnTensorFormat_t; val=CUDNN_TENSOR_NCHW (0);\r\ni!     filterData: location=dev; addr=0x7f1fc4000000;\r\ni!     convDesc: type=cudnnConvolutionDescriptor_t:\r\ni!         mode: type=cudnnConvolutionMode_t; val=CUDNN_CROSS_CORRELATION (1);\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_FLOAT (0);\r\ni!         mathType: type=cudnnMathType_t; val=CUDNN_TENSOR_OP_MATH (1);\r\ni!         reorderType: type=int; val=0;\r\ni!         arrayLength: type=int; val=2;\r\ni!         padA: type=int; val=[0,9];\r\ni!         strideA: type=int; val=[1,2];\r\ni!         dilationA: type=int; val=[1,1];\r\ni!         groupCount: type=int; val=1;\r\ni!     destDesc: type=cudnnTensorDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[32,1792,1,416];\r\ni!         strideA: type=int; val=[745472,416,416,1];\r\ni!     destData: location=dev; addr=0x7f1f48d80000;\r\ni!     requestedAlgoCount: type=int; val=8;\r\ni!     returnedAlgoCount: location=host; addr=0x7ffd1db1e260;\r\ni!     perfResults: location=host; addr=0x562d4de29310;\r\ni!     workSpace: location=dev; addr=0x7f1f22000000;\r\ni!     workSpaceSizeInBytes: type=size_t; val=453246976;\r\ni! Time: 2021-04-02T20:20:58.376987 (0d+0h+0m+6s since start)\r\ni! Process=20457; Thread=20457; GPU=0; Handle=0x562d0f5507f0; StreamId=(nil) (defaultStream).\r\n</pre>\r\n</details>\r\n\r\n<details>\r\n <summary>Onnxruntime</summary>\r\n<pre>\r\nI! CuDNN (v8005) function cudnnFindConvolutionForwardAlgorithmEx() called:\r\ni!     handle: type=cudnnHandle_t; streamId=0x556d192637c0;\r\ni!     srcDesc: type=cudnnTensorDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[4,896,128,1];\r\ni!         strideA: type=int; val=[114688,128,1,1];\r\ni!     srcData: location=dev; addr=0x7fbac2c7f200;\r\ni!     filterDesc: type=cudnnFilterDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         vect: type=int; val=0;\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[1792,896,19,1];\r\ni!         format: type=cudnnTensorFormat_t; val=CUDNN_TENSOR_NCHW (0);\r\ni!     filterData: location=dev; addr=0x7fb97c000000;\r\ni!     convDesc: type=cudnnConvolutionDescriptor_t:\r\ni!         mode: type=cudnnConvolutionMode_t; val=CUDNN_CROSS_CORRELATION (1);\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         mathType: type=cudnnMathType_t; val=CUDNN_TENSOR_OP_MATH (1);\r\ni!         reorderType: type=int; val=0;\r\ni!         arrayLength: type=int; val=2;\r\ni!         padA: type=int; val=[9,0];\r\ni!         strideA: type=int; val=[2,1];\r\ni!         dilationA: type=int; val=[1,1];\r\ni!         groupCount: type=int; val=1;\r\ni!     destDesc: type=cudnnTensorDescriptor_t:\r\ni!         dataType: type=cudnnDataType_t; val=CUDNN_DATA_HALF (2);\r\ni!         nbDims: type=int; val=4;\r\ni!         dimA: type=int; val=[4,1792,64,1];\r\ni!         strideA: type=int; val=[114688,64,1,1];\r\ni!     destData: location=dev; addr=0x7fb97fc00000;\r\ni!     requestedAlgoCount: type=int; val=1;\r\ni!     returnedAlgoCount: location=host; addr=0x7ffd76b1e7f0;\r\ni!     perfResults: location=host; addr=0x7ffd76b1ea70;\r\ni!     workSpace: location=dev; addr=0x7fb9a2000000;\r\ni!     workSpaceSizeInBytes: type=size_t; val=33554432;\r\ni! Time: 2021-04-02T20:20:39.710280 (0d+0h+0m+1s since start)\r\ni! Process=20361; Thread=20361; GPU=0; Handle=0x556d19454340; StreamId=0x556d192637c0.\r\n</pre>\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813395659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813402532",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813402532",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813402532,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzQwMjUzMg==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T13:49:11Z",
        "updated_at": "2021-04-05T13:49:11Z",
        "author_association": "NONE",
        "body": "And could you please answer what is the reason for the differences (datatypes algotypes strides)?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813402532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813528128",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813528128",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813528128,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzUyODEyOA==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T17:40:17Z",
        "updated_at": "2021-04-05T17:40:17Z",
        "author_association": "NONE",
        "body": "We found interesting thing. If I preconfigure ORT with provider like: \r\n```python\r\n\tproviders = [\r\n\t\t('CUDAExecutionProvider', {\r\n\t\t\t'cudnn_conv_algo_search': 'DEFAULT',\r\n\t\t}),\r\n\t\t'CPUExecutionProvider',\r\n\t]\r\n\tonnxruntime_session = onnxruntime.InferenceSession(args.onnx, providers=providers)\r\n```\r\nmetrics becomes like in pytorch version:\r\n**average load+fwd 10.88 msec**",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813528128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813533432",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813533432",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813533432,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzUzMzQzMg==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T17:48:49Z",
        "updated_at": "2021-04-05T17:49:24Z",
        "author_association": "NONE",
        "body": "Now if we compare cudnn logs of 'DEFAULT' with 'EXHAUSTIVE' We will see that mathType has changed as well.\r\n![image](https://user-images.githubusercontent.com/9077278/113605728-b51b9a80-964f-11eb-8b55-eeca404c6fb3.png)\r\n('DEFAULT' on the left part)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813533432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813536077",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-813536077",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 813536077,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzUzNjA3Nw==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T17:53:33Z",
        "updated_at": "2021-04-05T17:53:33Z",
        "author_association": "NONE",
        "body": "We believe that the point is on how ORT works with find function. https://github.com/microsoft/onnxruntime/blob/d01006fc222799f879c8ce70edd58e97f53b7767/onnxruntime/core/providers/cuda/nn/conv.cc\r\nhttps://github.com/pytorch/pytorch/blob/c371542efc31b1abfe6f388042aa3ab0cef935f2/aten/src/ATen/native/cudnn/Conv_v7.cpp",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/813536077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/814467466",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-814467466",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 814467466,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDQ2NzQ2Ng==",
        "user": {
            "login": "SherlockNoMad",
            "id": 9906745,
            "node_id": "MDQ6VXNlcjk5MDY3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9906745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherlockNoMad",
            "html_url": "https://github.com/SherlockNoMad",
            "followers_url": "https://api.github.com/users/SherlockNoMad/followers",
            "following_url": "https://api.github.com/users/SherlockNoMad/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherlockNoMad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherlockNoMad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherlockNoMad/subscriptions",
            "organizations_url": "https://api.github.com/users/SherlockNoMad/orgs",
            "repos_url": "https://api.github.com/users/SherlockNoMad/repos",
            "events_url": "https://api.github.com/users/SherlockNoMad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherlockNoMad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-06T22:05:43Z",
        "updated_at": "2021-04-06T22:06:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "This PR https://github.com/microsoft/onnxruntime/pull/7227 might have address the issue. \r\nWe need to set the cudnnSetConvolutionMathType properly before doing the algo search. \r\nsee changes in conv.cc CudnnConvolutionDescriptor::Set() \r\n\r\nI will implement the algorithm search for ConvGrad in the next PR. Will look at this problem all together. \r\n\r\nPlease let me know if this fix has address the issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/814467466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/814654635",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-814654635",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 814654635,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDY1NDYzNQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-07T06:54:37Z",
        "updated_at": "2021-04-07T06:54:37Z",
        "author_association": "MEMBER",
        "body": "@SherlockNoMad,\r\n\r\nBut isn't the math type getting set properly before we do the algo search even without your addition ? I am referring to these lines:\r\n\r\n      // set math type to tensor core before algorithm search\r\n      if (std::is_same<T, MLFloat16>::value)\r\n        CUDNN_RETURN_IF_ERROR(cudnnSetConvolutionMathType(s_.conv_desc, CUDNN_TENSOR_OP_MATH)); ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/814654635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/815665460",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-815665460",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 815665460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTY2NTQ2MA==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-08T10:57:17Z",
        "updated_at": "2021-04-08T10:57:17Z",
        "author_association": "NONE",
        "body": "Hi! @SherlockNoMad I took measurements on ORT nightly. It gets worse. Was ~35 msec (ORT 1.7), now ~61 msec (1.7.0.dev202104071).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/815665460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819754270",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-819754270",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 819754270,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTc1NDI3MA==",
        "user": {
            "login": "vadimkantorov",
            "id": 1041752,
            "node_id": "MDQ6VXNlcjEwNDE3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimkantorov",
            "html_url": "https://github.com/vadimkantorov",
            "followers_url": "https://api.github.com/users/vadimkantorov/followers",
            "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimkantorov/orgs",
            "repos_url": "https://api.github.com/users/vadimkantorov/repos",
            "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimkantorov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-14T18:53:18Z",
        "updated_at": "2021-04-14T18:53:18Z",
        "author_association": "NONE",
        "body": "@SherlockNoMad We along with  @II245 will upload the CUDNN logs / nvprof traces, but it seems that the fix did not help",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819754270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819800719",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-819800719",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 819800719,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgwMDcxOQ==",
        "user": {
            "login": "SherlockNoMad",
            "id": 9906745,
            "node_id": "MDQ6VXNlcjk5MDY3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9906745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherlockNoMad",
            "html_url": "https://github.com/SherlockNoMad",
            "followers_url": "https://api.github.com/users/SherlockNoMad/followers",
            "following_url": "https://api.github.com/users/SherlockNoMad/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherlockNoMad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherlockNoMad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherlockNoMad/subscriptions",
            "organizations_url": "https://api.github.com/users/SherlockNoMad/orgs",
            "repos_url": "https://api.github.com/users/SherlockNoMad/repos",
            "events_url": "https://api.github.com/users/SherlockNoMad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherlockNoMad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-14T20:11:25Z",
        "updated_at": "2021-04-14T20:11:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thansk @vadimkantorov, I will revert the change for now to unblock you. Will investigate in the meantime. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819800719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819802970",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-819802970",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 819802970,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgwMjk3MA==",
        "user": {
            "login": "vadimkantorov",
            "id": 1041752,
            "node_id": "MDQ6VXNlcjEwNDE3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimkantorov",
            "html_url": "https://github.com/vadimkantorov",
            "followers_url": "https://api.github.com/users/vadimkantorov/followers",
            "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimkantorov/orgs",
            "repos_url": "https://api.github.com/users/vadimkantorov/repos",
            "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimkantorov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-14T20:15:07Z",
        "updated_at": "2021-04-14T20:15:07Z",
        "author_association": "NONE",
        "body": "Thanks! I think it would be great to have a Conv perf test in ORT that compares performance against vanilla PyTorch ones (actually I wonder if PyTorch has similar test in their benchmarks?)\r\n\r\nFor speech recognition, Conv1d performance is critical, so such bugs should be discoverable easily :) 3x-4x perf degradation undermines greatly suitability of ORT as inference backend... ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819802970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819804182",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-819804182",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 819804182,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgwNDE4Mg==",
        "user": {
            "login": "SherlockNoMad",
            "id": 9906745,
            "node_id": "MDQ6VXNlcjk5MDY3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9906745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherlockNoMad",
            "html_url": "https://github.com/SherlockNoMad",
            "followers_url": "https://api.github.com/users/SherlockNoMad/followers",
            "following_url": "https://api.github.com/users/SherlockNoMad/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherlockNoMad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherlockNoMad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherlockNoMad/subscriptions",
            "organizations_url": "https://api.github.com/users/SherlockNoMad/orgs",
            "repos_url": "https://api.github.com/users/SherlockNoMad/repos",
            "events_url": "https://api.github.com/users/SherlockNoMad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherlockNoMad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-14T20:17:06Z",
        "updated_at": "2021-04-14T20:17:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Definitely... \r\nI also found that we are lacking some op level micro benchmark to help us catch such regression. \r\nI will use your inputs/kernels shape to verify this fix. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819804182/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819808920",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-819808920",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 819808920,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgwODkyMA==",
        "user": {
            "login": "vadimkantorov",
            "id": 1041752,
            "node_id": "MDQ6VXNlcjEwNDE3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimkantorov",
            "html_url": "https://github.com/vadimkantorov",
            "followers_url": "https://api.github.com/users/vadimkantorov/followers",
            "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimkantorov/orgs",
            "repos_url": "https://api.github.com/users/vadimkantorov/repos",
            "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimkantorov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-14T20:25:35Z",
        "updated_at": "2021-04-14T20:25:35Z",
        "author_association": "NONE",
        "body": "For speech recognition models for functional perf testing, maybe you can use the Nvidia Nemo architectures or the ones from hugging face (jaspernet, quartznet etc)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/819808920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/820227510",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-820227510",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 820227510,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDIyNzUxMA==",
        "user": {
            "login": "SherlockNoMad",
            "id": 9906745,
            "node_id": "MDQ6VXNlcjk5MDY3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9906745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SherlockNoMad",
            "html_url": "https://github.com/SherlockNoMad",
            "followers_url": "https://api.github.com/users/SherlockNoMad/followers",
            "following_url": "https://api.github.com/users/SherlockNoMad/following{/other_user}",
            "gists_url": "https://api.github.com/users/SherlockNoMad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SherlockNoMad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SherlockNoMad/subscriptions",
            "organizations_url": "https://api.github.com/users/SherlockNoMad/orgs",
            "repos_url": "https://api.github.com/users/SherlockNoMad/repos",
            "events_url": "https://api.github.com/users/SherlockNoMad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SherlockNoMad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-15T08:25:15Z",
        "updated_at": "2021-04-15T08:25:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi @vadimkantorov, hope this PR address your problem. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/820227510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/828542069",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/7212#issuecomment-828542069",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/7212",
        "id": 828542069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyODU0MjA2OQ==",
        "user": {
            "login": "II245",
            "id": 9077278,
            "node_id": "MDQ6VXNlcjkwNzcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9077278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/II245",
            "html_url": "https://github.com/II245",
            "followers_url": "https://api.github.com/users/II245/followers",
            "following_url": "https://api.github.com/users/II245/following{/other_user}",
            "gists_url": "https://api.github.com/users/II245/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/II245/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/II245/subscriptions",
            "organizations_url": "https://api.github.com/users/II245/orgs",
            "repos_url": "https://api.github.com/users/II245/repos",
            "events_url": "https://api.github.com/users/II245/events{/privacy}",
            "received_events_url": "https://api.github.com/users/II245/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-28T15:17:54Z",
        "updated_at": "2021-04-28T15:17:54Z",
        "author_association": "NONE",
        "body": "Hi @SherlockNoMad ! Thank you very much for solving the represented case.\r\nI make measurements and now both PyTorch and ORT works well and equally.\r\n\r\nAfter an examination of a whole production model, I found that in some cases, which previously worked almost well with CUDA Provider fix (mention above). Now (with nightly build) model shows some performance degradation.\r\n\r\nThis is about cases when GPU memory almost full.\r\nI suppose it somehow linked with free memory for algo search.\r\n\r\nLet me show you the table:\r\n|B|T|forward time, msec|expected forward time, msec|\r\n| ------------- |:-------------:|:-----:|:-----:|\r\n|32 |120 |914.24 | 914.24 |\r\n|48 | 120| **4066.77** | 1.5 * 914.24 = ~ 1400 |\r\n\r\nwhere B is batch size;\r\nand T time dimension in seconds.\r\n\r\nWith B=48 I expect 1400 msec of an average run.\r\n\r\nCould you please investigate this case too?\r\nIt looks like nonnormal behavior.\r\n\r\nModel is here: \r\nhttps://disk.yandex.com/d/nTCPSCn67eL9sQ\r\n\r\nRepro is here:\r\n\r\n```bash\r\nCUDA_VISIBLE_DEVICES=0 python3 perf_ort.py  --onnx fp16_model.onnx --iterations 3 --iterations-warmup 3 --run-with-io-binding -B 32 -T 120\r\n```\r\n\r\n```python\r\nimport argparse\r\nimport time\r\nimport torch\r\nimport torch.cuda.profiler\r\nimport onnxruntime\r\nimport numpy as np\r\n\r\n\r\ndef infer_ort(onnxruntime_session, io_binding):\r\n\tonnxruntime_session.run_with_iobinding(io_binding)\r\n\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--iterations', type=int, default=16)\r\nparser.add_argument('--iterations-warmup', type=int, default=16)\r\nparser.add_argument('--channels', type=int, default=64)\r\nparser.add_argument('--sample-rate', type=int, default=8000)\r\nparser.add_argument('--onnx')\r\nparser.add_argument('-B', type=int)\r\nparser.add_argument('-T', type=int)\r\nparser.add_argument('--profile-cuda', action='store_true')\r\nparser.add_argument('--run-with-io-binding', action='store_true')\r\nargs = parser.parse_args()\r\n\r\nprint(args)\r\n\r\ndtype = torch.float16\r\nuse_cuda = True\r\n\r\nif args.onnx:\r\n\tproviders = [\r\n\t\t('CUDAExecutionProvider', {\r\n\t\t\t'device_id': 0,\r\n\t\t\t'gpu_mem_limit': 6 * 1024 * 1024 * 1024,\r\n\t\t}),\r\n\t\t'CPUExecutionProvider',\r\n\t]\r\n\r\n\tonnxruntime_session = onnxruntime.InferenceSession(args.onnx, providers = providers)\r\n\r\n\tmodel = lambda x: onnxruntime_session.run(None, dict(x=x))\r\n\tif args.run_with_io_binding:\r\n\t\tmodel = lambda io_binding: onnxruntime_session.run_with_iobinding(io_binding)\r\n\tpass\r\n\r\n\r\ntictoc = lambda: (use_cuda and torch.cuda.synchronize()) or time.time()\r\n\r\nbatch_shape = [args.B, args.T * args.sample_rate]\r\n\r\nbatch = torch.rand(*batch_shape, dtype=torch.float32)\r\n\r\nif args.onnx:\r\n\tio_binding = onnxruntime_session.io_binding()\r\n\tX_ortvalue = onnxruntime.OrtValue.ortvalue_from_numpy(batch.numpy(), 'cuda', 0)\r\n\tio_binding.bind_input(name='x', device_type=X_ortvalue.device_name(), device_id=0, element_type=np.float32,\r\n\t\t\tshape=X_ortvalue.shape(), buffer_ptr=X_ortvalue.data_ptr())\r\n\tio_binding.bind_output('logits', 'cuda')\r\n\tbatch = io_binding\r\n\tmodel = onnxruntime_session\r\n\tinfer = lambda model, batch: infer_ort(model, batch)\r\n\r\n\r\nprint('Warming up for', args.iterations_warmup, 'iterations')\r\ntic_wall = tictoc()\r\ntorch.backends.cudnn.benchmark = True\r\nfor i in range(args.iterations_warmup):\r\n\ty = infer(model, batch)\r\nprint('Warmup done in {:.02f} wall clock seconds'.format(tictoc() - tic_wall))\r\nprint()\r\n\r\nif args.profile_cuda:\r\n\ttorch.cuda.profiler.start()\r\n\r\nprint('Starting benchmark for', args.iterations, 'iterations:', 'fwd')\r\ntimes_fwd = torch.zeros(args.iterations)\r\nbatch = torch.rand(*batch_shape, dtype=torch.float32)\r\n\r\n\r\nif args.onnx:\r\n\tio_binding = onnxruntime_session.io_binding()\r\n\tX_ortvalue = onnxruntime.OrtValue.ortvalue_from_numpy(batch.numpy(), 'cuda', 0)\r\n\tio_binding.bind_input(name='x', device_type=X_ortvalue.device_name(), device_id=0, element_type=np.float32,\r\n\t\t\tshape=X_ortvalue.shape(), buffer_ptr=X_ortvalue.data_ptr())\r\n\tio_binding.bind_output('logits', 'cuda')\r\n\tbatch = io_binding\r\n\tmodel = onnxruntime_session\r\n\tinfer = lambda model, batch: infer_ort(model, batch)\r\n\r\n\r\nfor i in range(args.iterations):\r\n\ttic = tictoc()\r\n\ty = infer(model, batch)\r\n\ttimes_fwd[i] = tictoc() - tic\r\n\ty = None\r\n\r\nprint('Batch shape', batch_shape)\r\nprint('average load+fwd {:.02f} msec'.format(float(times_fwd.mean()) * 1e3))\r\n```\r\n\r\ncc @vadimkantorov",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/828542069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]