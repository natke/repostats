[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1273789906",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13236#issuecomment-1273789906",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13236",
        "id": 1273789906,
        "node_id": "IC_kwDOCVq1mM5L7H3S",
        "user": {
            "login": "ytaous",
            "id": 4484531,
            "node_id": "MDQ6VXNlcjQ0ODQ1MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4484531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ytaous",
            "html_url": "https://github.com/ytaous",
            "followers_url": "https://api.github.com/users/ytaous/followers",
            "following_url": "https://api.github.com/users/ytaous/following{/other_user}",
            "gists_url": "https://api.github.com/users/ytaous/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ytaous/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ytaous/subscriptions",
            "organizations_url": "https://api.github.com/users/ytaous/orgs",
            "repos_url": "https://api.github.com/users/ytaous/repos",
            "events_url": "https://api.github.com/users/ytaous/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ytaous/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-10T20:28:20Z",
        "updated_at": "2022-10-10T20:28:20Z",
        "author_association": "MEMBER",
        "body": "@HectorSVC - can u pls help to check on this one? thx",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1273789906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1634800950",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13236#issuecomment-1634800950",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13236",
        "id": 1634800950,
        "node_id": "IC_kwDOCVq1mM5hcRU2",
        "user": {
            "login": "NickGeneva",
            "id": 5533524,
            "node_id": "MDQ6VXNlcjU1MzM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5533524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickGeneva",
            "html_url": "https://github.com/NickGeneva",
            "followers_url": "https://api.github.com/users/NickGeneva/followers",
            "following_url": "https://api.github.com/users/NickGeneva/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickGeneva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickGeneva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickGeneva/subscriptions",
            "organizations_url": "https://api.github.com/users/NickGeneva/orgs",
            "repos_url": "https://api.github.com/users/NickGeneva/repos",
            "events_url": "https://api.github.com/users/NickGeneva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickGeneva/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-13T19:34:47Z",
        "updated_at": "2023-07-13T19:34:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hello @ytaous and @HectorSVC \r\n\r\nI'd like to revive this issue. A minimal working example is below. This simple example transforms a tensor into fourier space then back out, which should recover the exact input tensor again. The current IRFFT function in ORT does not do this while PyTorch does.\r\n\r\n\r\nThis is because in the line mentioned above, the output dimension should be `out_dim = 2 * (in_dim - 1)` for even point IRFFTs. What is present, works for domains with odd number of points which is not supported by PyTorch or the added ONNX RFFT. For a reference, the numpy docs [discuss this difference](https://numpy.org/doc/stable/reference/generated/numpy.fft.rfft.html) in the returns API doc.\r\n\r\nIn fact looking at the line just a [bit down from the bug](https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/contrib_ops/cuda/math/fft_ops.cc#L107), its clear what the reverse calculation should be (the fix).\r\n\r\n\r\n## Minimal Example\r\n\r\n```\r\nimport torch\r\nimport onnxruntime as ort\r\nfrom torch.onnx.symbolic_helper import parse_args\r\nfrom torch.autograd import Function\r\n\r\nclass OnnxIrfft(Function):\r\n    \"\"\"Auto-grad function to mimic irfft for ONNX exporting\r\n    \"\"\"\r\n    @staticmethod\r\n    def forward(ctx, input:  torch.Tensor) ->  torch.Tensor:\r\n        return torch.fft.irfft(torch.view_as_complex(input), dim=-1, norm=\"backward\")\r\n\r\n    @staticmethod\r\n    def symbolic(g: torch.Graph, input: torch.Value) -> torch.Value:\r\n        \"\"\"Symbolic representation for onnx graph\"\"\"\r\n        return g.op(\r\n                \"com.microsoft::Irfft\",\r\n                input,\r\n                normalized_i=0,\r\n                onesided_i=1,\r\n                signal_ndim_i=1,\r\n            )\r\n\r\nclass FooModel(torch.nn.Module):\r\n    def __init__(self, ):\r\n        super(FooModel, self).__init__()\r\n\r\n    def forward(self, x):\r\n        # Calling custom op\r\n\r\n        if not torch.onnx.is_in_onnx_export():\r\n            out = torch.fft.irfft(torch.view_as_complex(input), dim=-1, norm=\"backward\")\r\n        else:\r\n            print('here')\r\n            out = OnnxIrfft.apply(x)\r\n        return out\r\n\r\n\r\ntorch.manual_seed(0)\r\n# RFFT and IRFFT only set up for even domains in PyTorch / ONNX\r\nx = torch.randn(4,4)\r\ninput_c = torch.fft.rfft(x, dim=-1, norm=\"backward\")\r\ninput = torch.view_as_real(input_c) # Complex tensors not supported for ONNX export\r\nmodel = FooModel()\r\n\r\n# Standard PyTorch\r\noutput = model(input)\r\n\r\n# ONNX RT\r\ntorch.onnx.export(model, (input), 'model.onnx')\r\noptions = ort.SessionOptions()\r\nort_sess = ort.InferenceSession('model.onnx', providers=[\"CUDAExecutionProvider\", 'CPUExecutionProvider'])\r\nort_inputs = {inp.name: v.detach().cpu().numpy()\r\n                for inp, v in zip(ort_sess.get_inputs(), (input,))}\r\nort_outputs = ort_sess.run(None, ort_inputs)\r\noutput_onnx = torch.Tensor(ort_outputs[0])\r\n\r\n\r\nprint(\"Input:\\n\", x, x.shape)\r\nprint(\"PyTorch Output:\\n\", output, output.shape)\r\nprint(\"ONNX Output:\\n\", output_onnx, output_onnx.shape)\r\n```\r\n\r\n## Outputs\r\n\r\nI am running in the [22.12 Pytorch docker container](https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch/tags). Using ORT `1.15.1`. Note that the output is as follows, all outputs should be the same:\r\n```\r\nInput:\r\n tensor([[-1.1258, -1.1524, -0.2506, -0.4339],\r\n        [ 0.8487,  0.6920, -0.3160, -2.1152],\r\n        [ 0.3223, -1.2633,  0.3500,  0.3081],\r\n        [ 0.1198,  1.2377,  1.1168, -0.2473]]) torch.Size([4, 4])\r\nPyTorch Output:\r\n tensor([[-1.1258, -1.1524, -0.2506, -0.4339],\r\n        [ 0.8487,  0.6920, -0.3160, -2.1152],\r\n        [ 0.3223, -1.2633,  0.3500,  0.3081],\r\n        [ 0.1198,  1.2377,  1.1168, -0.2473]]) torch.Size([4, 4])\r\nONNX Output:\r\n tensor([[-0.8587, -1.0419, -0.4523, -0.1144, -0.4953],\r\n        [ 1.0701,  0.4009,  0.3468, -0.9733, -1.7350],\r\n        [ 0.5833, -1.1845, -0.2159,  0.5230,  0.0112],\r\n        [ 0.1451,  0.8074,  1.1476,  0.4493, -0.3224]]) torch.Size([4, 5])\r\n```\r\n\r\nONNX output is incorrect and of the wrong size. \r\nI built a new wheel with the suggested fix implemented and now the example yields the expected output:\r\n```\r\nInput:\r\n tensor([[-1.1258, -1.1524, -0.2506, -0.4339],\r\n        [ 0.8487,  0.6920, -0.3160, -2.1152],\r\n        [ 0.3223, -1.2633,  0.3500,  0.3081],\r\n        [ 0.1198,  1.2377,  1.1168, -0.2473]]) torch.Size([4, 4])\r\nPyTorch Output:\r\n tensor([[-1.1258, -1.1524, -0.2506, -0.4339],\r\n        [ 0.8487,  0.6920, -0.3160, -2.1152],\r\n        [ 0.3223, -1.2633,  0.3500,  0.3081],\r\n        [ 0.1198,  1.2377,  1.1168, -0.2473]]) torch.Size([4, 4])\r\nONNX Output:\r\n tensor([[-1.1258, -1.1524, -0.2506, -0.4339],\r\n        [ 0.8487,  0.6920, -0.3160, -2.1152],\r\n        [ 0.3223, -1.2633,  0.3500,  0.3081],\r\n        [ 0.1198,  1.2377,  1.1168, -0.2473]]) torch.Size([4, 4])\r\n```\r\n\r\n\r\nThank you for the support!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1634800950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1648735099",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13236#issuecomment-1648735099",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13236",
        "id": 1648735099,
        "node_id": "IC_kwDOCVq1mM5iRbN7",
        "user": {
            "login": "NickGeneva",
            "id": 5533524,
            "node_id": "MDQ6VXNlcjU1MzM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5533524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickGeneva",
            "html_url": "https://github.com/NickGeneva",
            "followers_url": "https://api.github.com/users/NickGeneva/followers",
            "following_url": "https://api.github.com/users/NickGeneva/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickGeneva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickGeneva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickGeneva/subscriptions",
            "organizations_url": "https://api.github.com/users/NickGeneva/orgs",
            "repos_url": "https://api.github.com/users/NickGeneva/repos",
            "events_url": "https://api.github.com/users/NickGeneva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickGeneva/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-24T22:59:57Z",
        "updated_at": "2023-07-24T23:02:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "HI @justinchuby \r\n\r\nThanks for your very helpful responses over on the PyTorch repo: https://github.com/pytorch/pytorch/issues/105160\r\n\r\nAny chance you know who to ping for some action on this bug? (Its an easy one liner fix) https://github.com/microsoft/onnxruntime/pull/15662\r\n\r\nMany thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1648735099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]