[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/950424614",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-950424614",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 950424614,
        "node_id": "IC_kwDOCVq1mM44plQm",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-25T00:14:26Z",
        "updated_at": "2021-10-25T00:14:26Z",
        "author_association": "MEMBER",
        "body": "Added task to backlog. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/950424614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1051367049",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1051367049",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1051367049,
        "node_id": "IC_kwDOCVq1mM4-qpaJ",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-25T23:39:27Z",
        "updated_at": "2022-02-25T23:39:27Z",
        "author_association": "MEMBER",
        "body": "I  have the same concern. Even though ORT test ONNX  shape inference functions with every old ONNX opset, due to https://github.com/microsoft/onnxruntime/pull/2199 we can't notice such errors.  And when an shape inference error was thrown, I believe type inference is also interrupted. Then the model is useless, we can't run it.  So it's better to not ignore such errors. If there was something wrong, let's fix it. The ONNX community knows ORT is important, they valid their code with ORT before doing a release . This time it was handled by Liqun. So it's better to let it fail earlier. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1051367049/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1051422486",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1051422486",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1051422486,
        "node_id": "IC_kwDOCVq1mM4-q28W",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-26T01:30:27Z",
        "updated_at": "2022-02-26T01:30:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "@skottmckay would you approve a PR that makes strict enforcement the default, but lets people turn it off if they want? If not, what would you suggest instead?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1051422486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054697322",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1054697322",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1054697322,
        "node_id": "IC_kwDOCVq1mM4-3Wdq",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-28T21:48:47Z",
        "updated_at": "2022-02-28T21:51:11Z",
        "author_association": "MEMBER",
        "body": "Making strict the default with an option to disable would be nice, but if you do that you potentially break existing production scenarios if they upgrade ORT, until they discover they need to set a new value for their model for it to work again.  \r\n\r\nI believe this was what happened when I added the strict check originally. To try and balance that we went with strict checking of the latest opset (we should be implementing kernels and tests for the new opset so should discover ONNX shape inferencing issues during that process). \r\n\r\nDo users care if we fall back to the lenient merge? I don't know if they'd even notice this happening, so it could be that scenarios where strict checking is required are the minority, and it would be safer to keep the existing setup but add a SessionOptions config param to manually set strict mode to on. \r\n\r\n> And when an shape inference error was thrown, I believe type inference is also interrupted. Then the model is useless, we can't run it\r\n\r\nIf shape inference fails we fall back to a lenient merge. The model isn't necessarily useless. Type/shape inferencing continues on. We may have less info but it may not be that different in behavior to when you have symbolic dims flowing through the model - i.e. one or more dims may have an unknown value due to the lenient merge.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054697322/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054713302",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1054713302",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1054713302,
        "node_id": "IC_kwDOCVq1mM4-3aXW",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-28T22:12:32Z",
        "updated_at": "2022-02-28T22:12:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "@scottmckay as a user I would be OK if things break with an easy fix that's noted in the release notes. Would you be OK with a PR that does that?\r\n\r\nIf that's not acceptable, a session option to enable strict mode would be OK for the use case that originally prompted this bug. Would you approve a PR that does that?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054713302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054720587",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1054720587",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1054720587,
        "node_id": "IC_kwDOCVq1mM4-3cJL",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-28T22:23:00Z",
        "updated_at": "2022-02-28T22:23:00Z",
        "author_association": "MEMBER",
        "body": "@pranavsharma what are your thoughts? \r\n\r\nI'd definitely prefer to avoid breaking a working production scenario and forcing the user to find an additional configuration option in the release notes (which I'm sure they study in great depth :P) to fix it. \r\n\r\ne.g. we have 1P users running online services that load many different models at random times. This breaking behavior may not be triggered in their release testing, so we'd potential create a livesite when ORT starts intermittently crashing when executing models that previously worked fine. That's time to diagnose, time to mitigate, time to resolve, and if you're unlucky that's at 2am in the morning for the DRI.  \r\n\r\nI'm much more comfortable with the current behavior being preserved and a user being able to explicitly turn on strict mode for the session.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054720587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054732419",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1054732419",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1054732419,
        "node_id": "IC_kwDOCVq1mM4-3fCD",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-28T22:37:24Z",
        "updated_at": "2022-02-28T22:38:57Z",
        "author_association": "MEMBER",
        "body": "+1 to what Scott said. We've a pretty large deployment base now. We simply cannot afford a livesite esp. in revenue impacting online services. Breaking existing scenarios is not acceptable. I strongly suggest adding an option to enforce strict checking. This will have zero impact on our existing users while allowing us to enforce the check in our tests to uncover any hidden exporter issues (such as the one you identified) or elsewhere in the system.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1054732419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1055747321",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1055747321",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1055747321,
        "node_id": "IC_kwDOCVq1mM4-7Wz5",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-01T18:46:41Z",
        "updated_at": "2022-03-01T18:46:41Z",
        "author_association": "MEMBER",
        "body": "Scott's last change works because we **usually** put type inference in the first line of a type/shape inference function.  Otherwise, if an exception was thrown before the type inference is done, the behavior is undefined.  I think this is quite general: if you throw an exception when you modifies a graph, you can't expect the exception is recoverable.  Even the change is local to just one node. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1055747321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1059695537",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1059695537",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1059695537,
        "node_id": "IC_kwDOCVq1mM4_Kaux",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-05T05:32:58Z",
        "updated_at": "2022-03-05T05:32:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "I spent some time looking at this and could use some advice.\r\nIt seems like this might make sense as a `Graph` `ResolveOption`:\r\nhttps://github.com/microsoft/onnxruntime/blob/2679711bee9717f8ab77e20c163ddf2fe3a3f48d/include/onnxruntime/core/graph/graph.h#L1227\r\n\r\nHowever to get something from `SessionOptions` to the first call to `Resolve` seems tricky.\r\nIs it intentional that `Model::Model()` does not call `graph_->Resolve()` immediately after constructing it?\r\nE.g., here:\r\nhttps://github.com/microsoft/onnxruntime/blob/ec4362f8f326e076498ad2fde1aa44929b586f25/onnxruntime/core/graph/model.cc#L99\r\n\r\nIf we could call `graph_->Resolve()` there (and in the other constructor), then I propose:\r\n1. Add new bool to `SessionOptions`.\r\n2. Pass bool into `Model::Load()` calls from `inference_session.cc`.\r\n3. Pass bool into `Model::Model()`.\r\n4. Pass bool into `Graph::Resolve()` (via `ResolveOptions`).\r\n\r\nIf that is not acceptable, then another option would be to add the bool to `Graph::Graph()` constructor and have it save a member variable for use during `Resolve()`.\r\n\r\n(I tried setting it only [here](https://github.com/microsoft/onnxruntime/blob/d1b2fb15addaa369660d617c6d39595c00e2a963/onnxruntime/core/session/inference_session.cc#L1396) since that was minimally invasive, but it seems that Resolve() is often a no-op because the Graph has already been resolved)\r\n\r\n@skottmckay please advise.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1059695537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074375193",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1074375193",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1074375193,
        "node_id": "IC_kwDOCVq1mM5ACaoZ",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-21T20:15:38Z",
        "updated_at": "2022-03-21T20:15:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "@pranavsharma could you assign someone who could help advise me on this? See detailed questions above.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074375193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074441272",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1074441272",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1074441272,
        "node_id": "IC_kwDOCVq1mM5ACqw4",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-21T21:31:32Z",
        "updated_at": "2022-03-21T21:31:32Z",
        "author_association": "MEMBER",
        "body": "Would this be similar in expected usage to setting the environment variable to allow un-released ONNX opsets to be used? i.e. expert user/developer and not something a typical user would care about.\r\n\r\nIf so, would using an environment variable like we do here be an viable approach? \r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/4a5b5328a46d1a5a869a7cbeadd821fdddc70137/onnxruntime/core/graph/model_load_utils.h#L19-L38",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074441272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074749489",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1074749489",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1074749489,
        "node_id": "IC_kwDOCVq1mM5AD2Ax",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-22T05:45:07Z",
        "updated_at": "2022-03-22T05:45:07Z",
        "author_association": "MEMBER",
        "body": "The use of env variable for unreleased opsets was a bit special since we wanted to accommodate inflight changes in ONNX. If this functionality is going to be used only in your tests the usage of env variable is probably ok, but I would be a bit careful and rather suggest using a session option (at the cost of some plumbing between inference session and graph) because env variables are difficult to see when using the ORT API which can make debugging tricky. Having a single point of entry for ORT configs makes it easier to look in one place.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1074749489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1075481358",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1075481358",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1075481358,
        "node_id": "IC_kwDOCVq1mM5AGosO",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-22T18:27:51Z",
        "updated_at": "2022-03-22T18:27:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "I personally agree that env variable is not as nice. It's essentially a global variable that goes around the layers of code in a way that is hard to trace.\r\nBut I will be happy to implement this however the code owners here prefer, please just tell me what to do :-)\r\nIf we're not going with an env variable, please see my detailed questions above.\r\n\r\n@pranavsharma @skottmckay \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1075481358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1075516976",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1075516976",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1075516976,
        "node_id": "IC_kwDOCVq1mM5AGxYw",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-22T18:56:20Z",
        "updated_at": "2022-03-22T18:57:43Z",
        "author_association": "MEMBER",
        "body": "The determination to use strict mode or not is made using ```using_latest_onnx_opset_``` when calling ```MergeShapeInfo``` ([here](https://github.com/microsoft/onnxruntime/blob/f468ea40e59c6f3d7ca06c3d0c0b6d325c185602/onnxruntime/core/graph/graph.cc#L2368\r\n)). So, you could store this new override option in Graph as another member (```force_strict_shape_type_inferencing_```) and then call ```MergeShapeInfo(..., force_strict_shape_type_inferencing_|using_latest_onnx_opset_, ...)```. The default value of ```force_strict_shape_type_inferencing_```  should obviously be false.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1075516976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1076766750",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1076766750",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1076766750,
        "node_id": "IC_kwDOCVq1mM5ALige",
        "user": {
            "login": "yuanbyu",
            "id": 2342391,
            "node_id": "MDQ6VXNlcjIzNDIzOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2342391?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuanbyu",
            "html_url": "https://github.com/yuanbyu",
            "followers_url": "https://api.github.com/users/yuanbyu/followers",
            "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions",
            "organizations_url": "https://api.github.com/users/yuanbyu/orgs",
            "repos_url": "https://api.github.com/users/yuanbyu/repos",
            "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuanbyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-23T20:01:43Z",
        "updated_at": "2022-03-31T20:10:18Z",
        "author_association": "MEMBER",
        "body": "I think that we should minimize the use of env variables as much as possible.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1076766750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1077925979",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1077925979",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1077925979,
        "node_id": "IC_kwDOCVq1mM5AP9hb",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-24T18:33:07Z",
        "updated_at": "2022-03-24T18:33:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "@pranavsharma to be clear I'd add the bool to the `Graph::Graph()` constructor and have it save a member variable for use later, right? I think there are a lot of overloads of the constructor so this will be a bit of a larger change in practice than it sounds like but I'm happy to do it that way.\r\n\r\nIf not that, can you please clarify how the bool would get from SessionOptions to the call to `MergeShapeInfo` ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1077925979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1078090275",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1078090275",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1078090275,
        "node_id": "IC_kwDOCVq1mM5AQloj",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-24T20:00:23Z",
        "updated_at": "2022-03-24T20:00:23Z",
        "author_association": "MEMBER",
        "body": "> @pranavsharma to be clear I'd add the bool to the `Graph::Graph()` constructor and have it save a member variable for use later, right? I think there are a lot of overloads of the constructor so this will be a bit of a larger change in practice than it sounds like but I'm happy to do it that way.\r\n\r\nThere are only 3 Graph ctors where 2 of them delegate the call to the third. I can't think of any other way of plumbing the session option to the Graph class.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1078090275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1085189714",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/9506#issuecomment-1085189714",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/9506",
        "id": 1085189714,
        "node_id": "IC_kwDOCVq1mM5Arq5S",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-31T22:27:05Z",
        "updated_at": "2022-03-31T22:27:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "@pranavsharma sorry I guess it's the `Model` class that has a bunch of constructors and a bunch of Load functions, and the Model class is responsible for constructing the `Graph`. In any case I'll give it a shot.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1085189714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]