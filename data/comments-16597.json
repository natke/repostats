[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1622110737",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1622110737",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1622110737,
        "node_id": "IC_kwDOCVq1mM5gr3IR",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-05T16:35:30Z",
        "updated_at": "2023-07-05T16:35:30Z",
        "author_association": "MEMBER",
        "body": "Not sure if I followed, but it should be possible to have a custom loss function within the forward method. The backward propagation is automatically built from the forward",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1622110737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1622123770",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1622123770",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1622123770,
        "node_id": "IC_kwDOCVq1mM5gr6T6",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-05T16:44:45Z",
        "updated_at": "2023-07-05T16:44:45Z",
        "author_association": "MEMBER",
        "body": "[IzanCatalan](https://github.com/IzanCatalan) could you please elaborate on what you mean by \r\n\r\n> custom forward and backward propagation methods to modify the weights to force some of them to be determinate values?\r\n\r\nA couple of questions for you:\r\n\r\n1. Are you trying to train using ONNX Runtime?\r\n2. Do you already have an ONNX model (forward only or forward + loss + backward)?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1622123770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1623958421",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1623958421",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1623958421,
        "node_id": "IC_kwDOCVq1mM5gy6OV",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-06T16:18:34Z",
        "updated_at": "2023-07-06T16:18:34Z",
        "author_association": "NONE",
        "body": "Sorry for my poor description @baijumeswani @thiagocrepaldi , I will try to explain myself. \r\n\r\nCurrently, I have some pre-trained onnx models, some downloaded from OnnxModelZoo GitHub Repo (Resnet50,Vgg16...). These models are trained, and I can obtain the same accuracy specified on the git Repo (around 71% Top1 accuracy). I am also using OnnxRuntime to run these models and get de inference accuracy with ImageNet Dataset.\r\n\r\nMy question now is if it could be possible to re-train these models (not from the beginning) with some custom backward propagation and custom loss function. I want to do so to promote some values inside some weights during the training instead of normal training.\r\n\r\nI was searching, and I could find \"On device training\" option in OnnxRuntime Python API. Inside \"Advanced Usage\" there are also forward and training blocks. However, I am wondering if those functions are what I want. I need help to understand them.\r\n\r\nAny help or code example in this matter would be very helpful. \r\n\r\nThanks for your replies @thiagocrepaldi @baijumeswani , I hope with this explanation, I can clarify your doubts.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1623958421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1623988784",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1623988784",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1623988784,
        "node_id": "IC_kwDOCVq1mM5gzBow",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-06T16:42:17Z",
        "updated_at": "2023-07-06T16:42:17Z",
        "author_association": "MEMBER",
        "body": "Here is an example that uses the `MobileNetV2` model for training. It uses the default `SoftmaxCrossEntropyLoss` function and only trains the last classifier layer in the model:\r\n\r\nhttps://github.com/microsoft/onnxruntime-training-examples/tree/master/on_device_training/mobile/android/c-cpp\r\n\r\nYou can refer to the files for more details.\r\n\r\n1. [Offline tooling](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/prepare_for_training.ipynb)\r\n2. [Training phase](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/train.ipynb)\r\n\r\nIf your use case is more advanced than this, would you please describe what kind of loss function you want to use and what you mean by custom backward propagation?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1623988784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1640549423",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1640549423",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1640549423,
        "node_id": "IC_kwDOCVq1mM5hyMwv",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-18T16:25:53Z",
        "updated_at": "2023-07-27T00:36:57Z",
        "author_association": "NONE",
        "body": "Hi @baijumeswani, I have been testing and looking at the examples of your links. I have some doubts I would like to ask you:\r\n\r\n1) Is there any way to run the training on GPU? I tried to add \"gpu\" when creating the module, but it reports an error about an unsupported device gpu. Do I need to install some tools or import something? Because when building Onnxruntime everything was okay, without cuda or GPU errors:\r\n\r\n```python\r\nmodel = orttraining.Module(\r\n    \"training_artifacts/training_model.onnx\",\r\n    checkpoint_state,\r\n    \"training_artifacts/eval_model.onnx\",\r\n    \"gpu\",\r\n)\r\n```\r\n\r\nwith error:\r\n\r\n```\r\n  warnings.warn(f'Both `mxnet=={mx.__version__}` and `torch=={torch.__version__}` are installed. '\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 47, in <module>\r\n    model = orttraining.Module(\r\n  File \"/usr/local/lib/python3.8/dist-packages/onnxruntime/training/api/module.py\", line 53, in __init__\r\n    get_ort_device_type(self._device_type, device_id),\r\n  File \"/usr/local/lib/python3.8/dist-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 30, in get_ort_device_type\r\n    raise Exception(\"Unsupported device type: \" + device_type)\r\nException: Unsupported device type: gpu\r\n```\r\n---------------------------------------------------------------\r\n\r\n2) Related to how to train the new model. Inside your training loop, there are three steps: loss calculation, optimizer step, and reset gradients. Inside this loop, could I see or access the weights that are being modified? \r\n\r\nI try to explain myself. After every phase of updating gradients, losses, and optimizer (the main train loop of train.py file that you linked), I would like to access or modify the weights in order to see if their value is enough according to a target value calculated by me. In that case, the training would finish.\r\n\r\nThanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1640549423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1640559177",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1640559177",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1640559177,
        "node_id": "IC_kwDOCVq1mM5hyPJJ",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-18T16:33:15Z",
        "updated_at": "2023-07-18T16:33:15Z",
        "author_association": "MEMBER",
        "body": "1. Use `\"cuda\"` instead of `\"gpu\"`.\r\n2. Currently, we don't have a good mechanism to query the weights. The weights are a part of the `CheckpointState` and the plan is to add utility methods to access the weights and their gradient given an instance of the `CheckpointState`. Behind the scenes (in ort C++), the checkpoint state contains an unordered map of parameter name to the parameter value (which also contains the gradient information). However, as of now, this information is not exposed through python (or any other language binding for that matter). But we intend to add this functionality in the near future. I can try to see if I can get to it later this month/early next month.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1640559177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1642308059",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1642308059",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1642308059,
        "node_id": "IC_kwDOCVq1mM5h46Hb",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-19T15:29:54Z",
        "updated_at": "2023-07-19T15:39:51Z",
        "author_association": "NONE",
        "body": "Thanks for your help, @baijumeswani . Please let me know when you have any updates about this. Referencing your previous answer, at question 1,  I have changed \"gpu\" to \"cuda\", and now reports me a warning:\r\n\r\n2023-07-19 11:40:43.079052029 [W:onnxruntime:, session_state.cc:1162 VerifyEachNodeIsAssignedToAnEp] Some nodes were not assigned to the preferred execution providers which may or may not have an negative impact on performance. e.g. ORT explicitly assigns shape related ops to CPU to improve perf.\r\n2023-07-19 11:40:43.079101490 [W:onnxruntime:, session_state.cc:1164 VerifyEachNodeIsAssignedToAnEp] Rerunning with verbose output on a non-minimal build will show node assignments.\r\n\r\nThis is a standard warning with no performance issues, or must I add a flag or something else when creating training artifacts to prevent this warning? \r\n\r\nAbout question 2, I have been searching inside Python Api, and I wonder several things:\r\n\r\n1) Could I archive accessing the weight while training with Large Model Training? Perhaps this kind of training performs functions to access them like [ORTModule.parameters()](https://onnxruntime.ai/docs/api/python/ortmodule/api.html#onnxruntime.training.ORTModule.parameters) \r\n\r\n2) In On Device Training API, there are several functions for which I'm not sure of their purpose, and perhaps you could help me to understand them: \r\n- https://onnxruntime.ai/docs/api/python/on_device_training/training_api.html#onnxruntime.training.api.CheckpointState.__setitem__\r\n- https://onnxruntime.ai/docs/api/python/on_device_training/training_api.html#onnxruntime.training.api.Module.copy_buffer_to_parameters\r\n\r\nAny of those functions could help to achieve my purpose of accessing weights?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1642308059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1642374498",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1642374498",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1642374498,
        "node_id": "IC_kwDOCVq1mM5h5KVi",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-19T16:11:06Z",
        "updated_at": "2023-07-19T16:11:06Z",
        "author_association": "MEMBER",
        "body": "> 2023-07-19 11:40:43.079052029 [W:onnxruntime:, session_state.cc:1162 VerifyEachNodeIsAssignedToAnEp] Some nodes were not assigned to the preferred execution providers which may or may not have an negative impact on performance. e.g. ORT explicitly assigns shape related ops to CPU to improve perf.\r\n2023-07-19 11:40:43.079101490 [W:onnxruntime:, session_state.cc:1164 VerifyEachNodeIsAssignedToAnEp] Rerunning with verbose output on a non-minimal build will show node assignments.\r\n\r\n> This is a standard warning with no performance issues, or must I add a flag or something else when creating training artifacts to prevent this warning?\r\n\r\nThe ONNX model has several nodes. Each node (or a collection of nodes in some cases) maps to a kernel implementation. The kernel implementation can be written for cpu, gpu or both. When the kernel implementation is not available for a gpu, there is an implicit understanding that that op must be executed in cpu. Note that there could be other reasons that the execution is done on cpu as opposed to gpu as well.\r\nThis is what the warning message is saying. I think in most cases, this warning message can be ignored. \r\n\r\n> 1. Could I archive accessing the weight while training with Large Model Training? Perhaps this kind of training performs functions to access them like [ORTModule.parameters()](https://onnxruntime.ai/docs/api/python/ortmodule/api.html#onnxruntime.training.ORTModule.parameters)\r\n\r\nThe entry point to ORTModule and On-Device Training API is different, and they cannot be used together. As of now, there is no way to access the model parameters/gradients with On-Device Training APIs. I will add this functionality soon.\r\n\r\n\r\n> In On Device Training API, there are several functions for which I'm not sure of their purpose, and perhaps you could help me to understand them:\r\n\r\n> https://onnxruntime.ai/docs/api/python/on_device_training/training_api.html#onnxruntime.training.api.CheckpointState.__setitem__\r\n\r\nThis is used for adding custom properties. For example, if you want to add the epoch number to the checkpoint, or the best loss or some information that the user may want to save to the checkpoint for later retrieval.\r\n\r\nThis is also probably how I would envision being able to access the model parameters in the future. But as of now, the model parameters are not accessible through this.\r\n\r\n> https://onnxruntime.ai/docs/api/python/on_device_training/training_api.html#onnxruntime.training.api.Module.copy_buffer_to_parameters\r\n\r\nThis function was designed for the purpose of federated learning where the user might want to access all the model parameters (as a single buffer) to serialize and send to and from a central server.\r\n\r\nYou could use this function to access the model parameters. However, there is no demarcation information available in them. All the model parameters are returned as a single contiguous array and you want be able to tell which element belongs to which parameter. Having said that, if you know the size of each model parameter, you could decipher the demarcations on your end. Typically the order of the parameters is the same as the order of parameters in which the checkpoint was saved.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1642374498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652107671",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1652107671",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1652107671,
        "node_id": "IC_kwDOCVq1mM5ieSmX",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-26T16:03:23Z",
        "updated_at": "2023-07-26T16:37:33Z",
        "author_association": "NONE",
        "body": "Hello again @baijumeswani , I will look into everything you told me. In the meantime, I'm focused on training models following the python scripts in onnx-trainning-examples repo. Now, I am getting the following error when I try to retrain a resnet50 onnx model:\r\n\r\n[ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Invalid rank for input: target Got: 1 Expected: 2 Please fix either the inputs or the model.\r\n\r\nThis error appears when running the code \"loss += model(batch, labels)\"  according to the example in [Training phase](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/train.ipynb)\r\n\r\nI executed the jupyter notebooks, both [Offline tooling](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/prepare_for_training.ipynb) and [Training phase](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/train.ipynb). When running this example using Mobilenet pre-trained model from torchvision works fine, but when I use my resnet50 model fails, and I figured out the reason why. \r\n\r\nWhen I open in Netron the eval_model.onnx and the training_model.onnx created by the jupyter notebook, both have the next inputs:\r\n\r\nname: input  type: float32[batch,3,224,224]\r\nname: labels  type: int64[batch]\r\n\r\nWith this format, when calling to  \"loss += model(batch, labels)\", a label shape of 1 dimension is expected, so everything is okay.\r\n\r\nHowever, in my case, with two different resnet50 models from ONNX Model Zoo Repo (https://github.com/onnx/models/blob/main/vision/classification/resnet/model/resnet50-v1-12.onnx) and torchvision (https://pytorch.org/vision/0.14/models/generated/torchvision.models.resnet50.html#torchvision.models.resnet50), the inputs I obtained when creating the eval_model.onnx and the training_model.onnx (with the same code used in [Offline tooling](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/prepare_for_training.ipynb)) have the following shapes:\r\n\r\nname: data type: float32[N,3,224,224]\r\nname: target type: float32[N,1000]\r\n\r\nThe name 'data' is the name of the input in the resnet50 models, and the name 'input' is the name of the input in the mobilenetv2 model. However, I don't quite understand how the name for the labels changes from \"labels\" to \"target\" and what is more important, the change of shapes from [batch] to [N,1000]. \r\n\r\n'N' and 'batch' are different names for the batch size of the model. However, the number of dimensions is essential. It seems that when executing \"loss += model(batch, labels)\", it is expected the shape[N,1000] however, the labels don't have that shape because they only have the correct class prediction. The number 1000 is the total number of classes of Imagenet. I show you some pictures below.\r\n\r\nI would like to know how I can change the configuration of the training artifacts just to get in the eval_model.onnx and training model.onnx an expected shape of the labels that match de batch size, just like it is done with the jupiter notebook and with mobilentv2 model in [Offline tooling](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/prepare_for_training.ipynb).\r\n\r\nThanks for your help!\r\nMobilenet Model:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/f64f849d-d2f5-4e68-aed3-542c6413a561)\r\nMobilenet Training Model:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/01d149db-48e8-4bb4-a18a-870c98ecfef4)\r\n\r\nResnet50 Model:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/22b87bd5-577b-4ef2-bc53-2bf52a2a9979)\r\nResnet50 Training Model:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/b1137336-9988-4ebf-9d70-98f7a0707cab)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652107671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652484905",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1652484905",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1652484905,
        "node_id": "IC_kwDOCVq1mM5ifusp",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-26T20:57:52Z",
        "updated_at": "2023-07-26T20:57:52Z",
        "author_association": "MEMBER",
        "body": "Did you by any chance change the loss type? If you selected the loss type as CrossEntropyLoss, you should see the labels as input and not target.\r\nPerhaps you're using MSELoss or BCEWithLogitsLoss in your script?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652484905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652724290",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1652724290",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1652724290,
        "node_id": "IC_kwDOCVq1mM5igpJC",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-27T00:27:24Z",
        "updated_at": "2023-07-27T00:27:24Z",
        "author_association": "NONE",
        "body": "Yes, @baijumeswani  I was usign MSELoss, now I changed to CrossEntropyLoss and the shapes are okey, How is that possible just by changing the loss type? Does it mean that I cannot use MSELoss ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652724290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652733832",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1652733832",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1652733832,
        "node_id": "IC_kwDOCVq1mM5igreI",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-27T00:35:13Z",
        "updated_at": "2023-07-27T00:35:13Z",
        "author_association": "MEMBER",
        "body": "the definition of MSELoss is \r\n\r\n`reduce((target - y)^2)`.\r\n\r\nSo, target must be the same rank as y (the output of the model). MSELoss can typically be used when dealing with a regression task, while cross entropy loss is extensively used for the classification task.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1652733832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1653959331",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16597#issuecomment-1653959331",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16597",
        "id": 1653959331,
        "node_id": "IC_kwDOCVq1mM5ilWqj",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-27T16:29:39Z",
        "updated_at": "2023-07-28T08:55:27Z",
        "author_association": "NONE",
        "body": "Ah, okay, @baijumeswani, I got it.  Thanks again. However, I still need help to make the code work. I'm having trouble with an internal function of onnxruntime. When running the training, it reports a fail regarding a 0-dimension array. However, I use a code similar to [Mnist training](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/desktop/python/mnist.ipynb). I will show you some pictures of the code below.\r\n\r\nThe error happens when running the line \"train_loss, _ = model(*forward_inputs)\", having inside forward inputs the batch images and the label targets inside a list. I used exactly the same code. However, my dataset is loaded with a torch-vision imagenet loader module. I debug the code with the Python version of GDB called PDB, and then going step by step, I checked that the last line of the code before the failure is the one in /usr/local/lib/python3.8/dist-packages/onnxruntime/training/api/module.py:93 -> return fetches[0].numpy().\r\n\r\nThis is the trace of the error:\r\n\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 110, in <module>\r\n    train(epoch)\r\n  File \"train.py\", line 39, in train\r\n    train_loss, _ = model(*forward_inputs)\r\nTypeError: iteration over a 0-d array\r\n\r\n/usr/local/lib/python3.8/dist-packages/onnxruntime/training/api/module.py:93\r\n\r\n    def __call__(self, *user_inputs) -> tuple[np.ndarray] | np.ndarray:\r\n        \"\"\"Invokes either the training or the evaluation step of the model.\r\n\r\n        Args:\r\n            *user_inputs: The inputs to the model.\r\n        Returns:\r\n            The outputs of the model.\r\n        \"\"\"\r\n        is_np_input = False\r\n        forward_inputs = OrtValueVector()\r\n        forward_inputs.reserve(len(user_inputs))\r\n        for tensor in user_inputs:\r\n            if isinstance(tensor, np.ndarray):\r\n                is_np_input = True\r\n                forward_inputs.push_back(OrtValue.ortvalue_from_numpy(tensor)._ortvalue)\r\n            elif isinstance(tensor, OrtValue):\r\n                forward_inputs.push_back(tensor._ortvalue)\r\n            else:\r\n                raise ValueError(f\"Expected input of type: numpy array or OrtValue, actual: {type(tensor)}\")\r\n        fetches = OrtValueVector()\r\n\r\n        if self.training:\r\n            self._model.train_step(forward_inputs, fetches)\r\n        else:\r\n            self._model.eval_step(forward_inputs, fetches)\r\n\r\n        if len(fetches) == 1:\r\n            if is_np_input:\r\n                return fetches[0].numpy() --------->FAILS!!!\r\n\r\n            return fetches[0]\r\n\r\n        return tuple(val.numpy() for val in fetches) if is_np_input else tuple(fetches)\r\n\r\nI also have debugged what is inside fetches[0], and I compare the output with [Training phase](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/train.ipynb). Training notebook always works fine and when debugging throws the next output:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/5223f1b4-47e8-4cf6-b7fd-1f0eacf3bf14)\r\nI printed the shapes of the batch images and the labels for one epoch (it prints 20 times in total because 20 is the number of images per class with a batch size of 4 images (one for each class and 20 batches in total), and for each batch, a training step is done with \"loss+=model(data,label)\"). Below them is the length of 'fetches' and 'fetches[0]'. \r\n\r\nI don't know what it is, but it seems never the same number.  However, doing the same with my code only printed one number and failed when running return fetches[0].numpy:\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/5810e4cf-42a9-4372-bd0e-e5c25c971c22)\r\nSeems a little strange because it prints the number inside fetches[0] but later fails in the return. I don't know how to proceed because I believe I do training the correct way, with the proper shape in batch images and labels: (4, 3, 224, 224) and (4,), precisely the same as the [Training phase](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/mobile/android/c-cpp/train.ipynb) and  [Mnist training](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/desktop/python/mnist.ipynb) notebook. \r\n\r\nI need some help again to find the source of the problem. I let you with some pictures of my code. Thanks again!\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/9fc5733f-fb93-4ffd-b2e6-53f444bba94d)\r\n![imagen](https://github.com/microsoft/onnxruntime/assets/40836734/ede6a928-0c33-4c9c-a67f-e0f90873bd03)\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1653959331/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]