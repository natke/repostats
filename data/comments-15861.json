[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539414721",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15861#issuecomment-1539414721",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15861",
        "id": 1539414721,
        "node_id": "IC_kwDOCVq1mM5bwZrB",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-09T05:08:58Z",
        "updated_at": "2023-05-09T05:08:58Z",
        "author_association": "MEMBER",
        "body": "Your model is expecting float input but you're providing uint8 data. \r\n\r\n>     let inputTensor = try ORTValue(tensorData: NSMutableData(data: rgbData), elementType: ORTTensorElementDataType.uInt8, shape: inputShape)\r\n\r\nWhat model are you trying to run? Typically an image processing model expects the image data to be converted to float and normalized (after it's resized and cropped or letterboxed to match the model input height and width). If the model came from tensorflow the normalization would usually be to convert to float values in the range -1 to 1. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539414721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539512407",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15861#issuecomment-1539512407",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15861",
        "id": 1539512407,
        "node_id": "IC_kwDOCVq1mM5bwxhX",
        "user": {
            "login": "lmq5294249",
            "id": 16111670,
            "node_id": "MDQ6VXNlcjE2MTExNjcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16111670?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lmq5294249",
            "html_url": "https://github.com/lmq5294249",
            "followers_url": "https://api.github.com/users/lmq5294249/followers",
            "following_url": "https://api.github.com/users/lmq5294249/following{/other_user}",
            "gists_url": "https://api.github.com/users/lmq5294249/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lmq5294249/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lmq5294249/subscriptions",
            "organizations_url": "https://api.github.com/users/lmq5294249/orgs",
            "repos_url": "https://api.github.com/users/lmq5294249/repos",
            "events_url": "https://api.github.com/users/lmq5294249/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lmq5294249/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-09T06:26:54Z",
        "updated_at": "2023-05-09T06:27:45Z",
        "author_association": "NONE",
        "body": "I want to test this model in the IOS project using onnxruntime.\r\n[osnet_x0_75_msmt17_combineall.ort.zip](https://github.com/microsoft/onnxruntime/files/11427957/osnet_x0_75_msmt17_combineall.ort.zip)\r\nhttps://github.com/KaiyangZhou/deep-person-reid\r\n\r\nOn macos I can converted data to float like this  \r\nimg = cv2.imread(\"/Users/lin/Desktop/deep-person-reid/Data/other005.png\")\r\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\r\nimg = cv2.resize(img, (128, 256))\r\nimg = img.astype(np.float32)\r\nimg = (img / 255.0 - [0.485, 0.456, 0.406]) / [0.229, 0.224, 0.225]  # 图像归一化\r\ninput_data = img.transpose((2, 0, 1)).reshape(1, 3, 256, 128)\r\ninput_data = input_data.astype(np.float32)\r\noutputs = onnx_model.run(None, {\"images\": input_data})\r\noutputs = np.squeeze(outputs)\r\n\r\nbut in the IOS project, I can't find a way to converted data to float.\r\nThis is the first time to use onnxtuntime on the mobile device.\r\n@skottmckay ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539512407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539726873",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15861#issuecomment-1539726873",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15861",
        "id": 1539726873,
        "node_id": "IC_kwDOCVq1mM5bxl4Z",
        "user": {
            "login": "wejoncy",
            "id": 9417365,
            "node_id": "MDQ6VXNlcjk0MTczNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9417365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wejoncy",
            "html_url": "https://github.com/wejoncy",
            "followers_url": "https://api.github.com/users/wejoncy/followers",
            "following_url": "https://api.github.com/users/wejoncy/following{/other_user}",
            "gists_url": "https://api.github.com/users/wejoncy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wejoncy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wejoncy/subscriptions",
            "organizations_url": "https://api.github.com/users/wejoncy/orgs",
            "repos_url": "https://api.github.com/users/wejoncy/repos",
            "events_url": "https://api.github.com/users/wejoncy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wejoncy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-09T08:56:25Z",
        "updated_at": "2023-05-09T08:56:25Z",
        "author_association": "MEMBER",
        "body": "Can this resolve your issue?\r\nhttps://stackoverflow.com/questions/60561995/convert-array-of-int8-to-array-of-float-and-reverse-it",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1539726873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1541025677",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15861#issuecomment-1541025677",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15861",
        "id": 1541025677,
        "node_id": "IC_kwDOCVq1mM5b2i-N",
        "user": {
            "login": "YUNQIUGUO",
            "id": 35738743,
            "node_id": "MDQ6VXNlcjM1NzM4NzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/35738743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YUNQIUGUO",
            "html_url": "https://github.com/YUNQIUGUO",
            "followers_url": "https://api.github.com/users/YUNQIUGUO/followers",
            "following_url": "https://api.github.com/users/YUNQIUGUO/following{/other_user}",
            "gists_url": "https://api.github.com/users/YUNQIUGUO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YUNQIUGUO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YUNQIUGUO/subscriptions",
            "organizations_url": "https://api.github.com/users/YUNQIUGUO/orgs",
            "repos_url": "https://api.github.com/users/YUNQIUGUO/repos",
            "events_url": "https://api.github.com/users/YUNQIUGUO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YUNQIUGUO/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-09T23:43:30Z",
        "updated_at": "2023-05-09T23:45:10Z",
        "author_association": "MEMBER",
        "body": "Not sure if it exactly fits your case, here's some sample code that might help:\r\n\r\n```\r\n// Step 1: Load PNG image data\r\nguard let imagePath = Bundle.main.path(forResource: \"your_image\", ofType: \"png\") else {\r\n    fatalError(\"Failed to find the PNG image\")\r\n}\r\n\r\nguard let imageData = NSData(contentsOfFile: imagePath) else {\r\n    fatalError(\"Failed to load PNG image data\")\r\n}\r\n\r\n// Step 2: Convert image data to UIImage\r\nguard let image = UIImage(data: imageData as Data) else {\r\n    fatalError(\"Failed to create UIImage from image data\")\r\n}\r\n\r\n// Step 3: Convert image from BGR to RGB\r\nguard let cgImage = image.cgImage else {\r\n    fatalError(\"Failed to convert UIImage to CGImage\")\r\n}\r\n\r\nlet colorSpace = CGColorSpaceCreateDeviceRGB()\r\n\r\nlet bitmapInfo: CGBitmapInfo = [\r\n        CGBitmapInfo(rawValue: CGImageAlphaInfo.noneSkipLast.rawValue),\r\n        CGBitmapInfo(rawValue: CGBitmapInfo.byteOrder32Little.rawValue)\r\n]\r\n    \r\nguard let context = CGContext(data: nil, width: cgImage.width, height: cgImage.height, bitsPerComponent: 8, bytesPerRow: 4 * cgImage.width, space: colorSpace, bitmapInfo: bitmapInfo.rawValue) else {\r\n    fatalError(\"Failed to create CGContext\")\r\n}\r\n\r\ncontext.draw(cgImage, in: CGRect(x: 0, y: 0, width: cgImage.width, height: cgImage.height))\r\n\r\n// Step 4: Resize the image\r\nlet desiredSize = CGSize(width: 500, height: 500) // Set your desired dimensions\r\nlet renderer = UIGraphicsImageRenderer(size: desiredSize)\r\nlet resizedImage = renderer.image { context in\r\n    let cgImage = context.cgContext.makeImage()\r\n    context.cgContext.draw(cgImage!, in: CGRect(origin: .zero, size: desiredSize))\r\n}\r\n\r\n// Step 5: Convert the resized image to a float buffer\r\nguard let resizedCGImage = resizedImage.cgImage else {\r\n    fatalError(\"Failed to convert UIImage to CGImage\")\r\n}\r\n// repeat to create context for resized image again\r\nlet width = resizedCGImage.width\r\nlet height = resizedCGImage.height\r\nlet bytesPerPixel = 4 // Assuming 32 bits per pixel (8 bits per channel for RGB + 8-bit alpha)\r\nlet bytesPerRow = bytesPerPixel * width\r\n\r\nguard let resizedContext = CGContext(data: nil, width: width, height: height, bitsPerComponent: 8, bytesPerRow: bytesPerRow, space: colorSpace, bitmapInfo: bitmapInfo.rawValue) else {\r\n    fatalError(\"Failed to create CGContext\")\r\n}\r\n\r\nresizedContext.draw(resizedCGImage, in: CGRect(x: 0, y: 0, width: width, height: height))\r\n\r\nguard let pixelData = resizedContext.data\r\n\r\nlet floatData = NSMutableData(bytes: pixelData, length: bytesPerRow * height)\r\n\r\n// Use this NSData to make ORTTensor value\r\nlet inputTensor = try ORTValue(tensorData: floatData, elementType: ORTTensorElementDataType.float,\r\n                                                      shape: inputShape)\r\n```\r\n\r\nalso, after we include ort extensions support for pre/post-processing it would be much easier and direct to do this in the ios swift app for object detection scenario.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1541025677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]