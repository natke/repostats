[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1304157933",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1304157933",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1304157933,
        "node_id": "IC_kwDOCVq1mM5Nu97t",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-04T20:16:52Z",
        "updated_at": "2022-11-04T20:16:52Z",
        "author_association": "MEMBER",
        "body": "Thanks for providing this feedback and filing the feature request. \r\nIt is possible to ship engine files with the application by pre-generating them and then specifying the path to the engine files at runtime.\r\nI admit it is a bit ad hoc, and it would be nice to support a cleaner offline engine creation workflow.\r\nCan you provide some more details/examples about the finer grain control you want to see (that is available via trtexec) \r\nfor the TRT cache handling, we weren't trying to make it a black box. We will strive to make it more transparent. Would some documentation help? Any other suggestions to help make it more transparent are welcome.\r\n+@stevenlix",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1304157933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1305701924",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1305701924",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1305701924,
        "node_id": "IC_kwDOCVq1mM5N024k",
        "user": {
            "login": "contentis",
            "id": 29352092,
            "node_id": "MDQ6VXNlcjI5MzUyMDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/29352092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/contentis",
            "html_url": "https://github.com/contentis",
            "followers_url": "https://api.github.com/users/contentis/followers",
            "following_url": "https://api.github.com/users/contentis/following{/other_user}",
            "gists_url": "https://api.github.com/users/contentis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/contentis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/contentis/subscriptions",
            "organizations_url": "https://api.github.com/users/contentis/orgs",
            "repos_url": "https://api.github.com/users/contentis/repos",
            "events_url": "https://api.github.com/users/contentis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/contentis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-07T14:31:22Z",
        "updated_at": "2022-11-07T14:31:22Z",
        "author_association": "NONE",
        "body": "One feature especially that trtexec has is the option to disable resource tactics. E.g. CUDNN\r\nThis is something that is done more often to reduce the binary size (cuDNN +gb) and only compromises little performance. \r\nWith TRT you also might not want to first get an ONNX model and then compile the engine out of it but directly go from python code to engine / define your graph manually. \r\n\r\nGenerally, I think keeping engine compilation and inference (ORT) separate is a cleaner approach. Currently, there is not really an incentive for people to use TRT + ORT instead of using the TRT runtime API in standalone. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1305701924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1367348200",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1367348200",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1367348200,
        "node_id": "IC_kwDOCVq1mM5RgBPo",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-29T14:07:32Z",
        "updated_at": "2022-12-29T14:08:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "strong +1 @contentis\r\n\r\nWith `trtexec` I can pass for example `--minShapes=input_ids:1x10,attention_mask:1x10 --optShapes=input_ids:1x12,attention_mask:1x12 --maxShapes=input_ids:1x19,attention_mask:1x19` that is very quick to build the engine, while building the engine with `session.run()` is done each time and very slow, so for example for autogenerative tasks building the engine takes forever cc @stevenlix @jywu-msft .\r\n\r\nRelated https://github.com/huggingface/optimum/issues/606 https://github.com/huggingface/optimum/issues/605\r\n\r\nFor example with gpt2 generation (the `took:` gives the time taken by `session.run()` in seconds), without reusing past key/values:\r\n```\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 10)\r\nattention_mask (1, 10)\r\ntook: 23.769636154174805\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 11)\r\nattention_mask (1, 11)\r\ntook: 48.19532656669617\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 12)\r\nattention_mask (1, 12)\r\ntook: 49.167895555496216\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 13)\r\nattention_mask (1, 13)\r\ntook: 49.58247900009155\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 14)\r\nattention_mask (1, 14)\r\ntook: 47.33034324645996\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 15)\r\nattention_mask (1, 15)\r\ntook: 46.33792042732239\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 16)\r\nattention_mask (1, 16)\r\ntook: 48.12443137168884\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 17)\r\nattention_mask (1, 17)\r\ntook: 69.13102579116821\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611,  345]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 18)\r\nattention_mask (1, 18)\r\ntook: 70.63710856437683\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611,  345,  821]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 19)\r\nattention_mask (1, 19)\r\ntook: 68.33463191986084\r\n------\r\nReplace me by any text you'd like.\r\n\r\nI'm not sure if you're aware\r\n```\r\n\r\nAnd once the engine is built, we get:\r\n```\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 10)\r\nattention_mask (1, 10)\r\ntook: 0.003805875778198242\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 11)\r\nattention_mask (1, 11)\r\ntook: 0.004013776779174805\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 12)\r\nattention_mask (1, 12)\r\ntook: 0.0039560794830322266\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 13)\r\nattention_mask (1, 13)\r\ntook: 0.003964662551879883\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 14)\r\nattention_mask (1, 14)\r\ntook: 0.004000663757324219\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 15)\r\nattention_mask (1, 15)\r\ntook: 0.0040628910064697266\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 16)\r\nattention_mask (1, 16)\r\ntook: 0.004026651382446289\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 17)\r\nattention_mask (1, 17)\r\ntook: 0.004216909408569336\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611,  345]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 18)\r\nattention_mask (1, 18)\r\ntook: 0.0042133331298828125\r\n------\r\nonnx_inputs: {'input_ids': array([[3041, 5372,  502,  416,  597, 2420,  345, 1549,  588,   13,  198,\r\n         198,   40, 1101,  407, 1654,  611,  345,  821]]), 'attention_mask': array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\ninput_ids (1, 19)\r\nattention_mask (1, 19)\r\ntook: 0.004229068756103516\r\n------\r\nReplace me by any text you'd like.\r\n\r\nI'm not sure if you're aware\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1367348200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1368753518",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1368753518",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1368753518,
        "node_id": "IC_kwDOCVq1mM5RlYVu",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-02T09:01:28Z",
        "updated_at": "2023-01-02T09:01:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "A suggestion: TensorrtExecutionProvider generates a `.engine` file for each subgraph executed on the provider. The naming is automatic: https://github.com/microsoft/onnxruntime/blob/613920d6c5f53a8e5e647c5f1dcdecb0a8beef31/onnxruntime/core/providers/tensorrt/tensorrt_execution_provider.cc#L744-L750\r\n\r\nAnd the provider option `trt_engine_cache_path` expects a directory. Therefore, if I have previously built the engine with `trtexec`, I can not pass:\r\n\r\n```python\r\nprovider_options = {\r\n    \"trt_engine_cache_enable\": True,\r\n    \"trt_engine_cache_path\": \"/path/to/gpt2_onnx/gpt2_trt.engine\"\r\n}\r\n```\r\n\r\nbecause ONNX Runtime assumes that the graph may be broken in several pieces, and won't recognize my `.engine` file as the right ones (something like `TensorrtExecutionProvider_TRTKernel_graph_torch_jit_11146379831831262227_1_0.engine` is expected for the caching to work).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1368753518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1368868079",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1368868079",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1368868079,
        "node_id": "IC_kwDOCVq1mM5Rl0Tv",
        "user": {
            "login": "gedoensmax",
            "id": 44298237,
            "node_id": "MDQ6VXNlcjQ0Mjk4MjM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/44298237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gedoensmax",
            "html_url": "https://github.com/gedoensmax",
            "followers_url": "https://api.github.com/users/gedoensmax/followers",
            "following_url": "https://api.github.com/users/gedoensmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/gedoensmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gedoensmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gedoensmax/subscriptions",
            "organizations_url": "https://api.github.com/users/gedoensmax/orgs",
            "repos_url": "https://api.github.com/users/gedoensmax/repos",
            "events_url": "https://api.github.com/users/gedoensmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gedoensmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-02T11:33:35Z",
        "updated_at": "2023-01-02T11:33:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "I second @fxmarty furthermore providing an explicit engine path instead of a directory could enable following cases:\r\n1. File existst: Engine is loaded without any checks and also does not require deserialization of the ONNX file and optimization which can be time consuming during setup:\r\n2. Files does not exist: Usual behavior of creating the engine from an ONNX file but instead of hashing it to construct the name, the given path is used.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1368868079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1372797803",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1372797803",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1372797803,
        "node_id": "IC_kwDOCVq1mM5R0ztr",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T21:27:15Z",
        "updated_at": "2023-01-05T21:27:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Related: https://github.com/microsoft/onnxruntime/issues/13851",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1372797803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1426996311",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1426996311",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1426996311,
        "node_id": "IC_kwDOCVq1mM5VDjxX",
        "user": {
            "login": "baoachun",
            "id": 22114318,
            "node_id": "MDQ6VXNlcjIyMTE0MzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22114318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baoachun",
            "html_url": "https://github.com/baoachun",
            "followers_url": "https://api.github.com/users/baoachun/followers",
            "following_url": "https://api.github.com/users/baoachun/following{/other_user}",
            "gists_url": "https://api.github.com/users/baoachun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baoachun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baoachun/subscriptions",
            "organizations_url": "https://api.github.com/users/baoachun/orgs",
            "repos_url": "https://api.github.com/users/baoachun/repos",
            "events_url": "https://api.github.com/users/baoachun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baoachun/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-12T10:31:09Z",
        "updated_at": "2023-02-12T10:31:09Z",
        "author_association": "NONE",
        "body": "Agreed, I have the same need now.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1426996311/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1427435145",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1427435145",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1427435145,
        "node_id": "IC_kwDOCVq1mM5VFO6J",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-13T06:52:34Z",
        "updated_at": "2023-02-13T06:52:34Z",
        "author_association": "MEMBER",
        "body": "> I second @fxmarty furthermore providing an explicit engine path instead of a directory could enable following cases:\r\n> \r\n> 1. File existst: Engine is loaded without any checks and also does not require deserialization of the ONNX file and optimization which can be time consuming during setup:\r\n> 2. Files does not exist: Usual behavior of creating the engine from an ONNX file but instead of hashing it to construct the name, the given path is used.\r\n\r\nif there are multiple engine files corresponding to different subgraphs, how would the user specify which engine corresponds to which subgraph?\r\nor do we assume if the user specifies an engine file, there is a single graph (meaning native TensorRT supports the entire onnx model) ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1427435145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1427441599",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1427441599",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1427441599,
        "node_id": "IC_kwDOCVq1mM5VFQe_",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-13T06:59:45Z",
        "updated_at": "2023-02-13T06:59:45Z",
        "author_association": "MEMBER",
        "body": "+@chilo-ms FYI on this thread\r\nwe are working with @gedoensmax to see how to make trtexec more interoperable with onnxruntime-trt.\r\nAppreciate others' feedback/suggestions as well!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1427441599/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1428014932",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1428014932",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1428014932,
        "node_id": "IC_kwDOCVq1mM5VHcdU",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-13T14:17:32Z",
        "updated_at": "2023-02-13T14:17:32Z",
        "author_association": "MEMBER",
        "body": "> > I second @fxmarty furthermore providing an explicit engine path instead of a directory could enable following cases:\r\n> > \r\n> > 1. File existst: Engine is loaded without any checks and also does not require deserialization of the ONNX file and optimization which can be time consuming during setup:\r\n> > 2. Files does not exist: Usual behavior of creating the engine from an ONNX file but instead of hashing it to construct the name, the given path is used.\r\n> \r\n> if there are multiple engine files corresponding to different subgraphs, how would the user specify which engine corresponds to which subgraph? or do we assume if the user specifies an engine file, there is a single graph (meaning native TensorRT supports the entire onnx model) ?\r\n\r\nI suppose if trtexec generated the engine file, that means TensorRT fully supports the onnx graph.\r\nmy main concern is whether we can blindly load an engine file. TRT engine files aren't portable and what if it wasn't even generated from an ONNX graph to begin with?\r\nthe hashing in onnxruntime aims to provide some safety checks to ensure the engine matches an ONNX graph/subgraph, and the versions of TensorRT, ORT, CUDA etc. are the same. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1428014932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1451892423",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13559#issuecomment-1451892423",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13559",
        "id": 1451892423,
        "node_id": "IC_kwDOCVq1mM5Wih7H",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-02T13:48:29Z",
        "updated_at": "2023-03-02T13:48:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jywu-msft Could we expect the user to provide a valid TRT engine file (i.e., generated on the same device for example)?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1451892423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]