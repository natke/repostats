[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/600521109",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3247#issuecomment-600521109",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3247",
        "id": 600521109,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDUyMTEwOQ==",
        "user": {
            "login": "briliantnugraha",
            "id": 9381132,
            "node_id": "MDQ6VXNlcjkzODExMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9381132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/briliantnugraha",
            "html_url": "https://github.com/briliantnugraha",
            "followers_url": "https://api.github.com/users/briliantnugraha/followers",
            "following_url": "https://api.github.com/users/briliantnugraha/following{/other_user}",
            "gists_url": "https://api.github.com/users/briliantnugraha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/briliantnugraha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/briliantnugraha/subscriptions",
            "organizations_url": "https://api.github.com/users/briliantnugraha/orgs",
            "repos_url": "https://api.github.com/users/briliantnugraha/repos",
            "events_url": "https://api.github.com/users/briliantnugraha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/briliantnugraha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-18T09:43:44Z",
        "updated_at": "2020-03-18T09:43:44Z",
        "author_association": "NONE",
        "body": "Hi, I solved this by _**adding model.eval() before input_dummy and relative tolerance 1e-3 on np.allclose**_\r\n\r\nit will look like this\r\n```\r\nimport onnxruntime as rt\r\nimport numpy as np\r\nimport torch\r\nimport torchvision.models as models\r\n\r\npathmodel = \"mobilenetv2.onnx\"\r\n\r\nprint('f. Define mobilenet pytorch...')\r\nmodel = models.mobilenet_v2(pretrained=True)\r\nmodel.eval()\r\ninput_dummy = torch.randn(1, 3, 224, 224, requires_grad=True)\r\ntorch_out = model(input_dummy)#.cpu().numpy()\r\ntorch_out = torch_out.cpu().detach().numpy()\r\n\r\n# Export the model\r\ntorch.onnx.export(model, input_dummy, pathmodel, verbose=False, \r\n                  input_names = ['input'],   # the model's input names\r\n                  output_names = ['output'],\r\n                  do_constant_folding=True, opset_version=10)\r\n\r\n\r\nprint('g. Define session onnxruntime...')\r\nsess = rt.InferenceSession(pathmodel)\r\n\r\n\r\nprint('h. Define session input name...')\r\ninput1 = sess.get_inputs()[0].name\r\n\r\n\r\nprint('i. Run sess.run...')\r\nonnxrt_out = sess.run(None, {input1: input_dummy.cpu().detach().numpy().astype(np.float32)})[0]\r\n\r\n\r\ncompare_out = np.allclose(torch_out, onnxrt_out,  rtol=1e-03)\r\nprint('compare_out: ', compare_out )\r\n```\r\nand the opset_version needs to be 11 (to solve resize): [Dissimilar ONNX converted result](https://github.com/pytorch/pytorch/issues/22906)\r\n\r\nThank you~",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/600521109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/601321722",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/3247#issuecomment-601321722",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3247",
        "id": 601321722,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTMyMTcyMg==",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2020-03-19T17:44:39Z",
        "updated_at": "2020-03-19T17:44:39Z",
        "author_association": "MEMBER",
        "body": "@briliantnugraha Glad you were able to solve it. If you don't have any more questions, please go ahead and close the issue. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/601321722/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]