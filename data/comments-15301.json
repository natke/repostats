[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1491882124",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1491882124",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1491882124,
        "node_id": "IC_kwDOCVq1mM5Y7FCM",
        "user": {
            "login": "pauldog",
            "id": 33497043,
            "node_id": "MDQ6VXNlcjMzNDk3MDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/33497043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauldog",
            "html_url": "https://github.com/pauldog",
            "followers_url": "https://api.github.com/users/pauldog/followers",
            "following_url": "https://api.github.com/users/pauldog/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauldog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauldog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauldog/subscriptions",
            "organizations_url": "https://api.github.com/users/pauldog/orgs",
            "repos_url": "https://api.github.com/users/pauldog/repos",
            "events_url": "https://api.github.com/users/pauldog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauldog/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T12:53:25Z",
        "updated_at": "2023-03-31T12:53:25Z",
        "author_association": "NONE",
        "body": "Sorry, this might be a silly question, but why do you have multiple sessions for the same model?\r\nWhy not have just one session and run things in batches?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1491882124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492075366",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492075366",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492075366,
        "node_id": "IC_kwDOCVq1mM5Y70Nm",
        "user": {
            "login": "leugenea",
            "id": 534699,
            "node_id": "MDQ6VXNlcjUzNDY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/534699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leugenea",
            "html_url": "https://github.com/leugenea",
            "followers_url": "https://api.github.com/users/leugenea/followers",
            "following_url": "https://api.github.com/users/leugenea/following{/other_user}",
            "gists_url": "https://api.github.com/users/leugenea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leugenea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leugenea/subscriptions",
            "organizations_url": "https://api.github.com/users/leugenea/orgs",
            "repos_url": "https://api.github.com/users/leugenea/repos",
            "events_url": "https://api.github.com/users/leugenea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leugenea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T15:03:30Z",
        "updated_at": "2023-03-31T15:03:30Z",
        "author_association": "NONE",
        "body": "> Sorry, this might be a silly question, but why do you have multiple sessions for the same model? Why not have just one session and run things in batches?\r\n\r\nI must maintain latency of model replies so I cannot use batches.\r\nI want to have a pool of workers so I assume each worker must have it's own `Session` instance.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492075366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492338240",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492338240",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492338240,
        "node_id": "IC_kwDOCVq1mM5Y80ZA",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T17:33:10Z",
        "updated_at": "2023-03-31T17:33:10Z",
        "author_association": "MEMBER",
        "body": "You don't have to create multiple sessions for the same model; it's a huge waste of resources. Create only one session and reuse the same in different run threads. It's designed for concurrent runs.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492338240/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492556386",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492556386",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492556386,
        "node_id": "IC_kwDOCVq1mM5Y9ppi",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T20:10:35Z",
        "updated_at": "2023-03-31T20:10:35Z",
        "author_association": "NONE",
        "body": "I actually have a similar issue. I'm finetuning a base T5 model for multiple tasks using [LoRA](https://github.com/huggingface/peft/blob/main/src/peft/tuners/lora.py) so the majority of the weights are going to be the same between my sessions. I'm successfully using `AddInitializers` to replace the existing weights at runtime with the task-specific LoRA weights, but I'd like to run multiple tasks without blowing up memory so I was thinking of using this same method to create multiple session instances that shared the overlapping weights (i.e all weights besides the LorA weights)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492556386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492609538",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492609538",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492609538,
        "node_id": "IC_kwDOCVq1mM5Y92oC",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T21:08:10Z",
        "updated_at": "2023-03-31T21:08:10Z",
        "author_association": "NONE",
        "body": "Thinking about this more, I'm not sure it'll work b/c the lora initializers have the same id's between tasks so they'll conflict when using `AddInitializers`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492609538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492756700",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492756700",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492756700,
        "node_id": "IC_kwDOCVq1mM5Y-ajc",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-01T00:26:45Z",
        "updated_at": "2023-04-01T00:26:45Z",
        "author_association": "MEMBER",
        "body": "Not sure why it wouldn't work. Can you elaborate? A 1P team has the exact same use case (same weights across hundreds of models) and is using this API successfully. The AddInitializer API is only concerned with the raw bytes assuming the name used is the same as that in the model.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492756700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492955170",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492955170",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492955170,
        "node_id": "IC_kwDOCVq1mM5Y_LAi",
        "user": {
            "login": "leugenea",
            "id": 534699,
            "node_id": "MDQ6VXNlcjUzNDY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/534699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leugenea",
            "html_url": "https://github.com/leugenea",
            "followers_url": "https://api.github.com/users/leugenea/followers",
            "following_url": "https://api.github.com/users/leugenea/following{/other_user}",
            "gists_url": "https://api.github.com/users/leugenea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leugenea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leugenea/subscriptions",
            "organizations_url": "https://api.github.com/users/leugenea/orgs",
            "repos_url": "https://api.github.com/users/leugenea/repos",
            "events_url": "https://api.github.com/users/leugenea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leugenea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-01T12:17:18Z",
        "updated_at": "2023-04-01T12:17:18Z",
        "author_association": "NONE",
        "body": "> You don't have to create multiple sessions for the same model; it's a huge waste of resources. Create only one session and reuse the same in different run threads. It's designed for concurrent runs.\r\n\r\nBut this way every `Run` must have it's own buffers as well as it's own thread pool. Isn't it a huge waste of resources too? I mean threads creation, memory allocations/deallocations, memory fragmentation.\r\nIn my opinion having shared weights across multiple sessions but buffers/thread pools as session \"state\" seems a lot more optimal.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492955170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492963557",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1492963557",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1492963557,
        "node_id": "IC_kwDOCVq1mM5Y_NDl",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-01T12:59:50Z",
        "updated_at": "2023-04-01T12:59:50Z",
        "author_association": "NONE",
        "body": "> Not sure why it wouldn't work. Can you elaborate? A 1P team has the exact same use case (same weights across hundreds of models) and is using this API successfully. The AddInitializer API is only concerned with the raw bytes assuming the name used is the same as that in the model.\r\n\r\nMy current working pipeline for a single session instance is: fintune T5 with LoRA for multiple tasks, convert each finetuned task model to onnx, extract and save the LoRA intializers for each task (they have the same names across all tasks), pass just one of these finetuned onnx models to ORT (because everything is the same between tasks besides lora initializers) and then in ORT: load a set of task-specifc LoRA initializers and then use `AddInitializer` to override the existing ones in the T5 model. \r\n\r\nThis works fine for a single model but let's say I wanted to run two sessions in parallel. I don't have the memory allowance to spin up two full instances of the T5 model but because two finetuned T5 models share 99% of the same initializers the `AddInitializers` seemed like a great solution. However, as I mentioned above, the LoRA initializers have the same names regardless of task so this breaks my method of loading them from file for each task and using `AddInitializer` to override the existing ones. \r\n\r\nSorry if this is a bit confusing. Lmk if I can clarify anything",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1492963557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493767082",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1493767082",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1493767082,
        "node_id": "IC_kwDOCVq1mM5ZCROq",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T06:43:44Z",
        "updated_at": "2023-04-03T06:43:44Z",
        "author_association": "MEMBER",
        "body": "> > You don't have to create multiple sessions for the same model; it's a huge waste of resources. Create only one session and reuse the same in different run threads. It's designed for concurrent runs.\r\n> \r\n> But this way every `Run` must have it's own buffers as well as it's own thread pool. Isn't it a huge waste of resources too? I mean threads creation, memory allocations/deallocations, memory fragmentation. In my opinion having shared weights across multiple sessions but buffers/thread pools as session \"state\" seems a lot more optimal.\r\n\r\nThere's only 1 threadpool and one arena allocator per session. Memory planning for tensors, etc, is done only once when creating and initializing the session. There's only one copy of the weights in the session obj. It's in your best interest to share the same session obj between multiple threads.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493767082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493778539",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1493778539",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1493778539,
        "node_id": "IC_kwDOCVq1mM5ZCUBr",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T06:55:51Z",
        "updated_at": "2023-04-03T06:55:51Z",
        "author_association": "MEMBER",
        "body": "@brian-pieces Sorry, not following this statement \"this breaks my method of loading them from file for each task and using AddInitializer to override the existing ones.\". What method are you using to load them?\r\n\r\nI assume you've externalized the shared weights for each onnx file. By this I mean you've converted the onnx file such that they refer to external files for these shared weights. Now, it's a matter of just loading these external files once (outside ORT) and supplying the memory pointer to ORT for each session using the AddInitializer API. The name of the weight used should be the same as that used in the model files. They can be the same across all model files since the session is scoped per onnx model. If this is not clear, may be a repro might help.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493778539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493833082",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1493833082",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1493833082,
        "node_id": "IC_kwDOCVq1mM5ZChV6",
        "user": {
            "login": "leugenea",
            "id": 534699,
            "node_id": "MDQ6VXNlcjUzNDY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/534699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leugenea",
            "html_url": "https://github.com/leugenea",
            "followers_url": "https://api.github.com/users/leugenea/followers",
            "following_url": "https://api.github.com/users/leugenea/following{/other_user}",
            "gists_url": "https://api.github.com/users/leugenea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leugenea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leugenea/subscriptions",
            "organizations_url": "https://api.github.com/users/leugenea/orgs",
            "repos_url": "https://api.github.com/users/leugenea/repos",
            "events_url": "https://api.github.com/users/leugenea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leugenea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T07:42:01Z",
        "updated_at": "2023-04-03T07:42:01Z",
        "author_association": "NONE",
        "body": "> > > You don't have to create multiple sessions for the same model; it's a huge waste of resources. Create only one session and reuse the same in different run threads. It's designed for concurrent runs.\r\n> > \r\n> > \r\n> > But this way every `Run` must have it's own buffers as well as it's own thread pool. Isn't it a huge waste of resources too? I mean threads creation, memory allocations/deallocations, memory fragmentation. In my opinion having shared weights across multiple sessions but buffers/thread pools as session \"state\" seems a lot more optimal.\r\n> \r\n> There's only 1 threadpool and one arena allocator per session. Memory planning for tensors, etc, is done only once when creating and initializing the session. There's only one copy of the weights in the session obj. It's in your best interest to share the same session obj between multiple threads.\r\n\r\nOkay, so when I set 1 inter- and 1 intra-thread in session options there will be created threadpool with 1 thread and all `Run()` methods will be executed sequentially? If not, how many threads are there in created threadpool?\r\n\r\nAbout buffers. I get it that memory planning for weights stored only once per session object, but what about runtime (intermediate) buffers? Are they created and destroyed for each `Run()` invocation?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1493833082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494299711",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1494299711",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1494299711,
        "node_id": "IC_kwDOCVq1mM5ZETQ_",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T13:10:51Z",
        "updated_at": "2023-04-03T13:10:51Z",
        "author_association": "NONE",
        "body": "> @brian-pieces Sorry, not following this statement \"this breaks my method of loading them from file for each task and using AddInitializer to override the existing ones.\". What method are you using to load them?\r\n> \r\n> I assume you've externalized the shared weights for each onnx file. By this I mean you've converted the onnx file such that they refer to external files for these shared weights. Now, it's a matter of just loading these external files once (outside ORT) and supplying the memory pointer to ORT for each session using the AddInitializer API. The name of the weight used should be the same as that used in the model files. They can be the same across all model files since the session is scoped per onnx model. If this is not clear, may be a repro might help.\r\n\r\n@pranavsharma Yes that's right about externalzing the weights. The issue is that I'd like to have multiple sessions that shared a single session options ptr to utilize the AddInitializer API so I can reuse those 99% overlapping weights (everything but lora), however, b/c the lora weights differ for each model but have the same names, I don't think using a single session options will work",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494299711/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494336457",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1494336457",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1494336457,
        "node_id": "IC_kwDOCVq1mM5ZEcPJ",
        "user": {
            "login": "pauldog",
            "id": 33497043,
            "node_id": "MDQ6VXNlcjMzNDk3MDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/33497043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauldog",
            "html_url": "https://github.com/pauldog",
            "followers_url": "https://api.github.com/users/pauldog/followers",
            "following_url": "https://api.github.com/users/pauldog/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauldog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauldog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauldog/subscriptions",
            "organizations_url": "https://api.github.com/users/pauldog/orgs",
            "repos_url": "https://api.github.com/users/pauldog/repos",
            "events_url": "https://api.github.com/users/pauldog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauldog/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T13:34:55Z",
        "updated_at": "2023-04-03T13:34:55Z",
        "author_association": "NONE",
        "body": "I don't quite know how lora's work but could you do one session for the main network and then other separate sessions for the loras? It's my understanding that a lora is another network joined onto the first? I'm not sure how it's inserted. It add's more layers I think. Depending on where the layers are inserted.\r\n\r\nOn a separate note. If you have your network torch_model.bin and your lora.bin how do you convert the combined model into an onnx file?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494336457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494353444",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1494353444",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1494353444,
        "node_id": "IC_kwDOCVq1mM5ZEgYk",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T13:46:18Z",
        "updated_at": "2023-04-03T13:47:22Z",
        "author_association": "NONE",
        "body": "From the [original paper](https://arxiv.org/abs/2106.09685), LoRA \"freezes the pre-trained model weights and injects trainable rank decomposition matrices into each layer of the Transformer architecture\". So it's not another network, rather it's essentially injecting low-rank representations of a handful of the QKV matrices into the base model. With our confirguration it ends up injecting 30 [512x512] matrices into a T5 model. \r\n\r\nOn your second question, we're using a conditional generation T5 model from huggingface and LoRA doesn't change the model architeucture in a breaking way so we're able to use ORT [convert_generation](https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/python/tools/transformers/convert_generation.py) tool",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1494353444/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495294258",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1495294258",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1495294258,
        "node_id": "IC_kwDOCVq1mM5ZIGEy",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-04T03:28:55Z",
        "updated_at": "2023-04-04T03:28:55Z",
        "author_association": "MEMBER",
        "body": "@brian-pieces You don't have to use the same session options obj. Session options is a light-weight obj. Just use separate session options obj for each session.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495294258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495295924",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1495295924",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1495295924,
        "node_id": "IC_kwDOCVq1mM5ZIGe0",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-04T03:32:07Z",
        "updated_at": "2023-04-04T03:32:07Z",
        "author_association": "MEMBER",
        "body": "@leugenea Can you move this to the discussion board as it's a discussion, not an issue.\r\n\r\n> Okay, so when I set 1 inter- and 1 intra-thread in session options there will be created threadpool with 1 thread and all `Run()` methods will be executed sequentially? If not, how many threads are there in created threadpool?\r\n\r\nYes. The default # of threads in the threadpool is equal to the # of physical cores on the machine.\r\n\r\n> \r\n> About buffers. I get it that memory planning for weights stored only once per session object, but what about runtime (intermediate) buffers? Are they created and destroyed for each `Run()` invocation?\r\n\r\nYes ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495295924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495431312",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1495431312",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1495431312,
        "node_id": "IC_kwDOCVq1mM5ZIniQ",
        "user": {
            "login": "leugenea",
            "id": 534699,
            "node_id": "MDQ6VXNlcjUzNDY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/534699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leugenea",
            "html_url": "https://github.com/leugenea",
            "followers_url": "https://api.github.com/users/leugenea/followers",
            "following_url": "https://api.github.com/users/leugenea/following{/other_user}",
            "gists_url": "https://api.github.com/users/leugenea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leugenea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leugenea/subscriptions",
            "organizations_url": "https://api.github.com/users/leugenea/orgs",
            "repos_url": "https://api.github.com/users/leugenea/repos",
            "events_url": "https://api.github.com/users/leugenea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leugenea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-04T06:42:04Z",
        "updated_at": "2023-04-04T06:42:04Z",
        "author_association": "NONE",
        "body": "@pranavsharma thank you for answers.\r\n\r\nI think it would be nice to mention somewhere in documentation that `Session` objects are stateless and so could (and should) be used in multiple threads.\r\n\r\nAlso it would be nice to have some `AddInitializers()` and prepacked weights container usage example because it's only mentioned once (in [tests](https://github.com/microsoft/onnxruntime/blob/v1.14.1/onnxruntime/test/shared_lib/test_inference.cc#L2266)) and it's not clear what and in what case will be stored in prepacked weights, loaded from model file/buffer or shared between sessions.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1495431312/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1497851277",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1497851277",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1497851277,
        "node_id": "IC_kwDOCVq1mM5ZR2WN",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T17:17:14Z",
        "updated_at": "2023-04-05T17:17:14Z",
        "author_association": "MEMBER",
        "body": "> @brian-pieces You don't have to use the same session options obj. Session options is a light-weight obj. Just use separate session options obj for each session.\r\n\r\n@brian-pieces does this work for you? If so, can this issue be closed?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1497851277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1497858363",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1497858363",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1497858363,
        "node_id": "IC_kwDOCVq1mM5ZR4E7",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T17:23:39Z",
        "updated_at": "2023-04-05T17:29:51Z",
        "author_association": "NONE",
        "body": "@pranavsharma sorry for the delay, I've been experimenting a bit - yes that makes more sense. Thanks. \r\n\r\nOne final question: If I know that I'm going to be overriding initializers is it possible to use  `ClearField()` on the initializers I'm going to override and then saving the modified model so that I could serve a smaller model? To be more specific, I'm finding the attribute (raw_data, float_data, etc.) where each tensor is storing the data and using `ClearField()` on that attribute\r\n\r\nI tried this and I get this error at session creation time:  `Error TensorProto (tensor name: onnx::MatMul_1520_scale) should contain one and only one value field.`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1497858363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498003648",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1498003648",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1498003648,
        "node_id": "IC_kwDOCVq1mM5ZSbjA",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T19:25:10Z",
        "updated_at": "2023-04-05T19:25:10Z",
        "author_association": "MEMBER",
        "body": "> @pranavsharma sorry for the delay, I've been experimenting a bit - yes that makes more sense. Thanks.\r\n> \r\n> One final question: If I know that I'm going to be overriding initializers is it possible to use `ClearField()` on the initializers I'm going to override and then saving the modified model so that I could serve a smaller model? To be more specific, I'm finding the attribute (raw_data, float_data, etc.) where each tensor is storing the data and using `ClearField()` on that attribute\r\n> \r\n> I tried this and I get this error at session creation time: `Error TensorProto (tensor name: onnx::MatMul_1520_scale) should contain one and only one value field.`\r\n\r\nYou can simply point to some dummy non-existing file.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498003648/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498039185",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1498039185",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1498039185,
        "node_id": "IC_kwDOCVq1mM5ZSkOR",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T19:56:54Z",
        "updated_at": "2023-04-05T19:56:54Z",
        "author_association": "NONE",
        "body": "> You can simply point to some dummy non-existing file.\r\n\r\nNot sure what you mean. As opposed to using `ClearField`? \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498039185/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498191582",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1498191582",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1498191582,
        "node_id": "IC_kwDOCVq1mM5ZTJbe",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T21:35:58Z",
        "updated_at": "2023-04-05T21:35:58Z",
        "author_association": "MEMBER",
        "body": "You need to reference the initializers in the model whether they're external or part of the model. So, you can't just get rid of them. The dummy file comment was for the specific file you need to mention in the TensorProto.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1498191582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1499040143",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15301#issuecomment-1499040143",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15301",
        "id": 1499040143,
        "node_id": "IC_kwDOCVq1mM5ZWYmP",
        "user": {
            "login": "brian-pieces",
            "id": 98757707,
            "node_id": "U_kgDOBeLsSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98757707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-pieces",
            "html_url": "https://github.com/brian-pieces",
            "followers_url": "https://api.github.com/users/brian-pieces/followers",
            "following_url": "https://api.github.com/users/brian-pieces/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-pieces/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-pieces/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-pieces/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-pieces/orgs",
            "repos_url": "https://api.github.com/users/brian-pieces/repos",
            "events_url": "https://api.github.com/users/brian-pieces/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-pieces/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-06T13:08:42Z",
        "updated_at": "2023-04-06T13:08:42Z",
        "author_association": "NONE",
        "body": "Ahh okay I hadn't noticed the `data_location` attribute on `TensorProto` before. Thanks for the help!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1499040143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]