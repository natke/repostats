[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11501",
        "id": 1233578767,
        "node_id": "PR_kwDOCVq1mM43sx_2",
        "number": 11501,
        "title": "Fix exception in Linux TVM CI Workflow",
        "user": {
            "login": "mszhanyi",
            "id": 16190118,
            "node_id": "MDQ6VXNlcjE2MTkwMTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16190118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mszhanyi",
            "html_url": "https://github.com/mszhanyi",
            "followers_url": "https://api.github.com/users/mszhanyi/followers",
            "following_url": "https://api.github.com/users/mszhanyi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mszhanyi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mszhanyi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mszhanyi/subscriptions",
            "organizations_url": "https://api.github.com/users/mszhanyi/orgs",
            "repos_url": "https://api.github.com/users/mszhanyi/repos",
            "events_url": "https://api.github.com/users/mszhanyi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mszhanyi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-12T07:43:02Z",
        "updated_at": "2022-05-12T11:12:13Z",
        "closed_at": "2022-05-12T11:12:13Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11501",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11501",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11501.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11501.patch",
            "merged_at": null
        },
        "body": "This reverts commit 57b51e72d7d4d9b4a0d76c03dd1325940f551c5e.\r\n\r\n**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11502",
        "id": 1234124617,
        "node_id": "I_kwDOCVq1mM5Jjz9J",
        "number": 11502,
        "title": "C#, How to access the different output layer of inference (semantic segmentation)",
        "user": {
            "login": "andife",
            "id": 20612932,
            "node_id": "MDQ6VXNlcjIwNjEyOTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20612932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andife",
            "html_url": "https://github.com/andife",
            "followers_url": "https://api.github.com/users/andife/followers",
            "following_url": "https://api.github.com/users/andife/following{/other_user}",
            "gists_url": "https://api.github.com/users/andife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andife/subscriptions",
            "organizations_url": "https://api.github.com/users/andife/orgs",
            "repos_url": "https://api.github.com/users/andife/repos",
            "events_url": "https://api.github.com/users/andife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4419012097,
                "node_id": "LA_kwDOCVq1mM8AAAABB2TGAQ",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api",
                "name": "api",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to all other APIs: C, C++, Python, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-12T15:04:03Z",
        "updated_at": "2022-08-12T08:23:04Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I am fairly new to C#, and am wondering how to access the results of an inference.\r\n\r\nMy model (Semantic Segmentation) has as output layer the dimension (n,h,w,c) [n=1,h =256, h=256, c=3]. (For 3 different classes a map with \"probabilities\" is returned).\r\n\r\n(With C++ I currently have to re-sort the result by nchw before I can access the slices via pointer. can be accessed)\r\n\r\nI.e. I would like to have 3 different (256x256) maps?. Can someone help me with a code example for this? \r\n\r\n[I then intend to process the matrices as mat with OpencvSharp]\r\n\r\n![2022_05_15_resultOnnxRuntime](https://user-images.githubusercontent.com/20612932/168105884-d241a0d6-1a9f-4ae8-a8c1-d87d7b0a01c0.png)\r\n\r\nThank you",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11504",
        "id": 1234210781,
        "node_id": "PR_kwDOCVq1mM43u3io",
        "number": 11504,
        "title": "Fix exception in Linux_TVM_CI, Revert 11247",
        "user": {
            "login": "mszhanyi",
            "id": 16190118,
            "node_id": "MDQ6VXNlcjE2MTkwMTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16190118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mszhanyi",
            "html_url": "https://github.com/mszhanyi",
            "followers_url": "https://api.github.com/users/mszhanyi/followers",
            "following_url": "https://api.github.com/users/mszhanyi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mszhanyi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mszhanyi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mszhanyi/subscriptions",
            "organizations_url": "https://api.github.com/users/mszhanyi/orgs",
            "repos_url": "https://api.github.com/users/mszhanyi/repos",
            "events_url": "https://api.github.com/users/mszhanyi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mszhanyi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-12T16:12:50Z",
        "updated_at": "2022-05-18T09:22:59Z",
        "closed_at": "2022-05-12T18:27:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11504",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11504",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11504.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11504.patch",
            "merged_at": "2022-05-12T18:27:36Z"
        },
        "body": "**Description**: \r\nRevert PR #11247\r\n\r\n**Motivation and Context**\r\nThe Linux TVM CI has failed since May 5th. It is the [error link]( https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=647672&view=logs&j=8460edc3-df81-551a-b4ea-5d384de7d386&t=4d59e2f5-ec5b-5070-8a54-be1f0d78bfe6)\r\nThe workflow can pass by reverting it.\r\nhttps://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=647686&view=results\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11505",
        "id": 1234230273,
        "node_id": "I_kwDOCVq1mM5JkNwB",
        "number": 11505,
        "title": "[Documentation Request]",
        "user": {
            "login": "caleb-depotanalytics",
            "id": 104788759,
            "node_id": "U_kgDOBj7zFw",
            "avatar_url": "https://avatars.githubusercontent.com/u/104788759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/caleb-depotanalytics",
            "html_url": "https://github.com/caleb-depotanalytics",
            "followers_url": "https://api.github.com/users/caleb-depotanalytics/followers",
            "following_url": "https://api.github.com/users/caleb-depotanalytics/following{/other_user}",
            "gists_url": "https://api.github.com/users/caleb-depotanalytics/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/caleb-depotanalytics/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/caleb-depotanalytics/subscriptions",
            "organizations_url": "https://api.github.com/users/caleb-depotanalytics/orgs",
            "repos_url": "https://api.github.com/users/caleb-depotanalytics/repos",
            "events_url": "https://api.github.com/users/caleb-depotanalytics/events{/privacy}",
            "received_events_url": "https://api.github.com/users/caleb-depotanalytics/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2954195685,
                "node_id": "MDU6TGFiZWwyOTU0MTk1Njg1",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:VitisAI",
                "name": "ep:VitisAI",
                "color": "0052CC",
                "default": false,
                "description": "issues related to Vitis AI execution provider"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-12T16:31:45Z",
        "updated_at": "2022-09-28T21:24:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is ONNX runtime compatible with ZCU102 and other non-alveo/EdgeAI Vitis-AI compatible platforms?\r\n---\r\n#### Document Details\r\n* Title: Vitis AI\r\n* Page: [https://onnxruntime.ai/docs/execution-providers/Vitis-AI-ExecutionProvider.html](https://onnxruntime.ai/docs/execution-providers/Vitis-AI-ExecutionProvider.html)\r\n* Page Source: Vitis-AI-ExecutionProvider.md",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11505/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11506",
        "id": 1234256694,
        "node_id": "PR_kwDOCVq1mM43vBTA",
        "number": 11506,
        "title": "MTA AdamWOptimizer",
        "user": {
            "login": "pengwa",
            "id": 10530022,
            "node_id": "MDQ6VXNlcjEwNTMwMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10530022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwa",
            "html_url": "https://github.com/pengwa",
            "followers_url": "https://api.github.com/users/pengwa/followers",
            "following_url": "https://api.github.com/users/pengwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwa/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwa/orgs",
            "repos_url": "https://api.github.com/users/pengwa/repos",
            "events_url": "https://api.github.com/users/pengwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-12T16:58:41Z",
        "updated_at": "2022-05-27T11:52:05Z",
        "closed_at": "2022-05-27T11:52:04Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11506",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11506",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11506.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11506.patch",
            "merged_at": "2022-05-27T11:52:04Z"
        },
        "body": "**Description**: MTA (Multiple Tensor Apply) Adam Optimizer Implementation.\r\n\r\n- This is added by intention for supporting internal customers, can also be used for common training. \r\n- The implementation leverage Seq<Tensor> to manages groups of parameters/gradients/momentums, instead of using fixed length-ed variadic inputs (as we did for Lamb previously).\r\n- Multiple tensor apply is used. \r\n- AdamW equivalence for Torch AdamW and HF AdamW are provided, to allow models training with external libs easier to migration. \r\n\r\n![image](https://user-images.githubusercontent.com/10530022/168191537-0d2d5624-c0a8-4758-a1a1-f7fda0f145c3.png)\r\n\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11506/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11507",
        "id": 1234426618,
        "node_id": "I_kwDOCVq1mM5Jk9r6",
        "number": 11507,
        "title": "Load ORT Model in React-Native Expo",
        "user": {
            "login": "fkodom",
            "id": 45951340,
            "node_id": "MDQ6VXNlcjQ1OTUxMzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/45951340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fkodom",
            "html_url": "https://github.com/fkodom",
            "followers_url": "https://api.github.com/users/fkodom/followers",
            "following_url": "https://api.github.com/users/fkodom/following{/other_user}",
            "gists_url": "https://api.github.com/users/fkodom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fkodom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fkodom/subscriptions",
            "organizations_url": "https://api.github.com/users/fkodom/orgs",
            "repos_url": "https://api.github.com/users/fkodom/repos",
            "events_url": "https://api.github.com/users/fkodom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fkodom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2385898474,
                "node_id": "MDU6TGFiZWwyMzg1ODk4NDc0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/platform:mobile",
                "name": "platform:mobile",
                "color": "FEF2C0",
                "default": false,
                "description": "issues related to ONNX Runtime mobile; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-12T20:01:43Z",
        "updated_at": "2022-05-27T15:12:57Z",
        "closed_at": "2022-05-27T15:12:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI'm trying to get `onnxruntime-react-native` working in a managed Expo app.  Whenever I try to create a new `InferenceSession`, I receive the error message:\r\n```bash\r\nError: \"Can't load a model: null is not an object (evaluating '(0,u.default)(this,p)[p].loadModel')\"\r\n...\r\n```\r\n\r\nHere is a minimal example on `snack.expo.dev` to reproduce the issue:\r\nhttps://snack.expo.dev/@fkodom/expo-onnxruntime\r\n\r\nWhen I run the example locally on my Macbook, I get a slightly different (but seemingly closely related) error:\r\n```bash\r\nCan't load a model: null is not an object (evaluating '(0, _classPrivateFieldLooseBase2.default)(this, _inferenceSession)[_inferenceSession].loadModel')\r\nat node_modules/onnxruntime-react-native/lib/backend.ts:61:12 in OnnxruntimeSessionHandler#loadModel\r\nat node_modules/onnxruntime-react-native/lib/backend.ts:49:2 in OnnxruntimeSessionHandler#loadModel\r\nat node_modules/onnxruntime-react-native/lib/backend.ts:151:10 in OnnxruntimeBackend#createSessionHandler\r\nat node_modules/onnxruntime-react-native/lib/backend.ts:145:2 in OnnxruntimeBackend#createSessionHandler\r\nat node_modules/onnxruntime-common/dist/ort-common.node.js:6:6604 in c.create\r\n```\r\n\r\nI have confirmed that:\r\n* `onnxruntime-react-native` is installed, and I can create `Tensor` objects.\r\n* The model asset `mnist.ort` downloads successfully, and saves to a local URI.  \r\n    * The model was pulled from [this example in the `microsoft/onnxruntime` docs](https://github.com/microsoft/onnxruntime/tree/master/js/react_native/e2e)\r\n\r\n**Urgency**\r\nNone\r\n\r\n**System information**\r\n- OS -- Linux & Mac\r\n- Expo -- `44.0.0`\r\n- `onnxruntime-react-native` -- `1.11.0`\r\n- Platforms:\r\n    - iOS (device & simulator)\r\n    - Android (simulator)\r\n\r\n**To Reproduce**\r\nPlease see the example linked above (copied again here):\r\nhttps://snack.expo.dev/@fkodom/expo-onnxruntime\r\n\r\nLink to the ORT model that I'm using to initialize the `InferenceSession`:\r\nhttps://github.com/microsoft/onnxruntime/blob/master/js/react_native/e2e/src/mnist.ort\r\n\r\nMinimal reproducing code from the linked example:\r\n```js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { Asset } from 'expo-asset';\r\nimport { InferenceSession, Tensor } from \"onnxruntime-react-native\";\r\n\r\nexport default function App() {\r\n  const [onnxSession, setOnnxSession] = useState(null);\r\n\r\n  const initInferenceSession = async () => {\r\n      const asset = Asset.fromURI(\"https://github.com/microsoft/onnxruntime/blob/master/js/react_native/e2e/src/mnist.ort\");\r\n      if (!asset.localUri) {\r\n        console.log(\"Downloading asset.\")\r\n        await asset.downloadAsync();\r\n        console.log(\"Local URI: \" + asset.localUri);\r\n      }\r\n\r\n      try {\r\n        const session = await InferenceSession.create(asset.localUri, { executionProviders: ['cpu'] });\r\n        console.log(\"Session (initInferenceSession): \" + session);\r\n        setOnnxSession(session);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n  }\r\n\r\n  useEffect(() => { \r\n    initInferenceSession(); \r\n  }, []);\r\n\r\n  return null;\r\n}\r\n```\r\n\r\n\r\n**Expected behavior**\r\nAble to create a new `InferenceSession` from an ORT model.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11507/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11508",
        "id": 1234451778,
        "node_id": "PR_kwDOCVq1mM43vq2_",
        "number": 11508,
        "title": "Tune-performance-improving-search-and-navigation",
        "user": {
            "login": "pkreg101",
            "id": 13582680,
            "node_id": "MDQ6VXNlcjEzNTgyNjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13582680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pkreg101",
            "html_url": "https://github.com/pkreg101",
            "followers_url": "https://api.github.com/users/pkreg101/followers",
            "following_url": "https://api.github.com/users/pkreg101/following{/other_user}",
            "gists_url": "https://api.github.com/users/pkreg101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pkreg101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pkreg101/subscriptions",
            "organizations_url": "https://api.github.com/users/pkreg101/orgs",
            "repos_url": "https://api.github.com/users/pkreg101/repos",
            "events_url": "https://api.github.com/users/pkreg101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pkreg101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-12T20:31:23Z",
        "updated_at": "2023-05-02T18:19:52Z",
        "closed_at": "2023-05-02T18:19:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11508",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11508",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11508.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11508.patch",
            "merged_at": null
        },
        "body": "Improving searchability and navigability on the Tune performance page so the user can find the ONNX Runtime performance tuning info.\r\nStaged Page: https://pkreg101.github.io/onnxruntime/docs/performance/tune-performance.html",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11508/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11509",
        "id": 1234481551,
        "node_id": "I_kwDOCVq1mM5JlLGP",
        "number": 11509,
        "title": "onnxruntime error",
        "user": {
            "login": "naffeti-houaida",
            "id": 80219141,
            "node_id": "MDQ6VXNlcjgwMjE5MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/80219141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naffeti-houaida",
            "html_url": "https://github.com/naffeti-houaida",
            "followers_url": "https://api.github.com/users/naffeti-houaida/followers",
            "following_url": "https://api.github.com/users/naffeti-houaida/following{/other_user}",
            "gists_url": "https://api.github.com/users/naffeti-houaida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naffeti-houaida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naffeti-houaida/subscriptions",
            "organizations_url": "https://api.github.com/users/naffeti-houaida/orgs",
            "repos_url": "https://api.github.com/users/naffeti-houaida/repos",
            "events_url": "https://api.github.com/users/naffeti-houaida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naffeti-houaida/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-12T21:04:25Z",
        "updated_at": "2022-05-13T16:48:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to run inference of the onnx model with onnxruntime but I got this error while  calling InferenceSession.\r\nI successfully  export fasterRcnn github model with resnet101 as a backbone (opset_version=11)\r\nI'am using onnx-1.11.0 and onnxruntime_gpu==1.10\r\nbug\r\n File \"/usr/local/lib/python3.7/dist-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 335, in __init__\r\n    self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n  File \"/usr/local/lib/python3.7/dist-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 379, in _create_inference_session\r\n    sess.initialize_session(providers, provider_options, disabled_optimizers)\r\nonnxruntime.capi.onnxruntime_pybind11_state.RuntimeException: [ONNXRuntimeError] : 6 : RUNTIME_EXCEPTION : Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/tensor/reshape_helper.h:41 onnxruntime::ReshapeHelper::ReshapeHelper(const onnxruntime::TensorShape&, std::vector<long int>&, bool) gsl::narrow_cast<int64_t>(input_shape.Size()) == size was false. The input tensor cannot be reshaped to the requested shape. Input shape:{1,16074,16074}, requested shape:{1,16074,1}\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11509/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11510",
        "id": 1234492198,
        "node_id": "I_kwDOCVq1mM5JlNsm",
        "number": 11510,
        "title": "[Documentation Request] tensorAt for Csharp?",
        "user": {
            "login": "andife",
            "id": 20612932,
            "node_id": "MDQ6VXNlcjIwNjEyOTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20612932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andife",
            "html_url": "https://github.com/andife",
            "followers_url": "https://api.github.com/users/andife/followers",
            "following_url": "https://api.github.com/users/andife/following{/other_user}",
            "gists_url": "https://api.github.com/users/andife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andife/subscriptions",
            "organizations_url": "https://api.github.com/users/andife/orgs",
            "repos_url": "https://api.github.com/users/andife/repos",
            "events_url": "https://api.github.com/users/andife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4419012097,
                "node_id": "LA_kwDOCVq1mM8AAAABB2TGAQ",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api",
                "name": "api",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to all other APIs: C, C++, Python, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-12T21:18:12Z",
        "updated_at": "2022-08-12T08:23:04Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hello, I would be quite interested in documentation for examples of \r\ntensorAt\r\n\r\nI'm interested in accessing specific output values of a result tensor directly\r\n---\r\n#### Document Details\r\n* Title: C# API\r\n* Page: [https://onnxruntime.ai/docs/api/csharp-api.html](https://onnxruntime.ai/docs/api/csharp-api.html)\r\n* Page Source: csharp-api.md",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11510/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11511",
        "id": 1234522359,
        "node_id": "I_kwDOCVq1mM5JlVD3",
        "number": 11511,
        "title": "Inference on Onnx with external data not working since PR 11320 (location planning logic)",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "snnn",
                "id": 856316,
                "node_id": "MDQ6VXNlcjg1NjMxNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/snnn",
                "html_url": "https://github.com/snnn",
                "followers_url": "https://api.github.com/users/snnn/followers",
                "following_url": "https://api.github.com/users/snnn/following{/other_user}",
                "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
                "organizations_url": "https://api.github.com/users/snnn/orgs",
                "repos_url": "https://api.github.com/users/snnn/repos",
                "events_url": "https://api.github.com/users/snnn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/snnn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2022-05-12T22:00:08Z",
        "updated_at": "2022-06-10T13:27:57Z",
        "closed_at": "2022-06-01T21:46:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\nA recent PR #11320 has fixed a bug making models with `If` node slower when input is only consumed by subgraphs of the `If` node.\r\nHowever, it seems that it has introduced a bug making Onnx Runtime crash when CUDA provider is used on a model with external data (> 2 Gb models). CPU provider is Ok.\r\n\r\nIt may be related to PR #11320 as code below to reproduce the bug: \r\n* do not crash when used with onnxruntime 1.11.1 from pipy\r\n* do not crash when used with onnxruntime 1.11.1 recompiled from source (commit 366f4ebcb425b6a47c2b0decd3b39fa14eb9dbf6)\r\n* crash when used with onnxruntime 1.12 compiled from master (commit 6f85d3e5c81c919022ac4a77e5a051da8518b15d)\r\n* crash when used  with onnxruntime 1.12 compiled from the last commit of PR #11320 (e1c04eed29d48f295de1cfbd48713158537cdaa7)\r\n\r\nAs there is very little commits between 1.11.1 and PR #11320 , the PR may have introduced the new behavior.\r\n\r\nError message:\r\n\r\n```log\r\n2022-05-12 22:44:03.142806435 [E:onnxruntime:Default, cuda_call.cc:118 CudaCall] CUBLAS failure 14: CUBLAS_STATUS_INTERNAL_ERROR ; GPU=0 ; hostname=geantvert ; expr=cublasGemmHelper( Base::CublasHandle(), transB, transA, static_cast<int>(helper.N()), static_cast<int>(helper.M()), static_cast<int>(helper.K()), &alpha, reinterpret_cast<const CudaT*>(right_X->template Data<T>()), ldb, reinterpret_cast<const CudaT*>(left_X->template Data<T>()), lda, &zero, reinterpret_cast<CudaT*>(Y->template MutableData<T>()), ldc, device_prop); \r\n2022-05-12 22:44:03.142837979 [E:onnxruntime:, sequential_executor.cc:368 Execute] Non-zero status code returned while running MatMul node. Name:'MatMul_161' Status Message: CUBLAS error executing cublasGemmHelper( Base::CublasHandle(), transB, transA, static_cast<int>(helper.N()), static_cast<int>(helper.M()), static_cast<int>(helper.K()), &alpha, reinterpret_cast<const CudaT*>(right_X->template Data<T>()), ldb, reinterpret_cast<const CudaT*>(left_X->template Data<T>()), lda, &zero, reinterpret_cast<CudaT*>(Y->template MutableData<T>()), ldc, device_prop)\r\n2022-05-12 22:44:03.142899439 [E:onnxruntime:Default, cuda_call.cc:118 CudaCall] CUDA failure 700: an illegal memory access was encountered ; GPU=0 ; hostname=geantvert ; expr=cudaEventRecord(current_deferred_release_event, static_cast<cudaStream_t>(GetComputeStream())); \r\n```\r\n\r\n**Urgency**\r\nif bug reproduced by Onnxruntime maintainers, this is probably to be fixed before next release of Onnxruntime\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 22.04\r\n- ONNX Runtime installed from (source or binary): both (see above)\r\n- ONNX Runtime version: 1.11.1 and 1.12\r\n- Python version: 3.9\r\n- Visual Studio version (if applicable): N/A\r\n- GCC/Compiler version (if compiling from source): 3.10\r\n- CUDA/cuDNN version: 11.4\r\n- GPU model and memory: RTX 3090\r\n\r\n**To Reproduce**\r\nCode below will generate the ONNX file and raise the error message.\r\n\r\n```python\r\nfrom pathlib import Path\r\nfrom typing import Tuple\r\nimport numpy as np\r\nimport torch\r\nfrom torch.nn import Linear\r\nfrom transformers import AutoModelForSeq2SeqLM, T5ForConditionalGeneration\r\nfrom transformers.models.t5.modeling_t5 import T5Stack\r\nfrom onnxruntime import SessionOptions, InferenceSession\r\n\r\n\r\nmodel_name = \"t5-3b\"\r\nmodel: T5ForConditionalGeneration = AutoModelForSeq2SeqLM.from_pretrained(model_name)\r\nmodel = model.eval()\r\nnum_layers = model.config.num_layers\r\n\r\n\r\nclass ExportT5(torch.nn.Module):\r\n    def __init__(self, decoder: T5Stack, lm_head: Linear):\r\n        super(ExportT5, self).__init__()\r\n        self.decoder = decoder\r\n        self.lm_head = lm_head\r\n\r\n    def forward(self, input_ids: torch.Tensor, encoder_hidden_states: torch.Tensor, past_key_values: Tuple = None):\r\n        out_dec = self.decoder.forward(\r\n            input_ids=input_ids, encoder_hidden_states=encoder_hidden_states, past_key_values=past_key_values\r\n        )\r\n        # Rescale output before projecting on vocab\r\n        out_dec[\"last_hidden_state\"] = out_dec[\"last_hidden_state\"] * (model.model_dim**-0.5)\r\n        out_dec[\"last_hidden_state\"] = self.lm_head(out_dec[\"last_hidden_state\"])\r\n        return out_dec\r\n\r\n\r\nmodel_decoder = ExportT5(decoder=model.decoder, lm_head=model.lm_head).eval()\r\n\r\ndef prepare_folder(path: str):\r\n    Path(path).mkdir(parents=True, exist_ok=True)\r\n    [item.unlink() for item in Path(path).glob(\"*\") if item.is_file()]\r\n\r\ndec_no_cache_folder = \"./test-dec-no-cache\"\r\ndec_no_cache_model_path = dec_no_cache_folder + \"/model.onnx\"\r\nprepare_folder(path=dec_no_cache_folder)\r\n\r\nmodel_inputs = {\r\n    \"input_ids\": torch.ones([1, 10], dtype=torch.int32, device=\"cpu\"),\r\n    \"encoder_hidden_states\": torch.ones([1, 2, 1024], dtype=torch.float32, device=\"cpu\")\r\n}\r\n\r\noutput_names = [\"logits\"]\r\n\r\nfor i in range(num_layers):\r\n    output_names.append(f\"present.{i}.decoder.key\")\r\n    output_names.append(f\"present.{i}.decoder.value\")\r\n    output_names.append(f\"present.{i}.encoder.key\")\r\n    output_names.append(f\"present.{i}.encoder.value\")\r\n\r\n\r\ndynamic_axis = {\r\n    \"input_ids\": {0: \"batch\", 1: \"encoder_sequence\"},\r\n    \"encoder_hidden_states\": {0: \"batch\", 1: \"encoder_sequence\"},\r\n    \"logits\": {0: \"batch\", 1: \"decoder_sequence\"},\r\n}\r\n\r\n\r\nfor i in range(num_layers):\r\n    dynamic_axis[f\"present.{i}.decoder.key\"] = {0: \"batch\", 2: \"decoder_sequence\"}\r\n    dynamic_axis[f\"present.{i}.decoder.value\"] = {0: \"batch\", 2: \"decoder_sequence\"}\r\n    dynamic_axis[f\"present.{i}.encoder.key\"] = {0: \"batch\", 2: \"encoder_sequence_length\"}\r\n    dynamic_axis[f\"present.{i}.encoder.value\"] = {0: \"batch\", 2: \"encoder_sequence_length\"}\r\n\r\n\r\nwith torch.no_grad():\r\n    model.config.return_dict = True\r\n    model.eval()\r\n    # pytorch 1.11 will use external data automatically\r\n    torch.onnx.export(\r\n        model_decoder,\r\n        (model_inputs,),\r\n        f=dec_no_cache_model_path,\r\n        input_names=list(model_inputs.keys()),\r\n        output_names=output_names,\r\n        dynamic_axes=dynamic_axis,\r\n        do_constant_folding=True,\r\n        opset_version=13,\r\n    )\r\n\r\n# always work\r\noptions = SessionOptions()\r\nmodel = InferenceSession(dec_no_cache_model_path, options, providers=[\"CPUExecutionProvider\"])\r\nprint(model.run(None, {\"input_ids\": np.ones([1, 10], dtype=np.int32), \"encoder_hidden_states\": np.ones([1, 1, 1024], dtype=np.float32)}))\r\n\r\nmodel = InferenceSession(dec_no_cache_model_path, options, providers=[\"CUDAExecutionProvider\"])\r\nprint(model.run(None, {\"input_ids\": np.ones([1, 10], dtype=np.int32), \"encoder_hidden_states\": np.ones([1, 1, 1024], dtype=np.float32)}))\r\n```\r\n\r\n**Expected behavior**\r\nnot crashing\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Additional context**\r\ntagging @hariharans29 as he seems to know a lot about the topic\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11511/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11512",
        "id": 1234557043,
        "node_id": "I_kwDOCVq1mM5Jldhz",
        "number": 11512,
        "title": "ARM64 build need manually add onnxruntime.lb and it's path to the VC project file",
        "user": {
            "login": "hongyangdengms",
            "id": 103009008,
            "node_id": "U_kgDOBiPK8A",
            "avatar_url": "https://avatars.githubusercontent.com/u/103009008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyangdengms",
            "html_url": "https://github.com/hongyangdengms",
            "followers_url": "https://api.github.com/users/hongyangdengms/followers",
            "following_url": "https://api.github.com/users/hongyangdengms/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyangdengms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyangdengms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyangdengms/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyangdengms/orgs",
            "repos_url": "https://api.github.com/users/hongyangdengms/repos",
            "events_url": "https://api.github.com/users/hongyangdengms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyangdengms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-05-12T22:59:05Z",
        "updated_at": "2022-06-13T21:23:27Z",
        "closed_at": "2022-06-13T21:23:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nWhen using Nuget package to get the onnxruntime 1.10, ARM64 builds failed on VS unless manually add the \"onnxruntime.lib\" as additional dependency in the vcproj file. \r\n\r\nerror message: \r\nError\tLNK2001\tunresolved external symbol OrtGetApiBase\t\r\n\r\nx64 builds don't have this issue.\r\n\r\n**Urgency**\r\nNot urgent\r\n\r\n**To Reproduce**\r\n- Add onnxruntime through the Nuget package manager on Visual Studio\r\n- Compile the code for ARM64 platform\r\n\r\n**Expected behavior**\r\nBuild success\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11512/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11513",
        "id": 1234567546,
        "node_id": "PR_kwDOCVq1mM43wDnT",
        "number": 11513,
        "title": "Update fasterrcnn_csharp.md",
        "user": {
            "login": "andife",
            "id": 20612932,
            "node_id": "MDQ6VXNlcjIwNjEyOTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20612932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andife",
            "html_url": "https://github.com/andife",
            "followers_url": "https://api.github.com/users/andife/followers",
            "following_url": "https://api.github.com/users/andife/following{/other_user}",
            "gists_url": "https://api.github.com/users/andife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andife/subscriptions",
            "organizations_url": "https://api.github.com/users/andife/orgs",
            "repos_url": "https://api.github.com/users/andife/repos",
            "events_url": "https://api.github.com/users/andife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-12T23:07:38Z",
        "updated_at": "2022-06-06T20:28:33Z",
        "closed_at": "2022-06-06T20:28:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11513",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11513",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11513.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11513.patch",
            "merged_at": "2022-06-06T20:28:33Z"
        },
        "body": "\r\n\r\n**Description**: adapted according to https://github.com/microsoft/onnxruntime/pull/11420\r\n\r\n**Motivation and Context**\r\nUpdate API changes",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11513/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11514",
        "id": 1234577062,
        "node_id": "PR_kwDOCVq1mM43wFrN",
        "number": 11514,
        "title": "Update resnet50_csharp.md",
        "user": {
            "login": "andife",
            "id": 20612932,
            "node_id": "MDQ6VXNlcjIwNjEyOTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20612932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andife",
            "html_url": "https://github.com/andife",
            "followers_url": "https://api.github.com/users/andife/followers",
            "following_url": "https://api.github.com/users/andife/following{/other_user}",
            "gists_url": "https://api.github.com/users/andife/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andife/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andife/subscriptions",
            "organizations_url": "https://api.github.com/users/andife/orgs",
            "repos_url": "https://api.github.com/users/andife/repos",
            "events_url": "https://api.github.com/users/andife/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andife/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-12T23:22:43Z",
        "updated_at": "2022-06-06T20:28:12Z",
        "closed_at": "2022-06-06T20:28:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11514",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11514",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11514.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11514.patch",
            "merged_at": "2022-06-06T20:28:12Z"
        },
        "body": "\r\n\r\n**Description**: changes due to https://github.com/microsoft/onnxruntime/pull/11420\r\n\r\n**Motivation and Context**\r\nAPI change which was already changed at the official examples",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11514/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11515",
        "id": 1234599247,
        "node_id": "I_kwDOCVq1mM5Jln1P",
        "number": 11515,
        "title": "Can't run a model on ARM64 device",
        "user": {
            "login": "hongyangdengms",
            "id": 103009008,
            "node_id": "U_kgDOBiPK8A",
            "avatar_url": "https://avatars.githubusercontent.com/u/103009008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyangdengms",
            "html_url": "https://github.com/hongyangdengms",
            "followers_url": "https://api.github.com/users/hongyangdengms/followers",
            "following_url": "https://api.github.com/users/hongyangdengms/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyangdengms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyangdengms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyangdengms/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyangdengms/orgs",
            "repos_url": "https://api.github.com/users/hongyangdengms/repos",
            "events_url": "https://api.github.com/users/hongyangdengms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyangdengms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-13T00:11:33Z",
        "updated_at": "2022-06-06T20:54:19Z",
        "closed_at": "2022-06-06T20:54:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nWhen running DNN model on ARM64 devices with ARM64 native build, the program crashes without any error message when running the session. The same code built for x64 platform can run on the same device without issue.\r\n\r\nThe ARM64 onnxruntime.dll version is 1.10.21.1206\r\n\r\nThere is no error message. The program just silently exited when calling Ort::session.run().\r\n\r\n**Urgency**\r\nNot urgent.\r\n\r\n**System information**\r\n- Windows 11\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- \r\n- Python version:\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Run the code.\r\n\r\n**Expected behavior**\r\nProgram finishes with correct outputs\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11515/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11516",
        "id": 1234652037,
        "node_id": "PR_kwDOCVq1mM43wU8x",
        "number": 11516,
        "title": "Add AMD python package ROCm5.1.1+torch1.11",
        "user": {
            "login": "PeixuanZuo",
            "id": 94887879,
            "node_id": "U_kgDOBaffxw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94887879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeixuanZuo",
            "html_url": "https://github.com/PeixuanZuo",
            "followers_url": "https://api.github.com/users/PeixuanZuo/followers",
            "following_url": "https://api.github.com/users/PeixuanZuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeixuanZuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeixuanZuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeixuanZuo/subscriptions",
            "organizations_url": "https://api.github.com/users/PeixuanZuo/orgs",
            "repos_url": "https://api.github.com/users/PeixuanZuo/repos",
            "events_url": "https://api.github.com/users/PeixuanZuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeixuanZuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-13T02:02:12Z",
        "updated_at": "2022-05-16T00:14:12Z",
        "closed_at": "2022-05-16T00:14:11Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11516",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11516",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11516.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11516.patch",
            "merged_at": "2022-05-16T00:14:11Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\nAdd AMD python package ROCm5.11 + torch1.11\r\nDelete AMD python package ROCm5.01+torch1.11\r\nSimplify python3.6 related on AMD Dockerfile because we don't use python3.6 anymore.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11516/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11517",
        "id": 1235421311,
        "node_id": "I_kwDOCVq1mM5Jowh_",
        "number": 11517,
        "title": "About Convolution Implementation",
        "user": {
            "login": "Darshvino",
            "id": 41161376,
            "node_id": "MDQ6VXNlcjQxMTYxMzc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/41161376?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Darshvino",
            "html_url": "https://github.com/Darshvino",
            "followers_url": "https://api.github.com/users/Darshvino/followers",
            "following_url": "https://api.github.com/users/Darshvino/following{/other_user}",
            "gists_url": "https://api.github.com/users/Darshvino/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Darshvino/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Darshvino/subscriptions",
            "organizations_url": "https://api.github.com/users/Darshvino/orgs",
            "repos_url": "https://api.github.com/users/Darshvino/repos",
            "events_url": "https://api.github.com/users/Darshvino/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Darshvino/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-13T15:56:10Z",
        "updated_at": "2022-08-12T08:37:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nWhat are the standard optimizations used for the Convolution Implementations for X86 in ONNXRT default execution provider? (Ex: Tiling, Loop unrolling, SIMD, Multi-threading)\r\n\r\nLook forward to your reply\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11517/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11518",
        "id": 1235595968,
        "node_id": "PR_kwDOCVq1mM43zdMG",
        "number": 11518,
        "title": "Add python static type checking in CI checks",
        "user": {
            "login": "justinchuby",
            "id": 11205048,
            "node_id": "MDQ6VXNlcjExMjA1MDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11205048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinchuby",
            "html_url": "https://github.com/justinchuby",
            "followers_url": "https://api.github.com/users/justinchuby/followers",
            "following_url": "https://api.github.com/users/justinchuby/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinchuby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinchuby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinchuby/subscriptions",
            "organizations_url": "https://api.github.com/users/justinchuby/orgs",
            "repos_url": "https://api.github.com/users/justinchuby/repos",
            "events_url": "https://api.github.com/users/justinchuby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinchuby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-13T19:16:19Z",
        "updated_at": "2022-05-16T20:26:58Z",
        "closed_at": "2022-05-16T20:26:57Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11518",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11518",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11518.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11518.patch",
            "merged_at": "2022-05-16T20:26:57Z"
        },
        "body": "**Description**: Add python static type checking in CI checks\r\n\r\n**Motivation and Context**\r\n\r\n- Enable pyright and pylint (https://github.com/microsoft/pyright) in CI\r\n- Enable pyright, pylint and bandit by default in VS code\r\n\r\nPylint has some good style checks. pyright is Microsoft's static type checker.\r\n\r\ne,g,\r\n\r\n![image](https://user-images.githubusercontent.com/11205048/168653355-87d1b941-2d48-4872-b61e-1f408b8de163.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11518/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11519",
        "id": 1235641360,
        "node_id": "I_kwDOCVq1mM5JpmQQ",
        "number": 11519,
        "title": "Wish to use \"convert_onnx_models_to_ort.py\" and requesting guide",
        "user": {
            "login": "yonggunlee",
            "id": 99675858,
            "node_id": "U_kgDOBfDu0g",
            "avatar_url": "https://avatars.githubusercontent.com/u/99675858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yonggunlee",
            "html_url": "https://github.com/yonggunlee",
            "followers_url": "https://api.github.com/users/yonggunlee/followers",
            "following_url": "https://api.github.com/users/yonggunlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yonggunlee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yonggunlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yonggunlee/subscriptions",
            "organizations_url": "https://api.github.com/users/yonggunlee/orgs",
            "repos_url": "https://api.github.com/users/yonggunlee/repos",
            "events_url": "https://api.github.com/users/yonggunlee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yonggunlee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2022-05-13T20:06:10Z",
        "updated_at": "2022-05-31T20:02:24Z",
        "closed_at": "2022-05-31T20:02:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\n\r\nI wish to convert *.onnx model into *.ort file as onnxruntime required.\r\nI was trying to check the webpage of \"https://onnxruntime.ai/docs/tutorials/mobile/model-conversion.html\" for model conversion test, but the link was down or unavailable. \r\n\r\nIs there some way I can convert my *.onnx or *.pth model file simply into *.ort?\r\nI was trying to find some guides, but there isn't any available.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11519/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11520",
        "id": 1235666189,
        "node_id": "PR_kwDOCVq1mM43zpzE",
        "number": 11520,
        "title": "On device training offline tooling",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-13T20:19:52Z",
        "updated_at": "2022-05-25T01:22:14Z",
        "closed_at": "2022-05-25T01:21:39Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11520",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11520",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11520.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11520.patch",
            "merged_at": "2022-05-25T01:21:39Z"
        },
        "body": "This pull request introduces the offline tooling capabilities for on device training for `onnxruntime-training` . With these set of tools, users can stack onnx layers (called `onnxblock`'s in this PR) on top of each other with relative ease. The purpose for this kind of tooling is to allow users to prepare a training onnx model given an inference only model with ease.\r\n\r\nFor example, user's can start with an inference only model, add a loss on top of it, and build the gradient graph on top of that with a few lines of code. Given this training model, users can also build an optimizer graph for training.\r\n\r\nHere is an example usage for the above description:\r\n```py\r\n# Imports\r\nimport onnxruntime.training.onnxblock as onnxblock\r\n\r\n# Define how to stack onnxblocks together\r\nclass SimpleGraph(onnxblock.TrainingGraph):\r\n    def __init__(self):\r\n        super(SimpleGraph, self).__init__()\r\n        self.loss = onnxblock.loss.MSELoss()\r\n\r\n    def build(self):\r\n        base_graph_output_name = self.base_model.graph.output[0].name\r\n        return self.loss(base_graph_output_name)\r\n\r\n# Build the training model\r\ngraph_builder = SimpleGraph()\r\nwith onnxblock.onnx_model(inference_onnx_model) as accessor:\r\n    model_outputs = graph_builder()\r\n\r\n    # inference_onnx_model has not been manipulated inplace to be a training model\r\n    eval_model = accessor.eval_model\r\n\r\n\r\n# Build optimizer model\r\noptimizer_builder = onnxblock.optim.AdamW()\r\nwith onnxblock.onnx_model() as accessor:\r\n    optimizer_outputs = optimizer_builder()\r\n    optimizer_model = accessor.model\r\n```\r\n\r\nThe onnx building blocks provided in this pull request:\r\n- Loss\r\n  - MSELoss\r\n  - CrossEntropyLoss\r\n- Optimizer\r\n  - AdamW\r\n\r\n\r\nThe pull request also adds unit tests that test the usability of this offline tooling.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11520/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11521",
        "id": 1235700383,
        "node_id": "PR_kwDOCVq1mM43zvl_",
        "number": 11521,
        "title": "Add link to release plan",
        "user": {
            "login": "natke",
            "id": 3302433,
            "node_id": "MDQ6VXNlcjMzMDI0MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3302433?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/natke",
            "html_url": "https://github.com/natke",
            "followers_url": "https://api.github.com/users/natke/followers",
            "following_url": "https://api.github.com/users/natke/following{/other_user}",
            "gists_url": "https://api.github.com/users/natke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/natke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/natke/subscriptions",
            "organizations_url": "https://api.github.com/users/natke/orgs",
            "repos_url": "https://api.github.com/users/natke/repos",
            "events_url": "https://api.github.com/users/natke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/natke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-13T20:50:46Z",
        "updated_at": "2022-05-23T18:04:29Z",
        "closed_at": "2022-05-23T18:04:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11521",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11521",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11521.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11521.patch",
            "merged_at": "2022-05-23T18:04:29Z"
        },
        "body": "Notably the releases page gets approximately zero views. I think this will help a little bit, as people might search for ONNX Runtime current release. \r\n\r\nI'd like to improve this page even more though, perhaps with a little history and an outline of the ONNX Runtime roadmap.\r\n\r\nThis PR also removes the in-browser 404 redirection and replaces it with the static version. We do want to track and fix genuine 404s from external websites.\r\n\r\nStaged: https://natke.github.io/onnxruntime/docs/reference/releases-servicing.html",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11521/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11522",
        "id": 1235759584,
        "node_id": "PR_kwDOCVq1mM43z78o",
        "number": 11522,
        "title": "Add additional python requirements",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-13T22:18:44Z",
        "updated_at": "2022-05-20T23:16:19Z",
        "closed_at": "2022-05-20T23:16:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11522",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11522",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11522.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11522.patch",
            "merged_at": "2022-05-20T23:16:18Z"
        },
        "body": "These are used by some of the python code in the package, e.g., https://github.com/microsoft/onnxruntime/blob/0292356bd7ce5b379be8ee9820bfbf4fd321ebc5/onnxruntime/python/tools/transformers/optimizer.py#L25\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/c8270c2940f72a3722891fec7edf3c9ac542f904/onnxruntime/python/tools/symbolic_shape_infer.py#L10\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/0292356bd7ce5b379be8ee9820bfbf4fd321ebc5/onnxruntime/python/tools/transformers/torch_onnx_export_helper.py#L9",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11522/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11523",
        "id": 1235777196,
        "node_id": "I_kwDOCVq1mM5JqHas",
        "number": 11523,
        "title": "Tile fails for scalars on CPU",
        "user": {
            "login": "broune",
            "id": 1933380,
            "node_id": "MDQ6VXNlcjE5MzMzODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1933380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/broune",
            "html_url": "https://github.com/broune",
            "followers_url": "https://api.github.com/users/broune/followers",
            "following_url": "https://api.github.com/users/broune/following{/other_user}",
            "gists_url": "https://api.github.com/users/broune/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/broune/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/broune/subscriptions",
            "organizations_url": "https://api.github.com/users/broune/orgs",
            "repos_url": "https://api.github.com/users/broune/repos",
            "events_url": "https://api.github.com/users/broune/events{/privacy}",
            "received_events_url": "https://api.github.com/users/broune/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-13T22:58:16Z",
        "updated_at": "2022-08-12T08:37:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nLooking at the code, it seems this works on GPU, but on CPU tile() will give an error if called with a scalar:\r\n\r\n  https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/providers/cpu/tensor/tile.cc#L149\r\n\r\nThe spec is clear on this, allowing any shape: \"Input tensor of any shape.\"\r\n\r\n  https://github.com/onnx/onnx/blob/main/docs/Operators.md#inputs-124\r\n\r\nThis is an edge case which would also require the repeats vector to be empty, but there is nothing special about it, it functions consistently with all other cases and would be expected to be another way of spelling the identity function. I didn't run this code, but do not see this error on GPU, so presumably it works correctly there.\r\n\r\n**Urgency**\r\nIt's a bug.\r\n\r\n**System information**\r\nAny CPU\r\n\r\n**To Reproduce**\r\nDo tile on a scalar.\r\n\r\n**Expected behavior**\r\nShould be the identity.\r\n\r\n**Screenshots**\r\n\r\n**Additional context**\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11523/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11524",
        "id": 1235810119,
        "node_id": "PR_kwDOCVq1mM430Gon",
        "number": 11524,
        "title": "Update gather to use multiple threads",
        "user": {
            "login": "RyanUnderhill",
            "id": 38674843,
            "node_id": "MDQ6VXNlcjM4Njc0ODQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38674843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RyanUnderhill",
            "html_url": "https://github.com/RyanUnderhill",
            "followers_url": "https://api.github.com/users/RyanUnderhill/followers",
            "following_url": "https://api.github.com/users/RyanUnderhill/following{/other_user}",
            "gists_url": "https://api.github.com/users/RyanUnderhill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RyanUnderhill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RyanUnderhill/subscriptions",
            "organizations_url": "https://api.github.com/users/RyanUnderhill/orgs",
            "repos_url": "https://api.github.com/users/RyanUnderhill/repos",
            "events_url": "https://api.github.com/users/RyanUnderhill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RyanUnderhill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-14T00:32:41Z",
        "updated_at": "2022-05-17T02:31:15Z",
        "closed_at": "2022-05-17T02:31:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11524",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11524",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11524.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11524.patch",
            "merged_at": "2022-05-17T02:31:15Z"
        },
        "body": "**Description**: GatherElements wouldn't distribute the work across multiple threads\r\n\r\n**Motivation and Context**\r\nA user was comparing the performance of Onnxruntime vs Pytorch and saw that the latest Pytorch was 2x faster than Onnxruntime. A profile showed that they were using all CPU cores but we were limited to 1.\r\n\r\nThere is a separate issue where they were using Onnxruntime inefficiently (there's a memcpy on every Run() call to copy the output tensor, using io-bindings avoids the memcpy).\r\n\r\nHere's some performance data comparing the old vs new. Note that there is a slight perf hit for the single threaded case, as it has to divide up the work into independent chunks vs a slightly faster incremental calculation between chunks.\r\n\r\nNew version using 8 threads:\r\n\r\nonnx model: 0.770249s after 10000 iterations\r\npytorch model: 3.669060s after 10000 iterations\r\n\r\nNew version limited to one thread:\r\n\r\nonnx model: 3.474726s after 10000 iterations\r\npytorch model: 3.579055s after 10000 iterations\r\n\r\nOld version:\r\n\r\nonnx model: 2.905542s after 10000 iterations\r\npytorch model: 3.634197s after 10000 iterations\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11524/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11525",
        "id": 1236060202,
        "node_id": "I_kwDOCVq1mM5JrMgq",
        "number": 11525,
        "title": "Fake quantization when the padding of convollution layer is asymmetric or pad_w != pad_h",
        "user": {
            "login": "fengyuentau",
            "id": 17219438,
            "node_id": "MDQ6VXNlcjE3MjE5NDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/17219438?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fengyuentau",
            "html_url": "https://github.com/fengyuentau",
            "followers_url": "https://api.github.com/users/fengyuentau/followers",
            "following_url": "https://api.github.com/users/fengyuentau/following{/other_user}",
            "gists_url": "https://api.github.com/users/fengyuentau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fengyuentau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fengyuentau/subscriptions",
            "organizations_url": "https://api.github.com/users/fengyuentau/orgs",
            "repos_url": "https://api.github.com/users/fengyuentau/repos",
            "events_url": "https://api.github.com/users/fengyuentau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fengyuentau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-14T16:15:50Z",
        "updated_at": "2022-07-13T02:37:13Z",
        "closed_at": "2022-07-12T23:40:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nConsider a very simple model which has only one convolution layer with one input and one output. If the convolution layer has asymmetric padding or padding of pad_w != pad_h, using `onnxruntime.quantization.quantiza_static` generates fake-quantized model like the following:\r\n<img width=\"628\" alt=\"image\" src=\"https://user-images.githubusercontent.com/17219438/168438193-8155833a-9824-4be2-8981-f0cf928b8b3c.png\">\r\n\r\n\r\n**Urgency**\r\nProbably none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 20.04.4 LTS\r\n- ONNX Runtime installed from (source or binary): binary\r\n- ONNX Runtime version: 1.11.1\r\n- Python version: 3.9.7\r\n- Visual Studio version (if applicable): None\r\n- GCC/Compiler version (if compiling from source): None\r\n- CUDA/cuDNN version: None\r\n- GPU model and memory: None\r\n\r\n**To Reproduce**\r\n```python\r\n # conv with padding of pad_w != pad_h\r\n from torch.autograd import Variable\r\n import torch\r\n import torch.nn as nn\r\n import numpy as np\r\n import onnx # version 1.11.1\r\n import onnxruntime as rt\r\n from onnxruntime.quantization import quantize_static, CalibrationDataReader, QuantType\r\n\r\n input = Variable(torch.randn(1, 3, 10, 10))\r\n conv = nn.Conv2d(3, 5, kernel_size=3, stride=2, padding=(2, 1))\r\n torch.onnx.export(conv, input, 'conv.onnx', export_params=True, opset_version=12)\r\n\r\n class DataReader(CalibrationDataReader):\r\n      def __init__(self, model_path, batchsize=5):\r\n          sess = rt.InferenceSession(model_path, None)\r\n          input_name = sess.get_inputs()[0].name\r\n          input_shape = sess.get_inputs()[0].shape\r\n          calib_data = np.random.uniform(-1, 1, size=[batchsize] + input_shape[1:]).astype(\"float32\")\r\n          self.enum_data_dicts = iter([{input_name: np.expand_dims(x, axis=0)} for x in calib_data])\r\n\r\n      def get_next(self):\r\n          return next(self.enum_data_dicts, None)\r\n\r\n dr = DataReader('conv.onnx')\r\n quantize_static('conv.onnx', 'conv-quant.onnx', dr, per_channel=False,\r\n                      activation_type=QuantType.QInt8, weight_type=QuantType.QInt8)\r\n```\r\nOr you can replace `'conv.onnx'` with [the one of asymmetric padding](https://github.com/opencv/opencv_extra/blob/4.x/testdata/dnn/onnx/models/conv_asymmetric_pads.onnx) to try quantizing asymmetric-padded conv layer.\r\n\r\n**Expected behavior**\r\nQuantized model (generated by [neural compressor](https://github.com/intel/neural-compressor)) of the structure like the following:\r\n<img width=\"552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/17219438/168439915-5b6367fe-289d-41c7-80a8-2c7f8392c505.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11525/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11528",
        "id": 1236234211,
        "node_id": "I_kwDOCVq1mM5Jr2_j",
        "number": 11528,
        "title": "How to use the onnxruntime API to request cuda memory ",
        "user": {
            "login": "scuizhibin",
            "id": 32003970,
            "node_id": "MDQ6VXNlcjMyMDAzOTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32003970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scuizhibin",
            "html_url": "https://github.com/scuizhibin",
            "followers_url": "https://api.github.com/users/scuizhibin/followers",
            "following_url": "https://api.github.com/users/scuizhibin/following{/other_user}",
            "gists_url": "https://api.github.com/users/scuizhibin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scuizhibin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scuizhibin/subscriptions",
            "organizations_url": "https://api.github.com/users/scuizhibin/orgs",
            "repos_url": "https://api.github.com/users/scuizhibin/repos",
            "events_url": "https://api.github.com/users/scuizhibin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scuizhibin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-15T09:28:20Z",
        "updated_at": "2022-05-18T19:11:45Z",
        "closed_at": "2022-05-18T19:11:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": " Ort::AllocatorWithDefaultOptions allocator_;\r\n allocator_ = Ort::AllocatorWithDefaultOptions(); \r\nfloat *columns = (float *)allocator_.Alloc(sizeof(float) * column_len);\r\n\r\n\r\nThis is the cpu memory request. My question is how to allocate memory on gpu accordingly? Is there a corresponding onnxruntime-API?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11528/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11529",
        "id": 1236234561,
        "node_id": "I_kwDOCVq1mM5Jr3FB",
        "number": 11529,
        "title": "How to release a session properly?",
        "user": {
            "login": "beelabcloud",
            "id": 69347885,
            "node_id": "MDQ6VXNlcjY5MzQ3ODg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/69347885?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beelabcloud",
            "html_url": "https://github.com/beelabcloud",
            "followers_url": "https://api.github.com/users/beelabcloud/followers",
            "following_url": "https://api.github.com/users/beelabcloud/following{/other_user}",
            "gists_url": "https://api.github.com/users/beelabcloud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beelabcloud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beelabcloud/subscriptions",
            "organizations_url": "https://api.github.com/users/beelabcloud/orgs",
            "repos_url": "https://api.github.com/users/beelabcloud/repos",
            "events_url": "https://api.github.com/users/beelabcloud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beelabcloud/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2022-05-15T09:30:00Z",
        "updated_at": "2023-02-08T03:20:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I 'm using ORT C++ API to infer several models sequentialy. The consumption of memory is pretty much, so I try to unload some sessones after inference. However the consumption is not fully freed, and no memory leak detected. And I notice that the memory will be freed by the OS after a while (1 hour background alive), I guess, it might be recycled by the mechanism of system garbage collection. So I am wondering it is there some magic API to recycle the garbage,  and I would like to know what cause the memory residents, the threads pooling or the weights?  Is there a way to tell the OS to do recycle instantly? Thanks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11529/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11530",
        "id": 1236246277,
        "node_id": "I_kwDOCVq1mM5Jr58F",
        "number": 11530,
        "title": "Fail to convert model with reusable blocks",
        "user": {
            "login": "homomorfism",
            "id": 66618116,
            "node_id": "MDQ6VXNlcjY2NjE4MTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/66618116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homomorfism",
            "html_url": "https://github.com/homomorfism",
            "followers_url": "https://api.github.com/users/homomorfism/followers",
            "following_url": "https://api.github.com/users/homomorfism/following{/other_user}",
            "gists_url": "https://api.github.com/users/homomorfism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homomorfism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homomorfism/subscriptions",
            "organizations_url": "https://api.github.com/users/homomorfism/orgs",
            "repos_url": "https://api.github.com/users/homomorfism/repos",
            "events_url": "https://api.github.com/users/homomorfism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homomorfism/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-05-15T10:23:14Z",
        "updated_at": "2022-05-19T18:06:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\n`onnxruntime.quantization.quantize_static` fails to convert model with reusable blocks and `onnx.checker.check_model` gives to user error, which is hard to understand\r\n\r\n**Urgency**\r\nNot urgent\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac 2019 + also tested on Ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): pip install onnxruntime\r\n- ONNX Runtime version: 1.11.0\r\n- Python version: 3.9.10, also tested on 3.7.7\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source): \r\n- CUDA/cuDNN version: no cuda\r\n- GPU model and memory: no gpu\r\n\r\n\r\n**To Reproduce**\r\n- Code is attached below\r\n- zip-file with onnx model: [static.onnx.zip](https://github.com/microsoft/onnxruntime/files/8694724/static.onnx.zip)\r\n\r\n\r\n**Expected behavior**\r\n\r\n- `onnxruntime.quantization.quantize_static` throw concise text error that tells static quantization do not support duplicated blocks (spend too much time on debugging it).  \r\n- or, before quantizing model duplicate all nodes in model that have same outputs (preferable solution)\r\n\r\n\r\nCode to reproduce: \r\n```python\r\nfrom onnxruntime.quantization import quantize_static, CalibrationDataReader, QuantFormat\r\nimport torch.nn as nn\r\nimport torch\r\nimport onnx\r\n\r\nonnx_path = 'model.onnx'\r\nstatic_path = 'static.onnx'\r\n\r\nexample = torch.randn(1, 3, 20, 20), torch.randn(1, 3, 20, 20)\r\n\r\n\r\nclass Model(nn.Module):\r\n    def __init__(self):\r\n        super(Model, self).__init__()\r\n\r\n        self.block = nn.Conv2d(3, 64, kernel_size=(3, 3))\r\n\r\n    def forward(self, x, y):\r\n        return self.block(x), self.block(y)\r\n\r\n\r\nmodel = Model()\r\n_ = model(*example)\r\nmodel.requires_grad_(False).eval()\r\n\r\ntorch.onnx.export(model, example, onnx_path,\r\n                  input_names=['i1', 'i2'],\r\n                  output_names=['f1', 'f2'],\r\n                  opset_version=15)\r\n\r\nonnx.checker.check_model(onnx.load_model(onnx_path))\r\n\r\n\r\nclass DataReader(CalibrationDataReader):\r\n    def __init__(self):\r\n        self.counter = 0\r\n        self.end = 10\r\n\r\n    def get_next(self) -> dict:\r\n        if self.counter < self.end:\r\n            self.counter += 1\r\n            return {\"i1\": torch.randn(1, 3, 20, 20).numpy(),\r\n                    \"i2\": torch.randn(1, 3, 20, 20).numpy()}\r\n        else:\r\n            return None\r\n\r\n\r\nquantize_static(onnx_path,\r\n                static_path,\r\n                DataReader(),\r\n                per_channel=True,\r\n                quant_format=QuantFormat.QDQ)\r\n\r\nonnx.checker.check_model(onnx.load_model(static_path))\r\n```\r\n\r\nError code:\r\n```\r\nValidationError                           Traceback (most recent call last)\r\nInput In [46], in <cell line: 53>()\r\n     44             return None\r\n     47 quantize_static(onnx_path,\r\n     48                 static_path,\r\n     49                 DataReader(),\r\n     50                 per_channel=True,\r\n     51                 quant_format=QuantFormat.QDQ)\r\n---> 53 onnx.checker.check_model(onnx.load_model(static_path))\r\n\r\nFile ~/.pyenv/versions/3.9.10/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/onnx/checker.py:106, in check_model(model, full_check)\r\n    104 if sys.getsizeof(protobuf_string) > MAXIMUM_PROTOBUF:\r\n    105     raise ValueError('This protobuf of onnx model is too large (>2GB). Call check_model with model path instead.')\r\n--> 106 C.check_model(protobuf_string)\r\n    107 if full_check:\r\n    108     onnx.shape_inference.infer_shapes(model, check_type=True, strict_mode=True)\r\n\r\nValidationError: Graph must be in single static assignment (SSA) form, however 'block.weight_DequantizeLinear' has been used as output names multiple times.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11530/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11531",
        "id": 1236535635,
        "node_id": "PR_kwDOCVq1mM432NW3",
        "number": 11531,
        "title": "[trt-ep-perf] Fix upload time of EP perf data",
        "user": {
            "login": "adrianlizarraga",
            "id": 19691973,
            "node_id": "MDQ6VXNlcjE5NjkxOTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/19691973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrianlizarraga",
            "html_url": "https://github.com/adrianlizarraga",
            "followers_url": "https://api.github.com/users/adrianlizarraga/followers",
            "following_url": "https://api.github.com/users/adrianlizarraga/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrianlizarraga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrianlizarraga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrianlizarraga/subscriptions",
            "organizations_url": "https://api.github.com/users/adrianlizarraga/orgs",
            "repos_url": "https://api.github.com/users/adrianlizarraga/repos",
            "events_url": "https://api.github.com/users/adrianlizarraga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrianlizarraga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-05-16T02:29:27Z",
        "updated_at": "2022-05-18T22:36:22Z",
        "closed_at": "2022-05-18T22:36:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11531",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11531",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11531.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11531.patch",
            "merged_at": "2022-05-18T22:36:21Z"
        },
        "body": "**Description**: Fix the post.py script to use a correct \"upload time\" instead of the day/month/year of the commit date.\r\n\r\n**Motivation and Context**\r\nThe post.py script incorrectly uses the commit date (e.g., 2022-05-15) as the upload time associated with uploaded data. This makes it difficult to cleanly distinguish data entries that were uploaded in the same day. For example, some of our internal reports unintentionally aggregated data entries that were uploaded in the same day, which resulted in inflated performance metrics.\r\n\r\nThis PR sets the upload time to the date and time (UTC) at which the `post.py` script is called (e.g., `2022-05-16 02:13:12+00:00`).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11531/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11532",
        "id": 1236544570,
        "node_id": "I_kwDOCVq1mM5JtCw6",
        "number": 11532,
        "title": "CPUExecutionProvider outputs wrong value for a quantized model",
        "user": {
            "login": "shinh",
            "id": 29770,
            "node_id": "MDQ6VXNlcjI5Nzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/29770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shinh",
            "html_url": "https://github.com/shinh",
            "followers_url": "https://api.github.com/users/shinh/followers",
            "following_url": "https://api.github.com/users/shinh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shinh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shinh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shinh/subscriptions",
            "organizations_url": "https://api.github.com/users/shinh/orgs",
            "repos_url": "https://api.github.com/users/shinh/repos",
            "events_url": "https://api.github.com/users/shinh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shinh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-16T02:47:39Z",
        "updated_at": "2022-05-19T17:57:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\nIf you input `np.zeros((1, 120, 28, 28))` to [this model](http://shinh.skr.jp/t/quant_wrong.onnx), the output from CPU mismatches with the one from CUDA. I believe CUDA is right.\r\n\r\n\r\n**Urgency**\r\nnone\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04\r\n- ONNX Runtime installed from (source or binary): binary\r\n- ONNX Runtime version: 1.11.0\r\n- Python version: 3.8.10\r\n- Visual Studio version (if applicable): n/a\r\n- GCC/Compiler version (if compiling from source): n/a\r\n- CUDA/cuDNN version: 11.5\r\n- GPU model and memory:GeForce GTX 1060 3GB\r\n\r\n**To Reproduce**\r\n\r\nDownload http://shinh.skr.jp/t/quant_wrong.onnx and run the following script:\r\n\r\n```\r\nimport numpy as np\r\nimport onnx\r\nfrom onnx import numpy_helper\r\nimport onnxruntime as ort\r\n\r\n\r\nmodel_name = \"quant_wrong.onnx\"\r\n\r\nx = np.zeros((1, 120, 28, 28)).astype(np.float32)\r\n\r\nfor provider in [\"CPUExecutionProvider\", \"CUDAExecutionProvider\"]:\r\n    sess = ort.InferenceSession(model_name, providers=[provider])\r\n    y, = sess.run([\"output\"], {\"input\": x})\r\n    print(provider, y.sum())\r\n\r\n# Compute the correct answer.\r\nfor init in onnx.load(model_name).graph.initializer:\r\n    if init.name == \"onnx::Conv_12_quantized\":\r\n        quantized_bias = numpy_helper.to_array(init)\r\n    if init.name == \"onnx::Conv_12_quantized_scale\":\r\n        quantized_scale = numpy_helper.to_array(init)\r\n    if init.name == \"onnx::Conv_12_quantized_zero_point\":\r\n        quantized_zero_point = numpy_helper.to_array(init)\r\n\r\nbias = quantized_bias * quantized_scale + quantized_zero_point\r\nexpected = np.fmax(bias, 0)  # Relu\r\nprint(\"expected\", expected.sum() * 28 * 28)\r\n```\r\n\r\nI got this result:\r\n\r\n```\r\nCPUExecutionProvider 40.80013\r\nCUDAExecutionProvider 38148.113\r\nexpected 38293.33673545718\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe three output values should be similar. I think the output from CPU is wrong.\r\n\r\n**Additional context**\r\n\r\nThis ONNX model does per_channel quantization only for weight. Bias is quantized per-tensor mannar. I'm guessing CPUExecutionProvider has a wrong assumption on quantized model.\r\n\r\nThis ONNX was created when I'm debugging https://github.com/microsoft/onnxruntime/issues/11415 . I used the last code snippet I put on the issue to create this ONNX.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11532/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11533",
        "id": 1236835538,
        "node_id": "PR_kwDOCVq1mM433Mcu",
        "number": 11533,
        "title": "Peixuanzuo/update rocm ci",
        "user": {
            "login": "PeixuanZuo",
            "id": 94887879,
            "node_id": "U_kgDOBaffxw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94887879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeixuanZuo",
            "html_url": "https://github.com/PeixuanZuo",
            "followers_url": "https://api.github.com/users/PeixuanZuo/followers",
            "following_url": "https://api.github.com/users/PeixuanZuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeixuanZuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeixuanZuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeixuanZuo/subscriptions",
            "organizations_url": "https://api.github.com/users/PeixuanZuo/orgs",
            "repos_url": "https://api.github.com/users/PeixuanZuo/repos",
            "events_url": "https://api.github.com/users/PeixuanZuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeixuanZuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-16T08:55:55Z",
        "updated_at": "2022-05-20T03:07:23Z",
        "closed_at": "2022-05-20T03:07:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11533",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11533",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11533.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11533.patch",
            "merged_at": "2022-05-20T03:07:22Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\nNow the rocm ci pipeline base on ROCm4.3.1 + torch1.9.0\r\nthe ROCm version and Torch version is too old.\r\n1. Update the pipeline base on ROCm5.1.1 + torch1.10.0\r\n2. Update the ci data which test on ROCm5.1.1 + torch1.10/ delete ci data base on ROCm4.3.1\r\n\r\nBecause of we don't have ROCm5.1.1 + torch1.11.0 python package, and our ci pipeline need pytorch base on right ROCm version. So ROCm5.1.1 + torch1.10 is acceptable.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11533/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11534",
        "id": 1236875459,
        "node_id": "PR_kwDOCVq1mM433U3g",
        "number": 11534,
        "title": "[CUDA] Implement BitmaskDropout, BitmaskBiasDropout and BitmaskDropoutGrad",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-16T09:28:32Z",
        "updated_at": "2022-05-27T09:24:49Z",
        "closed_at": "2022-05-27T09:24:48Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11534",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11534",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11534.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11534.patch",
            "merged_at": "2022-05-27T09:24:48Z"
        },
        "body": "Dropout masks which use boolean tensors are fairly wasteful from a space perspective, this PR implements bitmask versions of Dropout, BiasDropout and DropoutGrad, resulting in a space savings of 8x for the mask output. In detail, this PR includes:\r\n- CUDA and ROCm BitmaskDropout, BitmaskBiasDropout and BitmaskDropoutGrad implementation based on current kernel codes\r\n- Use CUDA Warp-Level Primitives for bitmask calculation, including using new APIs to enhance perf in A100\r\n- Graph optimizer to transform Dropout->DropoutGrad to BitmaskDropout->BitmaskDropoutGrad, BiasDropout->DropoutGrad to BitmaskBiasDropout->BitmaskDropoutGrad for CUDA/ROCm EP\r\n- Dropout/BiasDropout bugfix, previous codes call __syncthreads in conditions, which may result in some threads not calling __syncthreads, this may cause execution hang or unexpected data results.\r\n\r\n### Memory\r\nTested using BERT-L with 24 hidden layers, 32 batch size and 512 seq length, running on 32G V100\r\nBefore:\r\nbefore forward memory (MB) | allocated: 1497.58984375 | max allocated: 29291.64697265625\r\nafter forward memory (MB) | allocated: 29015.27783203125 | max allocated: 29291.64697265625\r\nafter backward memory (MB) | allocated: 1497.5908203125 | max allocated: 29291.64697265625\r\n\r\nAfter:\r\nbefore forward memory (MB) | allocated: 1510.4287109375 | max allocated: 26788.31591796875\r\nafter forward memory (MB) | allocated: 26490.55126953125 | max allocated: 26788.31591796875\r\nafter backward memory (MB) | allocated: 1510.4296875 | max allocated: 26788.31591796875\r\n\r\nWe can see ~10% peak memory reduced.\r\n\r\n### Perf\r\nTested using same model above on V100.\r\n  | Dropout | BiasDropout | DropoutGrad\r\n-- | -- | -- | --\r\nOld | 1849445 | 141322 | 1675682\r\nNew | 1675195 | 127323 | 1517790\r\nOld/New | 1.104017741 | 1.109948713 | 1.104027566\r\n\r\nDue to data load/write, we can also see ~1.1x perf gain for all dropout related kernels. This perf gain is also observed in A100 and AMD device.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11535",
        "id": 1236973296,
        "node_id": "I_kwDOCVq1mM5Jurbw",
        "number": 11535,
        "title": "TensorRT EP session creation fails with invalid weights type of Int8 when ORT_TENSORRT_INT8_ENABLE set to 1",
        "user": {
            "login": "PeterZhizhin",
            "id": 5682184,
            "node_id": "MDQ6VXNlcjU2ODIxODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5682184?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeterZhizhin",
            "html_url": "https://github.com/PeterZhizhin",
            "followers_url": "https://api.github.com/users/PeterZhizhin/followers",
            "following_url": "https://api.github.com/users/PeterZhizhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeterZhizhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeterZhizhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeterZhizhin/subscriptions",
            "organizations_url": "https://api.github.com/users/PeterZhizhin/orgs",
            "repos_url": "https://api.github.com/users/PeterZhizhin/repos",
            "events_url": "https://api.github.com/users/PeterZhizhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeterZhizhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-16T10:53:34Z",
        "updated_at": "2022-05-16T20:08:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI am trying to load a quantized model in ONNX Runtime, loading fails with the following error:\r\n```\r\n$ python3.8 test_crash.py --cuda-device 3 transformer_encoder_layer_shape_inferred_quantized.onnx\r\n2022-05-16 13:39:03.160892897 [W:onnxruntime:Default, tensorrt_execution_provider.h:59 log] [2022-05-16 10:39:03 WARNING] external/onnx-tensorrt/onnx2trt_utils.cpp:364: Your ONNX model has been generated with INT64 weights, while TensorRT does not natively support INT64. Attempting to cast down to INT32.\r\n2022-05-16 13:39:03.161532469 [E:onnxruntime:Default, tensorrt_execution_provider.h:57 log] [2022-05-16 10:39:03   ERROR] layer.fc2.bias_quantized: invalid weights type of Int8\r\n```\r\n\r\nHere is the model checkpoint: https://drive.google.com/file/d/1bYnCHQYFp9T8Ohh2AWBnRuvTtid89l1v/view?usp=sharing\r\n`test_crash.py` is provided below.\r\n\r\nThe model has been quantized like this:\r\n```\r\nonnxruntime.quantization.quantize_static(model_path, quantized_model_path, calibration_data_reader)\r\n```\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): pip onnxruntime-gpu\r\n- ONNX Runtime version: 1.11.1\r\n- Python version: 3.8\r\n- CUDA/cuDNN version: 11.4\r\n- GPU model and memory: A100 40Gb\r\n\r\n**To Reproduce**\r\n1. Download the model: https://drive.google.com/file/d/1bYnCHQYFp9T8Ohh2AWBnRuvTtid89l1v/view?usp=sharing\r\n2. Run `python3 test_crash.py --cuda-device <ID of GPU available> <path to the downloaded model file>`:\r\n```python\r\nimport onnxruntime as rt\r\nimport argparse\r\nimport os\r\n\r\n\r\ndef parse_args():\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('model_path', default='transformer_encoder_layer_shape_inferred_quantized.onnx')\r\n    parser.add_argument('--cuda-device', type=int, default=None)\r\n    return parser.parse_args()\r\n\r\n\r\ndef main():\r\n    args = parse_args()\r\n\r\n    if args.cuda_device is not None:\r\n        os.environ['CUDA_VISIBLE_DEVICES'] = str(args.cuda_device)\r\n\r\n    os.environ['ORT_TENSORRT_INT8_ENABLE'] = '1'\r\n\r\n    session = rt.InferenceSession(args.model_path, rt.SessionOptions(), ['TensorrtExecutionProvider'])\r\n\r\n    print('Success!')\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n \r\n**Expected behavior**\r\n`Success!` is printed, no segfault occurs.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nI am trying a layer of a transformer network in my neural network.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11535/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11536",
        "id": 1237092163,
        "node_id": "I_kwDOCVq1mM5JvIdD",
        "number": 11536,
        "title": "onnxruntime cannot used in a subgraph an output created in the main graph",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-16T12:34:37Z",
        "updated_at": "2022-05-31T17:21:31Z",
        "closed_at": "2022-05-31T17:21:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\nonnxruntime cannot load a mode due to the following error: ``Graph output (one) does not exist in the graph``. This resul created with operator Constant is returned by a subgraph linked to a branch of an operator If.\r\n\r\n**Urgency**\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): >indows\r\n- ONNX Runtime installed from (source or binary): soucrce\r\n- ONNX Runtime version: 1.12\r\n- Python version: 3.9\r\n\r\n**To Reproduce**\r\n\r\nLoad the following file: [switch_axes.inlined.onnx.zip](https://github.com/microsoft/onnxruntime/files/8700040/switch_axes.inlined.onnx.zip).\r\n\r\n```python\r\nfrom onnxruntime import InferenceSession\r\nInferenceSession(\"...attached file\")\r\n```\r\n\r\n**Expected behavior**\r\nIt should load the model without any error.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11536/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11537",
        "id": 1237124796,
        "node_id": "I_kwDOCVq1mM5JvQa8",
        "number": 11537,
        "title": "CUDA/CPU EP session creation fails with Could not find an implementation for QuantizeLinear(13)",
        "user": {
            "login": "PeterZhizhin",
            "id": 5682184,
            "node_id": "MDQ6VXNlcjU2ODIxODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5682184?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeterZhizhin",
            "html_url": "https://github.com/PeterZhizhin",
            "followers_url": "https://api.github.com/users/PeterZhizhin/followers",
            "following_url": "https://api.github.com/users/PeterZhizhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeterZhizhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeterZhizhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeterZhizhin/subscriptions",
            "organizations_url": "https://api.github.com/users/PeterZhizhin/orgs",
            "repos_url": "https://api.github.com/users/PeterZhizhin/repos",
            "events_url": "https://api.github.com/users/PeterZhizhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeterZhizhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-16T13:02:08Z",
        "updated_at": "2022-06-01T17:51:55Z",
        "closed_at": "2022-06-01T17:51:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI am trying to load a quantized model in ONNX Runtime, loading fails with the following error:\r\n```\r\n$ python3.8 test_crash_2.py transformer_encoder_layer_shape_inferred_quantized_fails_to_load.onnx \r\nTrying CPU without optimizations...\r\nCPU without optimizations success!\r\nTrying CPU with basic optimizations...\r\nTraceback (most recent call last):\r\n  File \"test_crash_2.py\", line 34, in <module>\r\n    main()\r\n  File \"test_crash_2.py\", line 30, in main\r\n    session = rt.InferenceSession(args.model_path, session_options, ['CPUExecutionProvider'])\r\n  File \"/home/zhizhin/.local/lib/python3.8/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 335, in __init__\r\n    self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n  File \"/home/zhizhin/.local/lib/python3.8/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 381, in _create_inference_session\r\n    sess.initialize_session(providers, provider_options, disabled_optimizers)\r\nonnxruntime.capi.onnxruntime_pybind11_state.NotImplemented: [ONNXRuntimeError] : 9 : NOT_IMPLEMENTED : Could not find an implementation for QuantizeLinear(13) node with name 'x_DequantizeLinear_post_dq_post_dq_post_dq_post_dq_post_dq_post_dq_post_dq_post_dq_post_dq_post_dq_q'\r\n```\r\n\r\nThe model loads fine without optimizations, but the `ORT_ENABLE_BASIC` optimization level crashes on both CPU and CUDA EP with the same error.\r\n\r\nHere is the model checkpoint: https://drive.google.com/file/d/1mllFVs_u4zNLBPhtSpllEozmOQ9era_7/view?usp=sharing\r\n`test_crash_2.py` is provided below.\r\n\r\nThe model has been quantized like this:\r\n```\r\nonnxruntime.quantization.quantize_static(model_path, quantized_model_path, calibration_data_reader, op_types_to_quantize=['MatMul', 'Add'])\r\n```\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): pip onnxruntime-gpu\r\n- ONNX Runtime version: 1.11.1\r\n- Python version: 3.8\r\n- CUDA/cuDNN version: 11.4\r\n- GPU model and memory: A100 40Gb\r\n\r\n**To Reproduce**\r\n1. Download the model: https://drive.google.com/file/d/1mllFVs_u4zNLBPhtSpllEozmOQ9era_7/view?usp=sharing\r\n2. Run `python3 test_crash_2.py <path to the downloaded model file>`:\r\n```python\r\nimport onnxruntime as rt\r\nimport argparse\r\nimport os\r\n\r\n\r\ndef parse_args():\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('model_path', default='transformer_encoder_layer_shape_inferred_quantized.onnx')\r\n    return parser.parse_args()\r\n\r\n\r\ndef main():\r\n    args = parse_args()\r\n    session_options = rt.SessionOptions()\r\n    session_options.graph_optimization_level = rt.GraphOptimizationLevel.ORT_DISABLE_ALL\r\n\r\n    print('Trying CPU without optimizations...')\r\n    session = rt.InferenceSession(args.model_path, session_options, ['CPUExecutionProvider'])\r\n    print('CPU without optimizations success!')\r\n\r\n    print('Trying CPU with basic optimizations...')\r\n    session_options.graph_optimization_level = rt.GraphOptimizationLevel.ORT_ENABLE_BASIC\r\n    session = rt.InferenceSession(args.model_path, session_options, ['CPUExecutionProvider'])\r\n    print('CPU with basic optimizations success!')\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n \r\n**Expected behavior**\r\n`CPU with basic optimizations success!` is printed, no exception occurs. Changing `CPUExecutionProvider` to `CUDAExecutionProvider` also works.\r\n\r\n**Additional context**\r\nI am trying a layer of a transformer network in my neural network.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11537/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11538",
        "id": 1237703498,
        "node_id": "PR_kwDOCVq1mM436INf",
        "number": 11538,
        "title": "Replace ORT's function shape inference with ONNX's",
        "user": {
            "login": "gramalingam",
            "id": 10075881,
            "node_id": "MDQ6VXNlcjEwMDc1ODgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10075881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gramalingam",
            "html_url": "https://github.com/gramalingam",
            "followers_url": "https://api.github.com/users/gramalingam/followers",
            "following_url": "https://api.github.com/users/gramalingam/following{/other_user}",
            "gists_url": "https://api.github.com/users/gramalingam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gramalingam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gramalingam/subscriptions",
            "organizations_url": "https://api.github.com/users/gramalingam/orgs",
            "repos_url": "https://api.github.com/users/gramalingam/repos",
            "events_url": "https://api.github.com/users/gramalingam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gramalingam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "askhade",
                "id": 6475296,
                "node_id": "MDQ6VXNlcjY0NzUyOTY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/askhade",
                "html_url": "https://github.com/askhade",
                "followers_url": "https://api.github.com/users/askhade/followers",
                "following_url": "https://api.github.com/users/askhade/following{/other_user}",
                "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
                "organizations_url": "https://api.github.com/users/askhade/orgs",
                "repos_url": "https://api.github.com/users/askhade/repos",
                "events_url": "https://api.github.com/users/askhade/events{/privacy}",
                "received_events_url": "https://api.github.com/users/askhade/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-16T20:50:32Z",
        "updated_at": "2022-06-03T19:54:30Z",
        "closed_at": "2022-06-03T19:54:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11538",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11538",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11538.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11538.patch",
            "merged_at": "2022-06-03T19:54:29Z"
        },
        "body": "**Description**:\r\nReplace ORT's copy of InferShapeForFunctionNode by the ONNX implementation.\r\n\r\nAlso create unit-tests for testing the function-implementation.\r\n\r\n**Motivation and Context**\r\nEliminate (almost) duplicate code. The ONNX implementation is the latest version and incorporates some fixes that the original ORT version lacks. This is necessary to handle some bugs/issues in the function implementation (such as processing of nested graph-attributes in the function body).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11538/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11539",
        "id": 1237705924,
        "node_id": "PR_kwDOCVq1mM436Iv7",
        "number": 11539,
        "title": "Generalize native op creation",
        "user": {
            "login": "RandySheriffH",
            "id": 48490400,
            "node_id": "MDQ6VXNlcjQ4NDkwNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48490400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandySheriffH",
            "html_url": "https://github.com/RandySheriffH",
            "followers_url": "https://api.github.com/users/RandySheriffH/followers",
            "following_url": "https://api.github.com/users/RandySheriffH/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandySheriffH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandySheriffH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandySheriffH/subscriptions",
            "organizations_url": "https://api.github.com/users/RandySheriffH/orgs",
            "repos_url": "https://api.github.com/users/RandySheriffH/repos",
            "events_url": "https://api.github.com/users/RandySheriffH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandySheriffH/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-16T20:53:05Z",
        "updated_at": "2022-07-06T16:54:19Z",
        "closed_at": "2022-06-28T04:12:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11539",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11539",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11539.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11539.patch",
            "merged_at": "2022-06-28T04:12:15Z"
        },
        "body": "Create an API to extract EP from kernel_info, so custom op could create a native op instance not only in its constructor but also in ::compute(...). In addition, the PR added a global map to host Node(s) for created kernel instances, this is because without the matching nodes, some kernels, such as GRU, fail to initialize due to the fact that they read attribute(s) from Nodes instead of kernel info.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11539/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11540",
        "id": 1237757194,
        "node_id": "PR_kwDOCVq1mM436UHu",
        "number": 11540,
        "title": "fixed point based requantization on arm64",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-16T21:40:30Z",
        "updated_at": "2022-06-02T19:34:18Z",
        "closed_at": "2022-06-02T19:34:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11540",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11540",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11540.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11540.patch",
            "merged_at": "2022-06-02T19:34:17Z"
        },
        "body": "This PR adds fixed point based requantization for ARM64 devices.\r\nRequantization is computed with formula:\r\n    v = round(clamp(S * (I - Z), min, max))\r\nwhere v is the target value with type TOutput, which is either int8_t or uint8_t\r\n      I is the input value with type int32_t\r\n      S is the scale with type float\r\n      Z is the zero point with type same as TOutput.\r\n      min is the minimum value of type TOutput.\r\n      max is the maximum value of type TOutput.\r\nFor considerations of power consumption and some ARM devices don't even have FPUs, it is import to to be able to run\r\nquantization with integer instructions only.FixedPoint Requantization is introduced to support this feature.Its general\r\nidea is to convert scale S to fixed point. [Ruy](https://github.com/google/ruy/blob/a09683b8da7164b9c5704f88aef2dc65aa583e5d/ruy/apply_multiplier.cc#L48) and [XNNPack's](https://github.com/google/XNNPACK/blob/1e37b200d3f4ba19151eb30c1c329873d541326c/src/params-init.c#L211) method are referred for the implementation.\r\n\r\n// **NOTE** that fixed point requantization rounds half to up, whereas ONNX spec rounds half to even, so for identical\r\n// model and input the inference results may not be exactly same with option kOrtSessionOptionsConfigFixedPointRequantOnARM64 on and off. The impact should be\r\n// small in practice (NNApi EP uses same rounding).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11541",
        "id": 1237772925,
        "node_id": "I_kwDOCVq1mM5Jxup9",
        "number": 11541,
        "title": "Using a model with float input types causes space issue",
        "user": {
            "login": "lamarvwoods",
            "id": 30392882,
            "node_id": "MDQ6VXNlcjMwMzkyODgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/30392882?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lamarvwoods",
            "html_url": "https://github.com/lamarvwoods",
            "followers_url": "https://api.github.com/users/lamarvwoods/followers",
            "following_url": "https://api.github.com/users/lamarvwoods/following{/other_user}",
            "gists_url": "https://api.github.com/users/lamarvwoods/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lamarvwoods/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lamarvwoods/subscriptions",
            "organizations_url": "https://api.github.com/users/lamarvwoods/orgs",
            "repos_url": "https://api.github.com/users/lamarvwoods/repos",
            "events_url": "https://api.github.com/users/lamarvwoods/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lamarvwoods/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-05-16T21:57:13Z",
        "updated_at": "2022-06-01T02:22:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hey there,\r\nI've been working from your object detection mobile/ios example. When I tried using my own ort model instead of the default one inside the project I get an error: \"not enough space: expected 602112, got 150528\".\r\nI expected this to be caused by the fact that I changed the element type of the inputTensor to float(your example had it set as uInt8).\r\nMy problem is I can't figure out how to give enough space.\r\nThe reason I switched to float is my model takes inputs as a float array not a uInt8 array. \r\nWhat should I do?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11541/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11542",
        "id": 1237878279,
        "node_id": "PR_kwDOCVq1mM436vN_",
        "number": 11542,
        "title": "to create ort package to use onnx function-experiment branch",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-17T00:07:12Z",
        "updated_at": "2023-03-22T21:42:24Z",
        "closed_at": "2023-03-22T21:42:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11542",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11542",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11542.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11542.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11542/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11543",
        "id": 1237884395,
        "node_id": "PR_kwDOCVq1mM436wlD",
        "number": 11543,
        "title": "[CoreML EP] Fix condition in PRelu op supported check.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-17T00:15:21Z",
        "updated_at": "2022-05-17T16:03:26Z",
        "closed_at": "2022-05-17T16:03:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11543",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11543",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11543.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11543.patch",
            "merged_at": "2022-05-17T16:03:25Z"
        },
        "body": "**Description**\r\nFix condition in PRelu op supported check.\r\n\r\n**Motivation and Context**\r\nFix bug.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11544",
        "id": 1238066347,
        "node_id": "I_kwDOCVq1mM5Jy2Sr",
        "number": 11544,
        "title": "i build onnxruntime with c++ api, and create dynamic dll  and can c sharp call the dll directly?",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-17T04:55:41Z",
        "updated_at": "2022-05-19T17:05:41Z",
        "closed_at": "2022-05-19T17:05:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 18.04):\r\n- ONNX Runtime installed from (source or binary): \r\n- ONNX Runtime version:1.6\r\n- Python version:3.6\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:10.2/8.0\r\n- GPU model and memory:\r\n\r\ni build onnxruntime with c++ api, and create dynamic dll  and can c sharp call the lib directly?, and my c++ code call onnxruntime dll, and then i build my code link onnxruntime dll to create an dynamic-dll, then i call the dll by c charp \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11544/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11545",
        "id": 1238069847,
        "node_id": "I_kwDOCVq1mM5Jy3JX",
        "number": 11545,
        "title": "Undefined symbols for architecture arm64:   \"_OrtGetApiBase\" ... ld: symbol(s) not found for architecture arm64",
        "user": {
            "login": "Leiyi-Hu",
            "id": 66046309,
            "node_id": "MDQ6VXNlcjY2MDQ2MzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/66046309?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Leiyi-Hu",
            "html_url": "https://github.com/Leiyi-Hu",
            "followers_url": "https://api.github.com/users/Leiyi-Hu/followers",
            "following_url": "https://api.github.com/users/Leiyi-Hu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Leiyi-Hu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Leiyi-Hu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Leiyi-Hu/subscriptions",
            "organizations_url": "https://api.github.com/users/Leiyi-Hu/orgs",
            "repos_url": "https://api.github.com/users/Leiyi-Hu/repos",
            "events_url": "https://api.github.com/users/Leiyi-Hu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Leiyi-Hu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-17T05:01:33Z",
        "updated_at": "2022-05-17T20:35:46Z",
        "closed_at": "2022-05-17T20:35:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI just want to run onnx file with C++, and I can't #include <onnxruntime_cxx_api.h> successfully.\r\nThe ERROR is:\r\nUndefined symbols for architecture arm64:\r\n\r\n  \"_OrtGetApiBase\", referenced from:\r\n      ___cxx_global_var_init in main.cpp.o\r\nld: symbol(s) not found for architecture arm64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\n**Urgency**\r\nIf it's possible, it;s better to solve it quickly, 'cause I have a ddl next week. PLEASE!\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS Montery with Apple M1 Pro.\r\n- ONNX Runtime installed from (source or binary): onnxruntime-osx-arm64-1.11.1.tgz and onnxruntime-osx-arm64-1.10.0.tgz\r\n- ONNX Runtime version: onnxruntime-osx-arm64-1.11.1  and onnxruntime-osx-arm64-1.10.0 (I tried both of them.)\r\n- Python version: None\r\n- Visual Studio version (if applicable): I use CLion.\r\n- GCC/Compiler version (if compiling from source): None.\r\n- CUDA/cuDNN version: None.\r\n- GPU model and memory: None.\r\n\r\n**To Reproduce**\r\nJust have a main.cpp with #include and #include<onnxruntime_cxx_api.h> with the main printing \"hello word\".\r\nthe makefile or cmakelists include_directories to the onnxrutime installation path as well as folders within such as include and lib.\r\n\r\n**Expected behavior**\r\nOnly want to use onnxruntime successfully to deploy the yolov5.onnx.\r\n\r\n**Screenshots**\r\n<img width=\"1400\" alt=\"image\" src=\"https://user-images.githubusercontent.com/66046309/168732397-d380f2a9-4626-4aa4-b115-17cabe1fcf33.png\">\r\n\r\n\r\n**Additional context**\r\n- main.cpp is:\r\n#include <iostream>\r\n\r\n#include <opencv2/core.hpp>\r\n#include <opencv2/imgcodecs.hpp>\r\n#include <opencv2/opencv.hpp>\r\n#include <opencv2/highgui.hpp>\r\n#include <opencv2/core/core.hpp>\r\n#include <opencv2/imgproc/imgproc_c.h>\r\n#include <opencv2/dnn.hpp>\r\n\r\n#include <onnxruntime_cxx_api.h>\r\n\r\n#include <assert.h>\r\n#include <vector>\r\n#include <fstream>\r\n\r\nusing namespace cv;\r\nusing namespace std;\r\n// using namespace Ort;\r\nusing namespace cv::dnn;\r\n\r\nint main() {\r\n    cout << \"Exe Done!\" << endl;\r\n    return 0;\r\n}\r\n\r\n- cmakelist.txt is:\r\ncmake_minimum_required(VERSION 3.20)\r\n\r\nproject(onnx)\r\n\r\nset(CMAKE_CXX_STANDARD 14)\r\n\r\nfind_package(OpenCV REQUIRED)\r\ninclude_directories(${OpenCV_INCLUDE_DIRS})\r\n\r\ninclude_directories(\"${CMAKE_CURRENT_SOURCE_DIR}/onnxruntime-osx-arm64-1.11.1/include/\")\r\n\r\nlink_libraries(\"${CMAKE_CURRENT_SOURCE_DIR}/onnxruntime-osx-arm64-1.11.1/lib/\")\r\nadd_executable(onnx main.cpp)\r\n\r\ntarget_link_libraries(onnx ${OpenCV_LIBS})\r\ntarget_link_libraries(onnx \"${CMAKE_CURRENT_SOURCE_DIR}/onnxruntime-osx-arm64-1.11.1/lib/\")\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11545/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11546",
        "id": 1238096145,
        "node_id": "PR_kwDOCVq1mM437dzp",
        "number": 11546,
        "title": "Add BFloat16 Support for ATen Op",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-17T05:37:15Z",
        "updated_at": "2022-05-19T14:04:09Z",
        "closed_at": "2022-05-19T14:04:08Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11546",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11546",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11546.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11546.patch",
            "merged_at": "2022-05-19T14:04:08Z"
        },
        "body": "Add BFloat16 support for ATen Op.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11546/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11547",
        "id": 1238353820,
        "node_id": "I_kwDOCVq1mM5Jz8ec",
        "number": 11547,
        "title": "build onnxruntime1.11.1 error",
        "user": {
            "login": "wangyunxiaa",
            "id": 41035013,
            "node_id": "MDQ6VXNlcjQxMDM1MDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41035013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangyunxiaa",
            "html_url": "https://github.com/wangyunxiaa",
            "followers_url": "https://api.github.com/users/wangyunxiaa/followers",
            "following_url": "https://api.github.com/users/wangyunxiaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangyunxiaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangyunxiaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangyunxiaa/subscriptions",
            "organizations_url": "https://api.github.com/users/wangyunxiaa/orgs",
            "repos_url": "https://api.github.com/users/wangyunxiaa/repos",
            "events_url": "https://api.github.com/users/wangyunxiaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangyunxiaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-05-17T09:31:17Z",
        "updated_at": "2022-07-14T08:04:18Z",
        "closed_at": "2022-05-25T02:20:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\nbuild onnxruntime branch 1.11.1 from source code got error\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): aarch64 with docker\r\n- ONNX Runtime installed from (source or binary):source 1.11.1\r\n- ONNX Runtime version: 1.11.1\r\n- Python version:3.7.2\r\n- Visual Studio version (if applicable):no\r\n- GCC/Compiler version (if compiling from source):9.3.0\r\n- CUDA/cuDNN version:no\r\n- GPU model and memory:no\r\nthe base env is gcc9.3.0 and cmake 3.21.1\r\nI want to build linonnxruntime.so on arm, but when i build the projrct with:\r\n`./build.sh --config MinSizeRel  --arm --build_shared_lib --parallel`\r\nI got error as following:\r\n```\r\n/usr/local/include/c++/9.3.0/type_traits:1235:12: error: invalid use of incomplete type ‘class onnx::OperatorProto’\r\n 1235 |     struct is_trivially_destructible\r\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:55:7: note: forward declaration of ‘class onnx::OperatorProto’\r\n   55 | class OperatorProto;\r\n      |       ^~~~~~~~~~~~~\r\nIn file included from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:24,\r\n                 from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h: In instantiation of ‘class google::protobuf::Arena::InternalHelper<onnx::OperatorProto>’:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:543:52:   required from ‘static T* google::protobuf::Arena::CreateMessageInternal(google::protobuf::Arena*) [with T = onnx::OperatorProto]’\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:912:69:   required from here\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:457:36: error: ‘value’ is not a member of ‘std::is_trivially_destructible<onnx::OperatorProto>’\r\n  456 |         bool, sizeof(DestructorSkippable<T>(static_cast<const T*>(0))) ==\r\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  457 |                       sizeof(char) ||\r\n      |                       ~~~~~~~~~~~~~^~\r\n  458 |                   std::is_trivially_destructible<T>::value>\r\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h: In instantiation of ‘static T* google::protobuf::Arena::CreateMessageInternal(google::protobuf::Arena*) [with T = onnx::OperatorProto]’:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:912:69:   required from here\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:543:52: error: static assertion failed: CreateMessage can only construct types that are ArenaConstructable\r\n  543 |         InternalHelper<T>::is_arena_constructable::value,\r\n      |                                                    ^~~~~\r\nIn file included from /usr/local/include/c++/9.3.0/bits/move.h:55,\r\n                 from /usr/local/include/c++/9.3.0/bits/stl_pair.h:59,\r\n                 from /usr/local/include/c++/9.3.0/bits/stl_algobase.h:64,\r\n                 from /usr/local/include/c++/9.3.0/bits/char_traits.h:39,\r\n                 from /usr/local/include/c++/9.3.0/string:40,\r\n                 from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:8,\r\n                 from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/usr/local/include/c++/9.3.0/type_traits: In instantiation of ‘struct std::is_trivially_destructible<onnx::OperatorSetProto>’:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:457:36:   required from ‘class google::protobuf::Arena::InternalHelper<onnx::OperatorSetProto>’\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:543:52:   required from ‘static T* google::protobuf::Arena::CreateMessageInternal(google::protobuf::Arena*) [with T = onnx::OperatorSetProto]’\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:915:72:   required from here\r\n/usr/local/include/c++/9.3.0/type_traits:1235:12: error: invalid use of incomplete type ‘class onnx::OperatorSetProto’\r\n 1235 |     struct is_trivially_destructible\r\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:58:7: note: forward declaration of ‘class onnx::OperatorSetProto’\r\n   58 | class OperatorSetProto;\r\n      |       ^~~~~~~~~~~~~~~~\r\nIn file included from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:24,\r\n                 from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h: In instantiation of ‘class google::protobuf::Arena::InternalHelper<onnx::OperatorSetProto>’:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:543:52:   required from ‘static T* google::protobuf::Arena::CreateMessageInternal(google::protobuf::Arena*) [with T = onnx::OperatorSetProto]’\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:915:72:   required from here\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:457:36: error: ‘value’ is not a member of ‘std::is_trivially_destructible<onnx::OperatorSetProto>’\r\n  456 |         bool, sizeof(DestructorSkippable<T>(static_cast<const T*>(0))) ==\r\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  457 |                       sizeof(char) ||\r\n      |                       ~~~~~~~~~~~~~^~\r\n  458 |                   std::is_trivially_destructible<T>::value>\r\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h: In instantiation of ‘static T* google::protobuf::Arena::CreateMessageInternal(google::protobuf::Arena*) [with T = onnx::OperatorSetProto]’:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:915:72:   required from here\r\n/models/wangyunxia/software/onnxruntime/cmake/external/protobuf/src/google/protobuf/arena.h:543:52: error: static assertion failed: CreateMessage can only construct types that are ArenaConstructable\r\n  543 |         InternalHelper<T>::is_arena_constructable::value,\r\n      |                                                    ^~~~~\r\n[ 59%] Building CXX object CMakeFiles/onnxruntime_optimizer.dir/models/wangyunxia/software/onnxruntime/onnxruntime/core/optimizer/insert_cast_transformer.cc.o\r\n[ 59%] Building CXX object CMakeFiles/onnxruntime_framework.dir/models/wangyunxia/software/onnxruntime/onnxruntime/core/framework/node_index_info.cc.o\r\nIn file included from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.h:32,\r\n                 from /models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-operators-ml.pb.cc:4:\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-ml.pb.h:52:48: warning: ‘offsets’ defined but not used [-Wunused-variable]\r\n   52 |   static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];\r\n      |                                                ^~~~~~~\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-ml.pb.h:51:70: warning: ‘serialization_table’ defined but not used [-Wunused-variable]\r\n   51 |   static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];\r\n      |                                                                      ^~~~~~~~~~~~~~~~~~~\r\n/models/wangyunxia/software/onnxruntime/cmake/external/onnx/onnx/onnx-ml.pb.h:50:65: warning: ‘field_metadata’ defined but not used [-Wunused-variable]\r\n   50 |   static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];\r\n      |                                                                 ^~~~~~~~~~~~~~\r\nmake[2]: *** [external/onnx/CMakeFiles/onnx.dir/build.make:692: external/onnx/CMakeFiles/onnx.dir/onnx/onnx-operators-ml.pb.cc.o] Error 1\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11547/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11548",
        "id": 1238356849,
        "node_id": "I_kwDOCVq1mM5Jz9Nx",
        "number": 11548,
        "title": "Non-zero status code returned ",
        "user": {
            "login": "pythondever",
            "id": 24561457,
            "node_id": "MDQ6VXNlcjI0NTYxNDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24561457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pythondever",
            "html_url": "https://github.com/pythondever",
            "followers_url": "https://api.github.com/users/pythondever/followers",
            "following_url": "https://api.github.com/users/pythondever/following{/other_user}",
            "gists_url": "https://api.github.com/users/pythondever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pythondever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pythondever/subscriptions",
            "organizations_url": "https://api.github.com/users/pythondever/orgs",
            "repos_url": "https://api.github.com/users/pythondever/repos",
            "events_url": "https://api.github.com/users/pythondever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pythondever/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            },
            {
                "id": 2186357781,
                "node_id": "MDU6TGFiZWwyMTg2MzU3Nzgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:CUDA",
                "name": "ep:CUDA",
                "color": "0052CC",
                "default": false,
                "description": "issues related to the CUDA execution provider"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "RandySheriffH",
            "id": 48490400,
            "node_id": "MDQ6VXNlcjQ4NDkwNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48490400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandySheriffH",
            "html_url": "https://github.com/RandySheriffH",
            "followers_url": "https://api.github.com/users/RandySheriffH/followers",
            "following_url": "https://api.github.com/users/RandySheriffH/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandySheriffH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandySheriffH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandySheriffH/subscriptions",
            "organizations_url": "https://api.github.com/users/RandySheriffH/orgs",
            "repos_url": "https://api.github.com/users/RandySheriffH/repos",
            "events_url": "https://api.github.com/users/RandySheriffH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandySheriffH/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "RandySheriffH",
                "id": 48490400,
                "node_id": "MDQ6VXNlcjQ4NDkwNDAw",
                "avatar_url": "https://avatars.githubusercontent.com/u/48490400?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RandySheriffH",
                "html_url": "https://github.com/RandySheriffH",
                "followers_url": "https://api.github.com/users/RandySheriffH/followers",
                "following_url": "https://api.github.com/users/RandySheriffH/following{/other_user}",
                "gists_url": "https://api.github.com/users/RandySheriffH/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RandySheriffH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RandySheriffH/subscriptions",
                "organizations_url": "https://api.github.com/users/RandySheriffH/orgs",
                "repos_url": "https://api.github.com/users/RandySheriffH/repos",
                "events_url": "https://api.github.com/users/RandySheriffH/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RandySheriffH/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 20,
        "created_at": "2022-05-17T09:33:40Z",
        "updated_at": "2022-08-12T08:37:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI exported an onnx model can run in CPUExecutionProvider，But when I use GPUExecutionProvider got Error\r\n\r\n2022-05-17 17:30:35.309693323 [E:onnxruntime:Default, cuda_call.cc:118 CudaCall] CUDNN failure 3: CUDNN_STATUS_BAD_PARAM ; GPU=0 ; hostname=pc-Z390-GAMING-X ; expr=cudnnAddTensor(Base::CudnnHandle(), &alpha, Base::s_.z_tensor, Base::s_.z_data, &alpha, Base::s_.y_tensor, Base::s_.y_data); \r\n2022-05-17 17:30:35.309720084 [E:onnxruntime:, sequential_executor.cc:364 Execute] Non-zero status code returned while running FusedConv node. Name:'Conv_34' Status Message: CUDNN error executing cudnnAddTensor(Base::CudnnHandle(), &alpha, Base::s_.z_tensor, Base::s_.z_data, &alpha, Base::s_.y_tensor, Base::s_.y_data)\r\nTraceback (most recent call last):\r\n  File \"pred_onnx.py\", line 97, in <module>\r\n    pred_onnx(model, im_path)\r\n  File \"pred_onnx.py\", line 80, in pred_onnx\r\n    pred = session.run([output_name], {input_name: image})[0]\r\n  File \"/home/pc/anaconda3/lib/python3.8/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 192, in run\r\n    return self._sess.run(output_names, input_feed, run_options)\r\nonnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Non-zero status code returned while running FusedConv node. Name:'Conv_34' Status Message: CUDNN error executing cudnnAddTensor(Base::CudnnHandle(), &alpha, Base::s_.z_tensor, Base::s_.z_data, &alpha, Base::s_.y_tensor, Base::s_.y_data)\r\n\r\nhow can i fix this error ？\r\n\r\n**System information**\r\n- OS Platform and Distribution: ubuntu18.04\r\n- ONNX Runtime installed from (source or binary): \r\n- ONNX Runtime version:1.9.0\r\n- Python version:3.8.8\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:11.1/8.0\r\n- GPU model and memory:Nvidia Geforce 3070\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11548/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11549",
        "id": 1238505759,
        "node_id": "I_kwDOCVq1mM5J0hkf",
        "number": 11549,
        "title": "Windows CUDA_PATH is set but CUDA wasn't able to be loaded",
        "user": {
            "login": "stentll",
            "id": 89965725,
            "node_id": "MDQ6VXNlcjg5OTY1NzI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/89965725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stentll",
            "html_url": "https://github.com/stentll",
            "followers_url": "https://api.github.com/users/stentll/followers",
            "following_url": "https://api.github.com/users/stentll/following{/other_user}",
            "gists_url": "https://api.github.com/users/stentll/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stentll/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stentll/subscriptions",
            "organizations_url": "https://api.github.com/users/stentll/orgs",
            "repos_url": "https://api.github.com/users/stentll/repos",
            "events_url": "https://api.github.com/users/stentll/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stentll/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2186357781,
                "node_id": "MDU6TGFiZWwyMTg2MzU3Nzgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:CUDA",
                "name": "ep:CUDA",
                "color": "0052CC",
                "default": false,
                "description": "issues related to the CUDA execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-17T11:36:06Z",
        "updated_at": "2022-05-18T08:09:04Z",
        "closed_at": "2022-05-18T08:09:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI am trying to create an inference session with CUDAExecutionProvider on Windows 10 but I get the following error when creating the session:\r\n\r\n\r\n> 2022-05-17 13:32:04.3606784 [E:onnxruntime:Default, provider_bridge_ort.cc:995 onnxruntime::ProviderLibrary::Get] LoadLibrary failed with error 126 \"The specified module could not be found.\" when trying to load \"c:\\Users\\MyUserName\\Miniconda3\\envs\\conda_env\\lib\\site-packages\\onnxruntime\\capi\\onnxruntime_providers_cuda.dll\"\r\n> \r\n> RuntimeError: D:\\a\\_work\\1\\s\\onnxruntime\\python\\onnxruntime_pybind_state.cc:531 onnxruntime::python::CreateExecutionProviderInstance CUDA_PATH is set but CUDA wasn't able to be loaded. Please install the correct version of CUDA and cuDNN as mentioned in the GPU requirements page (https://onnxruntime.ai/docs/reference/execution-providers/CUDA-ExecutionProvider.html#requirements), make sure they're in the PATH, and that your GPU is supported.\r\n\r\n\r\nNote that the error starts with `D:\\a\\...` but I don't actually have a D:\\ drive on my PC, only C:\\\r\n\r\nI have installed the necessary prerequisites (and correct versions of those) from ONNXRuntime site https://onnxruntime.ai/docs/execution-providers/CUDA-ExecutionProvider.html.\r\n\r\nMy system variables include:\r\nCUDA_PATH=C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.4\r\nCUDA_PATH_V11_4=C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.4\r\ncuDNN_PATH=C:\\Program Files\\NVIDIA\\CUDNN\\v8.2.2.26\r\n\r\nand also system PATH variables:\r\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.4\\bin\r\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.4\\libnvvp\r\nC:\\Program Files\\NVIDIA\\CUDNN\\v8.2.2.26\\bin\r\nC:\\Program Files\\NVIDIA\\CUDNN\\v8.2.2.26\\lib\\x64\r\n\r\n\r\nI feel like I have completed the advice in the error message - CUDA path set, correct versions of CUDA and cuDNN installed, GPU supported - but I still can't use the EP. What am I missing?\r\n\r\n\r\n\r\n**Urgency**\r\nI would like to solve this by end of May 2022.\r\n\r\n**System information**\r\n- OS Platform and Distribution: Windows 10 Enterprise 20H2, os build 19042.1645\r\n- ONNX Runtime installed from: pip install onnxruntime-gpu==1.10\r\n- ONNX Runtime version: 1.10.0\r\n- Python version: 3.8.13\r\n- CUDA/cuDNN version: CUDA==11.4, cuDNN==8.2.2.26\r\n- GPU model and memory: NVIDIA RTX T1200, 4096MiB, Turing architecture (more info at https://www.notebookcheck.net/NVIDIA-T1200-Laptop-GPU-GPU-Benchmarks-and-Specs.532550.0.html)\r\n\r\n**To Reproduce**\r\nRun the following piece of code with any .onnx model.\r\n```python\r\nimport onnxruntime as ort\r\n\r\nproviders = [\r\n    (\r\n        \"CUDAExecutionProvider\",\r\n        {\r\n            \"device_id\": 0,\r\n            \"arena_extend_strategy\": \"kSameAsRequested\",\r\n            \"cudnn_conv_algo_search\": \"HEURISTIC\",\r\n            \"do_copy_in_default_stream\": True,\r\n        },\r\n    ),\r\n    \"CPUExecutionProvider\",\r\n]\r\nsess = ort.InferenceSession(my_model_path, providers=providers)\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the session creation to succeed and model being eventually run on GPU. This works well on my Ubuntu setup but I have not so far succeeded on getting it working on a Windows system.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11549/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11550",
        "id": 1238746490,
        "node_id": "I_kwDOCVq1mM5J1cV6",
        "number": 11550,
        "title": "how to use c sharp to call libonnxruntime.dll? i build the onnxruntime dynamic dll, did it can be encapsulated c++ dll in order to c sharp called",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4419012097,
                "node_id": "LA_kwDOCVq1mM8AAAABB2TGAQ",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api",
                "name": "api",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to all other APIs: C, C++, Python, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-17T14:39:24Z",
        "updated_at": "2022-08-12T08:23:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- Python version:\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\nhow to use c sharp to call libonnxruntime.dll? i build the onnxruntime dynamic dll, did it can be encapsulated c++ dll in order to c sharp called\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11551",
        "id": 1238842369,
        "node_id": "I_kwDOCVq1mM5J1zwB",
        "number": 11551,
        "title": "can c sharp call onnxruntime c++ dll   don't use c# third lib？ i create onnxruntime c++ project,but i want to call the dll with c sharp",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4419012097,
                "node_id": "LA_kwDOCVq1mM8AAAABB2TGAQ",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api",
                "name": "api",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to all other APIs: C, C++, Python, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-17T15:48:06Z",
        "updated_at": "2022-08-12T08:23:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- Python version:\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n\r\n\r\ncan c sharp call onnxruntime c++ dll   don't use c# third lib？ i create onnxruntime c++ project,but i want to call the dll with c sharp\r\n@mtodd @mattetti @sverrejoh @bgianfo @radical ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11551/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11552",
        "id": 1238869688,
        "node_id": "PR_kwDOCVq1mM43-Erq",
        "number": 11552,
        "title": "update summary of supported EP's table",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-17T16:09:46Z",
        "updated_at": "2022-05-23T17:47:43Z",
        "closed_at": "2022-05-23T17:47:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11552",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11552",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11552.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11552.patch",
            "merged_at": "2022-05-23T17:47:01Z"
        },
        "body": "update summary of supported EP's table. \r\nOpenVINO EP supports Intel CPU and Intel GPU's.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11553",
        "id": 1238906893,
        "node_id": "PR_kwDOCVq1mM43-Mt5",
        "number": 11553,
        "title": "[website] Add Ant Group quote",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-17T16:43:14Z",
        "updated_at": "2022-05-17T23:31:53Z",
        "closed_at": "2022-05-17T23:31:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11553",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11553",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11553.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11553.patch",
            "merged_at": "2022-05-17T23:31:53Z"
        },
        "body": "**Description**: Adds quote and logo from Ant Group\r\n\r\nStaged preview:\r\nhttps://faxu.github.io/onnxruntime/#logos\r\nhttps://faxu.github.io/onnxruntime/community.html#ant-group\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11553/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11554",
        "id": 1239064651,
        "node_id": "PR_kwDOCVq1mM43-uqt",
        "number": 11554,
        "title": "Updating Direct ML Execution Provider - Issue 10324",
        "user": {
            "login": "pkreg101",
            "id": 13582680,
            "node_id": "MDQ6VXNlcjEzNTgyNjgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13582680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pkreg101",
            "html_url": "https://github.com/pkreg101",
            "followers_url": "https://api.github.com/users/pkreg101/followers",
            "following_url": "https://api.github.com/users/pkreg101/following{/other_user}",
            "gists_url": "https://api.github.com/users/pkreg101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pkreg101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pkreg101/subscriptions",
            "organizations_url": "https://api.github.com/users/pkreg101/orgs",
            "repos_url": "https://api.github.com/users/pkreg101/repos",
            "events_url": "https://api.github.com/users/pkreg101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pkreg101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-17T19:24:54Z",
        "updated_at": "2022-10-11T08:52:19Z",
        "closed_at": "2022-07-05T18:48:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11554",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11554",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11554.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11554.patch",
            "merged_at": null
        },
        "body": "**Description**: Updating Direct ML Execution Provider and Technical Design pages to provide complete information on the Direct ML EP .\r\n\r\nOpen Issue:\r\nhttps://github.com/microsoft/onnxruntime/issues/10324\r\n\r\nStaged Pages: \r\nhttps://pkreg101.github.io/onnxruntime/docs/execution-providers/DirectML-ExecutionProvider.html\r\nhttps://pkreg101.github.io/onnxruntime/docs/reference/high-level-design.html\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11554/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11555",
        "id": 1239158695,
        "node_id": "PR_kwDOCVq1mM43_C-j",
        "number": 11555,
        "title": "Drop nuphar",
        "user": {
            "login": "RandySheriffH",
            "id": 48490400,
            "node_id": "MDQ6VXNlcjQ4NDkwNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48490400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandySheriffH",
            "html_url": "https://github.com/RandySheriffH",
            "followers_url": "https://api.github.com/users/RandySheriffH/followers",
            "following_url": "https://api.github.com/users/RandySheriffH/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandySheriffH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandySheriffH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandySheriffH/subscriptions",
            "organizations_url": "https://api.github.com/users/RandySheriffH/orgs",
            "repos_url": "https://api.github.com/users/RandySheriffH/repos",
            "events_url": "https://api.github.com/users/RandySheriffH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandySheriffH/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2022-05-17T21:07:20Z",
        "updated_at": "2022-09-23T03:39:13Z",
        "closed_at": "2022-09-07T22:11:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11555",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11555",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11555.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11555.patch",
            "merged_at": "2022-09-07T22:11:18Z"
        },
        "body": "Deprecate nuphar for release 1.12 and after.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11556",
        "id": 1239226708,
        "node_id": "PR_kwDOCVq1mM43_RI_",
        "number": 11556,
        "title": "[js/rn] add expo config plugin support",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-17T22:30:50Z",
        "updated_at": "2022-05-25T18:55:36Z",
        "closed_at": "2022-05-25T18:55:36Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11556",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11556",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11556.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11556.patch",
            "merged_at": "2022-05-25T18:55:36Z"
        },
        "body": "**Description**: In this change I try to add expo config plugin support to enable managed workflow for expo. related to #11507.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11557",
        "id": 1239264284,
        "node_id": "I_kwDOCVq1mM5J3awc",
        "number": 11557,
        "title": "Minimal build documentation does not include all important limitations",
        "user": {
            "login": "q-ycong-p",
            "id": 50014064,
            "node_id": "MDQ6VXNlcjUwMDE0MDY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50014064?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/q-ycong-p",
            "html_url": "https://github.com/q-ycong-p",
            "followers_url": "https://api.github.com/users/q-ycong-p/followers",
            "following_url": "https://api.github.com/users/q-ycong-p/following{/other_user}",
            "gists_url": "https://api.github.com/users/q-ycong-p/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/q-ycong-p/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/q-ycong-p/subscriptions",
            "organizations_url": "https://api.github.com/users/q-ycong-p/orgs",
            "repos_url": "https://api.github.com/users/q-ycong-p/repos",
            "events_url": "https://api.github.com/users/q-ycong-p/events{/privacy}",
            "received_events_url": "https://api.github.com/users/q-ycong-p/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-17T23:35:56Z",
        "updated_at": "2022-05-19T17:03:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\nOfficial documentation on Minimal build is found exclusively [here](https://faxu.github.io/onnxruntime/docs/build/custom.html#minimal-build). The documentation lists some limitations of minimal build but doesn't mention that it disables avx512 instructions (see implementation [here](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/mlas/lib/platform.cpp#L317-L364)) - which is important for users to be aware. \r\n\r\nFor instance, on a x86_64 platform that has avx512, disabling the use avx512 instructions brings down inference performance up to 47% on sample models. I'd like to know what other features minimal build disables that is not listed in its documentation, but could impact inference latency.\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): 1.11.0\r\n\r\n**Describe the solution you'd like**\r\nUpdate the documentation with all limitations whether it's low- or high- level. This way, users can make informed judgement on whether to use minimal build or not without searching all occurrence of `defined(ORT_MINIMAL_BUILD)` in code base.\r\n\r\n**Describe alternatives you've considered**\r\nManually search all occurrences of `defined(ORT_MINIMAL_BUILD)` in source code to understand what will be disabled for minimal build.\r\n\r\n**Additional context**\r\nn/a\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11558",
        "id": 1239422777,
        "node_id": "I_kwDOCVq1mM5J4Bc5",
        "number": 11558,
        "title": "T5-Large Export Results in ProtoBuf Error due to 2GB External Data when using padded inputs",
        "user": {
            "login": "jhillhouse92",
            "id": 8386883,
            "node_id": "MDQ6VXNlcjgzODY4ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8386883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhillhouse92",
            "html_url": "https://github.com/jhillhouse92",
            "followers_url": "https://api.github.com/users/jhillhouse92/followers",
            "following_url": "https://api.github.com/users/jhillhouse92/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhillhouse92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhillhouse92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhillhouse92/subscriptions",
            "organizations_url": "https://api.github.com/users/jhillhouse92/orgs",
            "repos_url": "https://api.github.com/users/jhillhouse92/repos",
            "events_url": "https://api.github.com/users/jhillhouse92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhillhouse92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1974915201,
                "node_id": "MDU6TGFiZWwxOTc0OTE1MjAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/model:transformer",
                "name": "model:transformer",
                "color": "4EF6CD",
                "default": false,
                "description": "issues related to a transformer model: BERT, GPT2, Hugging Face, Longformer, T5, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-18T04:44:56Z",
        "updated_at": "2022-08-12T08:34:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The model is correctly saved with external data generating the onnx file and onnx.data file.  The model passes checks as described at https://github.com/onnx/onnx/blob/main/docs/PythonAPIOverview.md#user-content-checking-a-large-onnx-model-2gb.\r\n\r\nHowever, when creating an Inference Session when using padding, the CPU provider throws a proto execution. Here is the source code for the test:\r\n\r\n```\r\nimport onnxruntime as ort\r\nimport onnx\r\nfrom transformers import AutoTokenizer\r\nfrom onnxruntime import (\r\n    SessionOptions\r\n)\r\nencoder_model_path = \"models/Salesforce/mixqg-large_encoder_decoder_init_fp32/Salesforce/mixqg-large_encoder_decoder_init_fp32.onnx\"\r\n\r\nonnx.checker.check_model(encoder_model_path)\r\nencoder_onnx_model = onnx.load(encoder_model_path)\r\n\r\ndecoder_model_path = \"models/Salesforce/mixqg-large_decoder_fp32/Salesforce/mixqg-large_decoder_fp32.onnx\"\r\n\r\nonnx.checker.check_model(decoder_model_path)\r\n\r\nseq_0 = \"Speed bumps are designed to make drivers to slow down. \\n Speed bumps are designed to make drivers to slow down. Going over a typical speed bump at 5 miles per hour results in a gentle bounce, while hitting one at 20 delivers a sizable jolt. It's natural to assume that hitting a speed bump at 60mph would deliver a proportionally larger jolt, but it probably wouldn't.\"\r\nseq_1 = \"Going over a typical speed bump at 5 miles per hour results in a gentle bounce, while hitting one at 20 delivers a sizable jolt. \\n Speed bumps are designed to make drivers to slow down. Going over a typical speed bump at 5 miles per hour results in a gentle bounce, while hitting one at 20 delivers a sizable jolt. It's natural to assume that hitting a speed bump at 60mph would deliver a proportionally larger jolt, but it probably wouldn't.\"\r\nseq_2 = \"Toyota was by far the most in-demand manufacturer of 2020, totalling over 8.5 million car sales last year. \\n Toyota was by far the most in-demand manufacturer of 2020, totalling over 8.5 million car sales last year. They also out-sold rivals Volkswagen by 3.4 million, which equates to just under 10,000 more sales every day and almost 400 more per hour.\"\r\nseq_3 = \"They also out-sold rivals Volkswagen by 3.4 million, which equates to just under 10,000 more sales every day and almost 400 more per hour. \\n Toyota was by far the most in-demand manufacturer of 2020, totalling over 8.5 million car sales last year. They also out-sold rivals Volkswagen by 3.4 million, which equates to just under 10,000 more sales every day and almost 400 more per hour.\"\r\n\r\ninputs = [seq_0, seq_1, seq_2, seq_3]\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\"Salesforce/mixqg-large\")\r\nmax_encoder_length = 512\r\nbatch = tokenizer(inputs, max_length=max_encoder_length, truncation=True, padding='max_length', return_tensors=\"pt\")\r\n\r\nort_sess = ort.InferenceSession(encoder_onnx_model, providers=['CUDAExecutionProvider', 'CPUExecutionProvider'])\r\noutputs = ort_sess.run(None, {'encoder_input_ids': batch })\r\n\r\nprint(outputs)\r\n```\r\n\r\nHere is the error message:\r\n```\r\n ort_sess = ort.InferenceSession(encoder_model_path, providers=['TensorrtExecutionProvider'])\r\n  File \"/root/miniconda3/lib/python3.7/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 335, in __init__\r\n    self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n  File \"/root/miniconda3/lib/python3.7/site-packages/onnxruntime/capi/onnxruntime_inference_collection.py\", line 381, in _create_inference_session\r\n    sess.initialize_session(providers, provider_options, disabled_optimizers)\r\nonnxruntime.capi.onnxruntime_pybind11_state.RuntimeException: [ONNXRuntimeError] : 6 : RUNTIME_EXCEPTION : Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/generator/constant_of_shape_base.h:116 void onnxruntime::ConstantOfShapeBase<EnabledOutputTypeList>::SetValueFromTensorProto(const onnx::TensorProto&) [with EnabledOutputTypeList = onnxruntime::TypeList<long int, onnxruntime::MLFloat16, float, double, signed char, short int, int, unsigned char, short unsigned int, unsigned int, long unsigned int, bool>] !utils::HasExternalData(t_proto) was false. Tensor proto with external data for value attribute is not supported.\r\n```\r\n\r\n**Urgency**\r\nThis isn't super blocking as I'm only converting to ONNX as an intermediate step but would like to validate performance gains over just ONNX runtime. \r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 20.08 (using https://hub.docker.com/r/chaoyiyuan/tensorrt8)\r\n- ONNX Runtime installed from (source or binary): from pip - pip install onnxruntime-gpu\r\n- ONNX Runtime version: 1.11.1\r\n- Python version: Python 3.7.9\r\n- CUDA/cuDNN version: Cuda11.4\r\n- GPU model and memory: A10g / 24GB (Using G5.2xlarge)\r\n\r\n**To Reproduce**\r\nIn investigating onnxruntime, because of the padding, `constant_of_shape_base` is used as described by:\r\n\r\n```\r\n// core/providers/cpu/generator/constant_of_shape.cc\r\n// pytorch converter uses ConstantOfShape with int64 to create Pad input\r\n// https://github.com/pytorch/pytorch/blob/044b519a80459f6787f6723c1c091a18b153d184/torch/onnx/symbolic_opset11.py#L449\r\nORT_SPECIFY_OP_KERNEL_ARG_REQUIRED_TYPES_ALL_OPSETS(\r\n    kCpuExecutionProvider, kOnnxDomain, ConstantOfShape, Output, 0,\r\n    int64_t);\r\n}  // namespace op_kernel_type_control\r\n``` \r\n\r\nThis ends up hitting this line:\r\n```\r\n// core/providers/cpu/generator/constant_of_shape_base.h\r\ntemplate <typename EnabledOutputTypeList>\r\nvoid ConstantOfShapeBase<EnabledOutputTypeList>::SetValueFromTensorProto(const ONNX_NAMESPACE::TensorProto& t_proto) {\r\n  ORT_ENFORCE(utils::HasDataType(t_proto));\r\n  ORT_ENFORCE(ONNX_NAMESPACE::TensorProto::DataType_IsValid(t_proto.data_type()));\r\n  ORT_ENFORCE(!utils::HasExternalData(t_proto),\r\n              \"Tensor proto with external data for value attribute is not supported.\");\r\n```\r\n\r\n**Expected behavior**\r\nPadding works with external data against InferenceSession for CUDA and CPU providers.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11558/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11559",
        "id": 1239441718,
        "node_id": "I_kwDOCVq1mM5J4GE2",
        "number": 11559,
        "title": "ONNX support for Stan models",
        "user": {
            "login": "bparbhu",
            "id": 7581178,
            "node_id": "MDQ6VXNlcjc1ODExNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7581178?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bparbhu",
            "html_url": "https://github.com/bparbhu",
            "followers_url": "https://api.github.com/users/bparbhu/followers",
            "following_url": "https://api.github.com/users/bparbhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/bparbhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bparbhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bparbhu/subscriptions",
            "organizations_url": "https://api.github.com/users/bparbhu/orgs",
            "repos_url": "https://api.github.com/users/bparbhu/repos",
            "events_url": "https://api.github.com/users/bparbhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bparbhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-18T05:18:42Z",
        "updated_at": "2022-05-19T18:05:37Z",
        "closed_at": "2022-05-19T18:05:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hey all,\r\n\r\nI've been thinking more about how to improve interoperability for Stan and how Stan users\r\ncan take advantage of additional performance gains by possibly switching over stan models to be saved\r\nin the onnx format. I'm interested in helping with this and would want to come up with a design doc around this.\r\nAny feedback on this is much appreciated and always happy to help.\r\n\r\nThanks again,\r\n\r\n-Brian",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11559/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11560",
        "id": 1239522730,
        "node_id": "PR_kwDOCVq1mM44AO7I",
        "number": 11560,
        "title": "DirectML opset14 type updates for Add/Sub/Mul/Div and Relu/PRelu",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-18T07:05:51Z",
        "updated_at": "2022-05-19T00:34:15Z",
        "closed_at": "2022-05-19T00:34:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11560",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11560",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11560.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11560.patch",
            "merged_at": "2022-05-19T00:34:15Z"
        },
        "body": "**Description**: Adds additional data type support.\r\n\r\n**Motivation and Context**\r\n- *Why is this change required? What problem does it solve?* Catches up to ONNX spec.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11561",
        "id": 1239930009,
        "node_id": "I_kwDOCVq1mM5J59SZ",
        "number": 11561,
        "title": "CUDA failure 100: no CUDA-capable device is detected ; error when inferencing on a GPUVM",
        "user": {
            "login": "abilashravi-ta",
            "id": 53215532,
            "node_id": "MDQ6VXNlcjUzMjE1NTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/53215532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abilashravi-ta",
            "html_url": "https://github.com/abilashravi-ta",
            "followers_url": "https://api.github.com/users/abilashravi-ta/followers",
            "following_url": "https://api.github.com/users/abilashravi-ta/following{/other_user}",
            "gists_url": "https://api.github.com/users/abilashravi-ta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abilashravi-ta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abilashravi-ta/subscriptions",
            "organizations_url": "https://api.github.com/users/abilashravi-ta/orgs",
            "repos_url": "https://api.github.com/users/abilashravi-ta/repos",
            "events_url": "https://api.github.com/users/abilashravi-ta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abilashravi-ta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-18T12:59:34Z",
        "updated_at": "2022-05-18T23:18:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\nI built **onnxruntime** (v1.8.2) from source following [these](https://onnxruntime.ai/docs/build/inferencing.html#cpu) instructions.\r\nUsed the following command to build and install\r\n```\r\n./build.sh --cuda_home /usr/local/cuda-11.7 --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_cuda --config RelWithDebInfo --build_shared_lib --build_wheel --skip_tests --parallel 6\r\ncd build/Linux/RelWithDebInfo\r\nmake install\r\n```\r\n\r\nI'm using `linear-regression.onnx` model, downloaded from [here](https://github.com/scailable/sclbl-tutorials/blob/master/_archive/sclbl-onnx-from-scratch-I/sources/linear-regression.onnx), to perform _inferencing_ in **C++** on a *GPU*.\r\n\r\n**System information**\r\n- OS Platform and Distribution: **Ubuntu 18.04.6 LTS x86_64**\r\n- ONNX Runtime installed from (source or binary): source (using the link mentioned above)\r\n- G++ Compiler version: 7.5.0\r\n\r\n**To Reproduce**\r\nWhen I compile the following piece of code with \r\n`g++ -o run1 inference.cpp -I/usr/local/include/onnxruntime/core/session/ -lonnxruntime`\r\n\r\n```\r\n// inference.cpp\r\n#include<onnxruntime_cxx_api.h>\r\n\r\n#include<iostream>\r\n#include<string>\r\n#include<vector>\r\n#include<numeric>\r\n\r\nusing namespace std;\r\n\r\ntemplate<class T>\r\nT vectorProduct(vector<T>& v)\r\n{\r\n        return accumulate(v.begin(), v.end(), 1, multiplies<T>());\r\n}\r\n\r\nint main()\r\n{\r\n        string modelFilepath{\"linear-regression.onnx\"};\r\n        Ort::Env env;\r\n        Ort::SessionOptions sessionOptions;\r\n\r\n        OrtCUDAProviderOptions cuda_options{0};\r\n        sessionOptions.AppendExecutionProvider_CUDA(cuda_options);\r\n\r\n        Ort::Session session(env, modelFilepath.c_str(), sessionOptions);\r\n        Ort::AllocatorWithDefaultOptions allocator;\r\n\r\n        vector<float> inpVec{1, 2, 3};\r\n\r\n        const char* inputName = session.GetInputName(0, allocator);\r\n        vector<int64_t> inputDims{3};\r\n        const char* outputName = session.GetOutputName(0, allocator);\r\n        vector<int64_t> outputDims{1};\r\n\r\n        size_t inputTensorSize = vectorProduct(inputDims);\r\n        vector<const char*> inputNames{inputName};\r\n        vector<Ort::Value> inputTensors;\r\n\r\n        size_t outputTensorSize = vectorProduct(outputDims);\r\n        vector<float> outputTensorValues(outputTensorSize);\r\n        vector<const char*> outputNames{outputName};\r\n        vector<Ort::Value> outputTensors;\r\n\r\n        Ort::MemoryInfo memoryInfo = Ort::MemoryInfo::CreateCpu(OrtAllocatorType::OrtArenaAllocator, OrtMemType::OrtMemTypeDefault);\r\n        inputTensors.push_back(Ort::Value::CreateTensor<float>(memoryInfo, inpVec.data(), inputTensorSize, inputDims.data(), inputDims.size()));\r\n        outputTensors.push_back(Ort::Value::CreateTensor<float>(memoryInfo, outputTensorValues.data(), outputTensorSize, outputDims.data(), outputDims.size()));\r\n\r\n        session.Run(Ort::RunOptions{nullptr}, inputNames.data(), inputTensors.data(), 1, outputNames.data(), outputTensors.data(), 1);\r\n\r\n        return 0;\r\n}\r\n```\r\nI don't get any compilation error. \r\n\r\nBut when I _execute_ `./run1`, after successful compilation, I get\r\n![on_GPU_error](https://user-images.githubusercontent.com/53215532/169043794-ff92eee5-6b5a-4b5b-b4eb-65de1abab00a.JPG)\r\n\r\nThe code runs fine on **CPU** (i.e. without the lines `OrtCUDAProviderOptions cuda_options{0}; \r\n sessionOptions.AppendExecutionProvider_CUDA(cuda_options);`)\r\nThe issue is while inferencing on **GPU**. Any suggestion would be helpful.!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11561/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11562",
        "id": 1240091678,
        "node_id": "I_kwDOCVq1mM5J6kwe",
        "number": 11562,
        "title": "CUDA_PATH is present but not recognized.",
        "user": {
            "login": "Sanuki-073",
            "id": 43844864,
            "node_id": "MDQ6VXNlcjQzODQ0ODY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/43844864?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sanuki-073",
            "html_url": "https://github.com/Sanuki-073",
            "followers_url": "https://api.github.com/users/Sanuki-073/followers",
            "following_url": "https://api.github.com/users/Sanuki-073/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sanuki-073/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sanuki-073/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sanuki-073/subscriptions",
            "organizations_url": "https://api.github.com/users/Sanuki-073/orgs",
            "repos_url": "https://api.github.com/users/Sanuki-073/repos",
            "events_url": "https://api.github.com/users/Sanuki-073/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sanuki-073/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-18T14:54:15Z",
        "updated_at": "2022-05-18T15:04:21Z",
        "closed_at": "2022-05-18T15:04:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\nI installed this library using by\r\npip install onnxruntime-gpu\r\n\r\nAnd I ran the program below:\r\n\r\n```\r\nimport onnxruntime\r\nprint(onnxruntime.get_device())\r\nmodel_path = \"model/yolox_nano.onnx\"\r\nsession = onnxruntime.InferenceSession(model_path,providers=['CUDAExecutionProvider' ,'CPUExecutionProvider'])\r\nprint(session.get_providers())\r\n```\r\n\r\nThen it outputs errors:\r\nGPU\r\n2022-05-18 23:41:07.9831225 [E:onnxruntime:Default, provider_bridge_ort.cc:1022 onnxruntime::ProviderLibrary::Get] LoadLibrary failed with error 126 \"\" when trying to load \"C:\\Users\\s1260\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\onnxruntime\\capi\\onnxruntime_providers_cuda.dll\"\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\s1260\\Desktop\\workspace\\yolox-bytetrack-mcmot-sample-master\\runtime_test.py\", line 4, in <module>\r\n    session = onnxruntime.InferenceSession(model_path,providers=['CUDAExecutionProvider' ,'CPUExecutionProvider'])\r\n  File \"C:\\Users\\s1260\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\onnxruntime\\capi\\onnxruntime_inference_collection.py\", line 335, in __init__\r\n    self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n  File \"C:\\Users\\s1260\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\onnxruntime\\capi\\onnxruntime_inference_collection.py\", line 381, in _create_inference_session\r\n    sess.initialize_session(providers, provider_options, disabled_optimizers)\r\nRuntimeError: D:\\a\\_work\\1\\s\\onnxruntime\\python\\onnxruntime_pybind_state.cc:548 onnxruntime::python::CreateExecutionProviderInstance CUDA_PATH is set but CUDA wasn't able to be loaded. Please install the correct version of CUDA and cuDNN as mentioned in the GPU requirements page (https://onnxruntime.ai/docs/reference/execution-providers/CUDA-ExecutionProvider.html#requirements), make sure they're in the PATH, and that your GPU is supported.\r\n\r\nI have already installed CUDA and CUDNN and exported path following:\r\n\r\n- %CUDA_PATH%\\bin\r\n- %CUDA_PATH%\\libnvvp\r\n- %CUDA_PATH%\\lib\\x64\r\n- %CUDA_PATH%\\include\r\n- CUDA_PATH=C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.1\r\n\r\nCould you please tell me what needs to be fixed?\r\n\r\nWhat I tried: \r\n・install cuda11.4/cudnn (Nothing changed.)\r\n\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 11\r\n- ONNX Runtime installed from (source or binary): pip\r\n- ONNX Runtime version:1.11.1\r\n- Python version:3.9\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:11.1/8.0.2.39\r\n- GPU model and memory: RTX 3060\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11562/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11563",
        "id": 1240197305,
        "node_id": "I_kwDOCVq1mM5J6-i5",
        "number": 11563,
        "title": "Specify CPUs to use for parallel inference when external CPU pinning is used",
        "user": {
            "login": "brettfazio",
            "id": 11671691,
            "node_id": "MDQ6VXNlcjExNjcxNjkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11671691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettfazio",
            "html_url": "https://github.com/brettfazio",
            "followers_url": "https://api.github.com/users/brettfazio/followers",
            "following_url": "https://api.github.com/users/brettfazio/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettfazio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettfazio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettfazio/subscriptions",
            "organizations_url": "https://api.github.com/users/brettfazio/orgs",
            "repos_url": "https://api.github.com/users/brettfazio/repos",
            "events_url": "https://api.github.com/users/brettfazio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettfazio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1805781160,
                "node_id": "MDU6TGFiZWwxODA1NzgxMTYw",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api:Java",
                "name": "api:Java",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to the Java API"
            },
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-18T16:17:12Z",
        "updated_at": "2022-05-19T17:29:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to run inference on a model using multiple CPU cores using Java ONNX. But I do external thread pinning.\r\n\r\nIs there any way to ensure that when I tell onnx it can have 2 or 3 `setIntraOpNumThreads` and `setInterOpNumThreads` to make sure it uses cpus that are unpinned externally? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11563/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11564",
        "id": 1240436005,
        "node_id": "I_kwDOCVq1mM5J740l",
        "number": 11564,
        "title": "[Documentation]: Overview of C# Workflow for consuming \"Augmented\" Onnx model with Custom Operators ",
        "user": {
            "login": "GeorgeS2019",
            "id": 49812372,
            "node_id": "MDQ6VXNlcjQ5ODEyMzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49812372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GeorgeS2019",
            "html_url": "https://github.com/GeorgeS2019",
            "followers_url": "https://api.github.com/users/GeorgeS2019/followers",
            "following_url": "https://api.github.com/users/GeorgeS2019/following{/other_user}",
            "gists_url": "https://api.github.com/users/GeorgeS2019/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GeorgeS2019/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GeorgeS2019/subscriptions",
            "organizations_url": "https://api.github.com/users/GeorgeS2019/orgs",
            "repos_url": "https://api.github.com/users/GeorgeS2019/repos",
            "events_url": "https://api.github.com/users/GeorgeS2019/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GeorgeS2019/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-05-18T19:42:01Z",
        "updated_at": "2022-09-12T02:21:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@natke \r\n\r\nOnnxruntime provides [contributed operators](https://github.com/Microsoft/onnxruntime/blob/main/docs/ContribOperators.md)\r\n\r\n## NLP use case\r\n\r\n### Step1\r\nIn **PyTorch**,  creates an \"augmented\" onnx model which includes pre- and post- processing (Contributed Operators).\r\n\r\n#### [Build an augmented ONNX model with BERT pre and processing.](https://github.com/microsoft/onnxruntime-extensions)\r\n```python\r\nfrom pathlib import Path\r\nimport torch\r\nfrom transformers import AutoTokenizer\r\nimport onnx\r\nfrom onnxruntime_extensions import pnp\r\n\r\n# The fine-tuned HuggingFace model is exported to ONNX in the code snippet above\r\nmodel_name = \"distilbert-base-uncased-finetuned-sst-2-english\"\r\nmodel_path = Path(model_name + \".onnx\")\r\n\r\n# mapping the BertTokenizer outputs into the onnx model inputs\r\ndef map_token_output(input_ids, attention_mask, token_type_ids):\r\n    return input_ids.unsqueeze(0), token_type_ids.unsqueeze(0), attention_mask.unsqueeze(0)\r\n\r\n# Post process the start and end logits\r\ndef post_process(*pred):\r\n    output = torch.argmax(pred[0])\r\n    return output\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(model_name)\r\nbert_tokenizer = pnp.PreHuggingFaceBert(hf_tok=tokenizer)\r\nbert_model = onnx.load_model(str(model_path))\r\n\r\naugmented_model = pnp.SequentialProcessingModule(bert_tokenizer, map_token_output,\r\n                                                 bert_model, post_process)\r\n\r\ntest_input = [\"This is s test sentence\"]\r\n\r\n# create the final onnx model which includes pre- and post- processing.\r\naugmented_model = pnp.export(augmented_model,\r\n                             test_input,\r\n                             opset_version=12,\r\n                             input_names=['input'],\r\n                             output_names=['output'],\r\n                             output_path=model_name + '-aug.onnx',\r\n                             dynamic_axes={'input': [0], 'output': [0]})\r\n```\r\n\r\n### Step2\r\n\r\nFollow [WIP [Documentation]: C# Workflow for consuming \"Augmented\" Onnx model with Custom Operators](https://github.com/microsoft/onnxruntime/issues/11657) to create Custom_Op_Library.dll with the pre- and post- processing (Contributed Operators).\r\n\r\n### Step3\r\n\r\nIn CSharp, **registered** Custom_Op_Library.dll with the pre- and post- processing (Contributed Operators) **before consuming the \"augmented\" Onnx model** created in Step1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11564/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11565",
        "id": 1240502955,
        "node_id": "PR_kwDOCVq1mM44Db8G",
        "number": 11565,
        "title": "MatMul postop fusion for dnnl ep",
        "user": {
            "login": "georgen117",
            "id": 16688936,
            "node_id": "MDQ6VXNlcjE2Njg4OTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16688936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/georgen117",
            "html_url": "https://github.com/georgen117",
            "followers_url": "https://api.github.com/users/georgen117/followers",
            "following_url": "https://api.github.com/users/georgen117/following{/other_user}",
            "gists_url": "https://api.github.com/users/georgen117/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/georgen117/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgen117/subscriptions",
            "organizations_url": "https://api.github.com/users/georgen117/orgs",
            "repos_url": "https://api.github.com/users/georgen117/repos",
            "events_url": "https://api.github.com/users/georgen117/events{/privacy}",
            "received_events_url": "https://api.github.com/users/georgen117/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2022-05-18T20:47:14Z",
        "updated_at": "2022-05-25T05:19:38Z",
        "closed_at": "2022-05-25T05:19:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11565",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11565",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11565.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11565.patch",
            "merged_at": "2022-05-25T05:19:38Z"
        },
        "body": "This includes a series of unit test that exercise\r\nthe MatMul fusion. This is not an exhaustive list\r\nof tests.  The tests focuse on paterns seen in\r\nin models, with additional tests to cover at least\r\none instance of each operator type that can be part\r\nof the fusion.\r\n\r\nSigned-off-by: George Nash <george.nash@intel.com>\r\n\r\n**Description**: Describe your changes.\r\nThis updates the code to find situations that MatMul can fuse upto 32 Binary and Elementwise ops as what OneDNN calls a post op. (i.e Add, Mul, Sub, Div, Abs, Elu, Exp, LeakyRelu, Log, Relu, Round, Sigmoid, Softplus, Sqrt, Tanh) Executing the operations as a post op can be done in similar time as doing the MatMul alone giving a potential large performance increase.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nThis is a performance related fix. The OneDNN ep can execute a large number of operators as post ops to the MatMul operation. The performance of MatMul + post ops can have a significant performance improvement on transformer models like BERT.\r\n\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11566",
        "id": 1240513984,
        "node_id": "PR_kwDOCVq1mM44Dd0B",
        "number": 11566,
        "title": "OrtEnv created with Python API is different from the C++ ",
        "user": {
            "login": "viboga",
            "id": 44417868,
            "node_id": "MDQ6VXNlcjQ0NDE3ODY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44417868?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viboga",
            "html_url": "https://github.com/viboga",
            "followers_url": "https://api.github.com/users/viboga/followers",
            "following_url": "https://api.github.com/users/viboga/following{/other_user}",
            "gists_url": "https://api.github.com/users/viboga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viboga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viboga/subscriptions",
            "organizations_url": "https://api.github.com/users/viboga/orgs",
            "repos_url": "https://api.github.com/users/viboga/repos",
            "events_url": "https://api.github.com/users/viboga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viboga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-18T20:53:49Z",
        "updated_at": "2022-08-10T00:46:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11566",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11566",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11566.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11566.patch",
            "merged_at": null
        },
        "body": "**Description**: OrtEnv is created in pybind when python InfererenceSession API is called. This static var resides in <onnxruntime root>\\onnxruntime\\python\\onnxruntime_pybind_state.cc. However at the run time of this session, if C++ API is used to re-create the Env to create another session, it should increase the ref_count of previously created one and provide the same env. However, since another static var resides in D:\\ai\\onnxruntime\\onnxruntime\\core\\session\\ort_env.cc, it tries to recreate the environment again. \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nHave an unique env in pybind and C++ ort_env.cc.\r\n\r\n- If it fixes an open issue, please link to the issue here.\r\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11566/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11567",
        "id": 1241080066,
        "node_id": "I_kwDOCVq1mM5J-WEC",
        "number": 11567,
        "title": "[js/web] Inference is Broken in Safari when Cross Origin Isolation is active",
        "user": {
            "login": "haydn-jones",
            "id": 9584084,
            "node_id": "MDQ6VXNlcjk1ODQwODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9584084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haydn-jones",
            "html_url": "https://github.com/haydn-jones",
            "followers_url": "https://api.github.com/users/haydn-jones/followers",
            "following_url": "https://api.github.com/users/haydn-jones/following{/other_user}",
            "gists_url": "https://api.github.com/users/haydn-jones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haydn-jones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haydn-jones/subscriptions",
            "organizations_url": "https://api.github.com/users/haydn-jones/orgs",
            "repos_url": "https://api.github.com/users/haydn-jones/repos",
            "events_url": "https://api.github.com/users/haydn-jones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haydn-jones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3066979818,
                "node_id": "MDU6TGFiZWwzMDY2OTc5ODE4",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/platform:web",
                "name": "platform:web",
                "color": "FEF2C0",
                "default": false,
                "description": "issues related to ONNX Runtime web; typically submitted using template"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-19T02:56:03Z",
        "updated_at": "2022-08-12T08:30:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nWe are deploying our ONNXRuntime project to CloudFlare pages and we've noticed an issue with parallelism/CORS/SharedArrayBuffer. I want to note immediately that this **only** happens when we are deployed to CloudFlare pages, it **does not** happen when we are deployed locally during development.\r\n\r\n When we *do not* serve the following headers (and thus disabling parallelism as SharedArrayBuffer will not be usable)\r\n```\r\n  Cross-Origin-Embedder-Policy: require-corp\r\n  Cross-Origin-Opener-Policy: same-origin\r\n```\r\nwe can perform inference just fine. However, when we *do* serve the headers above and thus enable SharedArrayBuffer and model parallelism, creating an inference session fails with the following error:\r\n```\r\nDataCloneError: The object can not be cloned.\r\n```\r\nThis issue *only* happens in Safari (currently testing on 15.4) and not Firefox or Chrome. This appears to be an issue with Safari and not onnx, but it would be nice if a fix could be implemented in onnx so inference can actually be performed on Safari (perhaps by not using SharedArrayBuffer or something).\r\n\r\n**Urgency**\r\nPerhaps mildly urgent. This appears to break onnxruntime on Safari when cross origin isolation is active.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OSX Monterey 12.3.1\r\n- ONNX Runtime installed from (source or binary): NPM\r\n- ONNX Runtime version: 1.11.0\r\n- Safari Version: 15.4\r\n\r\n**To Reproduce**\r\nDeploy a project **remotely** with cross origin isolation active and perform inference.\r\n\r\n**Expected behavior**\r\nIt does not fail.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11568",
        "id": 1241116717,
        "node_id": "PR_kwDOCVq1mM44FkO4",
        "number": 11568,
        "title": "DirectML EP add CastLike-15 and Reshape-14",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-19T03:15:47Z",
        "updated_at": "2022-05-19T21:34:12Z",
        "closed_at": "2022-05-19T21:34:12Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11568",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11568",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11568.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11568.patch",
            "merged_at": "2022-05-19T21:34:12Z"
        },
        "body": "**Description**: add CastLike-15 and Reshape-14 with allowzero.\r\n\r\n**Motivation and Context**\r\n- *Why is this change required? What problem does it solve?* Catching up to ONNX spec.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11569",
        "id": 1241303748,
        "node_id": "PR_kwDOCVq1mM44GLN0",
        "number": 11569,
        "title": "[ROCm] add MIGraphX ci pipeline",
        "user": {
            "login": "PeixuanZuo",
            "id": 94887879,
            "node_id": "U_kgDOBaffxw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94887879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PeixuanZuo",
            "html_url": "https://github.com/PeixuanZuo",
            "followers_url": "https://api.github.com/users/PeixuanZuo/followers",
            "following_url": "https://api.github.com/users/PeixuanZuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/PeixuanZuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PeixuanZuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PeixuanZuo/subscriptions",
            "organizations_url": "https://api.github.com/users/PeixuanZuo/orgs",
            "repos_url": "https://api.github.com/users/PeixuanZuo/repos",
            "events_url": "https://api.github.com/users/PeixuanZuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PeixuanZuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-05-19T06:51:26Z",
        "updated_at": "2022-09-28T02:59:31Z",
        "closed_at": "2022-09-28T02:59:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11569",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11569",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11569.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11569.patch",
            "merged_at": "2022-09-28T02:59:31Z"
        },
        "body": "**Description**: Describe your changes.\r\nAdd migraphx ci pipeline, test build and unit tests.\r\nThis PR is based on #11492 \r\n\r\nPipeline : https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=765711&view=results\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11569/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11570",
        "id": 1241369282,
        "node_id": "I_kwDOCVq1mM5J_crC",
        "number": 11570,
        "title": "Header missmatch C/C++  - mac",
        "user": {
            "login": "timocafe",
            "id": 5823953,
            "node_id": "MDQ6VXNlcjU4MjM5NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5823953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timocafe",
            "html_url": "https://github.com/timocafe",
            "followers_url": "https://api.github.com/users/timocafe/followers",
            "following_url": "https://api.github.com/users/timocafe/following{/other_user}",
            "gists_url": "https://api.github.com/users/timocafe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timocafe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timocafe/subscriptions",
            "organizations_url": "https://api.github.com/users/timocafe/orgs",
            "repos_url": "https://api.github.com/users/timocafe/repos",
            "events_url": "https://api.github.com/users/timocafe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timocafe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-19T07:48:09Z",
        "updated_at": "2022-08-12T08:20:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\nHeader for the C/C++ version are not installed \"correctly\" (mac).\r\n\r\n**System information**\r\n- ONNX Runtime version master - 1.11.1:\r\n\r\n**Describe the solution you'd like**\r\n\r\nDuring the installation (for mac), the headers for C/C++ are in\r\n\r\n```\r\ninclude/onnxruntime/core/session/onnxruntime_cxx_api.h\r\n```\r\n\r\nHowever the package config provides the following ingo\r\n\r\n```\r\npkg-config --cflags --libs  libonnxruntime\r\n-I/usr/local/include/onnxruntime -L/usr/local/lib -lonnxruntime\r\n```\r\n\r\nThis is a problem because for c++ inference, we must include \r\n\r\n```\r\n#include <onnxruntime_cxx_api.h>\r\n```\r\n\r\nWith the current configuration, it will not work. As the include path does not match\r\n\r\n```\r\n/usr/local/include/onnxruntime != /usr/local/include/onnxruntime/core/session/\r\n```\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI see two solutions:\r\n\r\n-  modify the package manager and specify the good path for the include\r\n- during the installation copy/symlink the missing include into the path specify with the packet manager\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11571",
        "id": 1241384651,
        "node_id": "PR_kwDOCVq1mM44Ga2R",
        "number": 11571,
        "title": "Sync master into on_device_poc branch",
        "user": {
            "login": "pengwa",
            "id": 10530022,
            "node_id": "MDQ6VXNlcjEwNTMwMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10530022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwa",
            "html_url": "https://github.com/pengwa",
            "followers_url": "https://api.github.com/users/pengwa/followers",
            "following_url": "https://api.github.com/users/pengwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwa/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwa/orgs",
            "repos_url": "https://api.github.com/users/pengwa/repos",
            "events_url": "https://api.github.com/users/pengwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-19T07:59:53Z",
        "updated_at": "2022-05-19T09:28:24Z",
        "closed_at": "2022-05-19T08:02:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11571",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11571",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11571.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11571.patch",
            "merged_at": null
        },
        "body": "**Description**: Sync master into on device poc branch\r\n\r\nThis will introduce the formatting scripts in master. Then we can solve the formatting issues in each PR before its check-in. :) \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11572",
        "id": 1241456005,
        "node_id": "I_kwDOCVq1mM5J_x2F",
        "number": 11572,
        "title": "TensorRT EP doesn't load in C# API",
        "user": {
            "login": "RoudyES",
            "id": 76808707,
            "node_id": "MDQ6VXNlcjc2ODA4NzA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/76808707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoudyES",
            "html_url": "https://github.com/RoudyES",
            "followers_url": "https://api.github.com/users/RoudyES/followers",
            "following_url": "https://api.github.com/users/RoudyES/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoudyES/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoudyES/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoudyES/subscriptions",
            "organizations_url": "https://api.github.com/users/RoudyES/orgs",
            "repos_url": "https://api.github.com/users/RoudyES/repos",
            "events_url": "https://api.github.com/users/RoudyES/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoudyES/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2204061391,
                "node_id": "MDU6TGFiZWwyMjA0MDYxMzkx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:TensorRT",
                "name": "ep:TensorRT",
                "color": "0052CC",
                "default": false,
                "description": "issues related to TensorRT execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-05-19T08:56:37Z",
        "updated_at": "2023-05-24T14:24:10Z",
        "closed_at": "2022-05-20T17:43:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI am trying to use ONNXRuntime with TensorRT EP in a .NET 6 application. However it keeps crashing with `onnxruntime::logging::LoggingManager::DefaultLogger Attempt to use DefaultLogger but none has been registered` error. The application works fine on CPU or even CUDA EP but not on TensorRT EP.\r\n\r\n**Urgency**\r\nNone.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 11\r\n- ONNX Runtime installed from (source or binary): Installed from NuGet.\r\n- ONNX Runtime version: 1.11.0\r\n- Visual Studio version (if applicable): VS 2022 (v17.0.6).\r\n- CUDA/cuDNN version: CUDA version 11.4. CuDNN version 8.2.1\r\n- GPU model and memory: GTX 1050Ti 4GB memory.\r\n- TensorRT version: 8.2.4.2\r\n\r\n**To Reproduce**\r\n- Simply trying to initialize an InferenceSession object with TRT provider like so: `var session = new InferenceSession(modelPath, SessionOptions.MakeSessionOptionWithTensorrtProvider());`\r\n- I've also tried created the SessionOptions first then appending the TRT provider like so: `    var options = new SessionOptions();\r\n    options.AppendExecutionProvider_Tensorrt();`\r\n\r\n**Expected behavior**\r\nInitialize the session normally.\r\n\r\n**Additional context**\r\nI've copied all CUDA and CuDNN and TensorRT dll files into the project's output directory (CUDA/CuDNN dlls are also added into the PATH env variable).\r\n\r\nAlso worth adding, I've tried the same test on .Net Framework 4.7.2 and it initialized fine. The problem seems to be specific to .NET 6.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11572/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11573",
        "id": 1242098980,
        "node_id": "I_kwDOCVq1mM5KCO0k",
        "number": 11573,
        "title": "missing header files from win gpu zip package in rev 1.11.1",
        "user": {
            "login": "shdalton",
            "id": 44240057,
            "node_id": "MDQ6VXNlcjQ0MjQwMDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/44240057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shdalton",
            "html_url": "https://github.com/shdalton",
            "followers_url": "https://api.github.com/users/shdalton/followers",
            "following_url": "https://api.github.com/users/shdalton/following{/other_user}",
            "gists_url": "https://api.github.com/users/shdalton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shdalton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shdalton/subscriptions",
            "organizations_url": "https://api.github.com/users/shdalton/orgs",
            "repos_url": "https://api.github.com/users/shdalton/repos",
            "events_url": "https://api.github.com/users/shdalton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shdalton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-19T17:32:39Z",
        "updated_at": "2022-05-24T05:56:19Z",
        "closed_at": "2022-05-24T05:56:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\na number of header files (cuda_provider_factory.h, cuda_provider_options.h...) are missing from the onnxruntime-win-x64-gpu-1.11.1.zip archive\r\n\r\n**System information**\r\n- Win 10 64\r\n- ONNX binary package\r\n- ONNX 1.11.1 GPU\r\n- Visual Studio version (2019)\r\n- CUDA/cuDNN version: 11.7\r\n- GPU model and memory: RTX3090\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\nFollow the build instructions for the inference examples :)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11573/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11574",
        "id": 1242118103,
        "node_id": "PR_kwDOCVq1mM44I2VY",
        "number": 11574,
        "title": "Improved OneDNN performance by preventing thread oversubscription",
        "user": {
            "login": "eralmual",
            "id": 22269643,
            "node_id": "MDQ6VXNlcjIyMjY5NjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22269643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eralmual",
            "html_url": "https://github.com/eralmual",
            "followers_url": "https://api.github.com/users/eralmual/followers",
            "following_url": "https://api.github.com/users/eralmual/following{/other_user}",
            "gists_url": "https://api.github.com/users/eralmual/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eralmual/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eralmual/subscriptions",
            "organizations_url": "https://api.github.com/users/eralmual/orgs",
            "repos_url": "https://api.github.com/users/eralmual/repos",
            "events_url": "https://api.github.com/users/eralmual/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eralmual/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2022-05-19T17:51:34Z",
        "updated_at": "2022-06-13T15:38:44Z",
        "closed_at": "2022-06-13T15:38:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11574",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11574",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11574.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11574.patch",
            "merged_at": null
        },
        "body": "Users can now control the number of threads allocated to OneDNN and the default provider using OrtDnnlProviderOptions to fine tune performance according to each model op coverage. By default we improve thread distribution to prevent oversubscription.\r\n\r\nSigned-off-by: Erick Muñoz [erick.munoz.alvarado@intel.com](mailto:erick.munoz.alvarado@intel.com)\r\n\r\n**Description**: Previously OneDNN ep suffered from thread oversubscription due to ORT creating it's own thread pool and OneDNN creating another one, this update aims to fix this issue by making the number of threads used by OneDNN accessible to the user and setting the default threading options to be 3/4 of the available (Or user defined threads for OneDNN) and the remaining threads for default provider (This behavior can be overridden by the user explicitly defining the number of threads for OneDNN and for the default provider)\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nPerformance related fix, prevents thread oversubscription, improves performance on CPU and allows the user to customize thread distribution according to their workload.\r\n\r\n- If it fixes an open issue, please link to the issue here.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11576",
        "id": 1242532546,
        "node_id": "I_kwDOCVq1mM5KD4rC",
        "number": 11576,
        "title": "The effect of turning optimization on and off on quantized model performance",
        "user": {
            "login": "yeliang2258",
            "id": 30516196,
            "node_id": "MDQ6VXNlcjMwNTE2MTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/30516196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yeliang2258",
            "html_url": "https://github.com/yeliang2258",
            "followers_url": "https://api.github.com/users/yeliang2258/followers",
            "following_url": "https://api.github.com/users/yeliang2258/following{/other_user}",
            "gists_url": "https://api.github.com/users/yeliang2258/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yeliang2258/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yeliang2258/subscriptions",
            "organizations_url": "https://api.github.com/users/yeliang2258/orgs",
            "repos_url": "https://api.github.com/users/yeliang2258/repos",
            "events_url": "https://api.github.com/users/yeliang2258/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yeliang2258/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-20T02:32:57Z",
        "updated_at": "2022-05-26T18:44:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\n\r\nI have a quantized model. When all optimizations are turned on, the accuracy is found to drop by 5 points, but when all optimizations are turned off, the accuracy is not dropped. What could be the cause? Looking forward to your reply.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Linux Ubuntu 16.04\r\n- ONNX Runtime installed from (source or binary):binary\r\n- ONNX Runtime version:onnxruntime==1.11.1\r\n- Python version:python3.7\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\nwhen turn on all optimization, the accuracy is found to drop by 5 points:\r\n```\r\nonnx_model = \"mobilenet_onnx_quant_model.onnx\"\r\nsess_options = rt.SessionOptions()\r\nsess_options.optimized_model_filepath = \"./optimize_model.onnx\"\r\nsess = rt.InferenceSession(onnx_model, sess_options, providers = ['CPUExecutionProvider'])\r\n```\r\n\r\nwhen turn off all optimization, the accuracy is not dropped:\r\n```\r\nonnx_model = \"mobilenet_onnx_quant_model.onnx\"\r\nsess_options = rt.SessionOptions()\r\nsess_options.graph_optimization_level = rt.GraphOptimizationLevel.ORT_DISABLE_ALL\r\nsess_options.optimized_model_filepath = \"./optimize_model.onnx\"\r\nsess = rt.InferenceSession(onnx_model, sess_options, providers = ['CPUExecutionProvider'])\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\nMy quantized model:\r\n[mobilenet_onnx_quant_model.onnx.zip](https://github.com/microsoft/onnxruntime/files/8735402/mobilenet_onnx_quant_model.onnx.zip)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11577",
        "id": 1242577781,
        "node_id": "PR_kwDOCVq1mM44KV2p",
        "number": 11577,
        "title": "Use fixed point arithmetic for LITTLE core only",
        "user": {
            "login": "yihonglyu",
            "id": 8860750,
            "node_id": "MDQ6VXNlcjg4NjA3NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8860750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yihonglyu",
            "html_url": "https://github.com/yihonglyu",
            "followers_url": "https://api.github.com/users/yihonglyu/followers",
            "following_url": "https://api.github.com/users/yihonglyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/yihonglyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yihonglyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yihonglyu/subscriptions",
            "organizations_url": "https://api.github.com/users/yihonglyu/orgs",
            "repos_url": "https://api.github.com/users/yihonglyu/repos",
            "events_url": "https://api.github.com/users/yihonglyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yihonglyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-20T04:03:23Z",
        "updated_at": "2022-07-14T22:53:53Z",
        "closed_at": "2022-07-14T21:59:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11577",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11577",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11577.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11577.patch",
            "merged_at": null
        },
        "body": "Use fixed point arithmetic for NhwcUpsampleBilinear to avoid floating point\r\ncomputation. TFLite are referred for the implementation.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11577/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11578",
        "id": 1242628975,
        "node_id": "PR_kwDOCVq1mM44Kgc_",
        "number": 11578,
        "title": "Fix CUDA 11.6 build error on Windows",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-20T05:20:04Z",
        "updated_at": "2022-05-27T22:04:47Z",
        "closed_at": "2022-05-27T22:04:46Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11578",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11578",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11578.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11578.patch",
            "merged_at": "2022-05-27T22:04:46Z"
        },
        "body": "**Description**: \r\nAvoid windows header that defines 'small' using suggestion from @cloudhan. \r\n\r\nWe only apply the WIN32_LEAN_AND_MEAN flag to the CUDA provider to limit its effect.\r\n\r\n**Motivation and Context**\r\nFix #11227 with cleaner approach than #11314",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11578/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11579",
        "id": 1242635759,
        "node_id": "PR_kwDOCVq1mM44Kh2m",
        "number": 11579,
        "title": "Speed Up GradientChecker Running",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-20T05:30:36Z",
        "updated_at": "2022-05-27T07:14:54Z",
        "closed_at": "2022-05-27T07:14:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11579",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11579",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11579.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11579.patch",
            "merged_at": "2022-05-27T07:14:53Z"
        },
        "body": "Currently the training related pipeline take very long time, expecially the AMD pipeline takes more than 2 hours to run. Most of the time are spent on GradientChecker tests.\r\n\r\nThe GradientChecker will compute numeric Jacobian and theoretical Jacobian for comparison during the test. The numeric Jacobian is computed on every single input element by running the forward graph using OpTester twice. The theoretical Jacobian is computed on every single output element by running both forward and backward graph using OpTester. I.E., if there are M elements in inputs and N elements in outputs, it will run forward graph (M * 2 + N) times and backward graph N times using OpTester, which is super time consuming.\r\n\r\nCurrent code doesn't pass any EP to OpTester, so each graph running will go through all possible EPs and keep the outputs of last run as final output data. This PR is to use CPU EP for numeric Jacobian computation and also set the EP for theoretical Jacobian computation according to the running environment. The PR also formats the GradientChecker code to align with the required clang format.\r\n\r\nWith this PR, in Linux with V100, running all the 58 tests will take 155s, while before that, it's 577s.\r\nFrom the amd pipeline, before the fix, the test running will take 1h45m, which is super long, after the fix, it will take ~42m. Below also shows the total pipeline running time, it saves ~1 hour for each pipeline.\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/11661208/169457330-1a44c83e-e7bf-42ce-9e00-a4b027dd21b7.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/11661208/169456119-24b477df-2159-4675-a6cb-ca40d1f6f2d2.png)\r\n\r\nIdeally if we use CPU for both numeric Jacobian and theoretical Jacobian, it will much faster, and logically it can prove the correctness of gradient graph builder. But using EPs according to the running environment can also help to test the cooorresponding kernels (which should also be covered by single Op tests).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11580",
        "id": 1242737161,
        "node_id": "PR_kwDOCVq1mM44K2S1",
        "number": 11580,
        "title": "[ORTModule] Enable SimplifiedLayerNormalization Fusion",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-20T07:20:47Z",
        "updated_at": "2022-06-01T07:09:40Z",
        "closed_at": "2022-06-01T07:09:39Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11580",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11580",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11580.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11580.patch",
            "merged_at": "2022-06-01T07:09:39Z"
        },
        "body": "Currently for SimplifiedLayerNormalization fusion when there is Cast Ops in the sub-graph for mix-precision training. It's controled by allow_layer_norm_mod_precision flag. Actually LayerNorm kernels will use higher precision data type for inside computation so it's save to fuse to SimplifiedLayerNormalization for better perf. With this change, for one of the transformer models that has such sub-graph, we can observe ~10% perf gain. This PR is to remove the allow_layer_norm_mod_precision flag and always enable SimplifiedLayerNormFusion.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11581",
        "id": 1242844696,
        "node_id": "I_kwDOCVq1mM5KFE4Y",
        "number": 11581,
        "title": "onnxruntime-gpu inference slow when once, but fast when continuous",
        "user": {
            "login": "g782373711",
            "id": 36449632,
            "node_id": "MDQ6VXNlcjM2NDQ5NjMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36449632?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/g782373711",
            "html_url": "https://github.com/g782373711",
            "followers_url": "https://api.github.com/users/g782373711/followers",
            "following_url": "https://api.github.com/users/g782373711/following{/other_user}",
            "gists_url": "https://api.github.com/users/g782373711/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/g782373711/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/g782373711/subscriptions",
            "organizations_url": "https://api.github.com/users/g782373711/orgs",
            "repos_url": "https://api.github.com/users/g782373711/repos",
            "events_url": "https://api.github.com/users/g782373711/events{/privacy}",
            "received_events_url": "https://api.github.com/users/g782373711/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2022-05-20T08:59:01Z",
        "updated_at": "2022-11-09T19:29:17Z",
        "closed_at": "2022-05-27T02:09:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI export a onnx model from yolov5, when I test it performance, a strange phenomenon has occurred. it take long time in first inference。if you start inference after last inference in some seconds later，it take about 89ms，but if start inference after last inference immediately, it take only 17ms。\r\n\r\nperformance log in attach files, you need modify suffix from .txt to .json\r\n\r\n\r\n\r\n**Urgency**\r\nit's a performance issue in my project,  if you know, please tell me why, thank you!!!\r\n\r\n**System information**\r\n- OS Platform: Windows 10 21H2 19044.1620:\r\n- ONNX Runtime installed from (source or binary): pip install onnxruntime-gpu \r\n- ONNX Runtime version:1.10.0\r\n- Python version: python 3.8.10\r\n- CUDA/cuDNN version: CUDA 11.4  cudnn8.2.5\r\n- GPU model and memory: 2080Ti\r\n\r\n**To Reproduce**\r\nsome detail as shown below:\r\n1) the first inference, it take 1274ms，\r\n2) 2s later，the second inference started, take 361ms\r\n3) 2s later agian,the third inference started,  take 39ms,\r\n4) 2s later agian,  the fourth inference started, take 39ms,\r\n5) 2s later agian,  the fifth inference started, take 89ms,\r\n6) 4s later agian,  the sixth inference started, take 89ms,\r\n7) after the sixth inference, the seventh inference start immediately, take 89ms,\r\n8) after the seventh inference, the eighth inference start immediately, take 89ms,\r\n9) after the eighth inference, the ninth inference start immediately, take 80ms,\r\n10) after the ninth inference, the tenth inference start immediately, take 17ms,\r\n11) after this, if start inference after last inference immediately, it take 17ms only.\r\n\r\n\r\n**Expected behavior**\r\nThe inference is fast every time and time could not fluctuate.\r\n\r\n\r\n\r\n**Additional context**\r\nonnx setting:\r\nopt = ort.SessionOptions()\r\nopt.enable_mem_reuse = True\r\nopt.intra_op_num_threads = 4\r\nopt.graph_optimization_level = ort.GraphOptimizationLevel.ORT_ENABLE_ALL\r\n\r\ndata input by io_binding, size is 3 x 640 x 640 \r\n[onnxruntime_profile__2022-05-20_16-31-43.txt](https://github.com/microsoft/onnxruntime/files/8738009/onnxruntime_profile__2022-05-20_16-31-43.txt)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11582",
        "id": 1242954780,
        "node_id": "I_kwDOCVq1mM5KFfwc",
        "number": 11582,
        "title": "ONNXRUNTIME + OpenVINO on ARM64 ",
        "user": {
            "login": "thestarivore",
            "id": 22894195,
            "node_id": "MDQ6VXNlcjIyODk0MTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22894195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thestarivore",
            "html_url": "https://github.com/thestarivore",
            "followers_url": "https://api.github.com/users/thestarivore/followers",
            "following_url": "https://api.github.com/users/thestarivore/following{/other_user}",
            "gists_url": "https://api.github.com/users/thestarivore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thestarivore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thestarivore/subscriptions",
            "organizations_url": "https://api.github.com/users/thestarivore/orgs",
            "repos_url": "https://api.github.com/users/thestarivore/repos",
            "events_url": "https://api.github.com/users/thestarivore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thestarivore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1624868154,
                "node_id": "MDU6TGFiZWwxNjI0ODY4MTU0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:OpenVINO",
                "name": "ep:OpenVINO",
                "color": "0052CC",
                "default": false,
                "description": "issues related to OpenVINO execution provider"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-20T10:33:10Z",
        "updated_at": "2022-05-27T15:38:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\nHi, I'm trying to get ONNXRUNTIME + OpenVINO (+ONNX) to work on a Raspberry PI 4B with a ARM64 OS (Raspbian Bullseye). But I can't find any good guide. I'm building onnxruntime and openvino from scratch and they work individually, but I can't get to make onnxruntime recognize the OpenVino EP. Every time I try to follow the official instructions, everything on my system is different than it's described in the instructions and the OpenVINO's setupvars.sh script never works (never finds python).\r\n\r\n**System information**\r\n- Raspberry PI 4B - Raspbian Bullseye - ARM64\r\n- Intel® Neural Compute Stick 2\r\n- ONNX Runtime version v1.11.0\r\n- OpenVINO 2022.1\r\n\r\n**Describe the solution you'd like**\r\nIt would be great to have an already compiled packet or a tested installation process that is known to work on ARM64. A Raspberry PI is the simplest embedded device one can consider.\r\n\r\n**Describe alternatives you've considered**\r\nI managed to make it work on Raspbian Buster (ARM32) with the following instructions: [article](putvision.github.io/article/raspberry-onnxruntime-openvino)\r\nBut unfortunately I can't use an ARM32 OS since I have other packets to install that only work on ARM64.\r\n\r\nI've followed the the same installation steps of [daves003](https://github.com/daves003) in [issues/6057](https://github.com/microsoft/onnxruntime/issues/6057), but again I can't link OpenVINO to onnxruntime.\r\n\r\nDoes someone managed to make ONNXRUNTIME + OpenVINO  work on an ARM64 device?\r\n\r\nThank you in advance.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11583",
        "id": 1243285673,
        "node_id": "I_kwDOCVq1mM5KGwip",
        "number": 11583,
        "title": "did it can build onnxruntime with any cuda version by source code ? is not relate to onnxtuntime version?",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-20T15:10:21Z",
        "updated_at": "2022-05-20T17:08:12Z",
        "closed_at": "2022-05-20T17:08:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- Python version:\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11583/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11584",
        "id": 1243293605,
        "node_id": "I_kwDOCVq1mM5KGyel",
        "number": 11584,
        "title": "did it can build onnxruntime with any cuda version by source code ? is not relate to onnxtuntime version?",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-20T15:14:46Z",
        "updated_at": "2022-05-20T17:06:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- Python version:3.6\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:11.0/8.0\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n\r\n\r\ndid it can build onnxruntime with any cuda version by source code ? is not relate to onnxtuntime version?  because i find GPU is useless by pip install onnxruntime-gpu  even though the cuda and cudnn vesion is satis\r\nfied\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11585",
        "id": 1243465972,
        "node_id": "PR_kwDOCVq1mM44NQ0u",
        "number": 11585,
        "title": "Fix armnn provider",
        "user": {
            "login": "mich-sanna",
            "id": 54891577,
            "node_id": "MDQ6VXNlcjU0ODkxNTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/54891577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mich-sanna",
            "html_url": "https://github.com/mich-sanna",
            "followers_url": "https://api.github.com/users/mich-sanna/followers",
            "following_url": "https://api.github.com/users/mich-sanna/following{/other_user}",
            "gists_url": "https://api.github.com/users/mich-sanna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mich-sanna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mich-sanna/subscriptions",
            "organizations_url": "https://api.github.com/users/mich-sanna/orgs",
            "repos_url": "https://api.github.com/users/mich-sanna/repos",
            "events_url": "https://api.github.com/users/mich-sanna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mich-sanna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-20T18:02:53Z",
        "updated_at": "2022-05-21T08:28:27Z",
        "closed_at": "2022-05-21T08:28:27Z",
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11585",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11585",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11585.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11585.patch",
            "merged_at": null
        },
        "body": "**Description**\r\nFixes some types in pool.cc, conv.cc, and concat.cc to match recent definitions of `ConvPadVector` and `TensorShapeVector`\r\nBuilds on top of #11448 which provides a similar fix for the ACL EP\r\n\r\n**Motivation and Context**\r\n- Fixes compilation of the ArmNN EP",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11585/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11586",
        "id": 1243816771,
        "node_id": "PR_kwDOCVq1mM44OdRp",
        "number": 11586,
        "title": "[js/rn] upgrade dependency packages' version",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-21T01:07:10Z",
        "updated_at": "2022-05-31T20:54:18Z",
        "closed_at": "2022-05-31T20:54:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11586",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11586",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11586.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11586.patch",
            "merged_at": "2022-05-31T20:54:17Z"
        },
        "body": "**Description**: Update package version of dev dependencies for onnxruntime-react-native.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11586/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11587",
        "id": 1243915906,
        "node_id": "PR_kwDOCVq1mM44OvaQ",
        "number": 11587,
        "title": "Fix armnn provider",
        "user": {
            "login": "mich-sanna",
            "id": 54891577,
            "node_id": "MDQ6VXNlcjU0ODkxNTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/54891577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mich-sanna",
            "html_url": "https://github.com/mich-sanna",
            "followers_url": "https://api.github.com/users/mich-sanna/followers",
            "following_url": "https://api.github.com/users/mich-sanna/following{/other_user}",
            "gists_url": "https://api.github.com/users/mich-sanna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mich-sanna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mich-sanna/subscriptions",
            "organizations_url": "https://api.github.com/users/mich-sanna/orgs",
            "repos_url": "https://api.github.com/users/mich-sanna/repos",
            "events_url": "https://api.github.com/users/mich-sanna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mich-sanna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            },
            {
                "id": 2682135653,
                "node_id": "MDU6TGFiZWwyNjgyMTM1NjUz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:ArmNN",
                "name": "ep:ArmNN",
                "color": "0052CC",
                "default": false,
                "description": "issues related to Arm NN execution provider"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-21T08:28:50Z",
        "updated_at": "2022-08-10T00:46:31Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11587",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11587",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11587.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11587.patch",
            "merged_at": null
        },
        "body": "**Description**\r\nFixes some types in pool.cc, conv.cc, and concat.cc to match recent definitions of `ConvPadVector` and `TensorShapeVector`\r\nBuilds on top of #11448 which provides a similar fix for the ACL EP\r\n\r\n**Motivation and Context**\r\n- Fixes compilation of the ArmNN EP",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11588",
        "id": 1244289420,
        "node_id": "I_kwDOCVq1mM5KKlmM",
        "number": 11588,
        "title": "Segmentation fault for openvino EP",
        "user": {
            "login": "mengniwang95",
            "id": 65003808,
            "node_id": "MDQ6VXNlcjY1MDAzODA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/65003808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mengniwang95",
            "html_url": "https://github.com/mengniwang95",
            "followers_url": "https://api.github.com/users/mengniwang95/followers",
            "following_url": "https://api.github.com/users/mengniwang95/following{/other_user}",
            "gists_url": "https://api.github.com/users/mengniwang95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mengniwang95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mengniwang95/subscriptions",
            "organizations_url": "https://api.github.com/users/mengniwang95/orgs",
            "repos_url": "https://api.github.com/users/mengniwang95/repos",
            "events_url": "https://api.github.com/users/mengniwang95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mengniwang95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1624868154,
                "node_id": "MDU6TGFiZWwxNjI0ODY4MTU0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:OpenVINO",
                "name": "ep:OpenVINO",
                "color": "0052CC",
                "default": false,
                "description": "issues related to OpenVINO execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-22T15:29:29Z",
        "updated_at": "2022-05-24T02:27:05Z",
        "closed_at": "2022-05-24T02:27:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/65003808/169703161-8323a1dc-1cd6-43cc-8092-0232feb0a07c.png)\r\nthis my env,  I can create a Session successfully but during run there will be Segmentation fault, could you give any help?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11588/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11589",
        "id": 1244541735,
        "node_id": "PR_kwDOCVq1mM44QpsX",
        "number": 11589,
        "title": "End to end run pass (on device training)",
        "user": {
            "login": "pengwa",
            "id": 10530022,
            "node_id": "MDQ6VXNlcjEwNTMwMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10530022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwa",
            "html_url": "https://github.com/pengwa",
            "followers_url": "https://api.github.com/users/pengwa/followers",
            "following_url": "https://api.github.com/users/pengwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwa/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwa/orgs",
            "repos_url": "https://api.github.com/users/pengwa/repos",
            "events_url": "https://api.github.com/users/pengwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-23T04:00:53Z",
        "updated_at": "2022-06-15T07:32:21Z",
        "closed_at": "2022-06-01T01:39:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11589",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11589",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11589.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11589.patch",
            "merged_at": null
        },
        "body": "**Description**: End to end run pass (on device training)\r\n\r\n1. LRScheduler/SetExecutionProvider implementations.\r\n2. Training API test runner pass:\r\n   - interfaces.cc act as a bridge between user-facing public ORT data structures and internal ones. It is a intermediate place before we move it as a formal public cxx api.\r\n   - Synthetic data loader.\r\n   - Add perf measure code.\r\n   - Avoid heavy session input CPU->GPU memory copy. \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11589/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11590",
        "id": 1244566450,
        "node_id": "I_kwDOCVq1mM5KLpOy",
        "number": 11590,
        "title": "cpu and gpu results is not the same",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-23T04:31:54Z",
        "updated_at": "2023-04-03T01:51:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is. To avoid repetition please make sure this is not one of the known issues mentioned on the respective release page.\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:1.8\r\n- Python version:3.6\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:11.0/8.0\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\ni test the image with cpu onnxruntime,the results is ok, the OCR results is (Bank Account Number:     769681044905  Cleveland, OH 44194-4338),and the results is right,but with onnxruntime-gpu it only can recognise as (Bank Account Number:     769681044905  Cleveland, OH),  it cut off some results,that's amazing.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11590/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11591",
        "id": 1244578120,
        "node_id": "PR_kwDOCVq1mM44Qxq7",
        "number": 11591,
        "title": "Add Mac Silicon/M1 Wheel",
        "user": {
            "login": "mszhanyi",
            "id": 16190118,
            "node_id": "MDQ6VXNlcjE2MTkwMTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16190118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mszhanyi",
            "html_url": "https://github.com/mszhanyi",
            "followers_url": "https://api.github.com/users/mszhanyi/followers",
            "following_url": "https://api.github.com/users/mszhanyi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mszhanyi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mszhanyi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mszhanyi/subscriptions",
            "organizations_url": "https://api.github.com/users/mszhanyi/orgs",
            "repos_url": "https://api.github.com/users/mszhanyi/repos",
            "events_url": "https://api.github.com/users/mszhanyi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mszhanyi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2022-05-23T04:51:25Z",
        "updated_at": "2022-07-15T03:39:53Z",
        "closed_at": "2022-06-07T15:58:20Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11591",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11591",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11591.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11591.patch",
            "merged_at": "2022-06-07T15:58:20Z"
        },
        "body": "**Description**:\r\nAdd one workflow to add mac silicon python wheels\r\n\r\n**Motivation and Context**\r\nFixes #6633\r\n\r\ntest link:\r\nhttps://test.pypi.org/project/ort-nightly/1.12.0.dev20220601005/",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591/reactions",
            "total_count": 9,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 5,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11591/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11592",
        "id": 1244663338,
        "node_id": "I_kwDOCVq1mM5KMA4q",
        "number": 11592,
        "title": "CUDNN failure 4: CUDNN_STATUS_INTERNAL_ERROR ; error when inferencing on a GPUVM",
        "user": {
            "login": "abilashravi-ta",
            "id": 53215532,
            "node_id": "MDQ6VXNlcjUzMjE1NTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/53215532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abilashravi-ta",
            "html_url": "https://github.com/abilashravi-ta",
            "followers_url": "https://api.github.com/users/abilashravi-ta/followers",
            "following_url": "https://api.github.com/users/abilashravi-ta/following{/other_user}",
            "gists_url": "https://api.github.com/users/abilashravi-ta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abilashravi-ta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abilashravi-ta/subscriptions",
            "organizations_url": "https://api.github.com/users/abilashravi-ta/orgs",
            "repos_url": "https://api.github.com/users/abilashravi-ta/repos",
            "events_url": "https://api.github.com/users/abilashravi-ta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abilashravi-ta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-23T06:48:20Z",
        "updated_at": "2022-05-25T21:02:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\nI built **onnxruntime** (v1.8.2) from source following [these](https://onnxruntime.ai/docs/build/inferencing.html#cpu) instructions.\r\nUsed the following command to build and install\r\n```\r\n./build.sh --cuda_home /home/azureuser/miniconda3/envs/cuda_conda_v1/ --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_cuda --config RelWithDebInfo --build_shared_lib --build_wheel --skip_tests --parallel 6\r\ncd build/Linux/RelWithDebInfo\r\nmake install\r\n```\r\n\r\nI'm using `squeezenet1.1-7.onnx` model, downloaded from [here](https://github.com/onnx/models/blob/main/vision/classification/squeezenet/model/squeezenet1.1-7.onnx), to perform _inferencing_ in **C++** on a *GPU*.\r\n\r\n**System information**\r\n- OS Platform and Distribution: **Ubuntu 18.04.6 LTS x86_64**\r\n- ONNX Runtime installed from (source or binary): source (using the link mentioned above)\r\n- G++ Compiler version: 7.5.0\r\n\r\n**To Reproduce**\r\nWhen I compile the following piece of code with \r\n_g++ -o run1 inference.cpp -I/home/azureuser/onnx_conda_cuda/onnxruntime/include/onnxruntime/core/session/ -L/home/azureuser/onnx_conda_cuda/onnxruntime/build/Linux/RelWithDebInfo -lonnxruntime  \\`pkg-config --cflags --libs opencv4\\`_\r\n\r\n```\r\n// inference.cpp\r\n#include<onnxruntime_cxx_api.h>\r\n\r\n#include<opencv2/dnn/dnn.hpp>\r\n#include<opencv2/imgcodecs.hpp>\r\n#include<opencv2/imgproc.hpp>\r\n\r\n#include<fstream>\r\n#include<iostream>\r\n#include<string>\r\n#include<vector>\r\n#include<numeric>\r\n\r\nusing namespace std;\r\n\r\ntemplate<class T>\r\nT vectorProduct(vector<T>& v)\r\n{\r\n        return accumulate(v.begin(), v.end(), 1, multiplies<T>());\r\n}\r\n\r\nint main()\r\n{\r\n\r\n        string modelFilepath{\"squeezenet1.1-7.onnx\"};\r\n        Ort::Env env;\r\n        Ort::SessionOptions sessionOptions;\r\n\r\n        OrtCUDAProviderOptions cuda_options{0};\r\n        sessionOptions.AppendExecutionProvider_CUDA(cuda_options);\r\n\r\n        Ort::Session session(env, modelFilepath.c_str(), sessionOptions);\r\n        Ort::AllocatorWithDefaultOptions allocator;\r\n\r\n        string imageFilepath{\"european-bee-eater-224X224.jpg\"};\r\n        cv::Mat imageBGR = cv::imread(imageFilepath);\r\n        cv::Mat preprocessedImage, resizedImage;\r\n        cv::dnn::blobFromImage(imageBGR, preprocessedImage);\r\n        preprocessedImage.convertTo(resizedImage, CV_32F, 1.0);\r\n\r\n        const char* inputName = session.GetInputName(0, allocator);\r\n        vector<int64_t> inputDims{1, 3, 224, 224};\r\n        const char* outputName = session.GetOutputName(0, allocator);\r\n        vector<int64_t> outputDims{1, 1000};\r\n\r\n        size_t inputTensorSize = vectorProduct(inputDims);\r\n        vector<const char*> inputNames{inputName};\r\n        vector<Ort::Value> inputTensors;\r\n\r\n        size_t outputTensorSize = vectorProduct(outputDims);\r\n        vector<float> outputTensorValues(outputTensorSize);\r\n        vector<const char*> outputNames{outputName};\r\n        vector<Ort::Value> outputTensors;\r\n\r\n        Ort::MemoryInfo memoryInfo = Ort::MemoryInfo::CreateCpu(OrtAllocatorType::OrtArenaAllocator, OrtMemType::OrtMemTypeDefault);\r\n        inputTensors.push_back(Ort::Value::CreateTensor<float>(memoryInfo, (float*)resizedImage.data, inputTensorSize, inputDims.data(), inputDims.size()));\r\n        outputTensors.push_back(Ort::Value::CreateTensor<float>(memoryInfo, outputTensorValues.data(), outputTensorSize, outputDims.data(), outputDims.size()));\r\n\r\n        session.Run(Ort::RunOptions{nullptr}, inputNames.data(), inputTensors.data(), 1, outputNames.data(), outputTensors.data(), 1);\r\n\r\n        int maxElementIndex = max_element(outputTensorValues.begin(),outputTensorValues.end()) - outputTensorValues.begin();\r\n        cout << endl << \"Predicted Label ID: \" << maxElementIndex << endl;\r\n\r\n        return 0;\r\n}\r\n```\r\nI don't get any compilation error. \r\n\r\nBut when I _execute_ `./run1`, after successful compilation, I get\r\n![cudnn_err](https://user-images.githubusercontent.com/53215532/169759897-c41a3b3a-419a-41e5-8393-be38d66b662f.JPG)\r\n\r\n\r\nThe code runs fine on **CPU** (i.e. without the lines `OrtCUDAProviderOptions cuda_options{0}; \r\n sessionOptions.AppendExecutionProvider_CUDA(cuda_options);`)\r\nThe issue is while inferencing on **GPU**. Any suggestion would be helpful.!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11592/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11593",
        "id": 1244715613,
        "node_id": "PR_kwDOCVq1mM44RO0X",
        "number": 11593,
        "title": "Create OrtEnv earlier in C# code ",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-23T07:40:36Z",
        "updated_at": "2023-06-07T19:07:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11593",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11593",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11593.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11593.patch",
            "merged_at": null
        },
        "body": "**Description**: \r\nTrigger creation of OrtEnv in the C# SessionOptions constructor so that the default logger is available if any calls to NativeMethods made by SessionOptions fail internally.\r\n\r\nCurrently we do this in the C# InferenceSession class, but that is too late for any errors that come from adding EPs to the session options.\r\n\r\n**Motivation and Context**\r\n#11572",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11594",
        "id": 1244816656,
        "node_id": "I_kwDOCVq1mM5KMmUQ",
        "number": 11594,
        "title": "oneDNN C++ API support?",
        "user": {
            "login": "prikmm",
            "id": 47216475,
            "node_id": "MDQ6VXNlcjQ3MjE2NDc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47216475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prikmm",
            "html_url": "https://github.com/prikmm",
            "followers_url": "https://api.github.com/users/prikmm/followers",
            "following_url": "https://api.github.com/users/prikmm/following{/other_user}",
            "gists_url": "https://api.github.com/users/prikmm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prikmm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prikmm/subscriptions",
            "organizations_url": "https://api.github.com/users/prikmm/orgs",
            "repos_url": "https://api.github.com/users/prikmm/repos",
            "events_url": "https://api.github.com/users/prikmm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prikmm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-23T08:59:53Z",
        "updated_at": "2022-07-29T13:01:26Z",
        "closed_at": "2022-05-23T19:51:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI am currently trying the oneDNN / DNNL execution provider in C++ and was following the [docs present here](https://onnxruntime.ai/docs/execution-providers/oneDNN-ExecutionProvider.html). In the docs, it is being mentioned that to add DNNL Execution Provider, `OrtSessionOptionsAppendExecutionProvider_Dnnl` needs to be used. But, I went through the entire C/C++ API documentation [here](https://onnxruntime.ai/docs/api/c/index.html) and didn't find any such API. \r\n\r\nHas the support for C/C++ API of oneDNN execution provider been removed or do the docs need to be updated?\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 20.04 (Docker image)\r\n- ONNX Runtime installed from (source or binary): Source\r\n- ONNX Runtime version: 1.11.0\r\n- Python version: 3.8.10\r\n- Visual Studio version (if applicable): NA\r\n- GCC/Compiler version (if compiling from source): 9.3.0\r\n- CUDA/cuDNN version: 11.5\r\n- GPU model and memory: GTX 1050 Ti 4GB\r\n\r\n**Expected behavior**\r\nAn updated documentation, both example and API, containing the correct API support.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11594/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11595",
        "id": 1244889160,
        "node_id": "I_kwDOCVq1mM5KM4BI",
        "number": 11595,
        "title": "issues with pybind11 repository while installing",
        "user": {
            "login": "amirsarusi",
            "id": 42070364,
            "node_id": "MDQ6VXNlcjQyMDcwMzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42070364?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amirsarusi",
            "html_url": "https://github.com/amirsarusi",
            "followers_url": "https://api.github.com/users/amirsarusi/followers",
            "following_url": "https://api.github.com/users/amirsarusi/following{/other_user}",
            "gists_url": "https://api.github.com/users/amirsarusi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amirsarusi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amirsarusi/subscriptions",
            "organizations_url": "https://api.github.com/users/amirsarusi/orgs",
            "repos_url": "https://api.github.com/users/amirsarusi/repos",
            "events_url": "https://api.github.com/users/amirsarusi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amirsarusi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-23T09:45:41Z",
        "updated_at": "2022-05-23T19:41:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hello, i've been trying to install onxxruntime and have been getting this error\r\n\r\n> \"Cmake Error at <path>/onxxruntime/build/Linux/RelWithDebInfo/pybind11/src/pybind11 is owned by someone else\"\r\n\r\nmy OS is ubuntu18.04, Cmake version is 3.21.5 and to install it i did the following:\r\n\r\n1. git clone --recursive --branch v1.8.2 https://github.com/Microsoft/onnxruntime\r\n2. cd into onnx directory and:\r\n`./build.sh \\\r\n        --config RelWithDebInfo \\\r\n        --build_shared_lib \\\r\n        --build_wheel \\\r\n        --skip_tests \\\r\n        --parallel ${NUM_JOBS} && \\\r\n    cd build/Linux/RelWithDebInfo && \\\r\n    make install`\r\n\r\ntried looking for this specific error and nothing came up, is this a known issue? how can i address this?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11596",
        "id": 1244893630,
        "node_id": "PR_kwDOCVq1mM44R08r",
        "number": 11596,
        "title": "Add ORT_TENSORRT_FP16_ENABLE flag",
        "user": {
            "login": "guyang3532",
            "id": 62738430,
            "node_id": "MDQ6VXNlcjYyNzM4NDMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/62738430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guyang3532",
            "html_url": "https://github.com/guyang3532",
            "followers_url": "https://api.github.com/users/guyang3532/followers",
            "following_url": "https://api.github.com/users/guyang3532/following{/other_user}",
            "gists_url": "https://api.github.com/users/guyang3532/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guyang3532/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guyang3532/subscriptions",
            "organizations_url": "https://api.github.com/users/guyang3532/orgs",
            "repos_url": "https://api.github.com/users/guyang3532/repos",
            "events_url": "https://api.github.com/users/guyang3532/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guyang3532/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-23T09:49:19Z",
        "updated_at": "2022-05-23T09:51:37Z",
        "closed_at": "2022-05-23T09:51:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11596",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11596",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11596.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11596.patch",
            "merged_at": "2022-05-23T09:51:37Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11597",
        "id": 1244939721,
        "node_id": "PR_kwDOCVq1mM44R-1_",
        "number": 11597,
        "title": "ATen Fallback for Inference",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2022-05-23T10:23:08Z",
        "updated_at": "2022-06-09T16:55:05Z",
        "closed_at": "2022-06-09T08:07:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11597",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11597",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11597.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11597.patch",
            "merged_at": "2022-06-09T08:07:31Z"
        },
        "body": "Support ATen fallback for Inference.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11598",
        "id": 1245040142,
        "node_id": "PR_kwDOCVq1mM44SU3_",
        "number": 11598,
        "title": "[ROCM] Fix shared libs build",
        "user": {
            "login": "npmiller",
            "id": 5684593,
            "node_id": "MDQ6VXNlcjU2ODQ1OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5684593?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/npmiller",
            "html_url": "https://github.com/npmiller",
            "followers_url": "https://api.github.com/users/npmiller/followers",
            "following_url": "https://api.github.com/users/npmiller/following{/other_user}",
            "gists_url": "https://api.github.com/users/npmiller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/npmiller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/npmiller/subscriptions",
            "organizations_url": "https://api.github.com/users/npmiller/orgs",
            "repos_url": "https://api.github.com/users/npmiller/repos",
            "events_url": "https://api.github.com/users/npmiller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/npmiller/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-05-23T11:46:55Z",
        "updated_at": "2022-08-10T00:46:32Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11598",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11598",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11598.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11598.patch",
            "merged_at": null
        },
        "body": "**Description**:\r\n\r\nThe ROCm provider is currently built as a `MODULE`, which means it can't\r\nbe linked within CMake and has to be dynamically loaded at runtime, this\r\nis fine however it means that it can't be listed in the\r\n`onnxruntime_INTERNAL_LIBRARIES`.\r\n\r\n`rocm_provider_factory.h` is a C++ header so having it included in the C\r\nfile generated by `get_def.py` also breaks the build. As far as I can\r\ntell the ROCM EP already has the newer entry points and is already built\r\nas a shared library so including the factory in `gen_def.py` should be\r\nskipped.\r\n\r\nAnd since the `rocm_provider_factory.h` is not included in the\r\n`generated_source.c`, `OrtSessionOptionsAppendExecutionProvider_ROCM`\r\nhas to be declared to `onnxruntime_c_api.h`.\r\n\r\nThis is similar to how other providers such as MIGraphX are built.\r\n\r\n\r\n**Motivation and Context**:\r\n- Without this patch, on the master branch, I was unable to build the ROCm EP (on Linux), with this patch I am able to build it and run samples correctly.\r\n- This issue has also been identified and reported in the following ticket, which this patch should also fix:\r\n  - https://github.com/microsoft/onnxruntime/issues/10466",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11599",
        "id": 1245173228,
        "node_id": "I_kwDOCVq1mM5KN9Xs",
        "number": 11599,
        "title": "Where to find how QLinearConv is implemented?",
        "user": {
            "login": "vvolhejn",
            "id": 8401624,
            "node_id": "MDQ6VXNlcjg0MDE2MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8401624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vvolhejn",
            "html_url": "https://github.com/vvolhejn",
            "followers_url": "https://api.github.com/users/vvolhejn/followers",
            "following_url": "https://api.github.com/users/vvolhejn/following{/other_user}",
            "gists_url": "https://api.github.com/users/vvolhejn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vvolhejn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vvolhejn/subscriptions",
            "organizations_url": "https://api.github.com/users/vvolhejn/orgs",
            "repos_url": "https://api.github.com/users/vvolhejn/repos",
            "events_url": "https://api.github.com/users/vvolhejn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vvolhejn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1607058914,
                "node_id": "MDU6TGFiZWwxNjA3MDU4OTE0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/quantization",
                "name": "quantization",
                "color": "C2E0C6",
                "default": false,
                "description": "issues related to quantization"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-23T13:28:44Z",
        "updated_at": "2022-05-27T15:14:29Z",
        "closed_at": "2022-05-27T15:14:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi, I'm trying to understand how exactly static quantization with QDQ works on x86_64. Specifically, I'm wondering whether matrix multiplication and convolutional layers use floating-point or integer instructions (PyTorch's backend FBGEMM [uses vpmaddubsw and vpaddsw](https://engineering.fb.com/2018/11/07/ml-applications/fbgemm/)), and what instructions specifically. I am testing on a simple conv2d->maxpool model. Here are the .onnx files: [onnxruntime-qlinearconv-question.zip].(https://github.com/microsoft/onnxruntime/files/8754853/onnxruntime-qlinearconv-question.zip)\r\n\r\nI assumed integer instructions are used (that's what quantization is for, right?) but was confused by the fact that Netron shows me\r\n\r\n![Screenshot 2022-05-23 at 14 50 53](https://user-images.githubusercontent.com/8401624/169827581-d3698011-cda5-4e0e-a2ea-e3605704e838.png)\r\n\r\nwhen I visualize the saved quantized model. This seems to imply that the weights are first dequantized and a regular fp32 convolution is performed. That's what the [quantization docs](https://onnxruntime.ai/docs/performance/quantization.html#data-type-selection) seem to imply as well:\r\n> Tensor Oriented, aka Quantize and DeQuantize (QDQ). This format uses DQ(Q(tensor)) to simulate the quantize and dequantize process, and QuantizeLinear and DeQuantizeLinear operators also carry the quantization parameters\r\n\r\nThen I figured out that this representation might not correspond to what's actually being done, so I tried loading my model using the following:\r\n\r\n```python\r\nsession_options = ort.SessionOptions()\r\nsession_options.graph_optimization_level = (\r\n    ort.GraphOptimizationLevel.ORT_ENABLE_EXTENDED\r\n)\r\nsession_options.optimized_model_filepath = \"quantized_model_optimized.onnx\"\r\n\r\nself.session = ort.InferenceSession(\r\n    \"quantized_model.onnx\",\r\n    sess_options=session_options,\r\n)\r\n```\r\n\r\nWhen I visualize `optimized_model.onnx` using Netron, I see\r\n\r\n![Screenshot 2022-05-23 at 14 51 44](https://user-images.githubusercontent.com/8401624/169827667-5f7f40dd-bc7b-42e3-acbf-a447081be3fa.png)\r\n\r\nwhere the convolution turned into a QLinearConv. I assume this operation uses integer instructions but I wanted to verify this in the code. I found the corresponding implementation in [`qlinearconv.cc`](https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/core/providers/cpu/quantization/qlinearconv.cc) - I guess the relevant call is [`MlasGemm`](https://github.com/microsoft/onnxruntime/blob/6072c6b65e9a8816ba53ccbdb15dbd7fc7001e18/onnxruntime/core/providers/cpu/quantization/qlinearconv.cc#L863). I'm having trouble figuring out what this calls exactly since there are several implementations defined in the [`mlas`](https://github.com/microsoft/onnxruntime/tree/0d0edc071f24112dea9719096bd609b99954bfc0/onnxruntime/core/mlas) directory - is it `qgemm`, `sgemm` or something else? The documentation is unfortunately pretty sparse.\r\n\r\nHow can I determine which `MlasGemm` implementation is being called, and which machine instructions it actually uses?\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): 1.11.1\r\n- OS: CentOS Linux release 7.9.2009 (Core)\r\n- CPU: Intel Xeon Gold 5118\r\n- `/proc/cpuinfo` says:\r\n```\r\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb cat_l3 cdp_l3 invpcid_single intel_ppin intel_pt ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_pkg_req pku ospke md_clear spec_ctrl intel_stibp flush_l1d\r\n```\r\n\r\nI would also appreciate general pointers on where to look for similar sorts of information: what implementation/instructions are used on specific hardware for specific operations. \r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11599/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11600",
        "id": 1245317531,
        "node_id": "PR_kwDOCVq1mM44TQ-_",
        "number": 11600,
        "title": "Add string type",
        "user": {
            "login": "guilherme-santos",
            "id": 281564,
            "node_id": "MDQ6VXNlcjI4MTU2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/281564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guilherme-santos",
            "html_url": "https://github.com/guilherme-santos",
            "followers_url": "https://api.github.com/users/guilherme-santos/followers",
            "following_url": "https://api.github.com/users/guilherme-santos/following{/other_user}",
            "gists_url": "https://api.github.com/users/guilherme-santos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guilherme-santos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guilherme-santos/subscriptions",
            "organizations_url": "https://api.github.com/users/guilherme-santos/orgs",
            "repos_url": "https://api.github.com/users/guilherme-santos/repos",
            "events_url": "https://api.github.com/users/guilherme-santos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guilherme-santos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-23T15:07:36Z",
        "updated_at": "2022-08-10T00:46:32Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11600",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11600",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11600.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11600.patch",
            "merged_at": null
        },
        "body": "**Description**: Add string as option to `TypeToTensorType`\r\n\r\n**Motivation and Context**\r\n- For consistency, we have `TypeToTensorType` for other types but not for string.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11601",
        "id": 1245515270,
        "node_id": "PR_kwDOCVq1mM44T7xC",
        "number": 11601,
        "title": "Fix grammar and style issues in quantization docs",
        "user": {
            "login": "vvolhejn",
            "id": 8401624,
            "node_id": "MDQ6VXNlcjg0MDE2MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8401624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vvolhejn",
            "html_url": "https://github.com/vvolhejn",
            "followers_url": "https://api.github.com/users/vvolhejn/followers",
            "following_url": "https://api.github.com/users/vvolhejn/following{/other_user}",
            "gists_url": "https://api.github.com/users/vvolhejn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vvolhejn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vvolhejn/subscriptions",
            "organizations_url": "https://api.github.com/users/vvolhejn/orgs",
            "repos_url": "https://api.github.com/users/vvolhejn/repos",
            "events_url": "https://api.github.com/users/vvolhejn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vvolhejn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-23T17:53:34Z",
        "updated_at": "2022-05-24T17:37:15Z",
        "closed_at": "2022-05-24T17:37:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11601",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11601",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11601.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11601.patch",
            "merged_at": "2022-05-24T17:37:14Z"
        },
        "body": "**Description**: Fixed grammar errors throughout the document. Improved style and formulations to increase clarity. Expanded non-obvious abbreviations. Changed usages of \"operator oriented\" to \"QOperator\" to be consistent with the code.\r\n\r\nIn general, I focused on small changes without changing the text around too much. The places where I might have changed the semantics are:\r\n- \"This format inserts DeQuantizeLinear(QuantizeLinear(tensor)) between operators to simulate the quantization and dequantization process.\" I elaborated on the original version, I hope I didn't distort the meaning.\r\n- \"This instruction might suffer from saturation issues: it can happen that the output does not fit into a 16-bit integer and has to be clamped (saturated) to fit.\" I added this explanation.\r\n- \"Our quantization tool supports three calibration methods: MinMax, Entropy and Percentile.\" I checked `calibrate.py` and found the `Percentile` method which was not mentioned in the docs. This is not mentioned in `quantize_static()` either, so I hope this is not an error.\r\n- \"The performance improvement depends on your model and hardware. The performance gain from quantization has two aspects: compute and memory. Old hardware has none or few of the instructions needed to perform efficient inference in int8.\"\r\n\r\nThere are still some unresolved issues that I wasn't sure how to deal with:\r\n- The documentation half-assumes that the person reading it already knows what model quantization is: I think it would be quite difficult to understand for someone who has never heard of quantization. It might be good to add a link to an external resource explaining the basics.\r\n- \"In general, it is recommended to use dynamic quantization for RNNs and transformer-based models, and static quantization for CNN models.\" - why? I suppose because the RNNs/transformers tend to be memory-bound and CNNs tend to be compute-bound?\r\n- \"Per-channel quantization can improve the accuracy for models whose weight ranges are large.\" - an explanation of what per-channel quantization is would be useful.\r\n- It isn't explained very well what calibration is and what the different calibration methods do.\r\n\r\n**Motivation and Context**: The current quantization documentation has grammar and clarity issues that make it more difficult to understand a topic that is already complicated to begin with. This PR should improve the situation somewhat.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/11602",
        "id": 1245594273,
        "node_id": "PR_kwDOCVq1mM44UMd1",
        "number": 11602,
        "title": "[Cleanup] Modernize python syntax with pyupgrade",
        "user": {
            "login": "justinchuby",
            "id": 11205048,
            "node_id": "MDQ6VXNlcjExMjA1MDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11205048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinchuby",
            "html_url": "https://github.com/justinchuby",
            "followers_url": "https://api.github.com/users/justinchuby/followers",
            "following_url": "https://api.github.com/users/justinchuby/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinchuby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinchuby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinchuby/subscriptions",
            "organizations_url": "https://api.github.com/users/justinchuby/orgs",
            "repos_url": "https://api.github.com/users/justinchuby/repos",
            "events_url": "https://api.github.com/users/justinchuby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinchuby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-23T19:16:11Z",
        "updated_at": "2022-06-28T19:55:12Z",
        "closed_at": "2022-06-28T19:55:12Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/11602",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/11602",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/11602.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/11602.patch",
            "merged_at": null
        },
        "body": "**Description**: Describe your changes.\n\n**Motivation and Context**\n\nThe code base contains old and obsolete python syntax. Upgrading with pyupgrade\n\n```\npyupgrade --py36-plus --keep-runtime-typing  $(git ls-files **/*.py)\n```\n\nmanually excluding flatbuffer files.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11603",
        "id": 1245866095,
        "node_id": "I_kwDOCVq1mM5KQmhv",
        "number": 11603,
        "title": "onnxruntime with use_acl build error",
        "user": {
            "login": "wangyunxiaa",
            "id": 41035013,
            "node_id": "MDQ6VXNlcjQxMDM1MDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41035013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangyunxiaa",
            "html_url": "https://github.com/wangyunxiaa",
            "followers_url": "https://api.github.com/users/wangyunxiaa/followers",
            "following_url": "https://api.github.com/users/wangyunxiaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangyunxiaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangyunxiaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangyunxiaa/subscriptions",
            "organizations_url": "https://api.github.com/users/wangyunxiaa/orgs",
            "repos_url": "https://api.github.com/users/wangyunxiaa/repos",
            "events_url": "https://api.github.com/users/wangyunxiaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangyunxiaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "yuslepukhin",
                "id": 11303988,
                "node_id": "MDQ6VXNlcjExMzAzOTg4",
                "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/yuslepukhin",
                "html_url": "https://github.com/yuslepukhin",
                "followers_url": "https://api.github.com/users/yuslepukhin/followers",
                "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
                "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
                "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
                "repos_url": "https://api.github.com/users/yuslepukhin/repos",
                "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-24T01:34:23Z",
        "updated_at": "2022-06-03T01:10:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nbuild onnxruntime with 1.11.1 branch, and oprn use_acl, got an error\r\n```\r\n/models/wangyunxia/software/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:50:84: error: cannot convert ‘std::vector<long int>*’ to ‘onnxruntime::TensorShapeVector*’ {aka ‘absl::lts_20211102::InlinedVector<long int, 5>*’}\r\n   50 |   std::vector<int64_t> output_dims = pool_attrs.SetOutputSize(x_shape, x_shape[1], &pads);\r\n      |                                                                                    ^~~~~\r\n      |                                                                                    |\r\n      |                                                                                    std::vector<long int>*\r\n\r\n\r\n/models/wangyunxia/software/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:148:24: error: no matching function for call to ‘std::vector<long int>::vector(const TensorShapeVector&)’\r\n  148 |   std::vector<int64_t> dilations(PoolBase::pool_attrs_.dilations);\r\n\r\n/models/wangyunxia/software/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:194:24: error: no matching function for call to ‘std::vector<long int>::vector(const TensorShapeVector&)’\r\n  194 |   std::vector<int64_t> dilations(PoolBase::pool_attrs_.dilations);\r\n      |                        ^~~~~~~~~\r\n\r\n\r\n```\r\n**Urgency**\r\nbuild commond:\r\n`./build.sh --config=Release --minimal_build --disable_ml_ops --disable_exceptions --build_shared_lib --use_acl=ACL_2002 --acl_home=/models/wangyunxia/software/arm_compute-v20.02-bin-linux --acl_libs=/models/wangyunxia/software/arm_compute-v20.02-bin-linux/lib/linux-arm64-v8a-neon --skip_tests --parallel`\r\ngcc9.3.0 & gcc10.2.0 are both failed, the cmake version is 3.21.1\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):aarch64-linux\r\n- ONNX Runtime installed from (source or binary):source\r\n- ONNX Runtime version:1.11.1\r\n- Python version:3.7\r\n- Visual Studio version (if applicable):no\r\n- GCC/Compiler version (if compiling from source):9.3.0/10.2.0\r\n- CUDA/cuDNN version:no\r\n- GPU model and memory:no",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11604",
        "id": 1245913082,
        "node_id": "I_kwDOCVq1mM5KQx_6",
        "number": 11604,
        "title": "Bad performance for QDQ model with openvino EP ",
        "user": {
            "login": "mengniwang95",
            "id": 65003808,
            "node_id": "MDQ6VXNlcjY1MDAzODA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/65003808?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mengniwang95",
            "html_url": "https://github.com/mengniwang95",
            "followers_url": "https://api.github.com/users/mengniwang95/followers",
            "following_url": "https://api.github.com/users/mengniwang95/following{/other_user}",
            "gists_url": "https://api.github.com/users/mengniwang95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mengniwang95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mengniwang95/subscriptions",
            "organizations_url": "https://api.github.com/users/mengniwang95/orgs",
            "repos_url": "https://api.github.com/users/mengniwang95/repos",
            "events_url": "https://api.github.com/users/mengniwang95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mengniwang95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-24T02:58:24Z",
        "updated_at": "2022-06-02T04:05:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nHi, I use openvino EP to test QDQ model performance but find QDQ model's performance is worse than original fp32 model.\\\r\n\r\n\r\n**System information**\r\n- ONNX Runtime installed from (source or binary):binary\r\n- ONNX Runtime version:1.10.0\r\n- Python version:3.6.12\r\n- openvino 2021.4.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]