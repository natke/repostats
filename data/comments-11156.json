[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094379942",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1094379942",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1094379942,
        "node_id": "IC_kwDOCVq1mM5BOumm",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-10T22:11:22Z",
        "updated_at": "2022-04-10T22:11:22Z",
        "author_association": "MEMBER",
        "body": "Are you creating different InferenceSession instances in each thread? That would cause a lot of excess memory usage as each session has its own memory pool. An InferenceSession is stateless and can be called concurrently from multiple threads.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094379942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096662518",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1096662518",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1096662518,
        "node_id": "IC_kwDOCVq1mM5BXb32",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T12:28:42Z",
        "updated_at": "2022-04-12T12:28:42Z",
        "author_association": "NONE",
        "body": "> Are you creating different InferenceSession instances in each thread? That would cause a lot of excess memory usage as each session has its own memory pool. An InferenceSession is stateless and can be called concurrently from multiple threads.\r\n\r\nCreate 2 InferenceSession as global value.\r\n```python\r\nfrom flask import Flask, request\r\napp = Flask(__name__)\r\n\r\nsess1 = rt.InferenceSession(model1)\r\nsess2 = rt.InferenceSession(model2)\r\n\r\n@app.route('/algorithm', methods=['POST'])\r\ndef parser():\r\n    img = cv2.imread(...)\r\n    prediction1 = sess1.run(...)\r\n    prediction2 = sess2.run(...)\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='127.0.0.1', port='12345', threaded=True)\r\n```\r\n\r\nAnd when the memory is greater than 8G, have error:\r\n```python\r\nonnxruntime::CudaCall CUBLAS failure 3: CUBLAS_STATUS_ALLOC_FAILED ; GPU=0 ; hostname=LAPTOP-D5571KG6 ; expr=cublasCreate(&cublas_handle_); \r\nonnxruntime::BFCArena::AllocateRawInternal Failed to allocate memory for requested buffer of size 18874368\r\n```\r\n\r\nhow should it be modified?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096662518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096787078",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1096787078",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1096787078,
        "node_id": "IC_kwDOCVq1mM5BX6SG",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T14:15:09Z",
        "updated_at": "2022-04-12T14:15:09Z",
        "author_association": "NONE",
        "body": "> Are you creating different InferenceSession instances in each thread? That would cause a lot of excess memory usage as each session has its own memory pool. An InferenceSession is stateless and can be called concurrently from multiple threads.\r\n\r\nI try to create one InferenceSession in threads, but fail\r\n```python\r\nimport onnxruntime as rt\r\nfrom flask import Flask, request\r\nimport threading\r\napp = Flask(__name__)\r\n\r\nclass Singleton(object):\r\n    _instance_lock = threading.Lock()\r\n\r\n    def __init__(self):\r\n        self.sess = rt.InferenceSession(model1, providers=['CUDAExecutionProvider'])\r\n\r\n    def __new__(cls, *args, **kwargs):\r\n        if not hasattr(Singleton, \"_instance\"):\r\n            with Singleton._instance_lock:\r\n                if not hasattr(Singleton, \"_instance\"):\r\n                    Singleton._instance = object.__new__(cls, *args, **kwargs)\r\n        return Singleton._instance\r\n\r\nsess1 = Singleton()\r\n\r\n@app.route('/algorithm', methods=['POST'])\r\ndef parser():\r\n    prediction1 = sess1.sess.run(...)\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='127.0.0.1', port='12345', threaded=True)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1096787078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097335955",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1097335955",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1097335955,
        "node_id": "IC_kwDOCVq1mM5BaAST",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-12T23:13:36Z",
        "updated_at": "2022-04-12T23:13:36Z",
        "author_association": "MEMBER",
        "body": "You could try limiting the memory size used by CUDA for each session by setting gpu_mem_limit: https://onnxruntime.ai/docs/execution-providers/CUDA-ExecutionProvider.html#python\r\n\r\n> onnxruntime::BFCArena::AllocateRawInternal Failed to allocate memory for requested buffer of size 18874368\r\n\r\nHowever this is only an 18MB allocation. The way the arena works is to grow in chunks at least 2x the size of the last chunk. If it's only up to 18MB it's not being used much. Is something besides ORT also using GPU memory? \r\n\r\nAnother thing to try would be to set the logging severity to INFO level and see what sort of memory requirements each model has. I would do this separately so the output is clear. Look for output from bfs_arena.cc\r\n\r\n```python\r\nimport onnxruntime as ort\r\nso = ort.SessionOptions()\r\nso.log_severity_level = 1  # INFO level\r\ns = ort.InferenceSession('model.onnx', so, ort.get_available_providers())\r\n```\r\n\r\nWhen running the models does the input to each model have the same size each time? If not, disabling the memory pattern planner might help. Set `enable_mem_pattern` in SessionOptions to False to do that.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1097335955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1108251538",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1108251538",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1108251538,
        "node_id": "IC_kwDOCVq1mM5CDpOS",
        "user": {
            "login": "xiaolang564321",
            "id": 59152905,
            "node_id": "MDQ6VXNlcjU5MTUyOTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59152905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaolang564321",
            "html_url": "https://github.com/xiaolang564321",
            "followers_url": "https://api.github.com/users/xiaolang564321/followers",
            "following_url": "https://api.github.com/users/xiaolang564321/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaolang564321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaolang564321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaolang564321/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaolang564321/orgs",
            "repos_url": "https://api.github.com/users/xiaolang564321/repos",
            "events_url": "https://api.github.com/users/xiaolang564321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaolang564321/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-25T08:33:18Z",
        "updated_at": "2022-04-25T08:39:35Z",
        "author_association": "NONE",
        "body": "I user python API，\"gpu_mem_limit\" not work . I also use flask to build services . During the compression test, the gpu usage is also improved concurrently。\r\n\r\n\r\n    self.sess_options = onnxruntime.SessionOptions()\r\n    self.sess_options.intra_op_num_threads = 10\r\n    self.sess_options.execution_mode = onnxruntime.ExecutionMode.ORT_PARALLEL\r\n    self.sess_options.inter_op_num_threads = 10\r\n    self.sess_options.graph_optimization_level = onnxruntime.GraphOptimizationLevel.ORT_ENABLE_ALL\r\n    \r\n    providers = [\r\n\t    ('CUDAExecutionProvider', {\r\n                'device_id': 0,\r\n                'gpu_mem_limit': 3 * 1024 * 1024 * 1024,\r\n                'arena_extend_strategy': \"kNextPowerOfTwo\",\r\n                'cudnn_conv_algo_search': 'EXHAUSTIVE',\r\n                'do_copy_in_default_stream': True\r\n                }),\r\n\t    'CPUExecutionProvider',\r\n    ]\r\n    self.sess = onnxruntime.InferenceSession(model_path,sess_options=self.sess_options, providers=providers)\r\n\r\n@nistarlwc  Have you solved the problem?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1108251538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109077098",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109077098",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109077098,
        "node_id": "IC_kwDOCVq1mM5CGyxq",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-25T21:52:32Z",
        "updated_at": "2022-04-25T21:52:32Z",
        "author_association": "MEMBER",
        "body": "@nistarlwc Even though you're returning an existing instance of the Singleton class, won't the __init__ call create a new session after __new__ returns that instance? i.e. should Singleton.sess be set once in __new__ and never in __init__?\r\n\r\n@xiaolang564321 fwiw the CUDA EP doesn't support parallel execution, so setting the execution mode and inter_op_num_threads is meaningless.\r\n\r\nCan you clarify what you mean by the gpu_mem_limit not working? That's the size used to limit the arena ORT creates for the CUDA EP. There will still be some other per-thread structures that use memory, and the CUDA library itself will use memory. If you turn on INFO level logging you should see output from the arena implementation saying how large it is and what allocations it has made. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109077098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109206528",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109206528",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109206528,
        "node_id": "IC_kwDOCVq1mM5CHSYA",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T01:37:18Z",
        "updated_at": "2022-04-26T01:37:18Z",
        "author_association": "NONE",
        "body": "> @nistarlwc Even though you're returning an existing instance of the Singleton class, won't the **init** call create a new session after **new** returns that instance? i.e. should Singleton.sess be set once in **new** and never in **init**?\r\n> \r\n> @xiaolang564321 fwiw the CUDA EP doesn't support parallel execution, so setting the execution mode and inter_op_num_threads is meaningless.\r\n> \r\n> Can you clarify what you mean by the gpu_mem_limit not working? That's the size used to limit the arena ORT creates for the CUDA EP. There will still be some other per-thread structures that use memory, and the CUDA library itself will use memory. If you turn on INFO level logging you should see output from the arena implementation saying how large it is and what allocations it has made.\r\n\r\nSorry, I don't understand your reply.  Can you modify my code to explain it?  \r\nMy understanding is that the Flask HTTP server maybe create a session for each call, so although **gpu_mem_limit** has been set, when calling multiple the gpu_mem will be increase.  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109206528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109263212",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109263212",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109263212,
        "node_id": "IC_kwDOCVq1mM5CHgNs",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T03:22:12Z",
        "updated_at": "2022-04-26T03:22:12Z",
        "author_association": "NONE",
        "body": "> You could try limiting the memory size used by CUDA for each session by setting gpu_mem_limit: https://onnxruntime.ai/docs/execution-providers/CUDA-ExecutionProvider.html#python\r\n> \r\n> > onnxruntime::BFCArena::AllocateRawInternal Failed to allocate memory for requested buffer of size 18874368\r\n> \r\n> However this is only an 18MB allocation. The way the arena works is to grow in chunks at least 2x the size of the last chunk. If it's only up to 18MB it's not being used much. Is something besides ORT also using GPU memory?\r\n> \r\n> Another thing to try would be to set the logging severity to INFO level and see what sort of memory requirements each model has. I would do this separately so the output is clear. Look for output from bfs_arena.cc\r\n> \r\n> ```python\r\n> import onnxruntime as ort\r\n> so = ort.SessionOptions()\r\n> so.log_severity_level = 1  # INFO level\r\n> s = ort.InferenceSession('model.onnx', so, ort.get_available_providers())\r\n> ```\r\n> \r\n> When running the models does the input to each model have the same size each time? If not, disabling the memory pattern planner might help. Set `enable_mem_pattern` in SessionOptions to False to do that.\r\n\r\nWhen set:  ```log_severity_level = 1 ```   \r\noutput information: ``` Creating and using per session threadpools since use_per_session_threads_ is true ```  \r\nIs it the problem? How to change it?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109263212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109315009",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109315009",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109315009,
        "node_id": "IC_kwDOCVq1mM5CHs3B",
        "user": {
            "login": "xiaolang564321",
            "id": 59152905,
            "node_id": "MDQ6VXNlcjU5MTUyOTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59152905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaolang564321",
            "html_url": "https://github.com/xiaolang564321",
            "followers_url": "https://api.github.com/users/xiaolang564321/followers",
            "following_url": "https://api.github.com/users/xiaolang564321/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaolang564321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaolang564321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaolang564321/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaolang564321/orgs",
            "repos_url": "https://api.github.com/users/xiaolang564321/repos",
            "events_url": "https://api.github.com/users/xiaolang564321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaolang564321/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T04:23:38Z",
        "updated_at": "2022-04-26T04:26:34Z",
        "author_association": "NONE",
        "body": "> @nistarlwc Even though you're returning an existing instance of the Singleton class, won't the **init** call create a new session after **new** returns that instance? i.e. should Singleton.sess be set once in **new** and never in **init**?\r\n> \r\n> @xiaolang564321 fwiw the CUDA EP doesn't support parallel execution, so setting the execution mode and inter_op_num_threads is meaningless.\r\n> \r\n> Can you clarify what you mean by the gpu_mem_limit not working? That's the size used to limit the arena ORT creates for the CUDA EP. There will still be some other per-thread structures that use memory, and the CUDA library itself will use memory. If you turn on INFO level logging you should see output from the arena implementation saying how large it is and what allocations it has made.\r\n\r\nI use Flask to encapsulate an ONNX model as a service. Set different Gpu_mem_limits to pressure test the service. The specific results are as follows\r\n\r\n“gpu_mem_limit“: 3 * 1024 * 1024 * 1024\r\n\"intra_op_num_threads\":10\r\nid | concurrency | gpu \r\n1  | 1                   | 3.5g\r\n2  | 2                   | 4.5g \r\n3  | 3                   | 5.6g   \r\n4  | 5                   | 5.6g \r\n5  | 7                   | 5.6g  \r\n6  | 10                 | 5.6g   \r\n\r\n\r\n“gpu_mem_limit“: 6 * 1024 * 1024 * 1024\r\n\"intra_op_num_threads\":10\r\nid | concurrency | gpu \r\n1  | 1                   | 3.5g\r\n2  | 2                   | 4.5g \r\n3  | 3                   | 5.6g   \r\n4  | 5                   | 5.6g \r\n5  | 7                   | 5.6g  \r\n6  | 10                 | 5.6g   \r\n\r\nI set different Gpu_mem_limit, but consume the same GPU during pressure measurement .  the gpu_mem_limit not working\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109315009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109316363",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109316363",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109316363,
        "node_id": "IC_kwDOCVq1mM5CHtML",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T04:26:32Z",
        "updated_at": "2022-04-26T04:26:32Z",
        "author_association": "MEMBER",
        "body": "Something like this:\r\n\r\n```\r\nclass Singleton(object):\r\n    _instance_lock = threading.Lock()\r\n\r\n    def __new__(cls, *args, **kwargs):\r\n        if not hasattr(Singleton, \"_instance\"):\r\n            with Singleton._instance_lock:\r\n                if not hasattr(Singleton, \"_instance\"):\r\n                    Singleton._instance = object.__new__(cls, *args, **kwargs)\r\n                    Singleton._instance.sess = rt.InferenceSession(model1, providers=['CUDAExecutionProvider'])\r\n        return Singleton._instance\r\n```\r\n\r\nThat will at least only create the InferenceSession once instead of the __init__ recreating it each time. \r\n\r\nI'm not familiar with Flask so I don't know if additional stuff is required to ensure it only creates one instance. e.g. [this](https://stackoverflow.com/a/32825482) mentions a few other potential things that could be used like multiprocessing.Manager.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109316363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109316807",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109316807",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109316807,
        "node_id": "IC_kwDOCVq1mM5CHtTH",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T04:27:29Z",
        "updated_at": "2022-04-26T04:27:29Z",
        "author_association": "MEMBER",
        "body": "> output information: `Creating and using per session threadpools since use_per_session_threads_ is true`\r\n> Is it the problem? How to change it?\r\n\r\nThis is the normal. The memory usage is largely per-session not per-thread.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109316807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109317585",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109317585",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109317585,
        "node_id": "IC_kwDOCVq1mM5CHtfR",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T04:29:15Z",
        "updated_at": "2022-04-26T04:29:15Z",
        "author_association": "MEMBER",
        "body": "> I set different Gpu_mem_limit, but consume the same GPU during pressure measurement . the gpu_mem_limit not working\r\n\r\nHave you checked the output to ensure multiple InferenceSession instances are not being created? The memory limit setting is per-session. The log messages should show how large the arena in a session is. Look for BFCArena in the output. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109317585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109396855",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109396855",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109396855,
        "node_id": "IC_kwDOCVq1mM5CIA13",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T06:26:27Z",
        "updated_at": "2022-04-26T06:26:27Z",
        "author_association": "NONE",
        "body": "@skottmckay  Have a question, should use multiprocessing or multithreading?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109396855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109448877",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1109448877",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1109448877,
        "node_id": "IC_kwDOCVq1mM5CINit",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T07:32:22Z",
        "updated_at": "2022-04-26T07:32:22Z",
        "author_association": "MEMBER",
        "body": "I would have thought multi-threading was the only way to share the inference session unless you have something external providing it.  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109448877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1110497211",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1110497211",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1110497211,
        "node_id": "IC_kwDOCVq1mM5CMNe7",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-27T03:33:43Z",
        "updated_at": "2022-04-27T03:33:43Z",
        "author_association": "NONE",
        "body": "@skottmckay @xiaolang564321 \r\nI know that this problem is caused by ```thread isolation```.  \r\nEvery time post,  will create a new object.  So all settings of session will fail. \r\nBut I don't know how to share the session without thread isolation.  \r\n\r\n@xiaolang564321 中国人？",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1110497211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111677796",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1111677796",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1111677796,
        "node_id": "IC_kwDOCVq1mM5CQttk",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T02:37:06Z",
        "updated_at": "2022-04-28T02:37:06Z",
        "author_association": "NONE",
        "body": "@skottmckay \r\nTry to use ```id(sess) ```, check the memory address of ```sess``` in each thread.    \r\nAll addresses are some, so these threads are only ```new``` one session.  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111677796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111950909",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1111950909",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1111950909,
        "node_id": "IC_kwDOCVq1mM5CRwY9",
        "user": {
            "login": "xiaolang564321",
            "id": 59152905,
            "node_id": "MDQ6VXNlcjU5MTUyOTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59152905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaolang564321",
            "html_url": "https://github.com/xiaolang564321",
            "followers_url": "https://api.github.com/users/xiaolang564321/followers",
            "following_url": "https://api.github.com/users/xiaolang564321/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaolang564321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaolang564321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaolang564321/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaolang564321/orgs",
            "repos_url": "https://api.github.com/users/xiaolang564321/repos",
            "events_url": "https://api.github.com/users/xiaolang564321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaolang564321/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T09:08:20Z",
        "updated_at": "2022-04-28T09:08:20Z",
        "author_association": "NONE",
        "body": "> @skottmckay @xiaolang564321 I know that this problem is caused by `thread isolation`. Every time post, will create a new object. So all settings of session will fail. But I don't know how to share the session without thread isolation.\r\n> \r\n> @xiaolang564321 中国人？\r\n\r\n我的 中式英语有这么明显吗",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111950909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111957668",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1111957668",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1111957668,
        "node_id": "IC_kwDOCVq1mM5CRyCk",
        "user": {
            "login": "xiaolang564321",
            "id": 59152905,
            "node_id": "MDQ6VXNlcjU5MTUyOTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/59152905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaolang564321",
            "html_url": "https://github.com/xiaolang564321",
            "followers_url": "https://api.github.com/users/xiaolang564321/followers",
            "following_url": "https://api.github.com/users/xiaolang564321/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaolang564321/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaolang564321/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaolang564321/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaolang564321/orgs",
            "repos_url": "https://api.github.com/users/xiaolang564321/repos",
            "events_url": "https://api.github.com/users/xiaolang564321/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaolang564321/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T09:14:59Z",
        "updated_at": "2022-04-28T09:14:59Z",
        "author_association": "NONE",
        "body": "@nistarlwc\r\nI use flask to encapsulate 2 ONNX models. Can the two models share gpus? In other words, one model needs 3G and the other needs 4G. Does the whole service need 4G GPU or 7G GPU?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111957668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1118103005",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1118103005",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1118103005,
        "node_id": "IC_kwDOCVq1mM5CpOXd",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-05T02:20:20Z",
        "updated_at": "2022-05-05T02:20:20Z",
        "author_association": "NONE",
        "body": "> > @skottmckay @xiaolang564321 I know that this problem is caused by `thread isolation`. Every time post, will create a new object. So all settings of session will fail. But I don't know how to share the session without thread isolation.\r\n> > @xiaolang564321 中国人？\r\n> \r\n> 我的 中式英语有这么明显吗\r\n\r\n名字像拼音，加个Q交流吧，QQ286409171",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1118103005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1119581596",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1119581596",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1119581596,
        "node_id": "IC_kwDOCVq1mM5Cu3Wc",
        "user": {
            "login": "nistarlwc",
            "id": 24260959,
            "node_id": "MDQ6VXNlcjI0MjYwOTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24260959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nistarlwc",
            "html_url": "https://github.com/nistarlwc",
            "followers_url": "https://api.github.com/users/nistarlwc/followers",
            "following_url": "https://api.github.com/users/nistarlwc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nistarlwc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nistarlwc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nistarlwc/subscriptions",
            "organizations_url": "https://api.github.com/users/nistarlwc/orgs",
            "repos_url": "https://api.github.com/users/nistarlwc/repos",
            "events_url": "https://api.github.com/users/nistarlwc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nistarlwc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-06T12:48:54Z",
        "updated_at": "2022-05-06T12:48:54Z",
        "author_association": "NONE",
        "body": "@skottmckay  @xiaolang564321 \r\nonnxruntime is not thread safe, I try to use multi-threads without Flask.  \r\ngpu_mem_limit fail,   \r\nintra_op_num_threads fail.  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1119581596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1346044631",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11156#issuecomment-1346044631",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11156",
        "id": 1346044631,
        "node_id": "IC_kwDOCVq1mM5QOwLX",
        "user": {
            "login": "sddygaizhihao",
            "id": 20895617,
            "node_id": "MDQ6VXNlcjIwODk1NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20895617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sddygaizhihao",
            "html_url": "https://github.com/sddygaizhihao",
            "followers_url": "https://api.github.com/users/sddygaizhihao/followers",
            "following_url": "https://api.github.com/users/sddygaizhihao/following{/other_user}",
            "gists_url": "https://api.github.com/users/sddygaizhihao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sddygaizhihao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sddygaizhihao/subscriptions",
            "organizations_url": "https://api.github.com/users/sddygaizhihao/orgs",
            "repos_url": "https://api.github.com/users/sddygaizhihao/repos",
            "events_url": "https://api.github.com/users/sddygaizhihao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sddygaizhihao/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-12T08:04:34Z",
        "updated_at": "2022-12-12T08:04:34Z",
        "author_association": "NONE",
        "body": "> \r\n\r\nHave you sloved this problem? \r\nI found similar problem when deploy onnx model with Flask.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1346044631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]