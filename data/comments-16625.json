[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1625594678",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16625#issuecomment-1625594678",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16625",
        "id": 1625594678,
        "node_id": "IC_kwDOCVq1mM5g5Js2",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-07T15:37:07Z",
        "updated_at": "2023-07-07T15:37:34Z",
        "author_association": "MEMBER",
        "body": "Please refer to the following stable diffusion example for I/O binding (The input and output tensors shall stay in GPU memory during iteration for best performance):\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/9a126c9add52286873d676b491e5432a0d3d3913/onnxruntime/python/tools/transformers/models/stable_diffusion/ort_utils.py\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/9a126c9add52286873d676b491e5432a0d3d3913/onnxruntime/python/tools/transformers/models/stable_diffusion/onnxruntime_cuda_txt2img.py",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1625594678/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1625654728",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16625#issuecomment-1625654728",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16625",
        "id": 1625654728,
        "node_id": "IC_kwDOCVq1mM5g5YXI",
        "user": {
            "login": "thomas-yu-1",
            "id": 14965422,
            "node_id": "MDQ6VXNlcjE0OTY1NDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14965422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-yu-1",
            "html_url": "https://github.com/thomas-yu-1",
            "followers_url": "https://api.github.com/users/thomas-yu-1/followers",
            "following_url": "https://api.github.com/users/thomas-yu-1/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-yu-1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-yu-1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-yu-1/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-yu-1/orgs",
            "repos_url": "https://api.github.com/users/thomas-yu-1/repos",
            "events_url": "https://api.github.com/users/thomas-yu-1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-yu-1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-07T16:24:17Z",
        "updated_at": "2023-07-07T16:24:17Z",
        "author_association": "NONE",
        "body": "Hi, thanks for the tip! But I tried using IOBinding as in https://onnxruntime.ai/docs/api/python/api_summary.html, and I get the same problem whether I use it or not. From what I understood, IOBinding allows for binding the input and final output of the onnx model to a device; however, these memcpy's are due to intermediate steps in the onnx model, so should they not be bound to the GPU already?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1625654728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1628862702",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16625#issuecomment-1628862702",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16625",
        "id": 1628862702,
        "node_id": "IC_kwDOCVq1mM5hFnju",
        "user": {
            "login": "thomas-yu-1",
            "id": 14965422,
            "node_id": "MDQ6VXNlcjE0OTY1NDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14965422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-yu-1",
            "html_url": "https://github.com/thomas-yu-1",
            "followers_url": "https://api.github.com/users/thomas-yu-1/followers",
            "following_url": "https://api.github.com/users/thomas-yu-1/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-yu-1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-yu-1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-yu-1/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-yu-1/orgs",
            "repos_url": "https://api.github.com/users/thomas-yu-1/repos",
            "events_url": "https://api.github.com/users/thomas-yu-1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-yu-1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-10T12:30:06Z",
        "updated_at": "2023-07-10T12:30:06Z",
        "author_association": "NONE",
        "body": "So after I some more digging, I found that the cause is a normalization I am doing within the model.\r\nIn a single iteration, I normalize the input by the mean/std, run it through the network, then un-normalize by the same mean/std. This is repeated 4 times in my use case. \r\n\r\nBriefly, the pseudocode for a single iteration would be\r\n\r\nmean,std=normalization(image)\r\nnormalized_image=(image-mean)/std\r\nimage_output=neural_network(normalized_image)\r\nimage=(image_output)*std+mean\r\n\r\nI found that when I run this in a loop, there is a memcpytohost right before the normalization; there is no memcpytohost if the normalization is removed. \r\n\r\nThis has a non-negligible effect on the computation time in my case (1.5sec with normalization vs. 1.1 sec without, entirely due to memcpytohost calls), so I am wondering if there is any way to avoid this? I was not expecting that this kind of normalization would incur this. \r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1628862702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1631220731",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16625#issuecomment-1631220731",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16625",
        "id": 1631220731,
        "node_id": "IC_kwDOCVq1mM5hOnP7",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-11T17:31:35Z",
        "updated_at": "2023-07-11T17:31:35Z",
        "author_association": "MEMBER",
        "body": "It is recommended  to Change logging level through session option to see which Node is not placed in GPU. Then change your script to export it as operator that is supported in CUDA. You may look at onnx and torch documents to find alternatives. Like cast to float before normalization, or try torch.nn.functional.normalize etc",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1631220731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1633852846",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/16625#issuecomment-1633852846",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/16625",
        "id": 1633852846,
        "node_id": "IC_kwDOCVq1mM5hYp2u",
        "user": {
            "login": "thomas-yu-1",
            "id": 14965422,
            "node_id": "MDQ6VXNlcjE0OTY1NDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/14965422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-yu-1",
            "html_url": "https://github.com/thomas-yu-1",
            "followers_url": "https://api.github.com/users/thomas-yu-1/followers",
            "following_url": "https://api.github.com/users/thomas-yu-1/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-yu-1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-yu-1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-yu-1/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-yu-1/orgs",
            "repos_url": "https://api.github.com/users/thomas-yu-1/repos",
            "events_url": "https://api.github.com/users/thomas-yu-1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-yu-1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-13T09:05:19Z",
        "updated_at": "2023-07-13T09:05:19Z",
        "author_association": "NONE",
        "body": "Hi, thanks for the advice. Doing this, I pinpointed the problem is really because of the standard deviation; this memcpy only occurs when I divide by the standard deviation. I even tested with a manual calculation of the standard deviation using  (Sqrt, Div, ReduceSumSquare), so all operators which are supported in CUDAExecutionProvider, but the problem is still persisting. It's not clear to me why even the standard .std() function in Torch should force everything to CPU, but even my manual calculation is resulting in this as well. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1633852846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]