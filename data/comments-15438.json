[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1501350607",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15438#issuecomment-1501350607",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15438",
        "id": 1501350607,
        "node_id": "IC_kwDOCVq1mM5ZfMrP",
        "user": {
            "login": "hanzz2007",
            "id": 7510220,
            "node_id": "MDQ6VXNlcjc1MTAyMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7510220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanzz2007",
            "html_url": "https://github.com/hanzz2007",
            "followers_url": "https://api.github.com/users/hanzz2007/followers",
            "following_url": "https://api.github.com/users/hanzz2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanzz2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanzz2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanzz2007/subscriptions",
            "organizations_url": "https://api.github.com/users/hanzz2007/orgs",
            "repos_url": "https://api.github.com/users/hanzz2007/repos",
            "events_url": "https://api.github.com/users/hanzz2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanzz2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-10T03:34:23Z",
        "updated_at": "2023-04-10T03:34:23Z",
        "author_association": "NONE",
        "body": "Here is my understanding of the advantages of iobinding( all based on cuda ep): \r\nU1: If my input ortvalue is on CPU device,  bindinput(ortvalue) will copy input to gpu immediatly and no copy operation in session.run. Without iobinding the input is copied in session.run so the run time is longer. \r\nThat is the only difference between iobinding with no iobinding\r\nU2: If my input ortvalue is on the same GPU device, there is no difference between them.\r\n\r\nU3: If my output ortvalue is on the same GPU device, even without iobinding still no copy here, there is no difference between with them. Because session.run will always use user's output ortvalue as graph output buffer if device match. The only disadvantage is  I need to calculate the output shape and allocate device memory myself before session.run called.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1501350607/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1502246498",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15438#issuecomment-1502246498",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15438",
        "id": 1502246498,
        "node_id": "IC_kwDOCVq1mM5ZinZi",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-10T19:59:42Z",
        "updated_at": "2023-04-10T20:00:01Z",
        "author_association": "MEMBER",
        "body": "> Q1: If I called iobinding.bind_input(<ortvalue_on_cpu>) before session.run without iobinding.sync_inputs be called, the H2D copy is queued. The first cuda kernel will always see the right data, because both H2D copy and the kernel is on same stream, is that true?\r\n\r\nNo. Queued doesn't necessarily mean copied. Sync ensures that it's copied.\r\n\r\n> Q2: If I called iobinding.bind_output(<cuda_device>), and when after the session.run do I need call iobinding.sync_outputs to make sure the output data on device is ready to access(since the last kernel been called async)?\r\n\r\nYes, currently we're calling cudaDeviceSynchronize as seen [here](https://github.com/microsoft/onnxruntime/blob/71a4e7eb97e842e1dfc419d75ffef811f721e5ad/onnxruntime/core/providers/cuda/cuda_execution_provider.cc#L381-L384).\r\n\r\nYour understanding in [this comment](https://github.com/microsoft/onnxruntime/issues/15438#issuecomment-1501350607) is correct.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1502246498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1502920103",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15438#issuecomment-1502920103",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15438",
        "id": 1502920103,
        "node_id": "IC_kwDOCVq1mM5ZlL2n",
        "user": {
            "login": "hanzz2007",
            "id": 7510220,
            "node_id": "MDQ6VXNlcjc1MTAyMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7510220?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanzz2007",
            "html_url": "https://github.com/hanzz2007",
            "followers_url": "https://api.github.com/users/hanzz2007/followers",
            "following_url": "https://api.github.com/users/hanzz2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanzz2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanzz2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanzz2007/subscriptions",
            "organizations_url": "https://api.github.com/users/hanzz2007/orgs",
            "repos_url": "https://api.github.com/users/hanzz2007/repos",
            "events_url": "https://api.github.com/users/hanzz2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanzz2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-11T08:41:13Z",
        "updated_at": "2023-04-11T08:41:13Z",
        "author_association": "NONE",
        "body": "> > Q1: If I called iobinding.bind_input(<ortvalue_on_cpu>) before session.run without iobinding.sync_inputs be called, the H2D copy is queued. The first cuda kernel will always see the right data, because both H2D copy and the kernel is on same stream, is that true?\r\n> \r\n> No. Queued doesn't necessarily mean copied. Sync ensures that it's copied. Since DataTransfer use the same compute stream with cuda ep, it is should be safe to skip sync\r\n\r\nI recheck the newest repo,  in 1.13.x  `datatransfer.copy_tensor` use the same compute stream (use the kDefaultStream) with cuda ep, so data should be ready before kernel launch.  While in in 1.14.x there comes in `datatransfer.copy_tensor_async` and iobinding.bindinput use the async one, as you said `Queued doesn't necessarily mean copied` may happen\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1502920103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]