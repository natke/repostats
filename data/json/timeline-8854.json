[
    {
        "id": 5215984452,
        "node_id": "MDEyOkxhYmVsZWRFdmVudDUyMTU5ODQ0NTI=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/5215984452",
        "actor": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2021-08-27T01:07:01Z",
        "label": {
            "name": "component:coreruntime",
            "color": "303a93"
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/906847064",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-906847064",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 906847064,
        "node_id": "IC_kwDOCVq1mM42DWNY",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-27T01:11:44Z",
        "updated_at": "2021-08-27T01:11:44Z",
        "author_association": "MEMBER",
        "body": "Can you paste your usage? Separate sessions (for separate models) should work perfectly fine.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/906847064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/907019206",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-907019206",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 907019206,
        "node_id": "IC_kwDOCVq1mM42EAPG",
        "user": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-27T08:17:34Z",
        "updated_at": "2021-08-27T08:19:31Z",
        "author_association": "NONE",
        "body": "If by usage you mean a code example then here's a sample code from our C++ side.\r\nIn fact, we're using the C++ api to read the models and make predictions. Then we compile some DLLs and use them in our .Net side. Threading is handled in the .Net side.\r\n\r\nIn C++ we have a class that handles the model : \r\n\r\n**File : OrtCRNNModelHandler.cpp**\r\n```\r\n#include \"OrtCRNNModelHandler.h\"\r\n#include <mutex>\r\n#include <chrono>\r\n\r\nstd::mutex m_locker; //something is not thread-safe...\r\n\r\nOrtCRNNModelHandler::OrtCRNNModelHandler(void *model_data, int model_data_length, std::wstring vocabulary) {\r\n\t//m_locker.lock();\r\n\t\r\n\tauto sessionOptions = Ort::SessionOptions{};\r\n\t\r\n\r\n\tsessionOptions.SetIntraOpNumThreads(1);\r\n\tsessionOptions.SetInterOpNumThreads(1);\r\n\r\n\tthis->m_session = new Ort::Session(m_env, model_data, model_data_length, sessionOptions);\r\n\r\n\tm_inputName = m_session->GetInputName(0, m_allocator);\r\n\tm_outputName = m_session->GetOutputName(0, m_allocator);\r\n\r\n\tthis->m_vocabulary = vocabulary;\r\n\r\n\tm_inputShape = m_session->GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape();\r\n\tm_inputShape[0] = 1;\r\n\t//m_locker.unlock();\r\n}\r\n\r\nOrtCRNNModelHandler::~OrtCRNNModelHandler() {\r\n\tdelete m_session;\r\n\r\n\tm_allocator.Free(m_inputName);\r\n\tm_allocator.Free(m_outputName);\r\n}\r\n\r\nstd::wstring OrtCRNNModelHandler::chars_from_probabilities(float* output_tensor, unsigned int output_count, std::wstring vocabulary) {\r\n\r\n\tif (output_tensor == NULL) {\r\n\t\treturn L\"\";\r\n\t}\r\n\r\n\tint vocab_length = vocabulary.size();\r\n\r\n\tint time_steps = output_count / vocab_length;\r\n\r\n\tstd::wstring output_str = L\"\";\r\n\r\n\tif (output_count % vocab_length != 0) {\r\n\t\treturn L\"\";\r\n\t}\r\n\r\n\tfloat* start_idx, * end_idx;\r\n\tint idx_max_probability = -1;\r\n\tchar symbol;\r\n\r\n\tint i = 0;\r\n\twhile (i < output_count) {\r\n\r\n\t\tstart_idx = output_tensor + i;\r\n\t\tend_idx = output_tensor + i + vocab_length;\r\n\r\n\t\tidx_max_probability = std::distance(start_idx, std::max_element(start_idx, end_idx));\r\n\r\n\t\tsymbol = vocabulary[idx_max_probability];\r\n\t\toutput_str += symbol;\r\n\r\n\t\ti = i + vocab_length;\r\n\t}\r\n\r\n\treturn output_str;\r\n}\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::ctc_decode(std::wstring predicted_chars) {\r\n\r\n\twchar_t saved_symbol = '-';\r\n\twchar_t current_symbol;\r\n\tstd::wstring final_str = L\"\";\r\n\twchar_t empty_symbol = 'E';\r\n\r\n\tfor (std::wstring::iterator it = predicted_chars.begin(); it != predicted_chars.end(); ++it) {\r\n\r\n\t\tcurrent_symbol = *it;\r\n\r\n\t\tif (current_symbol != empty_symbol && current_symbol != saved_symbol) {\r\n\r\n\t\t\tfinal_str += current_symbol;\r\n\t\t}\r\n\t\tsaved_symbol = current_symbol;\r\n\r\n\t}\r\n\r\n\treturn final_str;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::predict(float* image_data, int data_size)\r\n{\r\n\tif (!image_data) {\r\n\t\tstd::cerr << \"image is invalid!\" << std::endl;\r\n\t\treturn L\"\";\r\n\t}\r\n\r\n\tstd::chrono::steady_clock::time_point start;\r\n\r\n\tif (this->debug > 0) {\r\n\t\tstart = std::chrono::steady_clock::now();\r\n\t}\r\n\r\n\tif (this->debug > 2) {\r\n\t\tstd::cout << \"input_tensor_size = \" << data_size << std::endl;\r\n\t}\r\n\r\n\tauto memoryInfo = Ort::MemoryInfo::CreateCpu(OrtDeviceAllocator, OrtMemTypeCPU);\r\n\t\r\n\tstd::vector<char*> inputNames = { m_inputName };\r\n\tstd::vector<char*> outputNames = { m_outputName };\r\n\r\n\ttry {\r\n\t\tauto inputOnnxTensor = Ort::Value::CreateTensor(memoryInfo,\r\n\t\t\timage_data, data_size,\r\n\t\t\tm_inputShape.data(), m_inputShape.size());\r\n\r\n\t\t//m_locker.lock();\r\n\r\n\t\r\n\t\tstd::vector<Ort::Value> outputValues = m_session->Run(\r\n\t\t\tOrt::RunOptions{ nullptr }, // e.g. set a verbosity level only for this run\r\n\t\t\tinputNames.data(), &inputOnnxTensor, 1, // input to set\r\n\t\t\toutputNames.data(), 1);\t\t\t\t\t// output to take \r\n\t\t//m_locker.unlock();\r\n\r\n\t\t// extract first (and only) output\r\n\t\tauto& output1 = outputValues[0];\r\n\t\tfloat* floats = output1.GetTensorMutableData<float>();\r\n\t\tauto some_out = output1.GetTensorTypeAndShapeInfo();\r\n\t\tconst auto floatsCount = output1.GetTensorTypeAndShapeInfo().GetElementCount();\r\n\r\n\t\tthis->m_raw_prediction = chars_from_probabilities(floats, floatsCount, this->m_vocabulary);\r\n\r\n\t\tthis->m_predicted_string = ctc_decode(this->m_raw_prediction);\r\n\r\n\t\tauto stop = std::chrono::steady_clock::now();\r\n\r\n\t\tif (this->debug > 0) {\r\n\r\n\t\t\tstd::chrono::duration<double> duration = stop - start;\r\n\t\t\tstd::cout << \"time of inference : \" << duration.count() << \"s\" << std::endl;\r\n\t\t}\r\n\r\n\t\treturn this->m_predicted_string;\r\n\t}\r\n\tcatch (...) {\r\n\t\tstd::cerr << \"[ERROR] : error occured at inference time!\" << std::endl;\r\n\t\treturn L\"NOTHING_PREDICTED\";\r\n\t}\r\n}\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::get_raw_prediction() {\r\n\treturn this->m_raw_prediction;\r\n}\r\n```\r\n\r\n**File : OrtCRNNModelHandler.h**\r\n\r\n```\r\n#pragma once\r\n\r\n#include \"onnxruntime_cxx_api.h\"\r\n#include \"onnxruntime_c_api.h\"\r\n#include <iostream>\r\n#include <assert.h>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <string>\r\n#include <vector>\r\n\r\n\r\nclass OrtCRNNModelHandler\r\n{\r\npublic:\r\n\tOrtCRNNModelHandler() = default;\r\n\tOrtCRNNModelHandler(void* model_data, int model_data_length, std::wstring vocabulary);\r\n\t~OrtCRNNModelHandler();\r\n\r\n\tstd::wstring chars_from_probabilities(float* output_tensor, unsigned int output_count, std::wstring vocabulary);\r\n\r\n\tstd::wstring ctc_decode(std::wstring predicted_chars);\r\n\r\n\tstd::wstring predict(float* image_data, int data_size);\r\n\r\n\tstd::wstring get_raw_prediction();\r\n\r\nprotected:\r\n\tOrt::Env m_env;\r\n\tOrt::Session* m_session;\r\n\tOrt::AllocatorWithDefaultOptions m_allocator;\r\n\t//Ort::MemoryInfo * m_memoryInfo;\r\n\tstd::wstring m_raw_prediction;\r\n\tstd::wstring m_predicted_string;\r\n\r\n\tchar* m_inputName;\r\n\tchar* m_outputName;\r\n\tstd::vector<int64_t> m_inputShape;\r\n\r\n\tstd::wstring m_vocabulary;\r\n\r\n\tunsigned debug = 0;\r\n\r\n};\r\n```\r\n\r\n**File : ML.cpp**\r\n\r\n```\r\n#include \"ML.h\"\r\n#include <iostream>\r\n#include <atlstr.h>\r\n\r\n//Public functions\r\n\r\nvoid* DLL_CALLCONV LoadCRNNModel(void* model_data, int model_data_length, const wchar_t* vocabulary) {\r\n\r\n\tif (model_data != NULL && vocabulary != NULL) {\r\n\r\n\t\tstd::wstring str_vocab(vocabulary);\r\n\r\n\t\treturn new OrtCRNNModelHandler(model_data, model_data_length, str_vocab);\r\n\t}\r\n\r\n\treturn NULL;\r\n}\r\n\r\n\r\nvoid DLL_CALLCONV DisposeCRNNModel(OrtCRNNModelHandler* model) {\r\n\r\n\tif (model != NULL) {\r\n\t\tdelete model;\r\n\t}\r\n}\r\n\r\n\r\nwchar_t* DLL_CALLCONV Predict(void* model, float* image_data, int data_size) {\r\n\r\n\tOrtCRNNModelHandler* ort_model = (OrtCRNNModelHandler*)model;\r\n\r\n\tif (model != NULL && image_data != NULL) {\r\n\t\tstd::wstring result = ort_model->predict(image_data, data_size);\r\n\t\twchar_t* cstr = new wchar_t[result.length() + 1];\r\n\t\twcscpy(cstr, result.c_str());\r\n\t\treturn cstr;\r\n\t}\r\n\r\n\treturn  L\"NOTHING_PREDICTED\";\r\n}\r\n\r\nvoid DLL_CALLCONV DisposeResult(void* res) {\r\n\r\n\tif (res != NULL) {\r\n\t\tdelete res;\r\n\t}\r\n}\r\n\r\n```\r\nThis last file contains the functions that we access from the .Net side.\r\n\r\nAs you can see, the logic we have in place is : one ORT env --> one session --> one model\r\nAlso, our models contain lstm layers if that helps.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/907019206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/908411380",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-908411380",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 908411380,
        "node_id": "IC_kwDOCVq1mM42JUH0",
        "user": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-30T14:54:50Z",
        "updated_at": "2021-08-30T14:54:50Z",
        "author_association": "NONE",
        "body": "Btw we're running the tests on a database of around 3000 images.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/908411380/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/908775801",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-908775801",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 908775801,
        "node_id": "IC_kwDOCVq1mM42KtF5",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-30T23:25:57Z",
        "updated_at": "2021-08-30T23:25:57Z",
        "author_association": "MEMBER",
        "body": "It's not clear how these objects are instantiated and used. If you follow the guidelines below you shouldn't see issues due to concurrent runs. \r\n* A session needs to be created only once per model. It can be used in multiple threads to inference the same model (corresponding to the session) concurrently.\r\n* OrtEnv needs to be created only once per process (irrespective of the # of models you're inferencing).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/908775801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910057484",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-910057484",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 910057484,
        "node_id": "IC_kwDOCVq1mM42PmAM",
        "user": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-01T08:22:55Z",
        "updated_at": "2021-09-01T08:22:55Z",
        "author_association": "NONE",
        "body": "We have updated our code to follow what you have suggested but we're still facing the same issue\r\n\r\n```\r\n#include \"OrtCRNNModelHandler.h\"\r\n#include \"onnxruntime_c_api.h\"\r\n#include <mutex>\r\n#include <chrono>\r\n\r\n\r\n\r\n//class definition\r\nclass OrtCRNNModelHandler\r\n{\r\npublic:\r\n\tOrtCRNNModelHandler() = default;\r\n\tOrtCRNNModelHandler(void* model_data, int model_data_length, std::wstring vocabulary);\r\n\t~OrtCRNNModelHandler();\r\n\r\n\tstd::wstring chars_from_probabilities(float* output_tensor, unsigned int output_count);\r\n\r\n\tstd::wstring ctc_decode(std::wstring predicted_chars);\r\n\r\n\tstd::wstring predict(float* image_data, int data_size);\r\n\r\nprotected:\r\n\r\n\tOrt::Session* m_session;\r\n\tstd::wstring m_vocabulary;\r\n\r\n\tunsigned debug = 0;\r\n\r\n};\r\n\r\n\r\nstatic Ort::Env m_env;\r\n\r\n\r\nOrtCRNNModelHandler::OrtCRNNModelHandler(void* model_data, int model_data_length, std::wstring vocabulary) {\r\n\tOrt::SessionOptions session_options = Ort::SessionOptions{};\r\n\r\n\tthis->m_session = new Ort::Session(m_env, model_data, model_data_length, session_options);\r\n\r\n\tthis->m_vocabulary = vocabulary;\r\n}\r\n\r\n\r\nOrtCRNNModelHandler::~OrtCRNNModelHandler() {\r\n\tdelete m_session;\r\n}\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::chars_from_probabilities(float* output_tensor, unsigned int output_count) {\r\n\tif (output_tensor == NULL) {\r\n\t\treturn L\"\";\r\n\t}\r\n\r\n\tint vocab_length = this->m_vocabulary.size();\r\n\r\n\tint time_steps = output_count / vocab_length;\r\n\r\n\tstd::wstring output_str = L\"\";\r\n\r\n\tif (output_count % vocab_length != 0) {\r\n\t\treturn L\"\";\r\n\t}\r\n\r\n\tfloat* start_idx, * end_idx;\r\n\tint idx_max_probability = -1;\r\n\tchar symbol;\r\n\r\n\tint i = 0;\r\n\twhile (i < output_count) {\r\n\r\n\t\tstart_idx = output_tensor + i;\r\n\t\tend_idx = output_tensor + i + vocab_length;\r\n\r\n\t\tidx_max_probability = std::distance(start_idx, std::max_element(start_idx, end_idx));\r\n\r\n\t\tsymbol = this->m_vocabulary[idx_max_probability];\r\n\t\toutput_str += symbol;\r\n\r\n\t\ti = i + vocab_length;\r\n\t}\r\n\r\n\treturn output_str;\r\n}\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::ctc_decode(std::wstring predicted_chars) {\r\n\r\n\twchar_t saved_symbol = '-';\r\n\twchar_t current_symbol;\r\n\tstd::wstring final_str = L\"\";\r\n\twchar_t empty_symbol = 'E';\r\n\r\n\tfor (std::wstring::iterator it = predicted_chars.begin(); it != predicted_chars.end(); ++it) {\r\n\r\n\t\tcurrent_symbol = *it;\r\n\r\n\t\tif (current_symbol != empty_symbol && current_symbol != saved_symbol) {\r\n\r\n\t\t\tfinal_str += current_symbol;\r\n\t\t}\r\n\t\tsaved_symbol = current_symbol;\r\n\r\n\t}\r\n\r\n\treturn final_str;\r\n}\r\n\r\n\r\nstd::wstring OrtCRNNModelHandler::predict(float* image_data, int data_size)\r\n{\r\n\tOrt::AllocatorWithDefaultOptions allocator;\r\n\tchar* inputName = m_session->GetInputName(0, allocator);\r\n\tchar* outputName = m_session->GetOutputName(0, allocator);\r\n\r\n\tstd::vector<char*> inputNames = { inputName };\r\n\tstd::vector<char*> outputNames = { outputName };\r\n\r\n\tstd::vector<int64_t> input_shape = m_session->GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape();\r\n\tinput_shape[0] = 1;\r\n\r\n\tOrt::MemoryInfo memoryInfo = Ort::MemoryInfo::CreateCpu(OrtDeviceAllocator, OrtMemTypeCPU);\r\n\tOrt::Value inputOnnxTensor = Ort::Value::CreateTensor(memoryInfo,\r\n\t\timage_data, data_size,\r\n\t\tinput_shape.data(), input_shape.size());\r\n\r\n\tOrt::RunOptions run_options;\r\n\trun_options.SetRunLogSeverityLevel(-1);\r\n\trun_options.SetRunLogVerbosityLevel(-1);\r\n\r\n\tstd::vector<Ort::Value> outputValues = m_session->Run(\r\n\t\trun_options,\r\n\t\tinputNames.data(), &inputOnnxTensor, 1,\r\n\t\toutputNames.data(), 1);\r\n\r\n\tfloat* floats = outputValues[0].GetTensorMutableData<float>();\r\n\tconst int floats_count = outputValues[0].GetTensorTypeAndShapeInfo().GetElementCount();\r\n\r\n\tstd::wstring  raw_prediction = chars_from_probabilities(floats, floats_count);\r\n\tstd::wstring predicted_string = ctc_decode(raw_prediction);\r\n\r\n\tallocator.Free(inputName);\r\n\tallocator.Free(outputName);\r\n\r\n\treturn predicted_string;\r\n}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910057484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910058317",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-910058317",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 910058317,
        "node_id": "IC_kwDOCVq1mM42PmNN",
        "user": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-01T08:24:08Z",
        "updated_at": "2021-09-01T08:24:08Z",
        "author_association": "NONE",
        "body": "We're currently putting together a more complete example using purely C++, this way you can run the code from your side. \r\nI'll get back to you once that example is finished.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910058317/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910197818",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-910197818",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 910197818,
        "node_id": "IC_kwDOCVq1mM42QIQ6",
        "user": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-01T11:32:56Z",
        "updated_at": "2021-09-01T11:32:56Z",
        "author_association": "NONE",
        "body": "Ok we've identified the problem, it's from our side! Thanks for the help, we're now following the guidelines you mentioned above.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910197818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 5238924766,
        "node_id": "CE_lADOCVq1mM46b-BdzwAAAAE4Q6Xe",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/5238924766",
        "actor": {
            "login": "sniper0110",
            "id": 8482070,
            "node_id": "MDQ6VXNlcjg0ODIwNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8482070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sniper0110",
            "html_url": "https://github.com/sniper0110",
            "followers_url": "https://api.github.com/users/sniper0110/followers",
            "following_url": "https://api.github.com/users/sniper0110/following{/other_user}",
            "gists_url": "https://api.github.com/users/sniper0110/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sniper0110/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sniper0110/subscriptions",
            "organizations_url": "https://api.github.com/users/sniper0110/orgs",
            "repos_url": "https://api.github.com/users/sniper0110/repos",
            "events_url": "https://api.github.com/users/sniper0110/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sniper0110/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2021-09-01T11:32:56Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910513636",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/8854#issuecomment-910513636",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/8854",
        "id": 910513636,
        "node_id": "IC_kwDOCVq1mM42RVXk",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-01T17:48:56Z",
        "updated_at": "2021-09-01T17:48:56Z",
        "author_association": "MEMBER",
        "body": "> Ok we've identified the problem, it's from our side! Thanks for the help, we're now following the guidelines you mentioned above.\r\n\r\nWhat was the problem? Might be useful for others running into similar issues.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/910513636/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        }
    }
]