[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517063085",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517063085",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517063085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzA2MzA4NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-31T23:46:14Z",
        "updated_at": "2019-07-31T23:48:42Z",
        "author_association": "MEMBER",
        "body": "Hi @julien-c,\r\n\r\nThis was resolved by #1380. The upcoming release (coming in a day or two) should have this fix.\r\n\r\nThanks\r\n  \r\nEDIT: I notice that the PR was actually closed (not merged) pending spec clarification. So, I will keep this opened. CC: @duli2012 ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517063085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2524848755,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjUyNDg0ODc1NQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524848755",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:46:14Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "id": 2524848756,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUyNDg0ODc1Ng==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524848756",
        "actor": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:46:14Z",
        "performed_via_github_app": null
    },
    {
        "id": 2524848757,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1MjQ4NDg3NTc=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524848757",
        "actor": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:46:14Z",
        "performed_via_github_app": null
    },
    {
        "id": 2524849817,
        "node_id": "MDEzOlJlb3BlbmVkRXZlbnQyNTI0ODQ5ODE3",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524849817",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "reopened",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:47:02Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "id": 2524852261,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUyNDg1MjI2MQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524852261",
        "actor": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:48:42Z",
        "performed_via_github_app": null
    },
    {
        "id": 2524852264,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1MjQ4NTIyNjQ=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524852264",
        "actor": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:48:42Z",
        "performed_via_github_app": null
    },
    {
        "id": 2524855198,
        "node_id": "MDEyOkxhYmVsZWRFdmVudDI1MjQ4NTUxOTg=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2524855198",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-07-31T23:51:03Z",
        "label": {
            "name": "bug",
            "color": "d73a4a"
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517065383",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517065383",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517065383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzA2NTM4Mw==",
        "user": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-31T23:57:42Z",
        "updated_at": "2019-07-31T23:57:42Z",
        "author_association": "MEMBER",
        "body": "yes, at this point, we're not plan to support negative indexing for Gather.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517065383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517071582",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517071582",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517071582,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzA3MTU4Mg==",
        "user": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T00:29:42Z",
        "updated_at": "2019-08-01T00:29:42Z",
        "author_association": "NONE",
        "body": "Ok, thanks for the clarification.\n\nI think it might make it hard for PyTorch exports to run reliably (without\ntoo much model specific work) because they typically use a lot of Gathers.\n\nOn Wed, Jul 31, 2019 at 7:57 PM Du Li <notifications@github.com> wrote:\n\n> yes, at this point, we're not plan to support negative indexing for Gather.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/microsoft/onnxruntime/issues/1533?email_source=notifications&email_token=AACPXMMI4F7DH6BXU3RONQLQCIRHXA5CNFSM4IILNCS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3I4VJY#issuecomment-517065383>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACPXMJYL73MKHE53P5MZHTQCIRHXANCNFSM4IILNCSQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517071582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517240014",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517240014",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517240014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzI0MDAxNA==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T11:16:35Z",
        "updated_at": "2019-08-01T11:16:35Z",
        "author_association": "MEMBER",
        "body": "Can we push for an ONNX spec update? If this makes exporting from PyTorch easier that seems like a good reason to add support for negative indices, especially given the code change to support it is fairly trivial? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517240014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517489936",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517489936",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517489936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQ4OTkzNg==",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T23:12:40Z",
        "updated_at": "2019-08-01T23:12:40Z",
        "author_association": "MEMBER",
        "body": "Yeah, this feels more like a fundamental operator update (Gather-11), as my reading of the spec implies that only the `axis` may be negative [-r, r-1], whereas indices must be within the bounds of the tensor (\"All index values are expected to be within bounds. It is an error if any of the index values are out of bounds\").",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517489936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517878068",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-517878068",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 517878068,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg3ODA2OA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-03T00:22:26Z",
        "updated_at": "2019-08-03T00:22:26Z",
        "author_association": "MEMBER",
        "body": "Given this spec clarification in onnx - https://github.com/onnx/onnx/commit/36dc71107de25ccbaa02bf859a826bc9cd28595d, is it worthwhile to close this issue in ORT as the implementation is per spec ? If there is a requirement to support negative indices in Gather op, the requirement should be raised in ONNX and if there is consensus to support it, the op must be versioned as it is breaking change. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/517878068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/518421701",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1533#issuecomment-518421701",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1533",
        "id": 518421701,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQyMTcwMQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-05T22:15:12Z",
        "updated_at": "2019-08-05T22:15:12Z",
        "author_association": "MEMBER",
        "body": "Closing this as ORT implements the op as per spec. \r\n\r\nPlease open an issue in ONNX if you feel negative indexing support is required for the op. \r\n\r\nPlease re-open this issue if you have more comments/require more clarifications.\r\n\r\nThanks!\r\n\r\nCC: @faxu\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/518421701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2534919956,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjUzNDkxOTk1Ng==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2534919956",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-05T22:15:12Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "id": 2534919959,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUzNDkxOTk1OQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2534919959",
        "actor": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-05T22:15:12Z",
        "performed_via_github_app": null
    },
    {
        "id": 2534919962,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1MzQ5MTk5NjI=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2534919962",
        "actor": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-08-05T22:15:12Z",
        "performed_via_github_app": null
    },
    {
        "id": 2601595934,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjYwMTU5NTkzNA==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2601595934",
        "actor": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-09-02T17:13:31Z",
        "performed_via_github_app": null
    },
    {
        "id": 2601595935,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI2MDE1OTU5MzU=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2601595935",
        "actor": {
            "login": "julien-c",
            "id": 326577,
            "node_id": "MDQ6VXNlcjMyNjU3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/326577?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/julien-c",
            "html_url": "https://github.com/julien-c",
            "followers_url": "https://api.github.com/users/julien-c/followers",
            "following_url": "https://api.github.com/users/julien-c/following{/other_user}",
            "gists_url": "https://api.github.com/users/julien-c/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/julien-c/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/julien-c/subscriptions",
            "organizations_url": "https://api.github.com/users/julien-c/orgs",
            "repos_url": "https://api.github.com/users/julien-c/repos",
            "events_url": "https://api.github.com/users/julien-c/events{/privacy}",
            "received_events_url": "https://api.github.com/users/julien-c/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-09-02T17:13:31Z",
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "codehumanity",
            "id": 13303448,
            "node_id": "MDQ6VXNlcjEzMzAzNDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13303448?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codehumanity",
            "html_url": "https://github.com/codehumanity",
            "followers_url": "https://api.github.com/users/codehumanity/followers",
            "following_url": "https://api.github.com/users/codehumanity/following{/other_user}",
            "gists_url": "https://api.github.com/users/codehumanity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codehumanity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codehumanity/subscriptions",
            "organizations_url": "https://api.github.com/users/codehumanity/orgs",
            "repos_url": "https://api.github.com/users/codehumanity/repos",
            "events_url": "https://api.github.com/users/codehumanity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codehumanity/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-24T13:14:23Z",
        "updated_at": "2019-09-24T13:14:23Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/26710",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26710/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26710/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26710/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/26710",
                "id": 497501573,
                "node_id": "MDU6SXNzdWU0OTc1MDE1NzM=",
                "number": 26710,
                "title": "Facing \"Dimension mismatch - did you forget to set broadcast=1\" in Caffe2",
                "user": {
                    "login": "codehumanity",
                    "id": 13303448,
                    "node_id": "MDQ6VXNlcjEzMzAzNDQ4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13303448?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codehumanity",
                    "html_url": "https://github.com/codehumanity",
                    "followers_url": "https://api.github.com/users/codehumanity/followers",
                    "following_url": "https://api.github.com/users/codehumanity/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codehumanity/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codehumanity/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codehumanity/subscriptions",
                    "organizations_url": "https://api.github.com/users/codehumanity/orgs",
                    "repos_url": "https://api.github.com/users/codehumanity/repos",
                    "events_url": "https://api.github.com/users/codehumanity/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codehumanity/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 679953983,
                        "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                        "name": "oncall: jit",
                        "color": "c5def5",
                        "default": false,
                        "description": "Add this issue/PR to JIT oncall triage queue"
                    },
                    {
                        "id": 693805995,
                        "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                        "name": "module: onnx",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to torch.onnx"
                    },
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2019-09-24T07:12:22Z",
                "updated_at": "2021-12-23T00:27:25Z",
                "closed_at": "2021-12-23T00:27:25Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 65600975,
                    "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                    "name": "pytorch",
                    "full_name": "pytorch/pytorch",
                    "private": false,
                    "owner": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/pytorch/pytorch",
                    "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                    "fork": false,
                    "url": "https://api.github.com/repos/pytorch/pytorch",
                    "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                    "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                    "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                    "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                    "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                    "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                    "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                    "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                    "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                    "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                    "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                    "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                    "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                    "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                    "created_at": "2016-08-13T05:26:41Z",
                    "updated_at": "2022-12-20T19:01:41Z",
                    "pushed_at": "2022-12-20T19:13:23Z",
                    "git_url": "git://github.com/pytorch/pytorch.git",
                    "ssh_url": "git@github.com:pytorch/pytorch.git",
                    "clone_url": "https://github.com/pytorch/pytorch.git",
                    "svn_url": "https://github.com/pytorch/pytorch",
                    "homepage": "https://pytorch.org",
                    "size": 1039086,
                    "stargazers_count": 61103,
                    "watchers_count": 61103,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_discussions": false,
                    "forks_count": 17020,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 10669,
                    "license": {
                        "key": "other",
                        "name": "Other",
                        "spdx_id": "NOASSERTION",
                        "url": null,
                        "node_id": "MDc6TGljZW5zZTA="
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "autograd",
                        "deep-learning",
                        "gpu",
                        "machine-learning",
                        "neural-network",
                        "numpy",
                        "python",
                        "tensor"
                    ],
                    "visibility": "public",
                    "forks": 17020,
                    "open_issues": 10669,
                    "watchers": 61103,
                    "default_branch": "master",
                    "permissions": {
                        "admin": false,
                        "maintain": false,
                        "push": false,
                        "triage": false,
                        "pull": true
                    }
                },
                "body": "## 🐛 Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nWe tried to run inference on a trained pytorch model, by converting to onnx and loading to caffe2.\r\nWe encountered below error message:\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-48-9e64828afa97> in <module>()\r\n      1 #outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\r\n----> 2 dummy_output_1, dummy_output_2 = rep.run(( np.array([[1,100]]),                                           np.array([[1,100]]) ) )\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/onnx/backend_rep.py in run(self, inputs, **kwargs)\r\n     55                 self.workspace.RunNet(self.init_net.name)\r\n     56                 self.ran_init_net = True\r\n---> 57             self.workspace.RunNet(self.predict_net.name)\r\n     58         output_values = [self.workspace.FetchBlob(name)\r\n     59                          for name in self.predict_net.external_output]\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/onnx/workspace.py in f(*args, **kwargs)\r\n     61         def f(*args, **kwargs):\r\n     62             with self._ctx:\r\n---> 63                 return getattr(workspace, attr)(*args, **kwargs)\r\n     64         return f\r\n     65\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/workspace.py in RunNet(name, num_iter, allow_fail)\r\n    252         C.Workspace.current._last_failed_op_net_position,\r\n    253         GetNetName(name),\r\n--> 254         StringifyNetName(name), num_iter, allow_fail,\r\n    255     )\r\n    256\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/workspace.py in CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs)\r\n    213 def CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs):\r\n    214     try:\r\n--> 215         return func(*args, **kwargs)\r\n    216     except Exception:\r\n    217         op_id = op_id_fetcher()\r\n \r\nRuntimeError: [enforce fail at pow_op.h:100] A.sizes() == B.sizes(). [1, 2, 768] vs []. Dimension mismatch - did you forget to set broadcast=1?\r\nError from operator:\r\ninput: \"188\" input: \"189\" output: \"190\" name: \"\" type: \"Pow\" device_option { device_type: 0 device_id: 0 }frame #0: c10::ThrowEnforceNotMet(char const*, int, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void const*) + 191 (0xb393827ff in libc10.dylib)\r\nframe #1: bool caffe2::PowOp<caffe2::TensorTypes<float>, caffe2::CPUContext, caffe2::EigenPowFunctor, caffe2::SameTypeAsInput>::DoRunWithType<float>() + 5339 (0xb358016eb in libtorch.dylib)\r\nframe #2: caffe2::Operator<caffe2::CPUContext>::Run(int) + 122 (0xb350fca2a in libtorch.dylib)\r\nframe #3: caffe2::SimpleNet::Run() + 464 (0xb34f1c5c0 in libtorch.dylib)\r\nframe #4: caffe2::Workspace::RunNet(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 86 (0xb34f5b956 in libtorch.dylib)\r\nframe #5: void pybind11::cpp_function::initialize<caffe2::python::addGlobalMethods(pybind11::module&)::$_79, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, pybind11::name, pybind11::scope, pybind11::sibling>(caffe2::python::addGlobalMethods(pybind11::module&)::$_79&&, bool (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 207 (0xb8e78b2df in caffe2_pybind11_state.cpython-36m-darwin.so)\r\nframe #6: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3324 (0xb8e73461c in caffe2_pybind11_state.cpython-36m-darwin.so)\r\n<omitting python frames>\r\n\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. \r\n\r\ndummy_input_2 = torch.tensor([[1,100]])\r\ndummy_input_3 = torch.tensor([[1,100]])\r\ndummy_output_1, dummy_output_2 = trained_model( input_ids = dummy_input_2, token_type_ids=dummy_input_3)\r\n \r\ndummy_output_1.shape\r\ntorch.Size([1, 2, 50266])\r\n\r\ndummy_output_2[0].shape\r\ntorch.Size([2, 1, 12, 2, 64])\r\n\r\n2.\r\n# Export to ONNX format\r\n \r\ntorch.onnx.export(trained_model, (input_ids, token_type_ids) , 'sar02.onnx' ,\r\nverbose = True,\r\ninput_names=[ 'input_ids', 'token_type_ids'],\r\noutput_names=['output1', 'output2'])\r\n\r\n3. \r\nPrint Graph in Human readable format:\r\n\r\nimport onnx\r\n# Load the ONNX model\r\nmodel = onnx.load(\"model_onxx_sar/letter_generation_sar02.onnx\")\r\n \r\n# Check that the IR is well formed\r\nonnx.checker.check_model(model)\r\n \r\n# Print a human readable representation of the graph\r\nonnx.helper.printable_graph(model.graph)\r\n \r\n```\r\n'graph torch-jit-export (\\n  %input_ids[INT64, 1x2]\\n  %token_type_ids[INT64, 1x2]\\n) initializers (\\n  %transformer.wte.weight[FLOAT, 50266x768]\\n  %transformer.wpe.weight[FLOAT, 1024x768]\\n  %transformer.h.0.ln_1.weight[FLOAT, 768]\\n  %transformer.h.0.ln_1.bias[FLOAT, 768]\\n  %transformer.h.0.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.0.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.0.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.0.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.0.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.0.ln_2.weight[FLOAT, 768]\\n  %transformer.h.0.ln_2.bias[FLOAT, 768]\\n  %transformer.h.0.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.0.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.0.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.0.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.1.ln_1.weight[FLOAT, 768]\\n  %transformer.h.1.ln_1.bias[FLOAT, 768]\\n  %transformer.h.1.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.1.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.1.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.1.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.1.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.1.ln_2.weight[FLOAT, 768]\\n  %transformer.h.1.ln_2.bias[FLOAT, 768]\\n  %transformer.h.1.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.1.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.1.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.1.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.2.ln_1.weight[FLOAT, 768]\\n  %transformer.h.2.ln_1.bias[FLOAT, 768]\\n  %transformer.h.2.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.2.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.2.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.2.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.2.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.2.ln_2.weight[FLOAT, 768]\\n  %transformer.h.2.ln_2.bias[FLOAT, 768]\\n  %transformer.h.2.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.2.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.2.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.2.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.3.ln_1.weight[FLOAT, 768]\\n  %transformer.h.3.ln_1.bias[FLOAT, 768]\\n  %transformer.h.3.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.3.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.3.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.3.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.3.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.3.ln_2.weight[FLOAT, 768]\\n  %transformer.h.3.ln_2.bias[FLOAT, 768]\\n  %transformer.h.3.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.3.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.3.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.3.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.4.ln_1.weight[FLOAT, 768]\\n  %transformer.h.4.ln_1.bias[FLOAT, 768]\\n  %transformer.h.4.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.4.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.4.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.4.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.4.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.4.ln_2.weight[FLOAT, 768]\\n  %transformer.h.4.ln_2.bias[FLOAT, 768]\\n  %transformer.h.4.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.4.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.4.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.4.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.5.ln_1.weight[FLOAT, 768]\\n  %transformer.h.5.ln_1.bias[FLOAT, 768]\\n  %transformer.h.5.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.5.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.5.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.5.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.5.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.5.ln_2.weight[FLOAT, 768]\\n  %transformer.h.5.ln_2.bias[FLOAT, 768]\\n  %transformer.h.5.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.5.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.5.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.5.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.6.ln_1.weight[FLOAT, 768]\\n  %transformer.h.6.ln_1.bias[FLOAT, 768]\\n  %transformer.h.6.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.6.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.6.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.6.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.6.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.6.ln_2.weight[FLOAT, 768]\\n  %transformer.h.6.ln_2.bias[FLOAT, 768]\\n  %transformer.h.6.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.6.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.6.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.6.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.7.ln_1.weight[FLOAT, 768]\\n  %transformer.h.7.ln_1.bias[FLOAT, 768]\\n  %transformer.h.7.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.7.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.7.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.7.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.7.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.7.ln_2.weight[FLOAT, 768]\\n  %transformer.h.7.ln_2.bias[FLOAT, 768]\\n  %transformer.h.7.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.7.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.7.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.7.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.8.ln_1.weight[FLOAT, 768]\\n  %transformer.h.8.ln_1.bias[FLOAT, 768]\\n  %transformer.h.8.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.8.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.8.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.8.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.8.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.8.ln_2.weight[FLOAT, 768]\\n  %transformer.h.8.ln_2.bias[FLOAT, 768]\\n  %transformer.h.8.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.8.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.8.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.8.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.9.ln_1.weight[FLOAT, 768]\\n  %transformer.h.9.ln_1.bias[FLOAT, 768]\\n  %transformer.h.9.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.9.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.9.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.9.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.9.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.9.ln_2.weight[FLOAT, 768]\\n  %transformer.h.9.ln_2.bias[FLOAT, 768]\\n  %transformer.h.9.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.9.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.9.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.9.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.10.ln_1.weight[FLOAT, 768]\\n  %transformer.h.10.ln_1.bias[FLOAT, 768]\\n  %transformer.h.10.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.10.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.10.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.10.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.10.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.10.ln_2.weight[FLOAT, 768]\\n  %transformer.h.10.ln_2.bias[FLOAT, 768]\\n  %transformer.h.10.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.10.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.10.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.10.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.h.11.ln_1.weight[FLOAT, 768]\\n  %transformer.h.11.ln_1.bias[FLOAT, 768]\\n  %transformer.h.11.attn.bias[FLOAT, 1x1x1024x1024]\\n  %transformer.h.11.attn.c_attn.weight[FLOAT, 768x2304]\\n  %transformer.h.11.attn.c_attn.bias[FLOAT, 2304]\\n  %transformer.h.11.attn.c_proj.weight[FLOAT, 768x768]\\n  %transformer.h.11.attn.c_proj.bias[FLOAT, 768]\\n  %transformer.h.11.ln_2.weight[FLOAT, 768]\\n  %transformer.h.11.ln_2.bias[FLOAT, 768]\\n  %transformer.h.11.mlp.c_fc.weight[FLOAT, 768x3072]\\n  %transformer.h.11.mlp.c_fc.bias[FLOAT, 3072]\\n  %transformer.h.11.mlp.c_proj.weight[FLOAT, 3072x768]\\n  %transformer.h.11.mlp.c_proj.bias[FLOAT, 768]\\n  %transformer.ln_f.weight[FLOAT, 768]\\n  %transformer.ln_f.bias[FLOAT, 768]\\n) {\\n  %162 = Constant[value = <Scalar Tensor []>]()\\n  %163 = Shape(%input_ids)\\n  %164 = Gather[axis = 0](%163, %162)\\n  %165 = Constant[value = <Scalar Tensor []>]()\\n  %166 = Shape(%input_ids)\\n  %167 = Gather[axis = 0](%166, %165)\\n  %168 = Constant[value = <Scalar Tensor []>]()\\n  %169 = Shape(%input_ids)\\n  %170 = Gather[axis = 0](%169, %168)\\n  %171 = Constant[value = <Scalar Tensor []>]()\\n  %172 = Unsqueeze[axes = [0]](%171)\\n  %173 = Unsqueeze[axes = [0]](%170)\\n  %174 = Concat[axis = 0](%172, %173)\\n  %175 = Reshape(%input_ids, %174)\\n  %176 = Constant[value = <Scalar Tensor []>]()\\n  %177 = Shape(%token_type_ids)\\n  %178 = Gather[axis = 0](%177, %176)\\n  %179 = Constant[value = <Scalar Tensor []>]()\\n  %180 = Unsqueeze[axes = [0]](%179)\\n  %181 = Unsqueeze[axes = [0]](%178)\\n  %182 = Concat[axis = 0](%180, %181)\\n  %183 = Reshape(%token_type_ids, %182)\\n  %184 = Gather(%transformer.wte.weight, %175)\\n  %185 = Gather(%transformer.wpe.weight, %183)\\n  %186 = Add(%184, %185)\\n  %187 = ReduceMean[axes = [-1], keepdims = 1](%186)\\n  %188 = Sub(%186, %187)\\n  %189 = Constant[value = <Scalar Tensor []>]()\\n  %190 = Pow(%188, %189)\\n  %191 = ReduceMean[axes = [-1], keepdims = 1](%190)\\n  %192 = Sub(%186, %187)\\n  %193 = Constant[value = <Scalar Tensor []>]()\\n  %194 = Add(%191, %193)\\n  %195 = Sqrt(%194)\\n  %196 = Div(%192, %195)\\n  %197 = Mul(%transformer.h.0.ln_1.weight, %196)\\n  %198 = Add(%197, %transformer.h.0.ln_1.bias)\\n  %199 = Constant[value = <Scalar Tensor []>]()\\n  %200 = Shape(%198)\\n  %201 = Gather[axis = 0](%200, %199)\\n  %202 = Constant[value = <Scalar Tensor []>]()\\n  %203 = Shape(%198)\\n  %204 = Gather[axis = 0](%203, %202)\\n  %205 = Constant[value = <Scalar Tensor []>]()\\n  %206 = Shape(%198)\\n  %207 = Gather[axis = 0](%206, %205)\\n  %208 = Constant[value = <Scalar Tensor []>]()\\n  %209 = Unsqueeze[axes = [0]](%208)\\n  %210 = Unsqueeze[axes = [0]](%207)\\n  %211 = Concat[axis = 0](%209, %210)\\n  %212 = Reshape(%198, %211)\\n  %213 = Gemm[alpha = 1, beta = 1](%212, %transformer.h.0.attn.c_attn.weight, %transformer.h.0.attn.c_attn.bias)\\n  %214 = Constant[value = <Scalar Tensor []>]()\\n  %215 = Unsqueeze[axes = [0]](%201)\\n  %216 = Unsqueeze[axes = [0]](%204)\\n  %217 = Unsqueeze[axes = [0]](%214)\\n  %218 = Concat[axis = 0](%215, %216, %217)\\n  %219 = Reshape(%213, %218)\\n  %query.1, %key.1, %value.1 = Split[axis = 2, split = [768, 768, 768]](%219)\\n  %223 = Constant[value = <Scalar Tensor []>]()\\n  %224 = Shape(%query.1)\\n  %225 = Gather[axis = 0](%224, %223)\\n  %226 = Constant[value = <Scalar Tensor []>]()\\n  %227 = Shape(%query.1)\\n  %228 = Gather[axis = 0](%227, %226)\\n  %229 = Constant[value = <Scalar Tensor []>]()\\n  %230 = Shape(%query.1)\\n  %231 = Gather[axis = 0](%230, %229)\\n  %232 = Constant[value = <Scalar Tensor []>]()\\n  %233 = Div(%231, %232)\\n  %234 = Constant[value = <Scalar Tensor []>]()\\n  %235 = Unsqueeze[axes = [0]](%225)\\n  %236 = Unsqueeze[axes = [0]](%228)\\n  %237 = Unsqueeze[axes = [0]](%234)\\n  %238 = Unsqueeze[axes = [0]](%233)\\n  %239 = Concat[axis = 0](%235, %236, %237, %238)\\n  %240 = Reshape(%query.1, %239)\\n  %241 = Transpose[perm = [0, 2, 1, 3]](%240)\\n  %242 = Constant[value = <Scalar Tensor []>]()\\n  %243 = Shape(%key.1)\\n  %244 = Gather[axis = 0](%243, %242)\\n  %245 = Constant[value = <Scalar Tensor []>]()\\n  %246 = Shape(%key.1)\\n  %247 = Gather[axis = 0](%246, %245)\\n  %248 = Constant[value = <Scalar Tensor []>]()\\n  %249 = Shape(%key.1)\\n  %250 = Gather[axis = 0](%249, %248)\\n  %251 = Constant[value = <Scalar Tensor []>]()\\n  %252 = Div(%250, %251)\\n  %253 = Constant[value = <Scalar Tensor []>]()\\n  %254 = Unsqueeze[axes = [0]](%244)\\n  %255 = Unsqueeze[axes = [0]](%247)\\n  %256 = Unsqueeze[axes = [0]](%253)\\n  %257 = Unsqueeze[axes = [0]](%252)\\n  %258 = Concat[axis = 0](%254, %255, %256, %257)\\n  %259 = Reshape(%key.1, %258)\\n  %260 = Transpose[perm = [0, 2, 3, 1]](%259)\\n  %261 = Constant[value = <Scalar Tensor []>]()\\n  %262 = Shape(%value.1)\\n  %263 = Gather[axis = 0](%262, %261)\\n  %264 = Constant[value = <Scalar Tensor []>]()\\n  %265 = Shape(%value.1)\\n  %266 = Gather[axis = 0](%265, %264)\\n  %267 = Constant[value = <Scalar Tensor []>]()\\n  %268 = Shape(%value.1)\\n  %269 = Gather[axis = 0](%268, %267)\\n  %270 = Constant[value = <Scalar Tensor []>]()\\n  %271 = Div(%269, %270)\\n  %272 = Constant[value = <Scalar Tensor []>]()\\n  %273 = Unsqueeze[axes = [0]](%263)\\n  %274 = Unsqueeze[axes = [0]](%266)\\n  %275 = Unsqueeze[axes = [0]](%272)\\n  %276 = Unsqueeze[axes = [0]](%271)\\n  %277 = Concat[axis = 0](%273, %274, %275, %276)\\n  %278 = Reshape(%value.1, %277)\\n  %279 = Transpose[perm = [0, 2, 1, 3]](%278)\\n  %280 = Transpose[perm = [0, 2, 1, 3]](%259)\\n  %281 = Unsqueeze[axes = [0]](%280)\\n  %282 = Unsqueeze[axes = [0]](%279)\\n  %output2 = Concat[axis = 0](%281, %282)\\n  %284 = MatMul(%241, %260)\\n  %285 = Constant[value = <Scalar Tensor []>]()\\n  %286 = Div(%284, %285)\\n  %287 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.0.attn.bias)\\n  %288 = Slice[axes = [3], ends = [2], starts = [0]](%287)\\n  %289 = Mul(%286, %288)\\n  %290 = Constant[value = <Scalar Tensor []>]()\\n  %291 = Sub(%290, %288)\\n  %292 = Constant[value = <Scalar Tensor []>]()\\n  %293 = Mul(%291, %292)\\n  %294 = Sub(%289, %293)\\n  %295 = Softmax[axis = 3](%294)\\n  %296 = MatMul(%295, %279)\\n  %297 = Transpose[perm = [0, 2, 1, 3]](%296)\\n  %298 = Constant[value = <Scalar Tensor []>]()\\n  %299 = Shape(%297)\\n  %300 = Gather[axis = 0](%299, %298)\\n  %301 = Constant[value = <Scalar Tensor []>]()\\n  %302 = Shape(%297)\\n  %303 = Gather[axis = 0](%302, %301)\\n  %304 = Constant[value = <Scalar Tensor []>]()\\n  %305 = Shape(%297)\\n  %306 = Gather[axis = 0](%305, %304)\\n  %307 = Constant[value = <Scalar Tensor []>]()\\n  %308 = Shape(%297)\\n  %309 = Gather[axis = 0](%308, %307)\\n  %310 = Mul(%306, %309)\\n  %311 = Unsqueeze[axes = [0]](%300)\\n  %312 = Unsqueeze[axes = [0]](%303)\\n  %313 = Unsqueeze[axes = [0]](%310)\\n  %314 = Concat[axis = 0](%311, %312, %313)\\n  %315 = Reshape(%297, %314)\\n  %316 = Constant[value = <Scalar Tensor []>]()\\n  %317 = Shape(%315)\\n  %318 = Gather[axis = 0](%317, %316)\\n  %319 = Constant[value = <Scalar Tensor []>]()\\n  %320 = Shape(%315)\\n  %321 = Gather[axis = 0](%320, %319)\\n  %322 = Constant[value = <Scalar Tensor []>]()\\n  %323 = Shape(%315)\\n  %324 = Gather[axis = 0](%323, %322)\\n  %325 = Constant[value = <Scalar Tensor []>]()\\n  %326 = Unsqueeze[axes = [0]](%325)\\n  %327 = Unsqueeze[axes = [0]](%324)\\n  %328 = Concat[axis = 0](%326, %327)\\n  %329 = Reshape(%315, %328)\\n  %330 = Gemm[alpha = 1, beta = 1](%329, %transformer.h.0.attn.c_proj.weight, %transformer.h.0.attn.c_proj.bias)\\n  %331 = Constant[value = <Scalar Tensor []>]()\\n  %332 = Unsqueeze[axes = [0]](%318)\\n  %333 = Unsqueeze[axes = [0]](%321)\\n  %334 = Unsqueeze[axes = [0]](%331)\\n  %335 = Concat[axis = 0](%332, %333, %334)\\n  %336 = Reshape(%330, %335)\\n  %337 = Add(%186, %336)\\n  %338 = ReduceMean[axes = [-1], keepdims = 1](%337)\\n  %339 = Sub(%337, %338)\\n  %340 = Constant[value = <Scalar Tensor []>]()\\n  %341 = Pow(%339, %340)\\n  %342 = ReduceMean[axes = [-1], keepdims = 1](%341)\\n  %343 = Sub(%337, %338)\\n  %344 = Constant[value = <Scalar Tensor []>]()\\n  %345 = Add(%342, %344)\\n  %346 = Sqrt(%345)\\n  %347 = Div(%343, %346)\\n  %348 = Mul(%transformer.h.0.ln_2.weight, %347)\\n  %349 = Add(%348, %transformer.h.0.ln_2.bias)\\n  %350 = Constant[value = <Scalar Tensor []>]()\\n  %351 = Shape(%349)\\n  %352 = Gather[axis = 0](%351, %350)\\n  %353 = Constant[value = <Scalar Tensor []>]()\\n  %354 = Shape(%349)\\n  %355 = Gather[axis = 0](%354, %353)\\n  %356 = Constant[value = <Scalar Tensor []>]()\\n  %357 = Shape(%349)\\n  %358 = Gather[axis = 0](%357, %356)\\n  %359 = Constant[value = <Scalar Tensor []>]()\\n  %360 = Unsqueeze[axes = [0]](%359)\\n  %361 = Unsqueeze[axes = [0]](%358)\\n  %362 = Concat[axis = 0](%360, %361)\\n  %363 = Reshape(%349, %362)\\n  %364 = Gemm[alpha = 1, beta = 1](%363, %transformer.h.0.mlp.c_fc.weight, %transformer.h.0.mlp.c_fc.bias)\\n  %365 = Constant[value = <Scalar Tensor []>]()\\n  %366 = Unsqueeze[axes = [0]](%352)\\n  %367 = Unsqueeze[axes = [0]](%355)\\n  %368 = Unsqueeze[axes = [0]](%365)\\n  %369 = Concat[axis = 0](%366, %367, %368)\\n  %370 = Reshape(%364, %369)\\n  %371 = Constant[value = <Scalar Tensor []>]()\\n  %372 = Mul(%370, %371)\\n  %373 = Constant[value = <Scalar Tensor []>]()\\n  %374 = Pow(%370, %373)\\n  %375 = Constant[value = <Scalar Tensor []>]()\\n  %376 = Mul(%374, %375)\\n  %377 = Add(%370, %376)\\n  %378 = Constant[value = <Scalar Tensor []>]()\\n  %379 = Mul(%377, %378)\\n  %380 = Tanh(%379)\\n  %381 = Constant[value = <Scalar Tensor []>]()\\n  %382 = Add(%380, %381)\\n  %383 = Mul(%372, %382)\\n  %384 = Constant[value = <Scalar Tensor []>]()\\n  %385 = Shape(%383)\\n  %386 = Gather[axis = 0](%385, %384)\\n  %387 = Constant[value = <Scalar Tensor []>]()\\n  %388 = Shape(%383)\\n  %389 = Gather[axis = 0](%388, %387)\\n  %390 = Constant[value = <Scalar Tensor []>]()\\n  %391 = Shape(%383)\\n  %392 = Gather[axis = 0](%391, %390)\\n  %393 = Constant[value = <Scalar Tensor []>]()\\n  %394 = Unsqueeze[axes = [0]](%393)\\n  %395 = Unsqueeze[axes = [0]](%392)\\n  %396 = Concat[axis = 0](%394, %395)\\n  %397 = Reshape(%383, %396)\\n  %398 = Gemm[alpha = 1, beta = 1](%397, %transformer.h.0.mlp.c_proj.weight, %transformer.h.0.mlp.c_proj.bias)\\n  %399 = Constant[value = <Scalar Tensor []>]()\\n  %400 = Unsqueeze[axes = [0]](%386)\\n  %401 = Unsqueeze[axes = [0]](%389)\\n  %402 = Unsqueeze[axes = [0]](%399)\\n  %403 = Concat[axis = 0](%400, %401, %402)\\n  %404 = Reshape(%398, %403)\\n  %405 = Add(%337, %404)\\n  %406 = ReduceMean[axes = [-1], keepdims = 1](%405)\\n  %407 = Sub(%405, %406)\\n  %408 = Constant[value = <Scalar Tensor []>]()\\n  %409 = Pow(%407, %408)\\n  %410 = ReduceMean[axes = [-1], keepdims = 1](%409)\\n  %411 = Sub(%405, %406)\\n  %412 = Constant[value = <Scalar Tensor []>]()\\n  %413 = Add(%410, %412)\\n  %414 = Sqrt(%413)\\n  %415 = Div(%411, %414)\\n  %416 = Mul(%transformer.h.1.ln_1.weight, %415)\\n  %417 = Add(%416, %transformer.h.1.ln_1.bias)\\n  %418 = Constant[value = <Scalar Tensor []>]()\\n  %419 = Shape(%417)\\n  %420 = Gather[axis = 0](%419, %418)\\n  %421 = Constant[value = <Scalar Tensor []>]()\\n  %422 = Shape(%417)\\n  %423 = Gather[axis = 0](%422, %421)\\n  %424 = Constant[value = <Scalar Tensor []>]()\\n  %425 = Shape(%417)\\n  %426 = Gather[axis = 0](%425, %424)\\n  %427 = Constant[value = <Scalar Tensor []>]()\\n  %428 = Unsqueeze[axes = [0]](%427)\\n  %429 = Unsqueeze[axes = [0]](%426)\\n  %430 = Concat[axis = 0](%428, %429)\\n  %431 = Reshape(%417, %430)\\n  %432 = Gemm[alpha = 1, beta = 1](%431, %transformer.h.1.attn.c_attn.weight, %transformer.h.1.attn.c_attn.bias)\\n  %433 = Constant[value = <Scalar Tensor []>]()\\n  %434 = Unsqueeze[axes = [0]](%420)\\n  %435 = Unsqueeze[axes = [0]](%423)\\n  %436 = Unsqueeze[axes = [0]](%433)\\n  %437 = Concat[axis = 0](%434, %435, %436)\\n  %438 = Reshape(%432, %437)\\n  %query.3, %key.3, %value.3 = Split[axis = 2, split = [768, 768, 768]](%438)\\n  %442 = Constant[value = <Scalar Tensor []>]()\\n  %443 = Shape(%query.3)\\n  %444 = Gather[axis = 0](%443, %442)\\n  %445 = Constant[value = <Scalar Tensor []>]()\\n  %446 = Shape(%query.3)\\n  %447 = Gather[axis = 0](%446, %445)\\n  %448 = Constant[value = <Scalar Tensor []>]()\\n  %449 = Shape(%query.3)\\n  %450 = Gather[axis = 0](%449, %448)\\n  %451 = Constant[value = <Scalar Tensor []>]()\\n  %452 = Div(%450, %451)\\n  %453 = Constant[value = <Scalar Tensor []>]()\\n  %454 = Unsqueeze[axes = [0]](%444)\\n  %455 = Unsqueeze[axes = [0]](%447)\\n  %456 = Unsqueeze[axes = [0]](%453)\\n  %457 = Unsqueeze[axes = [0]](%452)\\n  %458 = Concat[axis = 0](%454, %455, %456, %457)\\n  %459 = Reshape(%query.3, %458)\\n  %460 = Transpose[perm = [0, 2, 1, 3]](%459)\\n  %461 = Constant[value = <Scalar Tensor []>]()\\n  %462 = Shape(%key.3)\\n  %463 = Gather[axis = 0](%462, %461)\\n  %464 = Constant[value = <Scalar Tensor []>]()\\n  %465 = Shape(%key.3)\\n  %466 = Gather[axis = 0](%465, %464)\\n  %467 = Constant[value = <Scalar Tensor []>]()\\n  %468 = Shape(%key.3)\\n  %469 = Gather[axis = 0](%468, %467)\\n  %470 = Constant[value = <Scalar Tensor []>]()\\n  %471 = Div(%469, %470)\\n  %472 = Constant[value = <Scalar Tensor []>]()\\n  %473 = Unsqueeze[axes = [0]](%463)\\n  %474 = Unsqueeze[axes = [0]](%466)\\n  %475 = Unsqueeze[axes = [0]](%472)\\n  %476 = Unsqueeze[axes = [0]](%471)\\n  %477 = Concat[axis = 0](%473, %474, %475, %476)\\n  %478 = Reshape(%key.3, %477)\\n  %479 = Transpose[perm = [0, 2, 3, 1]](%478)\\n  %480 = Constant[value = <Scalar Tensor []>]()\\n  %481 = Shape(%value.3)\\n  %482 = Gather[axis = 0](%481, %480)\\n  %483 = Constant[value = <Scalar Tensor []>]()\\n  %484 = Shape(%value.3)\\n  %485 = Gather[axis = 0](%484, %483)\\n  %486 = Constant[value = <Scalar Tensor []>]()\\n  %487 = Shape(%value.3)\\n  %488 = Gather[axis = 0](%487, %486)\\n  %489 = Constant[value = <Scalar Tensor []>]()\\n  %490 = Div(%488, %489)\\n  %491 = Constant[value = <Scalar Tensor []>]()\\n  %492 = Unsqueeze[axes = [0]](%482)\\n  %493 = Unsqueeze[axes = [0]](%485)\\n  %494 = Unsqueeze[axes = [0]](%491)\\n  %495 = Unsqueeze[axes = [0]](%490)\\n  %496 = Concat[axis = 0](%492, %493, %494, %495)\\n  %497 = Reshape(%value.3, %496)\\n  %498 = Transpose[perm = [0, 2, 1, 3]](%497)\\n  %499 = Transpose[perm = [0, 2, 1, 3]](%478)\\n  %500 = Unsqueeze[axes = [0]](%499)\\n  %501 = Unsqueeze[axes = [0]](%498)\\n  %502 = Concat[axis = 0](%500, %501)\\n  %503 = MatMul(%460, %479)\\n  %504 = Constant[value = <Scalar Tensor []>]()\\n  %505 = Div(%503, %504)\\n  %506 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.1.attn.bias)\\n  %507 = Slice[axes = [3], ends = [2], starts = [0]](%506)\\n  %508 = Mul(%505, %507)\\n  %509 = Constant[value = <Scalar Tensor []>]()\\n  %510 = Sub(%509, %507)\\n  %511 = Constant[value = <Scalar Tensor []>]()\\n  %512 = Mul(%510, %511)\\n  %513 = Sub(%508, %512)\\n  %514 = Softmax[axis = 3](%513)\\n  %515 = MatMul(%514, %498)\\n  %516 = Transpose[perm = [0, 2, 1, 3]](%515)\\n  %517 = Constant[value = <Scalar Tensor []>]()\\n  %518 = Shape(%516)\\n  %519 = Gather[axis = 0](%518, %517)\\n  %520 = Constant[value = <Scalar Tensor []>]()\\n  %521 = Shape(%516)\\n  %522 = Gather[axis = 0](%521, %520)\\n  %523 = Constant[value = <Scalar Tensor []>]()\\n  %524 = Shape(%516)\\n  %525 = Gather[axis = 0](%524, %523)\\n  %526 = Constant[value = <Scalar Tensor []>]()\\n  %527 = Shape(%516)\\n  %528 = Gather[axis = 0](%527, %526)\\n  %529 = Mul(%525, %528)\\n  %530 = Unsqueeze[axes = [0]](%519)\\n  %531 = Unsqueeze[axes = [0]](%522)\\n  %532 = Unsqueeze[axes = [0]](%529)\\n  %533 = Concat[axis = 0](%530, %531, %532)\\n  %534 = Reshape(%516, %533)\\n  %535 = Constant[value = <Scalar Tensor []>]()\\n  %536 = Shape(%534)\\n  %537 = Gather[axis = 0](%536, %535)\\n  %538 = Constant[value = <Scalar Tensor []>]()\\n  %539 = Shape(%534)\\n  %540 = Gather[axis = 0](%539, %538)\\n  %541 = Constant[value = <Scalar Tensor []>]()\\n  %542 = Shape(%534)\\n  %543 = Gather[axis = 0](%542, %541)\\n  %544 = Constant[value = <Scalar Tensor []>]()\\n  %545 = Unsqueeze[axes = [0]](%544)\\n  %546 = Unsqueeze[axes = [0]](%543)\\n  %547 = Concat[axis = 0](%545, %546)\\n  %548 = Reshape(%534, %547)\\n  %549 = Gemm[alpha = 1, beta = 1](%548, %transformer.h.1.attn.c_proj.weight, %transformer.h.1.attn.c_proj.bias)\\n  %550 = Constant[value = <Scalar Tensor []>]()\\n  %551 = Unsqueeze[axes = [0]](%537)\\n  %552 = Unsqueeze[axes = [0]](%540)\\n  %553 = Unsqueeze[axes = [0]](%550)\\n  %554 = Concat[axis = 0](%551, %552, %553)\\n  %555 = Reshape(%549, %554)\\n  %556 = Add(%405, %555)\\n  %557 = ReduceMean[axes = [-1], keepdims = 1](%556)\\n  %558 = Sub(%556, %557)\\n  %559 = Constant[value = <Scalar Tensor []>]()\\n  %560 = Pow(%558, %559)\\n  %561 = ReduceMean[axes = [-1], keepdims = 1](%560)\\n  %562 = Sub(%556, %557)\\n  %563 = Constant[value = <Scalar Tensor []>]()\\n  %564 = Add(%561, %563)\\n  %565 = Sqrt(%564)\\n  %566 = Div(%562, %565)\\n  %567 = Mul(%transformer.h.1.ln_2.weight, %566)\\n  %568 = Add(%567, %transformer.h.1.ln_2.bias)\\n  %569 = Constant[value = <Scalar Tensor []>]()\\n  %570 = Shape(%568)\\n  %571 = Gather[axis = 0](%570, %569)\\n  %572 = Constant[value = <Scalar Tensor []>]()\\n  %573 = Shape(%568)\\n  %574 = Gather[axis = 0](%573, %572)\\n  %575 = Constant[value = <Scalar Tensor []>]()\\n  %576 = Shape(%568)\\n  %577 = Gather[axis = 0](%576, %575)\\n  %578 = Constant[value = <Scalar Tensor []>]()\\n  %579 = Unsqueeze[axes = [0]](%578)\\n  %580 = Unsqueeze[axes = [0]](%577)\\n  %581 = Concat[axis = 0](%579, %580)\\n  %582 = Reshape(%568, %581)\\n  %583 = Gemm[alpha = 1, beta = 1](%582, %transformer.h.1.mlp.c_fc.weight, %transformer.h.1.mlp.c_fc.bias)\\n  %584 = Constant[value = <Scalar Tensor []>]()\\n  %585 = Unsqueeze[axes = [0]](%571)\\n  %586 = Unsqueeze[axes = [0]](%574)\\n  %587 = Unsqueeze[axes = [0]](%584)\\n  %588 = Concat[axis = 0](%585, %586, %587)\\n  %589 = Reshape(%583, %588)\\n  %590 = Constant[value = <Scalar Tensor []>]()\\n  %591 = Mul(%589, %590)\\n  %592 = Constant[value = <Scalar Tensor []>]()\\n  %593 = Pow(%589, %592)\\n  %594 = Constant[value = <Scalar Tensor []>]()\\n  %595 = Mul(%593, %594)\\n  %596 = Add(%589, %595)\\n  %597 = Constant[value = <Scalar Tensor []>]()\\n  %598 = Mul(%596, %597)\\n  %599 = Tanh(%598)\\n  %600 = Constant[value = <Scalar Tensor []>]()\\n  %601 = Add(%599, %600)\\n  %602 = Mul(%591, %601)\\n  %603 = Constant[value = <Scalar Tensor []>]()\\n  %604 = Shape(%602)\\n  %605 = Gather[axis = 0](%604, %603)\\n  %606 = Constant[value = <Scalar Tensor []>]()\\n  %607 = Shape(%602)\\n  %608 = Gather[axis = 0](%607, %606)\\n  %609 = Constant[value = <Scalar Tensor []>]()\\n  %610 = Shape(%602)\\n  %611 = Gather[axis = 0](%610, %609)\\n  %612 = Constant[value = <Scalar Tensor []>]()\\n  %613 = Unsqueeze[axes = [0]](%612)\\n  %614 = Unsqueeze[axes = [0]](%611)\\n  %615 = Concat[axis = 0](%613, %614)\\n  %616 = Reshape(%602, %615)\\n  %617 = Gemm[alpha = 1, beta = 1](%616, %transformer.h.1.mlp.c_proj.weight, %transformer.h.1.mlp.c_proj.bias)\\n  %618 = Constant[value = <Scalar Tensor []>]()\\n  %619 = Unsqueeze[axes = [0]](%605)\\n  %620 = Unsqueeze[axes = [0]](%608)\\n  %621 = Unsqueeze[axes = [0]](%618)\\n  %622 = Concat[axis = 0](%619, %620, %621)\\n  %623 = Reshape(%617, %622)\\n  %624 = Add(%556, %623)\\n  %625 = ReduceMean[axes = [-1], keepdims = 1](%624)\\n  %626 = Sub(%624, %625)\\n  %627 = Constant[value = <Scalar Tensor []>]()\\n  %628 = Pow(%626, %627)\\n  %629 = ReduceMean[axes = [-1], keepdims = 1](%628)\\n  %630 = Sub(%624, %625)\\n  %631 = Constant[value = <Scalar Tensor []>]()\\n  %632 = Add(%629, %631)\\n  %633 = Sqrt(%632)\\n  %634 = Div(%630, %633)\\n  %635 = Mul(%transformer.h.2.ln_1.weight, %634)\\n  %636 = Add(%635, %transformer.h.2.ln_1.bias)\\n  %637 = Constant[value = <Scalar Tensor []>]()\\n  %638 = Shape(%636)\\n  %639 = Gather[axis = 0](%638, %637)\\n  %640 = Constant[value = <Scalar Tensor []>]()\\n  %641 = Shape(%636)\\n  %642 = Gather[axis = 0](%641, %640)\\n  %643 = Constant[value = <Scalar Tensor []>]()\\n  %644 = Shape(%636)\\n  %645 = Gather[axis = 0](%644, %643)\\n  %646 = Constant[value = <Scalar Tensor []>]()\\n  %647 = Unsqueeze[axes = [0]](%646)\\n  %648 = Unsqueeze[axes = [0]](%645)\\n  %649 = Concat[axis = 0](%647, %648)\\n  %650 = Reshape(%636, %649)\\n  %651 = Gemm[alpha = 1, beta = 1](%650, %transformer.h.2.attn.c_attn.weight, %transformer.h.2.attn.c_attn.bias)\\n  %652 = Constant[value = <Scalar Tensor []>]()\\n  %653 = Unsqueeze[axes = [0]](%639)\\n  %654 = Unsqueeze[axes = [0]](%642)\\n  %655 = Unsqueeze[axes = [0]](%652)\\n  %656 = Concat[axis = 0](%653, %654, %655)\\n  %657 = Reshape(%651, %656)\\n  %query.5, %key.5, %value.5 = Split[axis = 2, split = [768, 768, 768]](%657)\\n  %661 = Constant[value = <Scalar Tensor []>]()\\n  %662 = Shape(%query.5)\\n  %663 = Gather[axis = 0](%662, %661)\\n  %664 = Constant[value = <Scalar Tensor []>]()\\n  %665 = Shape(%query.5)\\n  %666 = Gather[axis = 0](%665, %664)\\n  %667 = Constant[value = <Scalar Tensor []>]()\\n  %668 = Shape(%query.5)\\n  %669 = Gather[axis = 0](%668, %667)\\n  %670 = Constant[value = <Scalar Tensor []>]()\\n  %671 = Div(%669, %670)\\n  %672 = Constant[value = <Scalar Tensor []>]()\\n  %673 = Unsqueeze[axes = [0]](%663)\\n  %674 = Unsqueeze[axes = [0]](%666)\\n  %675 = Unsqueeze[axes = [0]](%672)\\n  %676 = Unsqueeze[axes = [0]](%671)\\n  %677 = Concat[axis = 0](%673, %674, %675, %676)\\n  %678 = Reshape(%query.5, %677)\\n  %679 = Transpose[perm = [0, 2, 1, 3]](%678)\\n  %680 = Constant[value = <Scalar Tensor []>]()\\n  %681 = Shape(%key.5)\\n  %682 = Gather[axis = 0](%681, %680)\\n  %683 = Constant[value = <Scalar Tensor []>]()\\n  %684 = Shape(%key.5)\\n  %685 = Gather[axis = 0](%684, %683)\\n  %686 = Constant[value = <Scalar Tensor []>]()\\n  %687 = Shape(%key.5)\\n  %688 = Gather[axis = 0](%687, %686)\\n  %689 = Constant[value = <Scalar Tensor []>]()\\n  %690 = Div(%688, %689)\\n  %691 = Constant[value = <Scalar Tensor []>]()\\n  %692 = Unsqueeze[axes = [0]](%682)\\n  %693 = Unsqueeze[axes = [0]](%685)\\n  %694 = Unsqueeze[axes = [0]](%691)\\n  %695 = Unsqueeze[axes = [0]](%690)\\n  %696 = Concat[axis = 0](%692, %693, %694, %695)\\n  %697 = Reshape(%key.5, %696)\\n  %698 = Transpose[perm = [0, 2, 3, 1]](%697)\\n  %699 = Constant[value = <Scalar Tensor []>]()\\n  %700 = Shape(%value.5)\\n  %701 = Gather[axis = 0](%700, %699)\\n  %702 = Constant[value = <Scalar Tensor []>]()\\n  %703 = Shape(%value.5)\\n  %704 = Gather[axis = 0](%703, %702)\\n  %705 = Constant[value = <Scalar Tensor []>]()\\n  %706 = Shape(%value.5)\\n  %707 = Gather[axis = 0](%706, %705)\\n  %708 = Constant[value = <Scalar Tensor []>]()\\n  %709 = Div(%707, %708)\\n  %710 = Constant[value = <Scalar Tensor []>]()\\n  %711 = Unsqueeze[axes = [0]](%701)\\n  %712 = Unsqueeze[axes = [0]](%704)\\n  %713 = Unsqueeze[axes = [0]](%710)\\n  %714 = Unsqueeze[axes = [0]](%709)\\n  %715 = Concat[axis = 0](%711, %712, %713, %714)\\n  %716 = Reshape(%value.5, %715)\\n  %717 = Transpose[perm = [0, 2, 1, 3]](%716)\\n  %718 = Transpose[perm = [0, 2, 1, 3]](%697)\\n  %719 = Unsqueeze[axes = [0]](%718)\\n  %720 = Unsqueeze[axes = [0]](%717)\\n  %721 = Concat[axis = 0](%719, %720)\\n  %722 = MatMul(%679, %698)\\n  %723 = Constant[value = <Scalar Tensor []>]()\\n  %724 = Div(%722, %723)\\n  %725 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.2.attn.bias)\\n  %726 = Slice[axes = [3], ends = [2], starts = [0]](%725)\\n  %727 = Mul(%724, %726)\\n  %728 = Constant[value = <Scalar Tensor []>]()\\n  %729 = Sub(%728, %726)\\n  %730 = Constant[value = <Scalar Tensor []>]()\\n  %731 = Mul(%729, %730)\\n  %732 = Sub(%727, %731)\\n  %733 = Softmax[axis = 3](%732)\\n  %734 = MatMul(%733, %717)\\n  %735 = Transpose[perm = [0, 2, 1, 3]](%734)\\n  %736 = Constant[value = <Scalar Tensor []>]()\\n  %737 = Shape(%735)\\n  %738 = Gather[axis = 0](%737, %736)\\n  %739 = Constant[value = <Scalar Tensor []>]()\\n  %740 = Shape(%735)\\n  %741 = Gather[axis = 0](%740, %739)\\n  %742 = Constant[value = <Scalar Tensor []>]()\\n  %743 = Shape(%735)\\n  %744 = Gather[axis = 0](%743, %742)\\n  %745 = Constant[value = <Scalar Tensor []>]()\\n  %746 = Shape(%735)\\n  %747 = Gather[axis = 0](%746, %745)\\n  %748 = Mul(%744, %747)\\n  %749 = Unsqueeze[axes = [0]](%738)\\n  %750 = Unsqueeze[axes = [0]](%741)\\n  %751 = Unsqueeze[axes = [0]](%748)\\n  %752 = Concat[axis = 0](%749, %750, %751)\\n  %753 = Reshape(%735, %752)\\n  %754 = Constant[value = <Scalar Tensor []>]()\\n  %755 = Shape(%753)\\n  %756 = Gather[axis = 0](%755, %754)\\n  %757 = Constant[value = <Scalar Tensor []>]()\\n  %758 = Shape(%753)\\n  %759 = Gather[axis = 0](%758, %757)\\n  %760 = Constant[value = <Scalar Tensor []>]()\\n  %761 = Shape(%753)\\n  %762 = Gather[axis = 0](%761, %760)\\n  %763 = Constant[value = <Scalar Tensor []>]()\\n  %764 = Unsqueeze[axes = [0]](%763)\\n  %765 = Unsqueeze[axes = [0]](%762)\\n  %766 = Concat[axis = 0](%764, %765)\\n  %767 = Reshape(%753, %766)\\n  %768 = Gemm[alpha = 1, beta = 1](%767, %transformer.h.2.attn.c_proj.weight, %transformer.h.2.attn.c_proj.bias)\\n  %769 = Constant[value = <Scalar Tensor []>]()\\n  %770 = Unsqueeze[axes = [0]](%756)\\n  %771 = Unsqueeze[axes = [0]](%759)\\n  %772 = Unsqueeze[axes = [0]](%769)\\n  %773 = Concat[axis = 0](%770, %771, %772)\\n  %774 = Reshape(%768, %773)\\n  %775 = Add(%624, %774)\\n  %776 = ReduceMean[axes = [-1], keepdims = 1](%775)\\n  %777 = Sub(%775, %776)\\n  %778 = Constant[value = <Scalar Tensor []>]()\\n  %779 = Pow(%777, %778)\\n  %780 = ReduceMean[axes = [-1], keepdims = 1](%779)\\n  %781 = Sub(%775, %776)\\n  %782 = Constant[value = <Scalar Tensor []>]()\\n  %783 = Add(%780, %782)\\n  %784 = Sqrt(%783)\\n  %785 = Div(%781, %784)\\n  %786 = Mul(%transformer.h.2.ln_2.weight, %785)\\n  %787 = Add(%786, %transformer.h.2.ln_2.bias)\\n  %788 = Constant[value = <Scalar Tensor []>]()\\n  %789 = Shape(%787)\\n  %790 = Gather[axis = 0](%789, %788)\\n  %791 = Constant[value = <Scalar Tensor []>]()\\n  %792 = Shape(%787)\\n  %793 = Gather[axis = 0](%792, %791)\\n  %794 = Constant[value = <Scalar Tensor []>]()\\n  %795 = Shape(%787)\\n  %796 = Gather[axis = 0](%795, %794)\\n  %797 = Constant[value = <Scalar Tensor []>]()\\n  %798 = Unsqueeze[axes = [0]](%797)\\n  %799 = Unsqueeze[axes = [0]](%796)\\n  %800 = Concat[axis = 0](%798, %799)\\n  %801 = Reshape(%787, %800)\\n  %802 = Gemm[alpha = 1, beta = 1](%801, %transformer.h.2.mlp.c_fc.weight, %transformer.h.2.mlp.c_fc.bias)\\n  %803 = Constant[value = <Scalar Tensor []>]()\\n  %804 = Unsqueeze[axes = [0]](%790)\\n  %805 = Unsqueeze[axes = [0]](%793)\\n  %806 = Unsqueeze[axes = [0]](%803)\\n  %807 = Concat[axis = 0](%804, %805, %806)\\n  %808 = Reshape(%802, %807)\\n  %809 = Constant[value = <Scalar Tensor []>]()\\n  %810 = Mul(%808, %809)\\n  %811 = Constant[value = <Scalar Tensor []>]()\\n  %812 = Pow(%808, %811)\\n  %813 = Constant[value = <Scalar Tensor []>]()\\n  %814 = Mul(%812, %813)\\n  %815 = Add(%808, %814)\\n  %816 = Constant[value = <Scalar Tensor []>]()\\n  %817 = Mul(%815, %816)\\n  %818 = Tanh(%817)\\n  %819 = Constant[value = <Scalar Tensor []>]()\\n  %820 = Add(%818, %819)\\n  %821 = Mul(%810, %820)\\n  %822 = Constant[value = <Scalar Tensor []>]()\\n  %823 = Shape(%821)\\n  %824 = Gather[axis = 0](%823, %822)\\n  %825 = Constant[value = <Scalar Tensor []>]()\\n  %826 = Shape(%821)\\n  %827 = Gather[axis = 0](%826, %825)\\n  %828 = Constant[value = <Scalar Tensor []>]()\\n  %829 = Shape(%821)\\n  %830 = Gather[axis = 0](%829, %828)\\n  %831 = Constant[value = <Scalar Tensor []>]()\\n  %832 = Unsqueeze[axes = [0]](%831)\\n  %833 = Unsqueeze[axes = [0]](%830)\\n  %834 = Concat[axis = 0](%832, %833)\\n  %835 = Reshape(%821, %834)\\n  %836 = Gemm[alpha = 1, beta = 1](%835, %transformer.h.2.mlp.c_proj.weight, %transformer.h.2.mlp.c_proj.bias)\\n  %837 = Constant[value = <Scalar Tensor []>]()\\n  %838 = Unsqueeze[axes = [0]](%824)\\n  %839 = Unsqueeze[axes = [0]](%827)\\n  %840 = Unsqueeze[axes = [0]](%837)\\n  %841 = Concat[axis = 0](%838, %839, %840)\\n  %842 = Reshape(%836, %841)\\n  %843 = Add(%775, %842)\\n  %844 = ReduceMean[axes = [-1], keepdims = 1](%843)\\n  %845 = Sub(%843, %844)\\n  %846 = Constant[value = <Scalar Tensor []>]()\\n  %847 = Pow(%845, %846)\\n  %848 = ReduceMean[axes = [-1], keepdims = 1](%847)\\n  %849 = Sub(%843, %844)\\n  %850 = Constant[value = <Scalar Tensor []>]()\\n  %851 = Add(%848, %850)\\n  %852 = Sqrt(%851)\\n  %853 = Div(%849, %852)\\n  %854 = Mul(%transformer.h.3.ln_1.weight, %853)\\n  %855 = Add(%854, %transformer.h.3.ln_1.bias)\\n  %856 = Constant[value = <Scalar Tensor []>]()\\n  %857 = Shape(%855)\\n  %858 = Gather[axis = 0](%857, %856)\\n  %859 = Constant[value = <Scalar Tensor []>]()\\n  %860 = Shape(%855)\\n  %861 = Gather[axis = 0](%860, %859)\\n  %862 = Constant[value = <Scalar Tensor []>]()\\n  %863 = Shape(%855)\\n  %864 = Gather[axis = 0](%863, %862)\\n  %865 = Constant[value = <Scalar Tensor []>]()\\n  %866 = Unsqueeze[axes = [0]](%865)\\n  %867 = Unsqueeze[axes = [0]](%864)\\n  %868 = Concat[axis = 0](%866, %867)\\n  %869 = Reshape(%855, %868)\\n  %870 = Gemm[alpha = 1, beta = 1](%869, %transformer.h.3.attn.c_attn.weight, %transformer.h.3.attn.c_attn.bias)\\n  %871 = Constant[value = <Scalar Tensor []>]()\\n  %872 = Unsqueeze[axes = [0]](%858)\\n  %873 = Unsqueeze[axes = [0]](%861)\\n  %874 = Unsqueeze[axes = [0]](%871)\\n  %875 = Concat[axis = 0](%872, %873, %874)\\n  %876 = Reshape(%870, %875)\\n  %query.7, %key.7, %value.7 = Split[axis = 2, split = [768, 768, 768]](%876)\\n  %880 = Constant[value = <Scalar Tensor []>]()\\n  %881 = Shape(%query.7)\\n  %882 = Gather[axis = 0](%881, %880)\\n  %883 = Constant[value = <Scalar Tensor []>]()\\n  %884 = Shape(%query.7)\\n  %885 = Gather[axis = 0](%884, %883)\\n  %886 = Constant[value = <Scalar Tensor []>]()\\n  %887 = Shape(%query.7)\\n  %888 = Gather[axis = 0](%887, %886)\\n  %889 = Constant[value = <Scalar Tensor []>]()\\n  %890 = Div(%888, %889)\\n  %891 = Constant[value = <Scalar Tensor []>]()\\n  %892 = Unsqueeze[axes = [0]](%882)\\n  %893 = Unsqueeze[axes = [0]](%885)\\n  %894 = Unsqueeze[axes = [0]](%891)\\n  %895 = Unsqueeze[axes = [0]](%890)\\n  %896 = Concat[axis = 0](%892, %893, %894, %895)\\n  %897 = Reshape(%query.7, %896)\\n  %898 = Transpose[perm = [0, 2, 1, 3]](%897)\\n  %899 = Constant[value = <Scalar Tensor []>]()\\n  %900 = Shape(%key.7)\\n  %901 = Gather[axis = 0](%900, %899)\\n  %902 = Constant[value = <Scalar Tensor []>]()\\n  %903 = Shape(%key.7)\\n  %904 = Gather[axis = 0](%903, %902)\\n  %905 = Constant[value = <Scalar Tensor []>]()\\n  %906 = Shape(%key.7)\\n  %907 = Gather[axis = 0](%906, %905)\\n  %908 = Constant[value = <Scalar Tensor []>]()\\n  %909 = Div(%907, %908)\\n  %910 = Constant[value = <Scalar Tensor []>]()\\n  %911 = Unsqueeze[axes = [0]](%901)\\n  %912 = Unsqueeze[axes = [0]](%904)\\n  %913 = Unsqueeze[axes = [0]](%910)\\n  %914 = Unsqueeze[axes = [0]](%909)\\n  %915 = Concat[axis = 0](%911, %912, %913, %914)\\n  %916 = Reshape(%key.7, %915)\\n  %917 = Transpose[perm = [0, 2, 3, 1]](%916)\\n  %918 = Constant[value = <Scalar Tensor []>]()\\n  %919 = Shape(%value.7)\\n  %920 = Gather[axis = 0](%919, %918)\\n  %921 = Constant[value = <Scalar Tensor []>]()\\n  %922 = Shape(%value.7)\\n  %923 = Gather[axis = 0](%922, %921)\\n  %924 = Constant[value = <Scalar Tensor []>]()\\n  %925 = Shape(%value.7)\\n  %926 = Gather[axis = 0](%925, %924)\\n  %927 = Constant[value = <Scalar Tensor []>]()\\n  %928 = Div(%926, %927)\\n  %929 = Constant[value = <Scalar Tensor []>]()\\n  %930 = Unsqueeze[axes = [0]](%920)\\n  %931 = Unsqueeze[axes = [0]](%923)\\n  %932 = Unsqueeze[axes = [0]](%929)\\n  %933 = Unsqueeze[axes = [0]](%928)\\n  %934 = Concat[axis = 0](%930, %931, %932, %933)\\n  %935 = Reshape(%value.7, %934)\\n  %936 = Transpose[perm = [0, 2, 1, 3]](%935)\\n  %937 = Transpose[perm = [0, 2, 1, 3]](%916)\\n  %938 = Unsqueeze[axes = [0]](%937)\\n  %939 = Unsqueeze[axes = [0]](%936)\\n  %940 = Concat[axis = 0](%938, %939)\\n  %941 = MatMul(%898, %917)\\n  %942 = Constant[value = <Scalar Tensor []>]()\\n  %943 = Div(%941, %942)\\n  %944 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.3.attn.bias)\\n  %945 = Slice[axes = [3], ends = [2], starts = [0]](%944)\\n  %946 = Mul(%943, %945)\\n  %947 = Constant[value = <Scalar Tensor []>]()\\n  %948 = Sub(%947, %945)\\n  %949 = Constant[value = <Scalar Tensor []>]()\\n  %950 = Mul(%948, %949)\\n  %951 = Sub(%946, %950)\\n  %952 = Softmax[axis = 3](%951)\\n  %953 = MatMul(%952, %936)\\n  %954 = Transpose[perm = [0, 2, 1, 3]](%953)\\n  %955 = Constant[value = <Scalar Tensor []>]()\\n  %956 = Shape(%954)\\n  %957 = Gather[axis = 0](%956, %955)\\n  %958 = Constant[value = <Scalar Tensor []>]()\\n  %959 = Shape(%954)\\n  %960 = Gather[axis = 0](%959, %958)\\n  %961 = Constant[value = <Scalar Tensor []>]()\\n  %962 = Shape(%954)\\n  %963 = Gather[axis = 0](%962, %961)\\n  %964 = Constant[value = <Scalar Tensor []>]()\\n  %965 = Shape(%954)\\n  %966 = Gather[axis = 0](%965, %964)\\n  %967 = Mul(%963, %966)\\n  %968 = Unsqueeze[axes = [0]](%957)\\n  %969 = Unsqueeze[axes = [0]](%960)\\n  %970 = Unsqueeze[axes = [0]](%967)\\n  %971 = Concat[axis = 0](%968, %969, %970)\\n  %972 = Reshape(%954, %971)\\n  %973 = Constant[value = <Scalar Tensor []>]()\\n  %974 = Shape(%972)\\n  %975 = Gather[axis = 0](%974, %973)\\n  %976 = Constant[value = <Scalar Tensor []>]()\\n  %977 = Shape(%972)\\n  %978 = Gather[axis = 0](%977, %976)\\n  %979 = Constant[value = <Scalar Tensor []>]()\\n  %980 = Shape(%972)\\n  %981 = Gather[axis = 0](%980, %979)\\n  %982 = Constant[value = <Scalar Tensor []>]()\\n  %983 = Unsqueeze[axes = [0]](%982)\\n  %984 = Unsqueeze[axes = [0]](%981)\\n  %985 = Concat[axis = 0](%983, %984)\\n  %986 = Reshape(%972, %985)\\n  %987 = Gemm[alpha = 1, beta = 1](%986, %transformer.h.3.attn.c_proj.weight, %transformer.h.3.attn.c_proj.bias)\\n  %988 = Constant[value = <Scalar Tensor []>]()\\n  %989 = Unsqueeze[axes = [0]](%975)\\n  %990 = Unsqueeze[axes = [0]](%978)\\n  %991 = Unsqueeze[axes = [0]](%988)\\n  %992 = Concat[axis = 0](%989, %990, %991)\\n  %993 = Reshape(%987, %992)\\n  %994 = Add(%843, %993)\\n  %995 = ReduceMean[axes = [-1], keepdims = 1](%994)\\n  %996 = Sub(%994, %995)\\n  %997 = Constant[value = <Scalar Tensor []>]()\\n  %998 = Pow(%996, %997)\\n  %999 = ReduceMean[axes = [-1], keepdims = 1](%998)\\n  %1000 = Sub(%994, %995)\\n  %1001 = Constant[value = <Scalar Tensor []>]()\\n  %1002 = Add(%999, %1001)\\n  %1003 = Sqrt(%1002)\\n  %1004 = Div(%1000, %1003)\\n  %1005 = Mul(%transformer.h.3.ln_2.weight, %1004)\\n  %1006 = Add(%1005, %transformer.h.3.ln_2.bias)\\n  %1007 = Constant[value = <Scalar Tensor []>]()\\n  %1008 = Shape(%1006)\\n  %1009 = Gather[axis = 0](%1008, %1007)\\n  %1010 = Constant[value = <Scalar Tensor []>]()\\n  %1011 = Shape(%1006)\\n  %1012 = Gather[axis = 0](%1011, %1010)\\n  %1013 = Constant[value = <Scalar Tensor []>]()\\n  %1014 = Shape(%1006)\\n  %1015 = Gather[axis = 0](%1014, %1013)\\n  %1016 = Constant[value = <Scalar Tensor []>]()\\n  %1017 = Unsqueeze[axes = [0]](%1016)\\n  %1018 = Unsqueeze[axes = [0]](%1015)\\n  %1019 = Concat[axis = 0](%1017, %1018)\\n  %1020 = Reshape(%1006, %1019)\\n  %1021 = Gemm[alpha = 1, beta = 1](%1020, %transformer.h.3.mlp.c_fc.weight, %transformer.h.3.mlp.c_fc.bias)\\n  %1022 = Constant[value = <Scalar Tensor []>]()\\n  %1023 = Unsqueeze[axes = [0]](%1009)\\n  %1024 = Unsqueeze[axes = [0]](%1012)\\n  %1025 = Unsqueeze[axes = [0]](%1022)\\n  %1026 = Concat[axis = 0](%1023, %1024, %1025)\\n  %1027 = Reshape(%1021, %1026)\\n  %1028 = Constant[value = <Scalar Tensor []>]()\\n  %1029 = Mul(%1027, %1028)\\n  %1030 = Constant[value = <Scalar Tensor []>]()\\n  %1031 = Pow(%1027, %1030)\\n  %1032 = Constant[value = <Scalar Tensor []>]()\\n  %1033 = Mul(%1031, %1032)\\n  %1034 = Add(%1027, %1033)\\n  %1035 = Constant[value = <Scalar Tensor []>]()\\n  %1036 = Mul(%1034, %1035)\\n  %1037 = Tanh(%1036)\\n  %1038 = Constant[value = <Scalar Tensor []>]()\\n  %1039 = Add(%1037, %1038)\\n  %1040 = Mul(%1029, %1039)\\n  %1041 = Constant[value = <Scalar Tensor []>]()\\n  %1042 = Shape(%1040)\\n  %1043 = Gather[axis = 0](%1042, %1041)\\n  %1044 = Constant[value = <Scalar Tensor []>]()\\n  %1045 = Shape(%1040)\\n  %1046 = Gather[axis = 0](%1045, %1044)\\n  %1047 = Constant[value = <Scalar Tensor []>]()\\n  %1048 = Shape(%1040)\\n  %1049 = Gather[axis = 0](%1048, %1047)\\n  %1050 = Constant[value = <Scalar Tensor []>]()\\n  %1051 = Unsqueeze[axes = [0]](%1050)\\n  %1052 = Unsqueeze[axes = [0]](%1049)\\n  %1053 = Concat[axis = 0](%1051, %1052)\\n  %1054 = Reshape(%1040, %1053)\\n  %1055 = Gemm[alpha = 1, beta = 1](%1054, %transformer.h.3.mlp.c_proj.weight, %transformer.h.3.mlp.c_proj.bias)\\n  %1056 = Constant[value = <Scalar Tensor []>]()\\n  %1057 = Unsqueeze[axes = [0]](%1043)\\n  %1058 = Unsqueeze[axes = [0]](%1046)\\n  %1059 = Unsqueeze[axes = [0]](%1056)\\n  %1060 = Concat[axis = 0](%1057, %1058, %1059)\\n  %1061 = Reshape(%1055, %1060)\\n  %1062 = Add(%994, %1061)\\n  %1063 = ReduceMean[axes = [-1], keepdims = 1](%1062)\\n  %1064 = Sub(%1062, %1063)\\n  %1065 = Constant[value = <Scalar Tensor []>]()\\n  %1066 = Pow(%1064, %1065)\\n  %1067 = ReduceMean[axes = [-1], keepdims = 1](%1066)\\n  %1068 = Sub(%1062, %1063)\\n  %1069 = Constant[value = <Scalar Tensor []>]()\\n  %1070 = Add(%1067, %1069)\\n  %1071 = Sqrt(%1070)\\n  %1072 = Div(%1068, %1071)\\n  %1073 = Mul(%transformer.h.4.ln_1.weight, %1072)\\n  %1074 = Add(%1073, %transformer.h.4.ln_1.bias)\\n  %1075 = Constant[value = <Scalar Tensor []>]()\\n  %1076 = Shape(%1074)\\n  %1077 = Gather[axis = 0](%1076, %1075)\\n  %1078 = Constant[value = <Scalar Tensor []>]()\\n  %1079 = Shape(%1074)\\n  %1080 = Gather[axis = 0](%1079, %1078)\\n  %1081 = Constant[value = <Scalar Tensor []>]()\\n  %1082 = Shape(%1074)\\n  %1083 = Gather[axis = 0](%1082, %1081)\\n  %1084 = Constant[value = <Scalar Tensor []>]()\\n  %1085 = Unsqueeze[axes = [0]](%1084)\\n  %1086 = Unsqueeze[axes = [0]](%1083)\\n  %1087 = Concat[axis = 0](%1085, %1086)\\n  %1088 = Reshape(%1074, %1087)\\n  %1089 = Gemm[alpha = 1, beta = 1](%1088, %transformer.h.4.attn.c_attn.weight, %transformer.h.4.attn.c_attn.bias)\\n  %1090 = Constant[value = <Scalar Tensor []>]()\\n  %1091 = Unsqueeze[axes = [0]](%1077)\\n  %1092 = Unsqueeze[axes = [0]](%1080)\\n  %1093 = Unsqueeze[axes = [0]](%1090)\\n  %1094 = Concat[axis = 0](%1091, %1092, %1093)\\n  %1095 = Reshape(%1089, %1094)\\n  %query.9, %key.9, %value.9 = Split[axis = 2, split = [768, 768, 768]](%1095)\\n  %1099 = Constant[value = <Scalar Tensor []>]()\\n  %1100 = Shape(%query.9)\\n  %1101 = Gather[axis = 0](%1100, %1099)\\n  %1102 = Constant[value = <Scalar Tensor []>]()\\n  %1103 = Shape(%query.9)\\n  %1104 = Gather[axis = 0](%1103, %1102)\\n  %1105 = Constant[value = <Scalar Tensor []>]()\\n  %1106 = Shape(%query.9)\\n  %1107 = Gather[axis = 0](%1106, %1105)\\n  %1108 = Constant[value = <Scalar Tensor []>]()\\n  %1109 = Div(%1107, %1108)\\n  %1110 = Constant[value = <Scalar Tensor []>]()\\n  %1111 = Unsqueeze[axes = [0]](%1101)\\n  %1112 = Unsqueeze[axes = [0]](%1104)\\n  %1113 = Unsqueeze[axes = [0]](%1110)\\n  %1114 = Unsqueeze[axes = [0]](%1109)\\n  %1115 = Concat[axis = 0](%1111, %1112, %1113, %1114)\\n  %1116 = Reshape(%query.9, %1115)\\n  %1117 = Transpose[perm = [0, 2, 1, 3]](%1116)\\n  %1118 = Constant[value = <Scalar Tensor []>]()\\n  %1119 = Shape(%key.9)\\n  %1120 = Gather[axis = 0](%1119, %1118)\\n  %1121 = Constant[value = <Scalar Tensor []>]()\\n  %1122 = Shape(%key.9)\\n  %1123 = Gather[axis = 0](%1122, %1121)\\n  %1124 = Constant[value = <Scalar Tensor []>]()\\n  %1125 = Shape(%key.9)\\n  %1126 = Gather[axis = 0](%1125, %1124)\\n  %1127 = Constant[value = <Scalar Tensor []>]()\\n  %1128 = Div(%1126, %1127)\\n  %1129 = Constant[value = <Scalar Tensor []>]()\\n  %1130 = Unsqueeze[axes = [0]](%1120)\\n  %1131 = Unsqueeze[axes = [0]](%1123)\\n  %1132 = Unsqueeze[axes = [0]](%1129)\\n  %1133 = Unsqueeze[axes = [0]](%1128)\\n  %1134 = Concat[axis = 0](%1130, %1131, %1132, %1133)\\n  %1135 = Reshape(%key.9, %1134)\\n  %1136 = Transpose[perm = [0, 2, 3, 1]](%1135)\\n  %1137 = Constant[value = <Scalar Tensor []>]()\\n  %1138 = Shape(%value.9)\\n  %1139 = Gather[axis = 0](%1138, %1137)\\n  %1140 = Constant[value = <Scalar Tensor []>]()\\n  %1141 = Shape(%value.9)\\n  %1142 = Gather[axis = 0](%1141, %1140)\\n  %1143 = Constant[value = <Scalar Tensor []>]()\\n  %1144 = Shape(%value.9)\\n  %1145 = Gather[axis = 0](%1144, %1143)\\n  %1146 = Constant[value = <Scalar Tensor []>]()\\n  %1147 = Div(%1145, %1146)\\n  %1148 = Constant[value = <Scalar Tensor []>]()\\n  %1149 = Unsqueeze[axes = [0]](%1139)\\n  %1150 = Unsqueeze[axes = [0]](%1142)\\n  %1151 = Unsqueeze[axes = [0]](%1148)\\n  %1152 = Unsqueeze[axes = [0]](%1147)\\n  %1153 = Concat[axis = 0](%1149, %1150, %1151, %1152)\\n  %1154 = Reshape(%value.9, %1153)\\n  %1155 = Transpose[perm = [0, 2, 1, 3]](%1154)\\n  %1156 = Transpose[perm = [0, 2, 1, 3]](%1135)\\n  %1157 = Unsqueeze[axes = [0]](%1156)\\n  %1158 = Unsqueeze[axes = [0]](%1155)\\n  %1159 = Concat[axis = 0](%1157, %1158)\\n  %1160 = MatMul(%1117, %1136)\\n  %1161 = Constant[value = <Scalar Tensor []>]()\\n  %1162 = Div(%1160, %1161)\\n  %1163 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.4.attn.bias)\\n  %1164 = Slice[axes = [3], ends = [2], starts = [0]](%1163)\\n  %1165 = Mul(%1162, %1164)\\n  %1166 = Constant[value = <Scalar Tensor []>]()\\n  %1167 = Sub(%1166, %1164)\\n  %1168 = Constant[value = <Scalar Tensor []>]()\\n  %1169 = Mul(%1167, %1168)\\n  %1170 = Sub(%1165, %1169)\\n  %1171 = Softmax[axis = 3](%1170)\\n  %1172 = MatMul(%1171, %1155)\\n  %1173 = Transpose[perm = [0, 2, 1, 3]](%1172)\\n  %1174 = Constant[value = <Scalar Tensor []>]()\\n  %1175 = Shape(%1173)\\n  %1176 = Gather[axis = 0](%1175, %1174)\\n  %1177 = Constant[value = <Scalar Tensor []>]()\\n  %1178 = Shape(%1173)\\n  %1179 = Gather[axis = 0](%1178, %1177)\\n  %1180 = Constant[value = <Scalar Tensor []>]()\\n  %1181 = Shape(%1173)\\n  %1182 = Gather[axis = 0](%1181, %1180)\\n  %1183 = Constant[value = <Scalar Tensor []>]()\\n  %1184 = Shape(%1173)\\n  %1185 = Gather[axis = 0](%1184, %1183)\\n  %1186 = Mul(%1182, %1185)\\n  %1187 = Unsqueeze[axes = [0]](%1176)\\n  %1188 = Unsqueeze[axes = [0]](%1179)\\n  %1189 = Unsqueeze[axes = [0]](%1186)\\n  %1190 = Concat[axis = 0](%1187, %1188, %1189)\\n  %1191 = Reshape(%1173, %1190)\\n  %1192 = Constant[value = <Scalar Tensor []>]()\\n  %1193 = Shape(%1191)\\n  %1194 = Gather[axis = 0](%1193, %1192)\\n  %1195 = Constant[value = <Scalar Tensor []>]()\\n  %1196 = Shape(%1191)\\n  %1197 = Gather[axis = 0](%1196, %1195)\\n  %1198 = Constant[value = <Scalar Tensor []>]()\\n  %1199 = Shape(%1191)\\n  %1200 = Gather[axis = 0](%1199, %1198)\\n  %1201 = Constant[value = <Scalar Tensor []>]()\\n  %1202 = Unsqueeze[axes = [0]](%1201)\\n  %1203 = Unsqueeze[axes = [0]](%1200)\\n  %1204 = Concat[axis = 0](%1202, %1203)\\n  %1205 = Reshape(%1191, %1204)\\n  %1206 = Gemm[alpha = 1, beta = 1](%1205, %transformer.h.4.attn.c_proj.weight, %transformer.h.4.attn.c_proj.bias)\\n  %1207 = Constant[value = <Scalar Tensor []>]()\\n  %1208 = Unsqueeze[axes = [0]](%1194)\\n  %1209 = Unsqueeze[axes = [0]](%1197)\\n  %1210 = Unsqueeze[axes = [0]](%1207)\\n  %1211 = Concat[axis = 0](%1208, %1209, %1210)\\n  %1212 = Reshape(%1206, %1211)\\n  %1213 = Add(%1062, %1212)\\n  %1214 = ReduceMean[axes = [-1], keepdims = 1](%1213)\\n  %1215 = Sub(%1213, %1214)\\n  %1216 = Constant[value = <Scalar Tensor []>]()\\n  %1217 = Pow(%1215, %1216)\\n  %1218 = ReduceMean[axes = [-1], keepdims = 1](%1217)\\n  %1219 = Sub(%1213, %1214)\\n  %1220 = Constant[value = <Scalar Tensor []>]()\\n  %1221 = Add(%1218, %1220)\\n  %1222 = Sqrt(%1221)\\n  %1223 = Div(%1219, %1222)\\n  %1224 = Mul(%transformer.h.4.ln_2.weight, %1223)\\n  %1225 = Add(%1224, %transformer.h.4.ln_2.bias)\\n  %1226 = Constant[value = <Scalar Tensor []>]()\\n  %1227 = Shape(%1225)\\n  %1228 = Gather[axis = 0](%1227, %1226)\\n  %1229 = Constant[value = <Scalar Tensor []>]()\\n  %1230 = Shape(%1225)\\n  %1231 = Gather[axis = 0](%1230, %1229)\\n  %1232 = Constant[value = <Scalar Tensor []>]()\\n  %1233 = Shape(%1225)\\n  %1234 = Gather[axis = 0](%1233, %1232)\\n  %1235 = Constant[value = <Scalar Tensor []>]()\\n  %1236 = Unsqueeze[axes = [0]](%1235)\\n  %1237 = Unsqueeze[axes = [0]](%1234)\\n  %1238 = Concat[axis = 0](%1236, %1237)\\n  %1239 = Reshape(%1225, %1238)\\n  %1240 = Gemm[alpha = 1, beta = 1](%1239, %transformer.h.4.mlp.c_fc.weight, %transformer.h.4.mlp.c_fc.bias)\\n  %1241 = Constant[value = <Scalar Tensor []>]()\\n  %1242 = Unsqueeze[axes = [0]](%1228)\\n  %1243 = Unsqueeze[axes = [0]](%1231)\\n  %1244 = Unsqueeze[axes = [0]](%1241)\\n  %1245 = Concat[axis = 0](%1242, %1243, %1244)\\n  %1246 = Reshape(%1240, %1245)\\n  %1247 = Constant[value = <Scalar Tensor []>]()\\n  %1248 = Mul(%1246, %1247)\\n  %1249 = Constant[value = <Scalar Tensor []>]()\\n  %1250 = Pow(%1246, %1249)\\n  %1251 = Constant[value = <Scalar Tensor []>]()\\n  %1252 = Mul(%1250, %1251)\\n  %1253 = Add(%1246, %1252)\\n  %1254 = Constant[value = <Scalar Tensor []>]()\\n  %1255 = Mul(%1253, %1254)\\n  %1256 = Tanh(%1255)\\n  %1257 = Constant[value = <Scalar Tensor []>]()\\n  %1258 = Add(%1256, %1257)\\n  %1259 = Mul(%1248, %1258)\\n  %1260 = Constant[value = <Scalar Tensor []>]()\\n  %1261 = Shape(%1259)\\n  %1262 = Gather[axis = 0](%1261, %1260)\\n  %1263 = Constant[value = <Scalar Tensor []>]()\\n  %1264 = Shape(%1259)\\n  %1265 = Gather[axis = 0](%1264, %1263)\\n  %1266 = Constant[value = <Scalar Tensor []>]()\\n  %1267 = Shape(%1259)\\n  %1268 = Gather[axis = 0](%1267, %1266)\\n  %1269 = Constant[value = <Scalar Tensor []>]()\\n  %1270 = Unsqueeze[axes = [0]](%1269)\\n  %1271 = Unsqueeze[axes = [0]](%1268)\\n  %1272 = Concat[axis = 0](%1270, %1271)\\n  %1273 = Reshape(%1259, %1272)\\n  %1274 = Gemm[alpha = 1, beta = 1](%1273, %transformer.h.4.mlp.c_proj.weight, %transformer.h.4.mlp.c_proj.bias)\\n  %1275 = Constant[value = <Scalar Tensor []>]()\\n  %1276 = Unsqueeze[axes = [0]](%1262)\\n  %1277 = Unsqueeze[axes = [0]](%1265)\\n  %1278 = Unsqueeze[axes = [0]](%1275)\\n  %1279 = Concat[axis = 0](%1276, %1277, %1278)\\n  %1280 = Reshape(%1274, %1279)\\n  %1281 = Add(%1213, %1280)\\n  %1282 = ReduceMean[axes = [-1], keepdims = 1](%1281)\\n  %1283 = Sub(%1281, %1282)\\n  %1284 = Constant[value = <Scalar Tensor []>]()\\n  %1285 = Pow(%1283, %1284)\\n  %1286 = ReduceMean[axes = [-1], keepdims = 1](%1285)\\n  %1287 = Sub(%1281, %1282)\\n  %1288 = Constant[value = <Scalar Tensor []>]()\\n  %1289 = Add(%1286, %1288)\\n  %1290 = Sqrt(%1289)\\n  %1291 = Div(%1287, %1290)\\n  %1292 = Mul(%transformer.h.5.ln_1.weight, %1291)\\n  %1293 = Add(%1292, %transformer.h.5.ln_1.bias)\\n  %1294 = Constant[value = <Scalar Tensor []>]()\\n  %1295 = Shape(%1293)\\n  %1296 = Gather[axis = 0](%1295, %1294)\\n  %1297 = Constant[value = <Scalar Tensor []>]()\\n  %1298 = Shape(%1293)\\n  %1299 = Gather[axis = 0](%1298, %1297)\\n  %1300 = Constant[value = <Scalar Tensor []>]()\\n  %1301 = Shape(%1293)\\n  %1302 = Gather[axis = 0](%1301, %1300)\\n  %1303 = Constant[value = <Scalar Tensor []>]()\\n  %1304 = Unsqueeze[axes = [0]](%1303)\\n  %1305 = Unsqueeze[axes = [0]](%1302)\\n  %1306 = Concat[axis = 0](%1304, %1305)\\n  %1307 = Reshape(%1293, %1306)\\n  %1308 = Gemm[alpha = 1, beta = 1](%1307, %transformer.h.5.attn.c_attn.weight, %transformer.h.5.attn.c_attn.bias)\\n  %1309 = Constant[value = <Scalar Tensor []>]()\\n  %1310 = Unsqueeze[axes = [0]](%1296)\\n  %1311 = Unsqueeze[axes = [0]](%1299)\\n  %1312 = Unsqueeze[axes = [0]](%1309)\\n  %1313 = Concat[axis = 0](%1310, %1311, %1312)\\n  %1314 = Reshape(%1308, %1313)\\n  %query.11, %key.11, %value.11 = Split[axis = 2, split = [768, 768, 768]](%1314)\\n  %1318 = Constant[value = <Scalar Tensor []>]()\\n  %1319 = Shape(%query.11)\\n  %1320 = Gather[axis = 0](%1319, %1318)\\n  %1321 = Constant[value = <Scalar Tensor []>]()\\n  %1322 = Shape(%query.11)\\n  %1323 = Gather[axis = 0](%1322, %1321)\\n  %1324 = Constant[value = <Scalar Tensor []>]()\\n  %1325 = Shape(%query.11)\\n  %1326 = Gather[axis = 0](%1325, %1324)\\n  %1327 = Constant[value = <Scalar Tensor []>]()\\n  %1328 = Div(%1326, %1327)\\n  %1329 = Constant[value = <Scalar Tensor []>]()\\n  %1330 = Unsqueeze[axes = [0]](%1320)\\n  %1331 = Unsqueeze[axes = [0]](%1323)\\n  %1332 = Unsqueeze[axes = [0]](%1329)\\n  %1333 = Unsqueeze[axes = [0]](%1328)\\n  %1334 = Concat[axis = 0](%1330, %1331, %1332, %1333)\\n  %1335 = Reshape(%query.11, %1334)\\n  %1336 = Transpose[perm = [0, 2, 1, 3]](%1335)\\n  %1337 = Constant[value = <Scalar Tensor []>]()\\n  %1338 = Shape(%key.11)\\n  %1339 = Gather[axis = 0](%1338, %1337)\\n  %1340 = Constant[value = <Scalar Tensor []>]()\\n  %1341 = Shape(%key.11)\\n  %1342 = Gather[axis = 0](%1341, %1340)\\n  %1343 = Constant[value = <Scalar Tensor []>]()\\n  %1344 = Shape(%key.11)\\n  %1345 = Gather[axis = 0](%1344, %1343)\\n  %1346 = Constant[value = <Scalar Tensor []>]()\\n  %1347 = Div(%1345, %1346)\\n  %1348 = Constant[value = <Scalar Tensor []>]()\\n  %1349 = Unsqueeze[axes = [0]](%1339)\\n  %1350 = Unsqueeze[axes = [0]](%1342)\\n  %1351 = Unsqueeze[axes = [0]](%1348)\\n  %1352 = Unsqueeze[axes = [0]](%1347)\\n  %1353 = Concat[axis = 0](%1349, %1350, %1351, %1352)\\n  %1354 = Reshape(%key.11, %1353)\\n  %1355 = Transpose[perm = [0, 2, 3, 1]](%1354)\\n  %1356 = Constant[value = <Scalar Tensor []>]()\\n  %1357 = Shape(%value.11)\\n  %1358 = Gather[axis = 0](%1357, %1356)\\n  %1359 = Constant[value = <Scalar Tensor []>]()\\n  %1360 = Shape(%value.11)\\n  %1361 = Gather[axis = 0](%1360, %1359)\\n  %1362 = Constant[value = <Scalar Tensor []>]()\\n  %1363 = Shape(%value.11)\\n  %1364 = Gather[axis = 0](%1363, %1362)\\n  %1365 = Constant[value = <Scalar Tensor []>]()\\n  %1366 = Div(%1364, %1365)\\n  %1367 = Constant[value = <Scalar Tensor []>]()\\n  %1368 = Unsqueeze[axes = [0]](%1358)\\n  %1369 = Unsqueeze[axes = [0]](%1361)\\n  %1370 = Unsqueeze[axes = [0]](%1367)\\n  %1371 = Unsqueeze[axes = [0]](%1366)\\n  %1372 = Concat[axis = 0](%1368, %1369, %1370, %1371)\\n  %1373 = Reshape(%value.11, %1372)\\n  %1374 = Transpose[perm = [0, 2, 1, 3]](%1373)\\n  %1375 = Transpose[perm = [0, 2, 1, 3]](%1354)\\n  %1376 = Unsqueeze[axes = [0]](%1375)\\n  %1377 = Unsqueeze[axes = [0]](%1374)\\n  %1378 = Concat[axis = 0](%1376, %1377)\\n  %1379 = MatMul(%1336, %1355)\\n  %1380 = Constant[value = <Scalar Tensor []>]()\\n  %1381 = Div(%1379, %1380)\\n  %1382 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.5.attn.bias)\\n  %1383 = Slice[axes = [3], ends = [2], starts = [0]](%1382)\\n  %1384 = Mul(%1381, %1383)\\n  %1385 = Constant[value = <Scalar Tensor []>]()\\n  %1386 = Sub(%1385, %1383)\\n  %1387 = Constant[value = <Scalar Tensor []>]()\\n  %1388 = Mul(%1386, %1387)\\n  %1389 = Sub(%1384, %1388)\\n  %1390 = Softmax[axis = 3](%1389)\\n  %1391 = MatMul(%1390, %1374)\\n  %1392 = Transpose[perm = [0, 2, 1, 3]](%1391)\\n  %1393 = Constant[value = <Scalar Tensor []>]()\\n  %1394 = Shape(%1392)\\n  %1395 = Gather[axis = 0](%1394, %1393)\\n  %1396 = Constant[value = <Scalar Tensor []>]()\\n  %1397 = Shape(%1392)\\n  %1398 = Gather[axis = 0](%1397, %1396)\\n  %1399 = Constant[value = <Scalar Tensor []>]()\\n  %1400 = Shape(%1392)\\n  %1401 = Gather[axis = 0](%1400, %1399)\\n  %1402 = Constant[value = <Scalar Tensor []>]()\\n  %1403 = Shape(%1392)\\n  %1404 = Gather[axis = 0](%1403, %1402)\\n  %1405 = Mul(%1401, %1404)\\n  %1406 = Unsqueeze[axes = [0]](%1395)\\n  %1407 = Unsqueeze[axes = [0]](%1398)\\n  %1408 = Unsqueeze[axes = [0]](%1405)\\n  %1409 = Concat[axis = 0](%1406, %1407, %1408)\\n  %1410 = Reshape(%1392, %1409)\\n  %1411 = Constant[value = <Scalar Tensor []>]()\\n  %1412 = Shape(%1410)\\n  %1413 = Gather[axis = 0](%1412, %1411)\\n  %1414 = Constant[value = <Scalar Tensor []>]()\\n  %1415 = Shape(%1410)\\n  %1416 = Gather[axis = 0](%1415, %1414)\\n  %1417 = Constant[value = <Scalar Tensor []>]()\\n  %1418 = Shape(%1410)\\n  %1419 = Gather[axis = 0](%1418, %1417)\\n  %1420 = Constant[value = <Scalar Tensor []>]()\\n  %1421 = Unsqueeze[axes = [0]](%1420)\\n  %1422 = Unsqueeze[axes = [0]](%1419)\\n  %1423 = Concat[axis = 0](%1421, %1422)\\n  %1424 = Reshape(%1410, %1423)\\n  %1425 = Gemm[alpha = 1, beta = 1](%1424, %transformer.h.5.attn.c_proj.weight, %transformer.h.5.attn.c_proj.bias)\\n  %1426 = Constant[value = <Scalar Tensor []>]()\\n  %1427 = Unsqueeze[axes = [0]](%1413)\\n  %1428 = Unsqueeze[axes = [0]](%1416)\\n  %1429 = Unsqueeze[axes = [0]](%1426)\\n  %1430 = Concat[axis = 0](%1427, %1428, %1429)\\n  %1431 = Reshape(%1425, %1430)\\n  %1432 = Add(%1281, %1431)\\n  %1433 = ReduceMean[axes = [-1], keepdims = 1](%1432)\\n  %1434 = Sub(%1432, %1433)\\n  %1435 = Constant[value = <Scalar Tensor []>]()\\n  %1436 = Pow(%1434, %1435)\\n  %1437 = ReduceMean[axes = [-1], keepdims = 1](%1436)\\n  %1438 = Sub(%1432, %1433)\\n  %1439 = Constant[value = <Scalar Tensor []>]()\\n  %1440 = Add(%1437, %1439)\\n  %1441 = Sqrt(%1440)\\n  %1442 = Div(%1438, %1441)\\n  %1443 = Mul(%transformer.h.5.ln_2.weight, %1442)\\n  %1444 = Add(%1443, %transformer.h.5.ln_2.bias)\\n  %1445 = Constant[value = <Scalar Tensor []>]()\\n  %1446 = Shape(%1444)\\n  %1447 = Gather[axis = 0](%1446, %1445)\\n  %1448 = Constant[value = <Scalar Tensor []>]()\\n  %1449 = Shape(%1444)\\n  %1450 = Gather[axis = 0](%1449, %1448)\\n  %1451 = Constant[value = <Scalar Tensor []>]()\\n  %1452 = Shape(%1444)\\n  %1453 = Gather[axis = 0](%1452, %1451)\\n  %1454 = Constant[value = <Scalar Tensor []>]()\\n  %1455 = Unsqueeze[axes = [0]](%1454)\\n  %1456 = Unsqueeze[axes = [0]](%1453)\\n  %1457 = Concat[axis = 0](%1455, %1456)\\n  %1458 = Reshape(%1444, %1457)\\n  %1459 = Gemm[alpha = 1, beta = 1](%1458, %transformer.h.5.mlp.c_fc.weight, %transformer.h.5.mlp.c_fc.bias)\\n  %1460 = Constant[value = <Scalar Tensor []>]()\\n  %1461 = Unsqueeze[axes = [0]](%1447)\\n  %1462 = Unsqueeze[axes = [0]](%1450)\\n  %1463 = Unsqueeze[axes = [0]](%1460)\\n  %1464 = Concat[axis = 0](%1461, %1462, %1463)\\n  %1465 = Reshape(%1459, %1464)\\n  %1466 = Constant[value = <Scalar Tensor []>]()\\n  %1467 = Mul(%1465, %1466)\\n  %1468 = Constant[value = <Scalar Tensor []>]()\\n  %1469 = Pow(%1465, %1468)\\n  %1470 = Constant[value = <Scalar Tensor []>]()\\n  %1471 = Mul(%1469, %1470)\\n  %1472 = Add(%1465, %1471)\\n  %1473 = Constant[value = <Scalar Tensor []>]()\\n  %1474 = Mul(%1472, %1473)\\n  %1475 = Tanh(%1474)\\n  %1476 = Constant[value = <Scalar Tensor []>]()\\n  %1477 = Add(%1475, %1476)\\n  %1478 = Mul(%1467, %1477)\\n  %1479 = Constant[value = <Scalar Tensor []>]()\\n  %1480 = Shape(%1478)\\n  %1481 = Gather[axis = 0](%1480, %1479)\\n  %1482 = Constant[value = <Scalar Tensor []>]()\\n  %1483 = Shape(%1478)\\n  %1484 = Gather[axis = 0](%1483, %1482)\\n  %1485 = Constant[value = <Scalar Tensor []>]()\\n  %1486 = Shape(%1478)\\n  %1487 = Gather[axis = 0](%1486, %1485)\\n  %1488 = Constant[value = <Scalar Tensor []>]()\\n  %1489 = Unsqueeze[axes = [0]](%1488)\\n  %1490 = Unsqueeze[axes = [0]](%1487)\\n  %1491 = Concat[axis = 0](%1489, %1490)\\n  %1492 = Reshape(%1478, %1491)\\n  %1493 = Gemm[alpha = 1, beta = 1](%1492, %transformer.h.5.mlp.c_proj.weight, %transformer.h.5.mlp.c_proj.bias)\\n  %1494 = Constant[value = <Scalar Tensor []>]()\\n  %1495 = Unsqueeze[axes = [0]](%1481)\\n  %1496 = Unsqueeze[axes = [0]](%1484)\\n  %1497 = Unsqueeze[axes = [0]](%1494)\\n  %1498 = Concat[axis = 0](%1495, %1496, %1497)\\n  %1499 = Reshape(%1493, %1498)\\n  %1500 = Add(%1432, %1499)\\n  %1501 = ReduceMean[axes = [-1], keepdims = 1](%1500)\\n  %1502 = Sub(%1500, %1501)\\n  %1503 = Constant[value = <Scalar Tensor []>]()\\n  %1504 = Pow(%1502, %1503)\\n  %1505 = ReduceMean[axes = [-1], keepdims = 1](%1504)\\n  %1506 = Sub(%1500, %1501)\\n  %1507 = Constant[value = <Scalar Tensor []>]()\\n  %1508 = Add(%1505, %1507)\\n  %1509 = Sqrt(%1508)\\n  %1510 = Div(%1506, %1509)\\n  %1511 = Mul(%transformer.h.6.ln_1.weight, %1510)\\n  %1512 = Add(%1511, %transformer.h.6.ln_1.bias)\\n  %1513 = Constant[value = <Scalar Tensor []>]()\\n  %1514 = Shape(%1512)\\n  %1515 = Gather[axis = 0](%1514, %1513)\\n  %1516 = Constant[value = <Scalar Tensor []>]()\\n  %1517 = Shape(%1512)\\n  %1518 = Gather[axis = 0](%1517, %1516)\\n  %1519 = Constant[value = <Scalar Tensor []>]()\\n  %1520 = Shape(%1512)\\n  %1521 = Gather[axis = 0](%1520, %1519)\\n  %1522 = Constant[value = <Scalar Tensor []>]()\\n  %1523 = Unsqueeze[axes = [0]](%1522)\\n  %1524 = Unsqueeze[axes = [0]](%1521)\\n  %1525 = Concat[axis = 0](%1523, %1524)\\n  %1526 = Reshape(%1512, %1525)\\n  %1527 = Gemm[alpha = 1, beta = 1](%1526, %transformer.h.6.attn.c_attn.weight, %transformer.h.6.attn.c_attn.bias)\\n  %1528 = Constant[value = <Scalar Tensor []>]()\\n  %1529 = Unsqueeze[axes = [0]](%1515)\\n  %1530 = Unsqueeze[axes = [0]](%1518)\\n  %1531 = Unsqueeze[axes = [0]](%1528)\\n  %1532 = Concat[axis = 0](%1529, %1530, %1531)\\n  %1533 = Reshape(%1527, %1532)\\n  %query.13, %key.13, %value.13 = Split[axis = 2, split = [768, 768, 768]](%1533)\\n  %1537 = Constant[value = <Scalar Tensor []>]()\\n  %1538 = Shape(%query.13)\\n  %1539 = Gather[axis = 0](%1538, %1537)\\n  %1540 = Constant[value = <Scalar Tensor []>]()\\n  %1541 = Shape(%query.13)\\n  %1542 = Gather[axis = 0](%1541, %1540)\\n  %1543 = Constant[value = <Scalar Tensor []>]()\\n  %1544 = Shape(%query.13)\\n  %1545 = Gather[axis = 0](%1544, %1543)\\n  %1546 = Constant[value = <Scalar Tensor []>]()\\n  %1547 = Div(%1545, %1546)\\n  %1548 = Constant[value = <Scalar Tensor []>]()\\n  %1549 = Unsqueeze[axes = [0]](%1539)\\n  %1550 = Unsqueeze[axes = [0]](%1542)\\n  %1551 = Unsqueeze[axes = [0]](%1548)\\n  %1552 = Unsqueeze[axes = [0]](%1547)\\n  %1553 = Concat[axis = 0](%1549, %1550, %1551, %1552)\\n  %1554 = Reshape(%query.13, %1553)\\n  %1555 = Transpose[perm = [0, 2, 1, 3]](%1554)\\n  %1556 = Constant[value = <Scalar Tensor []>]()\\n  %1557 = Shape(%key.13)\\n  %1558 = Gather[axis = 0](%1557, %1556)\\n  %1559 = Constant[value = <Scalar Tensor []>]()\\n  %1560 = Shape(%key.13)\\n  %1561 = Gather[axis = 0](%1560, %1559)\\n  %1562 = Constant[value = <Scalar Tensor []>]()\\n  %1563 = Shape(%key.13)\\n  %1564 = Gather[axis = 0](%1563, %1562)\\n  %1565 = Constant[value = <Scalar Tensor []>]()\\n  %1566 = Div(%1564, %1565)\\n  %1567 = Constant[value = <Scalar Tensor []>]()\\n  %1568 = Unsqueeze[axes = [0]](%1558)\\n  %1569 = Unsqueeze[axes = [0]](%1561)\\n  %1570 = Unsqueeze[axes = [0]](%1567)\\n  %1571 = Unsqueeze[axes = [0]](%1566)\\n  %1572 = Concat[axis = 0](%1568, %1569, %1570, %1571)\\n  %1573 = Reshape(%key.13, %1572)\\n  %1574 = Transpose[perm = [0, 2, 3, 1]](%1573)\\n  %1575 = Constant[value = <Scalar Tensor []>]()\\n  %1576 = Shape(%value.13)\\n  %1577 = Gather[axis = 0](%1576, %1575)\\n  %1578 = Constant[value = <Scalar Tensor []>]()\\n  %1579 = Shape(%value.13)\\n  %1580 = Gather[axis = 0](%1579, %1578)\\n  %1581 = Constant[value = <Scalar Tensor []>]()\\n  %1582 = Shape(%value.13)\\n  %1583 = Gather[axis = 0](%1582, %1581)\\n  %1584 = Constant[value = <Scalar Tensor []>]()\\n  %1585 = Div(%1583, %1584)\\n  %1586 = Constant[value = <Scalar Tensor []>]()\\n  %1587 = Unsqueeze[axes = [0]](%1577)\\n  %1588 = Unsqueeze[axes = [0]](%1580)\\n  %1589 = Unsqueeze[axes = [0]](%1586)\\n  %1590 = Unsqueeze[axes = [0]](%1585)\\n  %1591 = Concat[axis = 0](%1587, %1588, %1589, %1590)\\n  %1592 = Reshape(%value.13, %1591)\\n  %1593 = Transpose[perm = [0, 2, 1, 3]](%1592)\\n  %1594 = Transpose[perm = [0, 2, 1, 3]](%1573)\\n  %1595 = Unsqueeze[axes = [0]](%1594)\\n  %1596 = Unsqueeze[axes = [0]](%1593)\\n  %1597 = Concat[axis = 0](%1595, %1596)\\n  %1598 = MatMul(%1555, %1574)\\n  %1599 = Constant[value = <Scalar Tensor []>]()\\n  %1600 = Div(%1598, %1599)\\n  %1601 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.6.attn.bias)\\n  %1602 = Slice[axes = [3], ends = [2], starts = [0]](%1601)\\n  %1603 = Mul(%1600, %1602)\\n  %1604 = Constant[value = <Scalar Tensor []>]()\\n  %1605 = Sub(%1604, %1602)\\n  %1606 = Constant[value = <Scalar Tensor []>]()\\n  %1607 = Mul(%1605, %1606)\\n  %1608 = Sub(%1603, %1607)\\n  %1609 = Softmax[axis = 3](%1608)\\n  %1610 = MatMul(%1609, %1593)\\n  %1611 = Transpose[perm = [0, 2, 1, 3]](%1610)\\n  %1612 = Constant[value = <Scalar Tensor []>]()\\n  %1613 = Shape(%1611)\\n  %1614 = Gather[axis = 0](%1613, %1612)\\n  %1615 = Constant[value = <Scalar Tensor []>]()\\n  %1616 = Shape(%1611)\\n  %1617 = Gather[axis = 0](%1616, %1615)\\n  %1618 = Constant[value = <Scalar Tensor []>]()\\n  %1619 = Shape(%1611)\\n  %1620 = Gather[axis = 0](%1619, %1618)\\n  %1621 = Constant[value = <Scalar Tensor []>]()\\n  %1622 = Shape(%1611)\\n  %1623 = Gather[axis = 0](%1622, %1621)\\n  %1624 = Mul(%1620, %1623)\\n  %1625 = Unsqueeze[axes = [0]](%1614)\\n  %1626 = Unsqueeze[axes = [0]](%1617)\\n  %1627 = Unsqueeze[axes = [0]](%1624)\\n  %1628 = Concat[axis = 0](%1625, %1626, %1627)\\n  %1629 = Reshape(%1611, %1628)\\n  %1630 = Constant[value = <Scalar Tensor []>]()\\n  %1631 = Shape(%1629)\\n  %1632 = Gather[axis = 0](%1631, %1630)\\n  %1633 = Constant[value = <Scalar Tensor []>]()\\n  %1634 = Shape(%1629)\\n  %1635 = Gather[axis = 0](%1634, %1633)\\n  %1636 = Constant[value = <Scalar Tensor []>]()\\n  %1637 = Shape(%1629)\\n  %1638 = Gather[axis = 0](%1637, %1636)\\n  %1639 = Constant[value = <Scalar Tensor []>]()\\n  %1640 = Unsqueeze[axes = [0]](%1639)\\n  %1641 = Unsqueeze[axes = [0]](%1638)\\n  %1642 = Concat[axis = 0](%1640, %1641)\\n  %1643 = Reshape(%1629, %1642)\\n  %1644 = Gemm[alpha = 1, beta = 1](%1643, %transformer.h.6.attn.c_proj.weight, %transformer.h.6.attn.c_proj.bias)\\n  %1645 = Constant[value = <Scalar Tensor []>]()\\n  %1646 = Unsqueeze[axes = [0]](%1632)\\n  %1647 = Unsqueeze[axes = [0]](%1635)\\n  %1648 = Unsqueeze[axes = [0]](%1645)\\n  %1649 = Concat[axis = 0](%1646, %1647, %1648)\\n  %1650 = Reshape(%1644, %1649)\\n  %1651 = Add(%1500, %1650)\\n  %1652 = ReduceMean[axes = [-1], keepdims = 1](%1651)\\n  %1653 = Sub(%1651, %1652)\\n  %1654 = Constant[value = <Scalar Tensor []>]()\\n  %1655 = Pow(%1653, %1654)\\n  %1656 = ReduceMean[axes = [-1], keepdims = 1](%1655)\\n  %1657 = Sub(%1651, %1652)\\n  %1658 = Constant[value = <Scalar Tensor []>]()\\n  %1659 = Add(%1656, %1658)\\n  %1660 = Sqrt(%1659)\\n  %1661 = Div(%1657, %1660)\\n  %1662 = Mul(%transformer.h.6.ln_2.weight, %1661)\\n  %1663 = Add(%1662, %transformer.h.6.ln_2.bias)\\n  %1664 = Constant[value = <Scalar Tensor []>]()\\n  %1665 = Shape(%1663)\\n  %1666 = Gather[axis = 0](%1665, %1664)\\n  %1667 = Constant[value = <Scalar Tensor []>]()\\n  %1668 = Shape(%1663)\\n  %1669 = Gather[axis = 0](%1668, %1667)\\n  %1670 = Constant[value = <Scalar Tensor []>]()\\n  %1671 = Shape(%1663)\\n  %1672 = Gather[axis = 0](%1671, %1670)\\n  %1673 = Constant[value = <Scalar Tensor []>]()\\n  %1674 = Unsqueeze[axes = [0]](%1673)\\n  %1675 = Unsqueeze[axes = [0]](%1672)\\n  %1676 = Concat[axis = 0](%1674, %1675)\\n  %1677 = Reshape(%1663, %1676)\\n  %1678 = Gemm[alpha = 1, beta = 1](%1677, %transformer.h.6.mlp.c_fc.weight, %transformer.h.6.mlp.c_fc.bias)\\n  %1679 = Constant[value = <Scalar Tensor []>]()\\n  %1680 = Unsqueeze[axes = [0]](%1666)\\n  %1681 = Unsqueeze[axes = [0]](%1669)\\n  %1682 = Unsqueeze[axes = [0]](%1679)\\n  %1683 = Concat[axis = 0](%1680, %1681, %1682)\\n  %1684 = Reshape(%1678, %1683)\\n  %1685 = Constant[value = <Scalar Tensor []>]()\\n  %1686 = Mul(%1684, %1685)\\n  %1687 = Constant[value = <Scalar Tensor []>]()\\n  %1688 = Pow(%1684, %1687)\\n  %1689 = Constant[value = <Scalar Tensor []>]()\\n  %1690 = Mul(%1688, %1689)\\n  %1691 = Add(%1684, %1690)\\n  %1692 = Constant[value = <Scalar Tensor []>]()\\n  %1693 = Mul(%1691, %1692)\\n  %1694 = Tanh(%1693)\\n  %1695 = Constant[value = <Scalar Tensor []>]()\\n  %1696 = Add(%1694, %1695)\\n  %1697 = Mul(%1686, %1696)\\n  %1698 = Constant[value = <Scalar Tensor []>]()\\n  %1699 = Shape(%1697)\\n  %1700 = Gather[axis = 0](%1699, %1698)\\n  %1701 = Constant[value = <Scalar Tensor []>]()\\n  %1702 = Shape(%1697)\\n  %1703 = Gather[axis = 0](%1702, %1701)\\n  %1704 = Constant[value = <Scalar Tensor []>]()\\n  %1705 = Shape(%1697)\\n  %1706 = Gather[axis = 0](%1705, %1704)\\n  %1707 = Constant[value = <Scalar Tensor []>]()\\n  %1708 = Unsqueeze[axes = [0]](%1707)\\n  %1709 = Unsqueeze[axes = [0]](%1706)\\n  %1710 = Concat[axis = 0](%1708, %1709)\\n  %1711 = Reshape(%1697, %1710)\\n  %1712 = Gemm[alpha = 1, beta = 1](%1711, %transformer.h.6.mlp.c_proj.weight, %transformer.h.6.mlp.c_proj.bias)\\n  %1713 = Constant[value = <Scalar Tensor []>]()\\n  %1714 = Unsqueeze[axes = [0]](%1700)\\n  %1715 = Unsqueeze[axes = [0]](%1703)\\n  %1716 = Unsqueeze[axes = [0]](%1713)\\n  %1717 = Concat[axis = 0](%1714, %1715, %1716)\\n  %1718 = Reshape(%1712, %1717)\\n  %1719 = Add(%1651, %1718)\\n  %1720 = ReduceMean[axes = [-1], keepdims = 1](%1719)\\n  %1721 = Sub(%1719, %1720)\\n  %1722 = Constant[value = <Scalar Tensor []>]()\\n  %1723 = Pow(%1721, %1722)\\n  %1724 = ReduceMean[axes = [-1], keepdims = 1](%1723)\\n  %1725 = Sub(%1719, %1720)\\n  %1726 = Constant[value = <Scalar Tensor []>]()\\n  %1727 = Add(%1724, %1726)\\n  %1728 = Sqrt(%1727)\\n  %1729 = Div(%1725, %1728)\\n  %1730 = Mul(%transformer.h.7.ln_1.weight, %1729)\\n  %1731 = Add(%1730, %transformer.h.7.ln_1.bias)\\n  %1732 = Constant[value = <Scalar Tensor []>]()\\n  %1733 = Shape(%1731)\\n  %1734 = Gather[axis = 0](%1733, %1732)\\n  %1735 = Constant[value = <Scalar Tensor []>]()\\n  %1736 = Shape(%1731)\\n  %1737 = Gather[axis = 0](%1736, %1735)\\n  %1738 = Constant[value = <Scalar Tensor []>]()\\n  %1739 = Shape(%1731)\\n  %1740 = Gather[axis = 0](%1739, %1738)\\n  %1741 = Constant[value = <Scalar Tensor []>]()\\n  %1742 = Unsqueeze[axes = [0]](%1741)\\n  %1743 = Unsqueeze[axes = [0]](%1740)\\n  %1744 = Concat[axis = 0](%1742, %1743)\\n  %1745 = Reshape(%1731, %1744)\\n  %1746 = Gemm[alpha = 1, beta = 1](%1745, %transformer.h.7.attn.c_attn.weight, %transformer.h.7.attn.c_attn.bias)\\n  %1747 = Constant[value = <Scalar Tensor []>]()\\n  %1748 = Unsqueeze[axes = [0]](%1734)\\n  %1749 = Unsqueeze[axes = [0]](%1737)\\n  %1750 = Unsqueeze[axes = [0]](%1747)\\n  %1751 = Concat[axis = 0](%1748, %1749, %1750)\\n  %1752 = Reshape(%1746, %1751)\\n  %query.15, %key.15, %value.15 = Split[axis = 2, split = [768, 768, 768]](%1752)\\n  %1756 = Constant[value = <Scalar Tensor []>]()\\n  %1757 = Shape(%query.15)\\n  %1758 = Gather[axis = 0](%1757, %1756)\\n  %1759 = Constant[value = <Scalar Tensor []>]()\\n  %1760 = Shape(%query.15)\\n  %1761 = Gather[axis = 0](%1760, %1759)\\n  %1762 = Constant[value = <Scalar Tensor []>]()\\n  %1763 = Shape(%query.15)\\n  %1764 = Gather[axis = 0](%1763, %1762)\\n  %1765 = Constant[value = <Scalar Tensor []>]()\\n  %1766 = Div(%1764, %1765)\\n  %1767 = Constant[value = <Scalar Tensor []>]()\\n  %1768 = Unsqueeze[axes = [0]](%1758)\\n  %1769 = Unsqueeze[axes = [0]](%1761)\\n  %1770 = Unsqueeze[axes = [0]](%1767)\\n  %1771 = Unsqueeze[axes = [0]](%1766)\\n  %1772 = Concat[axis = 0](%1768, %1769, %1770, %1771)\\n  %1773 = Reshape(%query.15, %1772)\\n  %1774 = Transpose[perm = [0, 2, 1, 3]](%1773)\\n  %1775 = Constant[value = <Scalar Tensor []>]()\\n  %1776 = Shape(%key.15)\\n  %1777 = Gather[axis = 0](%1776, %1775)\\n  %1778 = Constant[value = <Scalar Tensor []>]()\\n  %1779 = Shape(%key.15)\\n  %1780 = Gather[axis = 0](%1779, %1778)\\n  %1781 = Constant[value = <Scalar Tensor []>]()\\n  %1782 = Shape(%key.15)\\n  %1783 = Gather[axis = 0](%1782, %1781)\\n  %1784 = Constant[value = <Scalar Tensor []>]()\\n  %1785 = Div(%1783, %1784)\\n  %1786 = Constant[value = <Scalar Tensor []>]()\\n  %1787 = Unsqueeze[axes = [0]](%1777)\\n  %1788 = Unsqueeze[axes = [0]](%1780)\\n  %1789 = Unsqueeze[axes = [0]](%1786)\\n  %1790 = Unsqueeze[axes = [0]](%1785)\\n  %1791 = Concat[axis = 0](%1787, %1788, %1789, %1790)\\n  %1792 = Reshape(%key.15, %1791)\\n  %1793 = Transpose[perm = [0, 2, 3, 1]](%1792)\\n  %1794 = Constant[value = <Scalar Tensor []>]()\\n  %1795 = Shape(%value.15)\\n  %1796 = Gather[axis = 0](%1795, %1794)\\n  %1797 = Constant[value = <Scalar Tensor []>]()\\n  %1798 = Shape(%value.15)\\n  %1799 = Gather[axis = 0](%1798, %1797)\\n  %1800 = Constant[value = <Scalar Tensor []>]()\\n  %1801 = Shape(%value.15)\\n  %1802 = Gather[axis = 0](%1801, %1800)\\n  %1803 = Constant[value = <Scalar Tensor []>]()\\n  %1804 = Div(%1802, %1803)\\n  %1805 = Constant[value = <Scalar Tensor []>]()\\n  %1806 = Unsqueeze[axes = [0]](%1796)\\n  %1807 = Unsqueeze[axes = [0]](%1799)\\n  %1808 = Unsqueeze[axes = [0]](%1805)\\n  %1809 = Unsqueeze[axes = [0]](%1804)\\n  %1810 = Concat[axis = 0](%1806, %1807, %1808, %1809)\\n  %1811 = Reshape(%value.15, %1810)\\n  %1812 = Transpose[perm = [0, 2, 1, 3]](%1811)\\n  %1813 = Transpose[perm = [0, 2, 1, 3]](%1792)\\n  %1814 = Unsqueeze[axes = [0]](%1813)\\n  %1815 = Unsqueeze[axes = [0]](%1812)\\n  %1816 = Concat[axis = 0](%1814, %1815)\\n  %1817 = MatMul(%1774, %1793)\\n  %1818 = Constant[value = <Scalar Tensor []>]()\\n  %1819 = Div(%1817, %1818)\\n  %1820 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.7.attn.bias)\\n  %1821 = Slice[axes = [3], ends = [2], starts = [0]](%1820)\\n  %1822 = Mul(%1819, %1821)\\n  %1823 = Constant[value = <Scalar Tensor []>]()\\n  %1824 = Sub(%1823, %1821)\\n  %1825 = Constant[value = <Scalar Tensor []>]()\\n  %1826 = Mul(%1824, %1825)\\n  %1827 = Sub(%1822, %1826)\\n  %1828 = Softmax[axis = 3](%1827)\\n  %1829 = MatMul(%1828, %1812)\\n  %1830 = Transpose[perm = [0, 2, 1, 3]](%1829)\\n  %1831 = Constant[value = <Scalar Tensor []>]()\\n  %1832 = Shape(%1830)\\n  %1833 = Gather[axis = 0](%1832, %1831)\\n  %1834 = Constant[value = <Scalar Tensor []>]()\\n  %1835 = Shape(%1830)\\n  %1836 = Gather[axis = 0](%1835, %1834)\\n  %1837 = Constant[value = <Scalar Tensor []>]()\\n  %1838 = Shape(%1830)\\n  %1839 = Gather[axis = 0](%1838, %1837)\\n  %1840 = Constant[value = <Scalar Tensor []>]()\\n  %1841 = Shape(%1830)\\n  %1842 = Gather[axis = 0](%1841, %1840)\\n  %1843 = Mul(%1839, %1842)\\n  %1844 = Unsqueeze[axes = [0]](%1833)\\n  %1845 = Unsqueeze[axes = [0]](%1836)\\n  %1846 = Unsqueeze[axes = [0]](%1843)\\n  %1847 = Concat[axis = 0](%1844, %1845, %1846)\\n  %1848 = Reshape(%1830, %1847)\\n  %1849 = Constant[value = <Scalar Tensor []>]()\\n  %1850 = Shape(%1848)\\n  %1851 = Gather[axis = 0](%1850, %1849)\\n  %1852 = Constant[value = <Scalar Tensor []>]()\\n  %1853 = Shape(%1848)\\n  %1854 = Gather[axis = 0](%1853, %1852)\\n  %1855 = Constant[value = <Scalar Tensor []>]()\\n  %1856 = Shape(%1848)\\n  %1857 = Gather[axis = 0](%1856, %1855)\\n  %1858 = Constant[value = <Scalar Tensor []>]()\\n  %1859 = Unsqueeze[axes = [0]](%1858)\\n  %1860 = Unsqueeze[axes = [0]](%1857)\\n  %1861 = Concat[axis = 0](%1859, %1860)\\n  %1862 = Reshape(%1848, %1861)\\n  %1863 = Gemm[alpha = 1, beta = 1](%1862, %transformer.h.7.attn.c_proj.weight, %transformer.h.7.attn.c_proj.bias)\\n  %1864 = Constant[value = <Scalar Tensor []>]()\\n  %1865 = Unsqueeze[axes = [0]](%1851)\\n  %1866 = Unsqueeze[axes = [0]](%1854)\\n  %1867 = Unsqueeze[axes = [0]](%1864)\\n  %1868 = Concat[axis = 0](%1865, %1866, %1867)\\n  %1869 = Reshape(%1863, %1868)\\n  %1870 = Add(%1719, %1869)\\n  %1871 = ReduceMean[axes = [-1], keepdims = 1](%1870)\\n  %1872 = Sub(%1870, %1871)\\n  %1873 = Constant[value = <Scalar Tensor []>]()\\n  %1874 = Pow(%1872, %1873)\\n  %1875 = ReduceMean[axes = [-1], keepdims = 1](%1874)\\n  %1876 = Sub(%1870, %1871)\\n  %1877 = Constant[value = <Scalar Tensor []>]()\\n  %1878 = Add(%1875, %1877)\\n  %1879 = Sqrt(%1878)\\n  %1880 = Div(%1876, %1879)\\n  %1881 = Mul(%transformer.h.7.ln_2.weight, %1880)\\n  %1882 = Add(%1881, %transformer.h.7.ln_2.bias)\\n  %1883 = Constant[value = <Scalar Tensor []>]()\\n  %1884 = Shape(%1882)\\n  %1885 = Gather[axis = 0](%1884, %1883)\\n  %1886 = Constant[value = <Scalar Tensor []>]()\\n  %1887 = Shape(%1882)\\n  %1888 = Gather[axis = 0](%1887, %1886)\\n  %1889 = Constant[value = <Scalar Tensor []>]()\\n  %1890 = Shape(%1882)\\n  %1891 = Gather[axis = 0](%1890, %1889)\\n  %1892 = Constant[value = <Scalar Tensor []>]()\\n  %1893 = Unsqueeze[axes = [0]](%1892)\\n  %1894 = Unsqueeze[axes = [0]](%1891)\\n  %1895 = Concat[axis = 0](%1893, %1894)\\n  %1896 = Reshape(%1882, %1895)\\n  %1897 = Gemm[alpha = 1, beta = 1](%1896, %transformer.h.7.mlp.c_fc.weight, %transformer.h.7.mlp.c_fc.bias)\\n  %1898 = Constant[value = <Scalar Tensor []>]()\\n  %1899 = Unsqueeze[axes = [0]](%1885)\\n  %1900 = Unsqueeze[axes = [0]](%1888)\\n  %1901 = Unsqueeze[axes = [0]](%1898)\\n  %1902 = Concat[axis = 0](%1899, %1900, %1901)\\n  %1903 = Reshape(%1897, %1902)\\n  %1904 = Constant[value = <Scalar Tensor []>]()\\n  %1905 = Mul(%1903, %1904)\\n  %1906 = Constant[value = <Scalar Tensor []>]()\\n  %1907 = Pow(%1903, %1906)\\n  %1908 = Constant[value = <Scalar Tensor []>]()\\n  %1909 = Mul(%1907, %1908)\\n  %1910 = Add(%1903, %1909)\\n  %1911 = Constant[value = <Scalar Tensor []>]()\\n  %1912 = Mul(%1910, %1911)\\n  %1913 = Tanh(%1912)\\n  %1914 = Constant[value = <Scalar Tensor []>]()\\n  %1915 = Add(%1913, %1914)\\n  %1916 = Mul(%1905, %1915)\\n  %1917 = Constant[value = <Scalar Tensor []>]()\\n  %1918 = Shape(%1916)\\n  %1919 = Gather[axis = 0](%1918, %1917)\\n  %1920 = Constant[value = <Scalar Tensor []>]()\\n  %1921 = Shape(%1916)\\n  %1922 = Gather[axis = 0](%1921, %1920)\\n  %1923 = Constant[value = <Scalar Tensor []>]()\\n  %1924 = Shape(%1916)\\n  %1925 = Gather[axis = 0](%1924, %1923)\\n  %1926 = Constant[value = <Scalar Tensor []>]()\\n  %1927 = Unsqueeze[axes = [0]](%1926)\\n  %1928 = Unsqueeze[axes = [0]](%1925)\\n  %1929 = Concat[axis = 0](%1927, %1928)\\n  %1930 = Reshape(%1916, %1929)\\n  %1931 = Gemm[alpha = 1, beta = 1](%1930, %transformer.h.7.mlp.c_proj.weight, %transformer.h.7.mlp.c_proj.bias)\\n  %1932 = Constant[value = <Scalar Tensor []>]()\\n  %1933 = Unsqueeze[axes = [0]](%1919)\\n  %1934 = Unsqueeze[axes = [0]](%1922)\\n  %1935 = Unsqueeze[axes = [0]](%1932)\\n  %1936 = Concat[axis = 0](%1933, %1934, %1935)\\n  %1937 = Reshape(%1931, %1936)\\n  %1938 = Add(%1870, %1937)\\n  %1939 = ReduceMean[axes = [-1], keepdims = 1](%1938)\\n  %1940 = Sub(%1938, %1939)\\n  %1941 = Constant[value = <Scalar Tensor []>]()\\n  %1942 = Pow(%1940, %1941)\\n  %1943 = ReduceMean[axes = [-1], keepdims = 1](%1942)\\n  %1944 = Sub(%1938, %1939)\\n  %1945 = Constant[value = <Scalar Tensor []>]()\\n  %1946 = Add(%1943, %1945)\\n  %1947 = Sqrt(%1946)\\n  %1948 = Div(%1944, %1947)\\n  %1949 = Mul(%transformer.h.8.ln_1.weight, %1948)\\n  %1950 = Add(%1949, %transformer.h.8.ln_1.bias)\\n  %1951 = Constant[value = <Scalar Tensor []>]()\\n  %1952 = Shape(%1950)\\n  %1953 = Gather[axis = 0](%1952, %1951)\\n  %1954 = Constant[value = <Scalar Tensor []>]()\\n  %1955 = Shape(%1950)\\n  %1956 = Gather[axis = 0](%1955, %1954)\\n  %1957 = Constant[value = <Scalar Tensor []>]()\\n  %1958 = Shape(%1950)\\n  %1959 = Gather[axis = 0](%1958, %1957)\\n  %1960 = Constant[value = <Scalar Tensor []>]()\\n  %1961 = Unsqueeze[axes = [0]](%1960)\\n  %1962 = Unsqueeze[axes = [0]](%1959)\\n  %1963 = Concat[axis = 0](%1961, %1962)\\n  %1964 = Reshape(%1950, %1963)\\n  %1965 = Gemm[alpha = 1, beta = 1](%1964, %transformer.h.8.attn.c_attn.weight, %transformer.h.8.attn.c_attn.bias)\\n  %1966 = Constant[value = <Scalar Tensor []>]()\\n  %1967 = Unsqueeze[axes = [0]](%1953)\\n  %1968 = Unsqueeze[axes = [0]](%1956)\\n  %1969 = Unsqueeze[axes = [0]](%1966)\\n  %1970 = Concat[axis = 0](%1967, %1968, %1969)\\n  %1971 = Reshape(%1965, %1970)\\n  %query.17, %key.17, %value.17 = Split[axis = 2, split = [768, 768, 768]](%1971)\\n  %1975 = Constant[value = <Scalar Tensor []>]()\\n  %1976 = Shape(%query.17)\\n  %1977 = Gather[axis = 0](%1976, %1975)\\n  %1978 = Constant[value = <Scalar Tensor []>]()\\n  %1979 = Shape(%query.17)\\n  %1980 = Gather[axis = 0](%1979, %1978)\\n  %1981 = Constant[value = <Scalar Tensor []>]()\\n  %1982 = Shape(%query.17)\\n  %1983 = Gather[axis = 0](%1982, %1981)\\n  %1984 = Constant[value = <Scalar Tensor []>]()\\n  %1985 = Div(%1983, %1984)\\n  %1986 = Constant[value = <Scalar Tensor []>]()\\n  %1987 = Unsqueeze[axes = [0]](%1977)\\n  %1988 = Unsqueeze[axes = [0]](%1980)\\n  %1989 = Unsqueeze[axes = [0]](%1986)\\n  %1990 = Unsqueeze[axes = [0]](%1985)\\n  %1991 = Concat[axis = 0](%1987, %1988, %1989, %1990)\\n  %1992 = Reshape(%query.17, %1991)\\n  %1993 = Transpose[perm = [0, 2, 1, 3]](%1992)\\n  %1994 = Constant[value = <Scalar Tensor []>]()\\n  %1995 = Shape(%key.17)\\n  %1996 = Gather[axis = 0](%1995, %1994)\\n  %1997 = Constant[value = <Scalar Tensor []>]()\\n  %1998 = Shape(%key.17)\\n  %1999 = Gather[axis = 0](%1998, %1997)\\n  %2000 = Constant[value = <Scalar Tensor []>]()\\n  %2001 = Shape(%key.17)\\n  %2002 = Gather[axis = 0](%2001, %2000)\\n  %2003 = Constant[value = <Scalar Tensor []>]()\\n  %2004 = Div(%2002, %2003)\\n  %2005 = Constant[value = <Scalar Tensor []>]()\\n  %2006 = Unsqueeze[axes = [0]](%1996)\\n  %2007 = Unsqueeze[axes = [0]](%1999)\\n  %2008 = Unsqueeze[axes = [0]](%2005)\\n  %2009 = Unsqueeze[axes = [0]](%2004)\\n  %2010 = Concat[axis = 0](%2006, %2007, %2008, %2009)\\n  %2011 = Reshape(%key.17, %2010)\\n  %2012 = Transpose[perm = [0, 2, 3, 1]](%2011)\\n  %2013 = Constant[value = <Scalar Tensor []>]()\\n  %2014 = Shape(%value.17)\\n  %2015 = Gather[axis = 0](%2014, %2013)\\n  %2016 = Constant[value = <Scalar Tensor []>]()\\n  %2017 = Shape(%value.17)\\n  %2018 = Gather[axis = 0](%2017, %2016)\\n  %2019 = Constant[value = <Scalar Tensor []>]()\\n  %2020 = Shape(%value.17)\\n  %2021 = Gather[axis = 0](%2020, %2019)\\n  %2022 = Constant[value = <Scalar Tensor []>]()\\n  %2023 = Div(%2021, %2022)\\n  %2024 = Constant[value = <Scalar Tensor []>]()\\n  %2025 = Unsqueeze[axes = [0]](%2015)\\n  %2026 = Unsqueeze[axes = [0]](%2018)\\n  %2027 = Unsqueeze[axes = [0]](%2024)\\n  %2028 = Unsqueeze[axes = [0]](%2023)\\n  %2029 = Concat[axis = 0](%2025, %2026, %2027, %2028)\\n  %2030 = Reshape(%value.17, %2029)\\n  %2031 = Transpose[perm = [0, 2, 1, 3]](%2030)\\n  %2032 = Transpose[perm = [0, 2, 1, 3]](%2011)\\n  %2033 = Unsqueeze[axes = [0]](%2032)\\n  %2034 = Unsqueeze[axes = [0]](%2031)\\n  %2035 = Concat[axis = 0](%2033, %2034)\\n  %2036 = MatMul(%1993, %2012)\\n  %2037 = Constant[value = <Scalar Tensor []>]()\\n  %2038 = Div(%2036, %2037)\\n  %2039 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.8.attn.bias)\\n  %2040 = Slice[axes = [3], ends = [2], starts = [0]](%2039)\\n  %2041 = Mul(%2038, %2040)\\n  %2042 = Constant[value = <Scalar Tensor []>]()\\n  %2043 = Sub(%2042, %2040)\\n  %2044 = Constant[value = <Scalar Tensor []>]()\\n  %2045 = Mul(%2043, %2044)\\n  %2046 = Sub(%2041, %2045)\\n  %2047 = Softmax[axis = 3](%2046)\\n  %2048 = MatMul(%2047, %2031)\\n  %2049 = Transpose[perm = [0, 2, 1, 3]](%2048)\\n  %2050 = Constant[value = <Scalar Tensor []>]()\\n  %2051 = Shape(%2049)\\n  %2052 = Gather[axis = 0](%2051, %2050)\\n  %2053 = Constant[value = <Scalar Tensor []>]()\\n  %2054 = Shape(%2049)\\n  %2055 = Gather[axis = 0](%2054, %2053)\\n  %2056 = Constant[value = <Scalar Tensor []>]()\\n  %2057 = Shape(%2049)\\n  %2058 = Gather[axis = 0](%2057, %2056)\\n  %2059 = Constant[value = <Scalar Tensor []>]()\\n  %2060 = Shape(%2049)\\n  %2061 = Gather[axis = 0](%2060, %2059)\\n  %2062 = Mul(%2058, %2061)\\n  %2063 = Unsqueeze[axes = [0]](%2052)\\n  %2064 = Unsqueeze[axes = [0]](%2055)\\n  %2065 = Unsqueeze[axes = [0]](%2062)\\n  %2066 = Concat[axis = 0](%2063, %2064, %2065)\\n  %2067 = Reshape(%2049, %2066)\\n  %2068 = Constant[value = <Scalar Tensor []>]()\\n  %2069 = Shape(%2067)\\n  %2070 = Gather[axis = 0](%2069, %2068)\\n  %2071 = Constant[value = <Scalar Tensor []>]()\\n  %2072 = Shape(%2067)\\n  %2073 = Gather[axis = 0](%2072, %2071)\\n  %2074 = Constant[value = <Scalar Tensor []>]()\\n  %2075 = Shape(%2067)\\n  %2076 = Gather[axis = 0](%2075, %2074)\\n  %2077 = Constant[value = <Scalar Tensor []>]()\\n  %2078 = Unsqueeze[axes = [0]](%2077)\\n  %2079 = Unsqueeze[axes = [0]](%2076)\\n  %2080 = Concat[axis = 0](%2078, %2079)\\n  %2081 = Reshape(%2067, %2080)\\n  %2082 = Gemm[alpha = 1, beta = 1](%2081, %transformer.h.8.attn.c_proj.weight, %transformer.h.8.attn.c_proj.bias)\\n  %2083 = Constant[value = <Scalar Tensor []>]()\\n  %2084 = Unsqueeze[axes = [0]](%2070)\\n  %2085 = Unsqueeze[axes = [0]](%2073)\\n  %2086 = Unsqueeze[axes = [0]](%2083)\\n  %2087 = Concat[axis = 0](%2084, %2085, %2086)\\n  %2088 = Reshape(%2082, %2087)\\n  %2089 = Add(%1938, %2088)\\n  %2090 = ReduceMean[axes = [-1], keepdims = 1](%2089)\\n  %2091 = Sub(%2089, %2090)\\n  %2092 = Constant[value = <Scalar Tensor []>]()\\n  %2093 = Pow(%2091, %2092)\\n  %2094 = ReduceMean[axes = [-1], keepdims = 1](%2093)\\n  %2095 = Sub(%2089, %2090)\\n  %2096 = Constant[value = <Scalar Tensor []>]()\\n  %2097 = Add(%2094, %2096)\\n  %2098 = Sqrt(%2097)\\n  %2099 = Div(%2095, %2098)\\n  %2100 = Mul(%transformer.h.8.ln_2.weight, %2099)\\n  %2101 = Add(%2100, %transformer.h.8.ln_2.bias)\\n  %2102 = Constant[value = <Scalar Tensor []>]()\\n  %2103 = Shape(%2101)\\n  %2104 = Gather[axis = 0](%2103, %2102)\\n  %2105 = Constant[value = <Scalar Tensor []>]()\\n  %2106 = Shape(%2101)\\n  %2107 = Gather[axis = 0](%2106, %2105)\\n  %2108 = Constant[value = <Scalar Tensor []>]()\\n  %2109 = Shape(%2101)\\n  %2110 = Gather[axis = 0](%2109, %2108)\\n  %2111 = Constant[value = <Scalar Tensor []>]()\\n  %2112 = Unsqueeze[axes = [0]](%2111)\\n  %2113 = Unsqueeze[axes = [0]](%2110)\\n  %2114 = Concat[axis = 0](%2112, %2113)\\n  %2115 = Reshape(%2101, %2114)\\n  %2116 = Gemm[alpha = 1, beta = 1](%2115, %transformer.h.8.mlp.c_fc.weight, %transformer.h.8.mlp.c_fc.bias)\\n  %2117 = Constant[value = <Scalar Tensor []>]()\\n  %2118 = Unsqueeze[axes = [0]](%2104)\\n  %2119 = Unsqueeze[axes = [0]](%2107)\\n  %2120 = Unsqueeze[axes = [0]](%2117)\\n  %2121 = Concat[axis = 0](%2118, %2119, %2120)\\n  %2122 = Reshape(%2116, %2121)\\n  %2123 = Constant[value = <Scalar Tensor []>]()\\n  %2124 = Mul(%2122, %2123)\\n  %2125 = Constant[value = <Scalar Tensor []>]()\\n  %2126 = Pow(%2122, %2125)\\n  %2127 = Constant[value = <Scalar Tensor []>]()\\n  %2128 = Mul(%2126, %2127)\\n  %2129 = Add(%2122, %2128)\\n  %2130 = Constant[value = <Scalar Tensor []>]()\\n  %2131 = Mul(%2129, %2130)\\n  %2132 = Tanh(%2131)\\n  %2133 = Constant[value = <Scalar Tensor []>]()\\n  %2134 = Add(%2132, %2133)\\n  %2135 = Mul(%2124, %2134)\\n  %2136 = Constant[value = <Scalar Tensor []>]()\\n  %2137 = Shape(%2135)\\n  %2138 = Gather[axis = 0](%2137, %2136)\\n  %2139 = Constant[value = <Scalar Tensor []>]()\\n  %2140 = Shape(%2135)\\n  %2141 = Gather[axis = 0](%2140, %2139)\\n  %2142 = Constant[value = <Scalar Tensor []>]()\\n  %2143 = Shape(%2135)\\n  %2144 = Gather[axis = 0](%2143, %2142)\\n  %2145 = Constant[value = <Scalar Tensor []>]()\\n  %2146 = Unsqueeze[axes = [0]](%2145)\\n  %2147 = Unsqueeze[axes = [0]](%2144)\\n  %2148 = Concat[axis = 0](%2146, %2147)\\n  %2149 = Reshape(%2135, %2148)\\n  %2150 = Gemm[alpha = 1, beta = 1](%2149, %transformer.h.8.mlp.c_proj.weight, %transformer.h.8.mlp.c_proj.bias)\\n  %2151 = Constant[value = <Scalar Tensor []>]()\\n  %2152 = Unsqueeze[axes = [0]](%2138)\\n  %2153 = Unsqueeze[axes = [0]](%2141)\\n  %2154 = Unsqueeze[axes = [0]](%2151)\\n  %2155 = Concat[axis = 0](%2152, %2153, %2154)\\n  %2156 = Reshape(%2150, %2155)\\n  %2157 = Add(%2089, %2156)\\n  %2158 = ReduceMean[axes = [-1], keepdims = 1](%2157)\\n  %2159 = Sub(%2157, %2158)\\n  %2160 = Constant[value = <Scalar Tensor []>]()\\n  %2161 = Pow(%2159, %2160)\\n  %2162 = ReduceMean[axes = [-1], keepdims = 1](%2161)\\n  %2163 = Sub(%2157, %2158)\\n  %2164 = Constant[value = <Scalar Tensor []>]()\\n  %2165 = Add(%2162, %2164)\\n  %2166 = Sqrt(%2165)\\n  %2167 = Div(%2163, %2166)\\n  %2168 = Mul(%transformer.h.9.ln_1.weight, %2167)\\n  %2169 = Add(%2168, %transformer.h.9.ln_1.bias)\\n  %2170 = Constant[value = <Scalar Tensor []>]()\\n  %2171 = Shape(%2169)\\n  %2172 = Gather[axis = 0](%2171, %2170)\\n  %2173 = Constant[value = <Scalar Tensor []>]()\\n  %2174 = Shape(%2169)\\n  %2175 = Gather[axis = 0](%2174, %2173)\\n  %2176 = Constant[value = <Scalar Tensor []>]()\\n  %2177 = Shape(%2169)\\n  %2178 = Gather[axis = 0](%2177, %2176)\\n  %2179 = Constant[value = <Scalar Tensor []>]()\\n  %2180 = Unsqueeze[axes = [0]](%2179)\\n  %2181 = Unsqueeze[axes = [0]](%2178)\\n  %2182 = Concat[axis = 0](%2180, %2181)\\n  %2183 = Reshape(%2169, %2182)\\n  %2184 = Gemm[alpha = 1, beta = 1](%2183, %transformer.h.9.attn.c_attn.weight, %transformer.h.9.attn.c_attn.bias)\\n  %2185 = Constant[value = <Scalar Tensor []>]()\\n  %2186 = Unsqueeze[axes = [0]](%2172)\\n  %2187 = Unsqueeze[axes = [0]](%2175)\\n  %2188 = Unsqueeze[axes = [0]](%2185)\\n  %2189 = Concat[axis = 0](%2186, %2187, %2188)\\n  %2190 = Reshape(%2184, %2189)\\n  %query.19, %key.19, %value.19 = Split[axis = 2, split = [768, 768, 768]](%2190)\\n  %2194 = Constant[value = <Scalar Tensor []>]()\\n  %2195 = Shape(%query.19)\\n  %2196 = Gather[axis = 0](%2195, %2194)\\n  %2197 = Constant[value = <Scalar Tensor []>]()\\n  %2198 = Shape(%query.19)\\n  %2199 = Gather[axis = 0](%2198, %2197)\\n  %2200 = Constant[value = <Scalar Tensor []>]()\\n  %2201 = Shape(%query.19)\\n  %2202 = Gather[axis = 0](%2201, %2200)\\n  %2203 = Constant[value = <Scalar Tensor []>]()\\n  %2204 = Div(%2202, %2203)\\n  %2205 = Constant[value = <Scalar Tensor []>]()\\n  %2206 = Unsqueeze[axes = [0]](%2196)\\n  %2207 = Unsqueeze[axes = [0]](%2199)\\n  %2208 = Unsqueeze[axes = [0]](%2205)\\n  %2209 = Unsqueeze[axes = [0]](%2204)\\n  %2210 = Concat[axis = 0](%2206, %2207, %2208, %2209)\\n  %2211 = Reshape(%query.19, %2210)\\n  %2212 = Transpose[perm = [0, 2, 1, 3]](%2211)\\n  %2213 = Constant[value = <Scalar Tensor []>]()\\n  %2214 = Shape(%key.19)\\n  %2215 = Gather[axis = 0](%2214, %2213)\\n  %2216 = Constant[value = <Scalar Tensor []>]()\\n  %2217 = Shape(%key.19)\\n  %2218 = Gather[axis = 0](%2217, %2216)\\n  %2219 = Constant[value = <Scalar Tensor []>]()\\n  %2220 = Shape(%key.19)\\n  %2221 = Gather[axis = 0](%2220, %2219)\\n  %2222 = Constant[value = <Scalar Tensor []>]()\\n  %2223 = Div(%2221, %2222)\\n  %2224 = Constant[value = <Scalar Tensor []>]()\\n  %2225 = Unsqueeze[axes = [0]](%2215)\\n  %2226 = Unsqueeze[axes = [0]](%2218)\\n  %2227 = Unsqueeze[axes = [0]](%2224)\\n  %2228 = Unsqueeze[axes = [0]](%2223)\\n  %2229 = Concat[axis = 0](%2225, %2226, %2227, %2228)\\n  %2230 = Reshape(%key.19, %2229)\\n  %2231 = Transpose[perm = [0, 2, 3, 1]](%2230)\\n  %2232 = Constant[value = <Scalar Tensor []>]()\\n  %2233 = Shape(%value.19)\\n  %2234 = Gather[axis = 0](%2233, %2232)\\n  %2235 = Constant[value = <Scalar Tensor []>]()\\n  %2236 = Shape(%value.19)\\n  %2237 = Gather[axis = 0](%2236, %2235)\\n  %2238 = Constant[value = <Scalar Tensor []>]()\\n  %2239 = Shape(%value.19)\\n  %2240 = Gather[axis = 0](%2239, %2238)\\n  %2241 = Constant[value = <Scalar Tensor []>]()\\n  %2242 = Div(%2240, %2241)\\n  %2243 = Constant[value = <Scalar Tensor []>]()\\n  %2244 = Unsqueeze[axes = [0]](%2234)\\n  %2245 = Unsqueeze[axes = [0]](%2237)\\n  %2246 = Unsqueeze[axes = [0]](%2243)\\n  %2247 = Unsqueeze[axes = [0]](%2242)\\n  %2248 = Concat[axis = 0](%2244, %2245, %2246, %2247)\\n  %2249 = Reshape(%value.19, %2248)\\n  %2250 = Transpose[perm = [0, 2, 1, 3]](%2249)\\n  %2251 = Transpose[perm = [0, 2, 1, 3]](%2230)\\n  %2252 = Unsqueeze[axes = [0]](%2251)\\n  %2253 = Unsqueeze[axes = [0]](%2250)\\n  %2254 = Concat[axis = 0](%2252, %2253)\\n  %2255 = MatMul(%2212, %2231)\\n  %2256 = Constant[value = <Scalar Tensor []>]()\\n  %2257 = Div(%2255, %2256)\\n  %2258 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.9.attn.bias)\\n  %2259 = Slice[axes = [3], ends = [2], starts = [0]](%2258)\\n  %2260 = Mul(%2257, %2259)\\n  %2261 = Constant[value = <Scalar Tensor []>]()\\n  %2262 = Sub(%2261, %2259)\\n  %2263 = Constant[value = <Scalar Tensor []>]()\\n  %2264 = Mul(%2262, %2263)\\n  %2265 = Sub(%2260, %2264)\\n  %2266 = Softmax[axis = 3](%2265)\\n  %2267 = MatMul(%2266, %2250)\\n  %2268 = Transpose[perm = [0, 2, 1, 3]](%2267)\\n  %2269 = Constant[value = <Scalar Tensor []>]()\\n  %2270 = Shape(%2268)\\n  %2271 = Gather[axis = 0](%2270, %2269)\\n  %2272 = Constant[value = <Scalar Tensor []>]()\\n  %2273 = Shape(%2268)\\n  %2274 = Gather[axis = 0](%2273, %2272)\\n  %2275 = Constant[value = <Scalar Tensor []>]()\\n  %2276 = Shape(%2268)\\n  %2277 = Gather[axis = 0](%2276, %2275)\\n  %2278 = Constant[value = <Scalar Tensor []>]()\\n  %2279 = Shape(%2268)\\n  %2280 = Gather[axis = 0](%2279, %2278)\\n  %2281 = Mul(%2277, %2280)\\n  %2282 = Unsqueeze[axes = [0]](%2271)\\n  %2283 = Unsqueeze[axes = [0]](%2274)\\n  %2284 = Unsqueeze[axes = [0]](%2281)\\n  %2285 = Concat[axis = 0](%2282, %2283, %2284)\\n  %2286 = Reshape(%2268, %2285)\\n  %2287 = Constant[value = <Scalar Tensor []>]()\\n  %2288 = Shape(%2286)\\n  %2289 = Gather[axis = 0](%2288, %2287)\\n  %2290 = Constant[value = <Scalar Tensor []>]()\\n  %2291 = Shape(%2286)\\n  %2292 = Gather[axis = 0](%2291, %2290)\\n  %2293 = Constant[value = <Scalar Tensor []>]()\\n  %2294 = Shape(%2286)\\n  %2295 = Gather[axis = 0](%2294, %2293)\\n  %2296 = Constant[value = <Scalar Tensor []>]()\\n  %2297 = Unsqueeze[axes = [0]](%2296)\\n  %2298 = Unsqueeze[axes = [0]](%2295)\\n  %2299 = Concat[axis = 0](%2297, %2298)\\n  %2300 = Reshape(%2286, %2299)\\n  %2301 = Gemm[alpha = 1, beta = 1](%2300, %transformer.h.9.attn.c_proj.weight, %transformer.h.9.attn.c_proj.bias)\\n  %2302 = Constant[value = <Scalar Tensor []>]()\\n  %2303 = Unsqueeze[axes = [0]](%2289)\\n  %2304 = Unsqueeze[axes = [0]](%2292)\\n  %2305 = Unsqueeze[axes = [0]](%2302)\\n  %2306 = Concat[axis = 0](%2303, %2304, %2305)\\n  %2307 = Reshape(%2301, %2306)\\n  %2308 = Add(%2157, %2307)\\n  %2309 = ReduceMean[axes = [-1], keepdims = 1](%2308)\\n  %2310 = Sub(%2308, %2309)\\n  %2311 = Constant[value = <Scalar Tensor []>]()\\n  %2312 = Pow(%2310, %2311)\\n  %2313 = ReduceMean[axes = [-1], keepdims = 1](%2312)\\n  %2314 = Sub(%2308, %2309)\\n  %2315 = Constant[value = <Scalar Tensor []>]()\\n  %2316 = Add(%2313, %2315)\\n  %2317 = Sqrt(%2316)\\n  %2318 = Div(%2314, %2317)\\n  %2319 = Mul(%transformer.h.9.ln_2.weight, %2318)\\n  %2320 = Add(%2319, %transformer.h.9.ln_2.bias)\\n  %2321 = Constant[value = <Scalar Tensor []>]()\\n  %2322 = Shape(%2320)\\n  %2323 = Gather[axis = 0](%2322, %2321)\\n  %2324 = Constant[value = <Scalar Tensor []>]()\\n  %2325 = Shape(%2320)\\n  %2326 = Gather[axis = 0](%2325, %2324)\\n  %2327 = Constant[value = <Scalar Tensor []>]()\\n  %2328 = Shape(%2320)\\n  %2329 = Gather[axis = 0](%2328, %2327)\\n  %2330 = Constant[value = <Scalar Tensor []>]()\\n  %2331 = Unsqueeze[axes = [0]](%2330)\\n  %2332 = Unsqueeze[axes = [0]](%2329)\\n  %2333 = Concat[axis = 0](%2331, %2332)\\n  %2334 = Reshape(%2320, %2333)\\n  %2335 = Gemm[alpha = 1, beta = 1](%2334, %transformer.h.9.mlp.c_fc.weight, %transformer.h.9.mlp.c_fc.bias)\\n  %2336 = Constant[value = <Scalar Tensor []>]()\\n  %2337 = Unsqueeze[axes = [0]](%2323)\\n  %2338 = Unsqueeze[axes = [0]](%2326)\\n  %2339 = Unsqueeze[axes = [0]](%2336)\\n  %2340 = Concat[axis = 0](%2337, %2338, %2339)\\n  %2341 = Reshape(%2335, %2340)\\n  %2342 = Constant[value = <Scalar Tensor []>]()\\n  %2343 = Mul(%2341, %2342)\\n  %2344 = Constant[value = <Scalar Tensor []>]()\\n  %2345 = Pow(%2341, %2344)\\n  %2346 = Constant[value = <Scalar Tensor []>]()\\n  %2347 = Mul(%2345, %2346)\\n  %2348 = Add(%2341, %2347)\\n  %2349 = Constant[value = <Scalar Tensor []>]()\\n  %2350 = Mul(%2348, %2349)\\n  %2351 = Tanh(%2350)\\n  %2352 = Constant[value = <Scalar Tensor []>]()\\n  %2353 = Add(%2351, %2352)\\n  %2354 = Mul(%2343, %2353)\\n  %2355 = Constant[value = <Scalar Tensor []>]()\\n  %2356 = Shape(%2354)\\n  %2357 = Gather[axis = 0](%2356, %2355)\\n  %2358 = Constant[value = <Scalar Tensor []>]()\\n  %2359 = Shape(%2354)\\n  %2360 = Gather[axis = 0](%2359, %2358)\\n  %2361 = Constant[value = <Scalar Tensor []>]()\\n  %2362 = Shape(%2354)\\n  %2363 = Gather[axis = 0](%2362, %2361)\\n  %2364 = Constant[value = <Scalar Tensor []>]()\\n  %2365 = Unsqueeze[axes = [0]](%2364)\\n  %2366 = Unsqueeze[axes = [0]](%2363)\\n  %2367 = Concat[axis = 0](%2365, %2366)\\n  %2368 = Reshape(%2354, %2367)\\n  %2369 = Gemm[alpha = 1, beta = 1](%2368, %transformer.h.9.mlp.c_proj.weight, %transformer.h.9.mlp.c_proj.bias)\\n  %2370 = Constant[value = <Scalar Tensor []>]()\\n  %2371 = Unsqueeze[axes = [0]](%2357)\\n  %2372 = Unsqueeze[axes = [0]](%2360)\\n  %2373 = Unsqueeze[axes = [0]](%2370)\\n  %2374 = Concat[axis = 0](%2371, %2372, %2373)\\n  %2375 = Reshape(%2369, %2374)\\n  %2376 = Add(%2308, %2375)\\n  %2377 = ReduceMean[axes = [-1], keepdims = 1](%2376)\\n  %2378 = Sub(%2376, %2377)\\n  %2379 = Constant[value = <Scalar Tensor []>]()\\n  %2380 = Pow(%2378, %2379)\\n  %2381 = ReduceMean[axes = [-1], keepdims = 1](%2380)\\n  %2382 = Sub(%2376, %2377)\\n  %2383 = Constant[value = <Scalar Tensor []>]()\\n  %2384 = Add(%2381, %2383)\\n  %2385 = Sqrt(%2384)\\n  %2386 = Div(%2382, %2385)\\n  %2387 = Mul(%transformer.h.10.ln_1.weight, %2386)\\n  %2388 = Add(%2387, %transformer.h.10.ln_1.bias)\\n  %2389 = Constant[value = <Scalar Tensor []>]()\\n  %2390 = Shape(%2388)\\n  %2391 = Gather[axis = 0](%2390, %2389)\\n  %2392 = Constant[value = <Scalar Tensor []>]()\\n  %2393 = Shape(%2388)\\n  %2394 = Gather[axis = 0](%2393, %2392)\\n  %2395 = Constant[value = <Scalar Tensor []>]()\\n  %2396 = Shape(%2388)\\n  %2397 = Gather[axis = 0](%2396, %2395)\\n  %2398 = Constant[value = <Scalar Tensor []>]()\\n  %2399 = Unsqueeze[axes = [0]](%2398)\\n  %2400 = Unsqueeze[axes = [0]](%2397)\\n  %2401 = Concat[axis = 0](%2399, %2400)\\n  %2402 = Reshape(%2388, %2401)\\n  %2403 = Gemm[alpha = 1, beta = 1](%2402, %transformer.h.10.attn.c_attn.weight, %transformer.h.10.attn.c_attn.bias)\\n  %2404 = Constant[value = <Scalar Tensor []>]()\\n  %2405 = Unsqueeze[axes = [0]](%2391)\\n  %2406 = Unsqueeze[axes = [0]](%2394)\\n  %2407 = Unsqueeze[axes = [0]](%2404)\\n  %2408 = Concat[axis = 0](%2405, %2406, %2407)\\n  %2409 = Reshape(%2403, %2408)\\n  %query.21, %key.21, %value.21 = Split[axis = 2, split = [768, 768, 768]](%2409)\\n  %2413 = Constant[value = <Scalar Tensor []>]()\\n  %2414 = Shape(%query.21)\\n  %2415 = Gather[axis = 0](%2414, %2413)\\n  %2416 = Constant[value = <Scalar Tensor []>]()\\n  %2417 = Shape(%query.21)\\n  %2418 = Gather[axis = 0](%2417, %2416)\\n  %2419 = Constant[value = <Scalar Tensor []>]()\\n  %2420 = Shape(%query.21)\\n  %2421 = Gather[axis = 0](%2420, %2419)\\n  %2422 = Constant[value = <Scalar Tensor []>]()\\n  %2423 = Div(%2421, %2422)\\n  %2424 = Constant[value = <Scalar Tensor []>]()\\n  %2425 = Unsqueeze[axes = [0]](%2415)\\n  %2426 = Unsqueeze[axes = [0]](%2418)\\n  %2427 = Unsqueeze[axes = [0]](%2424)\\n  %2428 = Unsqueeze[axes = [0]](%2423)\\n  %2429 = Concat[axis = 0](%2425, %2426, %2427, %2428)\\n  %2430 = Reshape(%query.21, %2429)\\n  %2431 = Transpose[perm = [0, 2, 1, 3]](%2430)\\n  %2432 = Constant[value = <Scalar Tensor []>]()\\n  %2433 = Shape(%key.21)\\n  %2434 = Gather[axis = 0](%2433, %2432)\\n  %2435 = Constant[value = <Scalar Tensor []>]()\\n  %2436 = Shape(%key.21)\\n  %2437 = Gather[axis = 0](%2436, %2435)\\n  %2438 = Constant[value = <Scalar Tensor []>]()\\n  %2439 = Shape(%key.21)\\n  %2440 = Gather[axis = 0](%2439, %2438)\\n  %2441 = Constant[value = <Scalar Tensor []>]()\\n  %2442 = Div(%2440, %2441)\\n  %2443 = Constant[value = <Scalar Tensor []>]()\\n  %2444 = Unsqueeze[axes = [0]](%2434)\\n  %2445 = Unsqueeze[axes = [0]](%2437)\\n  %2446 = Unsqueeze[axes = [0]](%2443)\\n  %2447 = Unsqueeze[axes = [0]](%2442)\\n  %2448 = Concat[axis = 0](%2444, %2445, %2446, %2447)\\n  %2449 = Reshape(%key.21, %2448)\\n  %2450 = Transpose[perm = [0, 2, 3, 1]](%2449)\\n  %2451 = Constant[value = <Scalar Tensor []>]()\\n  %2452 = Shape(%value.21)\\n  %2453 = Gather[axis = 0](%2452, %2451)\\n  %2454 = Constant[value = <Scalar Tensor []>]()\\n  %2455 = Shape(%value.21)\\n  %2456 = Gather[axis = 0](%2455, %2454)\\n  %2457 = Constant[value = <Scalar Tensor []>]()\\n  %2458 = Shape(%value.21)\\n  %2459 = Gather[axis = 0](%2458, %2457)\\n  %2460 = Constant[value = <Scalar Tensor []>]()\\n  %2461 = Div(%2459, %2460)\\n  %2462 = Constant[value = <Scalar Tensor []>]()\\n  %2463 = Unsqueeze[axes = [0]](%2453)\\n  %2464 = Unsqueeze[axes = [0]](%2456)\\n  %2465 = Unsqueeze[axes = [0]](%2462)\\n  %2466 = Unsqueeze[axes = [0]](%2461)\\n  %2467 = Concat[axis = 0](%2463, %2464, %2465, %2466)\\n  %2468 = Reshape(%value.21, %2467)\\n  %2469 = Transpose[perm = [0, 2, 1, 3]](%2468)\\n  %2470 = Transpose[perm = [0, 2, 1, 3]](%2449)\\n  %2471 = Unsqueeze[axes = [0]](%2470)\\n  %2472 = Unsqueeze[axes = [0]](%2469)\\n  %2473 = Concat[axis = 0](%2471, %2472)\\n  %2474 = MatMul(%2431, %2450)\\n  %2475 = Constant[value = <Scalar Tensor []>]()\\n  %2476 = Div(%2474, %2475)\\n  %2477 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.10.attn.bias)\\n  %2478 = Slice[axes = [3], ends = [2], starts = [0]](%2477)\\n  %2479 = Mul(%2476, %2478)\\n  %2480 = Constant[value = <Scalar Tensor []>]()\\n  %2481 = Sub(%2480, %2478)\\n  %2482 = Constant[value = <Scalar Tensor []>]()\\n  %2483 = Mul(%2481, %2482)\\n  %2484 = Sub(%2479, %2483)\\n  %2485 = Softmax[axis = 3](%2484)\\n  %2486 = MatMul(%2485, %2469)\\n  %2487 = Transpose[perm = [0, 2, 1, 3]](%2486)\\n  %2488 = Constant[value = <Scalar Tensor []>]()\\n  %2489 = Shape(%2487)\\n  %2490 = Gather[axis = 0](%2489, %2488)\\n  %2491 = Constant[value = <Scalar Tensor []>]()\\n  %2492 = Shape(%2487)\\n  %2493 = Gather[axis = 0](%2492, %2491)\\n  %2494 = Constant[value = <Scalar Tensor []>]()\\n  %2495 = Shape(%2487)\\n  %2496 = Gather[axis = 0](%2495, %2494)\\n  %2497 = Constant[value = <Scalar Tensor []>]()\\n  %2498 = Shape(%2487)\\n  %2499 = Gather[axis = 0](%2498, %2497)\\n  %2500 = Mul(%2496, %2499)\\n  %2501 = Unsqueeze[axes = [0]](%2490)\\n  %2502 = Unsqueeze[axes = [0]](%2493)\\n  %2503 = Unsqueeze[axes = [0]](%2500)\\n  %2504 = Concat[axis = 0](%2501, %2502, %2503)\\n  %2505 = Reshape(%2487, %2504)\\n  %2506 = Constant[value = <Scalar Tensor []>]()\\n  %2507 = Shape(%2505)\\n  %2508 = Gather[axis = 0](%2507, %2506)\\n  %2509 = Constant[value = <Scalar Tensor []>]()\\n  %2510 = Shape(%2505)\\n  %2511 = Gather[axis = 0](%2510, %2509)\\n  %2512 = Constant[value = <Scalar Tensor []>]()\\n  %2513 = Shape(%2505)\\n  %2514 = Gather[axis = 0](%2513, %2512)\\n  %2515 = Constant[value = <Scalar Tensor []>]()\\n  %2516 = Unsqueeze[axes = [0]](%2515)\\n  %2517 = Unsqueeze[axes = [0]](%2514)\\n  %2518 = Concat[axis = 0](%2516, %2517)\\n  %2519 = Reshape(%2505, %2518)\\n  %2520 = Gemm[alpha = 1, beta = 1](%2519, %transformer.h.10.attn.c_proj.weight, %transformer.h.10.attn.c_proj.bias)\\n  %2521 = Constant[value = <Scalar Tensor []>]()\\n  %2522 = Unsqueeze[axes = [0]](%2508)\\n  %2523 = Unsqueeze[axes = [0]](%2511)\\n  %2524 = Unsqueeze[axes = [0]](%2521)\\n  %2525 = Concat[axis = 0](%2522, %2523, %2524)\\n  %2526 = Reshape(%2520, %2525)\\n  %2527 = Add(%2376, %2526)\\n  %2528 = ReduceMean[axes = [-1], keepdims = 1](%2527)\\n  %2529 = Sub(%2527, %2528)\\n  %2530 = Constant[value = <Scalar Tensor []>]()\\n  %2531 = Pow(%2529, %2530)\\n  %2532 = ReduceMean[axes = [-1], keepdims = 1](%2531)\\n  %2533 = Sub(%2527, %2528)\\n  %2534 = Constant[value = <Scalar Tensor []>]()\\n  %2535 = Add(%2532, %2534)\\n  %2536 = Sqrt(%2535)\\n  %2537 = Div(%2533, %2536)\\n  %2538 = Mul(%transformer.h.10.ln_2.weight, %2537)\\n  %2539 = Add(%2538, %transformer.h.10.ln_2.bias)\\n  %2540 = Constant[value = <Scalar Tensor []>]()\\n  %2541 = Shape(%2539)\\n  %2542 = Gather[axis = 0](%2541, %2540)\\n  %2543 = Constant[value = <Scalar Tensor []>]()\\n  %2544 = Shape(%2539)\\n  %2545 = Gather[axis = 0](%2544, %2543)\\n  %2546 = Constant[value = <Scalar Tensor []>]()\\n  %2547 = Shape(%2539)\\n  %2548 = Gather[axis = 0](%2547, %2546)\\n  %2549 = Constant[value = <Scalar Tensor []>]()\\n  %2550 = Unsqueeze[axes = [0]](%2549)\\n  %2551 = Unsqueeze[axes = [0]](%2548)\\n  %2552 = Concat[axis = 0](%2550, %2551)\\n  %2553 = Reshape(%2539, %2552)\\n  %2554 = Gemm[alpha = 1, beta = 1](%2553, %transformer.h.10.mlp.c_fc.weight, %transformer.h.10.mlp.c_fc.bias)\\n  %2555 = Constant[value = <Scalar Tensor []>]()\\n  %2556 = Unsqueeze[axes = [0]](%2542)\\n  %2557 = Unsqueeze[axes = [0]](%2545)\\n  %2558 = Unsqueeze[axes = [0]](%2555)\\n  %2559 = Concat[axis = 0](%2556, %2557, %2558)\\n  %2560 = Reshape(%2554, %2559)\\n  %2561 = Constant[value = <Scalar Tensor []>]()\\n  %2562 = Mul(%2560, %2561)\\n  %2563 = Constant[value = <Scalar Tensor []>]()\\n  %2564 = Pow(%2560, %2563)\\n  %2565 = Constant[value = <Scalar Tensor []>]()\\n  %2566 = Mul(%2564, %2565)\\n  %2567 = Add(%2560, %2566)\\n  %2568 = Constant[value = <Scalar Tensor []>]()\\n  %2569 = Mul(%2567, %2568)\\n  %2570 = Tanh(%2569)\\n  %2571 = Constant[value = <Scalar Tensor []>]()\\n  %2572 = Add(%2570, %2571)\\n  %2573 = Mul(%2562, %2572)\\n  %2574 = Constant[value = <Scalar Tensor []>]()\\n  %2575 = Shape(%2573)\\n  %2576 = Gather[axis = 0](%2575, %2574)\\n  %2577 = Constant[value = <Scalar Tensor []>]()\\n  %2578 = Shape(%2573)\\n  %2579 = Gather[axis = 0](%2578, %2577)\\n  %2580 = Constant[value = <Scalar Tensor []>]()\\n  %2581 = Shape(%2573)\\n  %2582 = Gather[axis = 0](%2581, %2580)\\n  %2583 = Constant[value = <Scalar Tensor []>]()\\n  %2584 = Unsqueeze[axes = [0]](%2583)\\n  %2585 = Unsqueeze[axes = [0]](%2582)\\n  %2586 = Concat[axis = 0](%2584, %2585)\\n  %2587 = Reshape(%2573, %2586)\\n  %2588 = Gemm[alpha = 1, beta = 1](%2587, %transformer.h.10.mlp.c_proj.weight, %transformer.h.10.mlp.c_proj.bias)\\n  %2589 = Constant[value = <Scalar Tensor []>]()\\n  %2590 = Unsqueeze[axes = [0]](%2576)\\n  %2591 = Unsqueeze[axes = [0]](%2579)\\n  %2592 = Unsqueeze[axes = [0]](%2589)\\n  %2593 = Concat[axis = 0](%2590, %2591, %2592)\\n  %2594 = Reshape(%2588, %2593)\\n  %2595 = Add(%2527, %2594)\\n  %2596 = ReduceMean[axes = [-1], keepdims = 1](%2595)\\n  %2597 = Sub(%2595, %2596)\\n  %2598 = Constant[value = <Scalar Tensor []>]()\\n  %2599 = Pow(%2597, %2598)\\n  %2600 = ReduceMean[axes = [-1], keepdims = 1](%2599)\\n  %2601 = Sub(%2595, %2596)\\n  %2602 = Constant[value = <Scalar Tensor []>]()\\n  %2603 = Add(%2600, %2602)\\n  %2604 = Sqrt(%2603)\\n  %2605 = Div(%2601, %2604)\\n  %2606 = Mul(%transformer.h.11.ln_1.weight, %2605)\\n  %2607 = Add(%2606, %transformer.h.11.ln_1.bias)\\n  %2608 = Constant[value = <Scalar Tensor []>]()\\n  %2609 = Shape(%2607)\\n  %2610 = Gather[axis = 0](%2609, %2608)\\n  %2611 = Constant[value = <Scalar Tensor []>]()\\n  %2612 = Shape(%2607)\\n  %2613 = Gather[axis = 0](%2612, %2611)\\n  %2614 = Constant[value = <Scalar Tensor []>]()\\n  %2615 = Shape(%2607)\\n  %2616 = Gather[axis = 0](%2615, %2614)\\n  %2617 = Constant[value = <Scalar Tensor []>]()\\n  %2618 = Unsqueeze[axes = [0]](%2617)\\n  %2619 = Unsqueeze[axes = [0]](%2616)\\n  %2620 = Concat[axis = 0](%2618, %2619)\\n  %2621 = Reshape(%2607, %2620)\\n  %2622 = Gemm[alpha = 1, beta = 1](%2621, %transformer.h.11.attn.c_attn.weight, %transformer.h.11.attn.c_attn.bias)\\n  %2623 = Constant[value = <Scalar Tensor []>]()\\n  %2624 = Unsqueeze[axes = [0]](%2610)\\n  %2625 = Unsqueeze[axes = [0]](%2613)\\n  %2626 = Unsqueeze[axes = [0]](%2623)\\n  %2627 = Concat[axis = 0](%2624, %2625, %2626)\\n  %2628 = Reshape(%2622, %2627)\\n  %query.23, %key.23, %value.23 = Split[axis = 2, split = [768, 768, 768]](%2628)\\n  %2632 = Constant[value = <Scalar Tensor []>]()\\n  %2633 = Shape(%query.23)\\n  %2634 = Gather[axis = 0](%2633, %2632)\\n  %2635 = Constant[value = <Scalar Tensor []>]()\\n  %2636 = Shape(%query.23)\\n  %2637 = Gather[axis = 0](%2636, %2635)\\n  %2638 = Constant[value = <Scalar Tensor []>]()\\n  %2639 = Shape(%query.23)\\n  %2640 = Gather[axis = 0](%2639, %2638)\\n  %2641 = Constant[value = <Scalar Tensor []>]()\\n  %2642 = Div(%2640, %2641)\\n  %2643 = Constant[value = <Scalar Tensor []>]()\\n  %2644 = Unsqueeze[axes = [0]](%2634)\\n  %2645 = Unsqueeze[axes = [0]](%2637)\\n  %2646 = Unsqueeze[axes = [0]](%2643)\\n  %2647 = Unsqueeze[axes = [0]](%2642)\\n  %2648 = Concat[axis = 0](%2644, %2645, %2646, %2647)\\n  %2649 = Reshape(%query.23, %2648)\\n  %2650 = Transpose[perm = [0, 2, 1, 3]](%2649)\\n  %2651 = Constant[value = <Scalar Tensor []>]()\\n  %2652 = Shape(%key.23)\\n  %2653 = Gather[axis = 0](%2652, %2651)\\n  %2654 = Constant[value = <Scalar Tensor []>]()\\n  %2655 = Shape(%key.23)\\n  %2656 = Gather[axis = 0](%2655, %2654)\\n  %2657 = Constant[value = <Scalar Tensor []>]()\\n  %2658 = Shape(%key.23)\\n  %2659 = Gather[axis = 0](%2658, %2657)\\n  %2660 = Constant[value = <Scalar Tensor []>]()\\n  %2661 = Div(%2659, %2660)\\n  %2662 = Constant[value = <Scalar Tensor []>]()\\n  %2663 = Unsqueeze[axes = [0]](%2653)\\n  %2664 = Unsqueeze[axes = [0]](%2656)\\n  %2665 = Unsqueeze[axes = [0]](%2662)\\n  %2666 = Unsqueeze[axes = [0]](%2661)\\n  %2667 = Concat[axis = 0](%2663, %2664, %2665, %2666)\\n  %2668 = Reshape(%key.23, %2667)\\n  %2669 = Transpose[perm = [0, 2, 3, 1]](%2668)\\n  %2670 = Constant[value = <Scalar Tensor []>]()\\n  %2671 = Shape(%value.23)\\n  %2672 = Gather[axis = 0](%2671, %2670)\\n  %2673 = Constant[value = <Scalar Tensor []>]()\\n  %2674 = Shape(%value.23)\\n  %2675 = Gather[axis = 0](%2674, %2673)\\n  %2676 = Constant[value = <Scalar Tensor []>]()\\n  %2677 = Shape(%value.23)\\n  %2678 = Gather[axis = 0](%2677, %2676)\\n  %2679 = Constant[value = <Scalar Tensor []>]()\\n  %2680 = Div(%2678, %2679)\\n  %2681 = Constant[value = <Scalar Tensor []>]()\\n  %2682 = Unsqueeze[axes = [0]](%2672)\\n  %2683 = Unsqueeze[axes = [0]](%2675)\\n  %2684 = Unsqueeze[axes = [0]](%2681)\\n  %2685 = Unsqueeze[axes = [0]](%2680)\\n  %2686 = Concat[axis = 0](%2682, %2683, %2684, %2685)\\n  %2687 = Reshape(%value.23, %2686)\\n  %2688 = Transpose[perm = [0, 2, 1, 3]](%2687)\\n  %2689 = Transpose[perm = [0, 2, 1, 3]](%2668)\\n  %2690 = Unsqueeze[axes = [0]](%2689)\\n  %2691 = Unsqueeze[axes = [0]](%2688)\\n  %2692 = Concat[axis = 0](%2690, %2691)\\n  %2693 = MatMul(%2650, %2669)\\n  %2694 = Constant[value = <Scalar Tensor []>]()\\n  %2695 = Div(%2693, %2694)\\n  %2696 = Slice[axes = [2], ends = [2], starts = [0]](%transformer.h.11.attn.bias)\\n  %2697 = Slice[axes = [3], ends = [2], starts = [0]](%2696)\\n  %2698 = Mul(%2695, %2697)\\n  %2699 = Constant[value = <Scalar Tensor []>]()\\n  %2700 = Sub(%2699, %2697)\\n  %2701 = Constant[value = <Scalar Tensor []>]()\\n  %2702 = Mul(%2700, %2701)\\n  %2703 = Sub(%2698, %2702)\\n  %2704 = Softmax[axis = 3](%2703)\\n  %2705 = MatMul(%2704, %2688)\\n  %2706 = Transpose[perm = [0, 2, 1, 3]](%2705)\\n  %2707 = Constant[value = <Scalar Tensor []>]()\\n  %2708 = Shape(%2706)\\n  %2709 = Gather[axis = 0](%2708, %2707)\\n  %2710 = Constant[value = <Scalar Tensor []>]()\\n  %2711 = Shape(%2706)\\n  %2712 = Gather[axis = 0](%2711, %2710)\\n  %2713 = Constant[value = <Scalar Tensor []>]()\\n  %2714 = Shape(%2706)\\n  %2715 = Gather[axis = 0](%2714, %2713)\\n  %2716 = Constant[value = <Scalar Tensor []>]()\\n  %2717 = Shape(%2706)\\n  %2718 = Gather[axis = 0](%2717, %2716)\\n  %2719 = Mul(%2715, %2718)\\n  %2720 = Unsqueeze[axes = [0]](%2709)\\n  %2721 = Unsqueeze[axes = [0]](%2712)\\n  %2722 = Unsqueeze[axes = [0]](%2719)\\n  %2723 = Concat[axis = 0](%2720, %2721, %2722)\\n  %2724 = Reshape(%2706, %2723)\\n  %2725 = Constant[value = <Scalar Tensor []>]()\\n  %2726 = Shape(%2724)\\n  %2727 = Gather[axis = 0](%2726, %2725)\\n  %2728 = Constant[value = <Scalar Tensor []>]()\\n  %2729 = Shape(%2724)\\n  %2730 = Gather[axis = 0](%2729, %2728)\\n  %2731 = Constant[value = <Scalar Tensor []>]()\\n  %2732 = Shape(%2724)\\n  %2733 = Gather[axis = 0](%2732, %2731)\\n  %2734 = Constant[value = <Scalar Tensor []>]()\\n  %2735 = Unsqueeze[axes = [0]](%2734)\\n  %2736 = Unsqueeze[axes = [0]](%2733)\\n  %2737 = Concat[axis = 0](%2735, %2736)\\n  %2738 = Reshape(%2724, %2737)\\n  %2739 = Gemm[alpha = 1, beta = 1](%2738, %transformer.h.11.attn.c_proj.weight, %transformer.h.11.attn.c_proj.bias)\\n  %2740 = Constant[value = <Scalar Tensor []>]()\\n  %2741 = Unsqueeze[axes = [0]](%2727)\\n  %2742 = Unsqueeze[axes = [0]](%2730)\\n  %2743 = Unsqueeze[axes = [0]](%2740)\\n  %2744 = Concat[axis = 0](%2741, %2742, %2743)\\n  %2745 = Reshape(%2739, %2744)\\n  %2746 = Add(%2595, %2745)\\n  %2747 = ReduceMean[axes = [-1], keepdims = 1](%2746)\\n  %2748 = Sub(%2746, %2747)\\n  %2749 = Constant[value = <Scalar Tensor []>]()\\n  %2750 = Pow(%2748, %2749)\\n  %2751 = ReduceMean[axes = [-1], keepdims = 1](%2750)\\n  %2752 = Sub(%2746, %2747)\\n  %2753 = Constant[value = <Scalar Tensor []>]()\\n  %2754 = Add(%2751, %2753)\\n  %2755 = Sqrt(%2754)\\n  %2756 = Div(%2752, %2755)\\n  %2757 = Mul(%transformer.h.11.ln_2.weight, %2756)\\n  %2758 = Add(%2757, %transformer.h.11.ln_2.bias)\\n  %2759 = Constant[value = <Scalar Tensor []>]()\\n  %2760 = Shape(%2758)\\n  %2761 = Gather[axis = 0](%2760, %2759)\\n  %2762 = Constant[value = <Scalar Tensor []>]()\\n  %2763 = Shape(%2758)\\n  %2764 = Gather[axis = 0](%2763, %2762)\\n  %2765 = Constant[value = <Scalar Tensor []>]()\\n  %2766 = Shape(%2758)\\n  %2767 = Gather[axis = 0](%2766, %2765)\\n  %2768 = Constant[value = <Scalar Tensor []>]()\\n  %2769 = Unsqueeze[axes = [0]](%2768)\\n  %2770 = Unsqueeze[axes = [0]](%2767)\\n  %2771 = Concat[axis = 0](%2769, %2770)\\n  %2772 = Reshape(%2758, %2771)\\n  %2773 = Gemm[alpha = 1, beta = 1](%2772, %transformer.h.11.mlp.c_fc.weight, %transformer.h.11.mlp.c_fc.bias)\\n  %2774 = Constant[value = <Scalar Tensor []>]()\\n  %2775 = Unsqueeze[axes = [0]](%2761)\\n  %2776 = Unsqueeze[axes = [0]](%2764)\\n  %2777 = Unsqueeze[axes = [0]](%2774)\\n  %2778 = Concat[axis = 0](%2775, %2776, %2777)\\n  %2779 = Reshape(%2773, %2778)\\n  %2780 = Constant[value = <Scalar Tensor []>]()\\n  %2781 = Mul(%2779, %2780)\\n  %2782 = Constant[value = <Scalar Tensor []>]()\\n  %2783 = Pow(%2779, %2782)\\n  %2784 = Constant[value = <Scalar Tensor []>]()\\n  %2785 = Mul(%2783, %2784)\\n  %2786 = Add(%2779, %2785)\\n  %2787 = Constant[value = <Scalar Tensor []>]()\\n  %2788 = Mul(%2786, %2787)\\n  %2789 = Tanh(%2788)\\n  %2790 = Constant[value = <Scalar Tensor []>]()\\n  %2791 = Add(%2789, %2790)\\n  %2792 = Mul(%2781, %2791)\\n  %2793 = Constant[value = <Scalar Tensor []>]()\\n  %2794 = Shape(%2792)\\n  %2795 = Gather[axis = 0](%2794, %2793)\\n  %2796 = Constant[value = <Scalar Tensor []>]()\\n  %2797 = Shape(%2792)\\n  %2798 = Gather[axis = 0](%2797, %2796)\\n  %2799 = Constant[value = <Scalar Tensor []>]()\\n  %2800 = Shape(%2792)\\n  %2801 = Gather[axis = 0](%2800, %2799)\\n  %2802 = Constant[value = <Scalar Tensor []>]()\\n  %2803 = Unsqueeze[axes = [0]](%2802)\\n  %2804 = Unsqueeze[axes = [0]](%2801)\\n  %2805 = Concat[axis = 0](%2803, %2804)\\n  %2806 = Reshape(%2792, %2805)\\n  %2807 = Gemm[alpha = 1, beta = 1](%2806, %transformer.h.11.mlp.c_proj.weight, %transformer.h.11.mlp.c_proj.bias)\\n  %2808 = Constant[value = <Scalar Tensor []>]()\\n  %2809 = Unsqueeze[axes = [0]](%2795)\\n  %2810 = Unsqueeze[axes = [0]](%2798)\\n  %2811 = Unsqueeze[axes = [0]](%2808)\\n  %2812 = Concat[axis = 0](%2809, %2810, %2811)\\n  %2813 = Reshape(%2807, %2812)\\n  %2814 = Add(%2746, %2813)\\n  %2815 = ReduceMean[axes = [-1], keepdims = 1](%2814)\\n  %2816 = Sub(%2814, %2815)\\n  %2817 = Constant[value = <Scalar Tensor []>]()\\n  %2818 = Pow(%2816, %2817)\\n  %2819 = ReduceMean[axes = [-1], keepdims = 1](%2818)\\n  %2820 = Sub(%2814, %2815)\\n  %2821 = Constant[value = <Scalar Tensor []>]()\\n  %2822 = Add(%2819, %2821)\\n  %2823 = Sqrt(%2822)\\n  %2824 = Div(%2820, %2823)\\n  %2825 = Mul(%transformer.ln_f.weight, %2824)\\n  %2826 = Add(%2825, %transformer.ln_f.bias)\\n  %2827 = Constant[value = <Scalar Tensor []>]()\\n  %2828 = Shape(%2826)\\n  %2829 = Gather[axis = 0](%2828, %2827)\\n  %2830 = Unsqueeze[axes = [0]](%164)\\n  %2831 = Unsqueeze[axes = [0]](%167)\\n  %2832 = Unsqueeze[axes = [0]](%2829)\\n  %2833 = Concat[axis = 0](%2830, %2831, %2832)\\n  %2834 = Reshape(%2826, %2833)\\n  %2835 = Transpose[perm = [1, 0]](%transformer.wte.weight)\\n  %output1 = MatMul(%2834, %2835)\\n  return %output1, %output2, %502, %721, %940, %1159, %1378, %1597, %1816, %2035, %2254, %2473, %2692\\n}'\r\n\r\n4. Running in Caffe2:\r\nimport caffe2.python.onnx.backend as backend\r\nimport numpy as np\r\n \r\nrep = backend.prepare(model, device=\"CPU\")\r\n \r\ndummy_output_1, dummy_output_2 = rep.run(( np.array([[1,100]]), \\\r\n                                          np.array([[1,100]]) ) )\r\n \r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-48-9e64828afa97> in <module>()\r\n      1 #outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\r\n----> 2 dummy_output_1, dummy_output_2 = rep.run(( np.array([[1,100]]),                                           np.array([[1,100]]) ) )\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/onnx/backend_rep.py in run(self, inputs, **kwargs)\r\n     55                 self.workspace.RunNet(self.init_net.name)\r\n     56                 self.ran_init_net = True\r\n---> 57             self.workspace.RunNet(self.predict_net.name)\r\n     58         output_values = [self.workspace.FetchBlob(name)\r\n     59                          for name in self.predict_net.external_output]\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/onnx/workspace.py in f(*args, **kwargs)\r\n     61         def f(*args, **kwargs):\r\n     62             with self._ctx:\r\n---> 63                 return getattr(workspace, attr)(*args, **kwargs)\r\n     64         return f\r\n     65\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/workspace.py in RunNet(name, num_iter, allow_fail)\r\n    252         C.Workspace.current._last_failed_op_net_position,\r\n    253         GetNetName(name),\r\n--> 254         StringifyNetName(name), num_iter, allow_fail,\r\n    255     )\r\n    256\r\n \r\n~/anaconda3/lib/python3.6/site-packages/caffe2/python/workspace.py in CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs)\r\n    213 def CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs):\r\n    214     try:\r\n--> 215         return func(*args, **kwargs)\r\n    216     except Exception:\r\n    217         op_id = op_id_fetcher()\r\n \r\nRuntimeError: [enforce fail at pow_op.h:100] A.sizes() == B.sizes(). [1, 2, 768] vs []. Dimension mismatch - did you forget to set broadcast=1?\r\nError from operator:\r\ninput: \"188\" input: \"189\" output: \"190\" name: \"\" type: \"Pow\" device_option { device_type: 0 device_id: 0 }frame #0: c10::ThrowEnforceNotMet(char const*, int, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void const*) + 191 (0xb393827ff in libc10.dylib)\r\nframe #1: bool caffe2::PowOp<caffe2::TensorTypes<float>, caffe2::CPUContext, caffe2::EigenPowFunctor, caffe2::SameTypeAsInput>::DoRunWithType<float>() + 5339 (0xb358016eb in libtorch.dylib)\r\nframe #2: caffe2::Operator<caffe2::CPUContext>::Run(int) + 122 (0xb350fca2a in libtorch.dylib)\r\nframe #3: caffe2::SimpleNet::Run() + 464 (0xb34f1c5c0 in libtorch.dylib)\r\nframe #4: caffe2::Workspace::RunNet(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 86 (0xb34f5b956 in libtorch.dylib)\r\nframe #5: void pybind11::cpp_function::initialize<caffe2::python::addGlobalMethods(pybind11::module&)::$_79, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, pybind11::name, pybind11::scope, pybind11::sibling>(caffe2::python::addGlobalMethods(pybind11::module&)::$_79&&, bool (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 207 (0xb8e78b2df in caffe2_pybind11_state.cpython-36m-darwin.so)\r\nframe #6: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3324 (0xb8e73461c in caffe2_pybind11_state.cpython-36m-darwin.so)\r\n<omitting python frames>\r\n```\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\n\r\n\r\n## Environment\r\nPlease find Environment details below:\r\nCollecting environment information...\r\nPyTorch version: 1.2.0.dev20190805\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.13.3\r\nGCC version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.2\r\n[pip3] numpydoc==0.8.0\r\n[pip3] pytorch-ignite==0.2.0\r\n[pip3] pytorch-pretrained-bert==0.6.2\r\n[pip3] torch==1.2.0\r\n[pip3] torch-nightly==1.2.0.dev20190805\r\n[pip3] torchvision==0.4.0\r\n[conda] blas                      1.0                         mkl  \r\n[conda] ignite                    0.2.0                    py36_0    pytorch\r\n[conda] mkl                       2018.0.2                      1  \r\n[conda] mkl-service               1.1.2            py36h7ea6df4_4  \r\n[conda] mkl_fft                   1.0.1            py36h917ab60_0  \r\n[conda] mkl_random                1.0.1            py36h78cc56f_0  \r\n[conda] pytorch                   1.2.0                   py3.6_0    pytorch\r\n[conda] pytorch-pretrained-bert   0.6.2                    pypi_0    pypi\r\n[conda] torch                     1.2.0                    pypi_0    pypi\r\n[conda] torch-nightly             1.2.0.dev20190805          pypi_0    pypi\r\n[conda] torchvision               0.4.0                    pypi_0    pypi\r\n\r\n\n\ncc @suo",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/26710/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26710/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "event": "cross-referenced"
    }
]