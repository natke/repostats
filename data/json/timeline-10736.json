[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057288348",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10736#issuecomment-1057288348",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10736",
        "id": 1057288348,
        "node_id": "IC_kwDOCVq1mM4_BPCc",
        "user": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T19:15:11Z",
        "updated_at": "2022-03-02T19:15:11Z",
        "author_association": "NONE",
        "body": "When invoked with python -m trace --trace:\r\n```\r\ndetect_cpu.py(71):             cd, self.config['state_file'][model_file_ext]).replace('.pth', '.onnx')\r\ndetect_cpu.py(70):         self.model_file = os.path.join(\r\ndetect_cpu.py(74):         so = onnxruntime.SessionOptions()\r\ndetect_cpu.py(77):         so.graph_optimization_level = onnxruntime.GraphOptimizationLevel.ORT_ENABLE_ALL\r\ndetect_cpu.py(79):         self.model = onnxruntime.InferenceSession(self.model_file, so)\r\n --- modulename: onnxruntime_inference_collection, funcname: __init__\r\nonnxruntime_inference_collection.py(315):         Session.__init__(self)\r\n --- modulename: onnxruntime_inference_collection, funcname: __init__\r\nonnxruntime_inference_collection.py(104):         self._sess = None\r\nonnxruntime_inference_collection.py(105):         self._enable_fallback = True\r\nonnxruntime_inference_collection.py(317):         if isinstance(path_or_bytes, str):\r\nonnxruntime_inference_collection.py(318):             self._model_path = path_or_bytes\r\nonnxruntime_inference_collection.py(319):             self._model_bytes = None\r\nonnxruntime_inference_collection.py(326):         self._sess_options = sess_options\r\nonnxruntime_inference_collection.py(327):         self._sess_options_initial = sess_options\r\nonnxruntime_inference_collection.py(328):         self._enable_fallback = True\r\nonnxruntime_inference_collection.py(329):         self._read_config_from_model = os.environ.get('ORT_LOAD_CONFIG_FROM_MODEL') == '1'\r\n --- modulename: _collections_abc, funcname: get\r\n_collections_abc.py(659):         try:\r\n_collections_abc.py(660):             return self[key]\r\n --- modulename: os, funcname: __getitem__\r\nos.py(671):         try:\r\nos.py(672):             value = self._data[self.encodekey(key)]\r\n --- modulename: os, funcname: encode\r\nos.py(749):             if not isinstance(value, str):\r\nos.py(751):             return value.encode(encoding, 'surrogateescape')\r\nos.py(673):         except KeyError:\r\nos.py(675):             raise KeyError(key) from None\r\n_collections_abc.py(661):         except KeyError:\r\n_collections_abc.py(662):             return default\r\nonnxruntime_inference_collection.py(332):         disabled_optimizers = kwargs['disabled_optimizers'] if 'disabled_optimizers' in kwargs else None\r\nonnxruntime_inference_collection.py(334):         try:\r\nonnxruntime_inference_collection.py(335):             self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n --- modulename: onnxruntime_inference_collection, funcname: _create_inference_session\r\nonnxruntime_inference_collection.py(347):         available_providers = C.get_available_providers()\r\nonnxruntime_inference_collection.py(350):         if 'TensorrtExecutionProvider' in available_providers:\r\nonnxruntime_inference_collection.py(353):             self._fallback_providers = ['CPUExecutionProvider']\r\nonnxruntime_inference_collection.py(356):         providers, provider_options = check_and_normalize_provider_args(providers,\r\nonnxruntime_inference_collection.py(357):                                                                         provider_options,\r\nonnxruntime_inference_collection.py(358):                                                                         available_providers)\r\nonnxruntime_inference_collection.py(356):         providers, provider_options = check_and_normalize_provider_args(providers,\r\n --- modulename: onnxruntime_inference_collection, funcname: check_and_normalize_provider_args\r\nonnxruntime_inference_collection.py(48):     if providers is None:\r\nonnxruntime_inference_collection.py(49):         return [], []\r\nonnxruntime_inference_collection.py(359):         if providers == [] and len(available_providers) > 1:\r\nonnxruntime_inference_collection.py(366):         session_options = self._sess_options if self._sess_options else C.get_default_session_options()\r\nonnxruntime_inference_collection.py(367):         if self._model_path:\r\nonnxruntime_inference_collection.py(368):             sess = C.InferenceSession(session_options, self._model_path, True, self._read_config_from_model)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057288348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "actor": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T19:20:17Z",
        "updated_at": "2022-03-02T19:20:17Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166",
                "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
                "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166/labels{/name}",
                "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166/comments",
                "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166/events",
                "html_url": "https://github.com/microsoft/onnxruntime/issues/10166",
                "id": 1092777807,
                "node_id": "I_kwDOCVq1mM5BIndP",
                "number": 10166,
                "title": "`InferenceSession` initialization hangs",
                "user": {
                    "login": "marcus1487",
                    "id": 13755444,
                    "node_id": "MDQ6VXNlcjEzNzU1NDQ0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13755444?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/marcus1487",
                    "html_url": "https://github.com/marcus1487",
                    "followers_url": "https://api.github.com/users/marcus1487/followers",
                    "following_url": "https://api.github.com/users/marcus1487/following{/other_user}",
                    "gists_url": "https://api.github.com/users/marcus1487/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/marcus1487/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/marcus1487/subscriptions",
                    "organizations_url": "https://api.github.com/users/marcus1487/orgs",
                    "repos_url": "https://api.github.com/users/marcus1487/repos",
                    "events_url": "https://api.github.com/users/marcus1487/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/marcus1487/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 26,
                "created_at": "2022-01-03T19:59:45Z",
                "updated_at": "2022-08-27T08:59:22Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 156939672,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxNTY5Mzk2NzI=",
                    "name": "onnxruntime",
                    "full_name": "microsoft/onnxruntime",
                    "private": false,
                    "owner": {
                        "login": "microsoft",
                        "id": 6154722,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjYxNTQ3MjI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6154722?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/microsoft",
                        "html_url": "https://github.com/microsoft",
                        "followers_url": "https://api.github.com/users/microsoft/followers",
                        "following_url": "https://api.github.com/users/microsoft/following{/other_user}",
                        "gists_url": "https://api.github.com/users/microsoft/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/microsoft/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/microsoft/subscriptions",
                        "organizations_url": "https://api.github.com/users/microsoft/orgs",
                        "repos_url": "https://api.github.com/users/microsoft/repos",
                        "events_url": "https://api.github.com/users/microsoft/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/microsoft/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/microsoft/onnxruntime",
                    "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator",
                    "fork": false,
                    "url": "https://api.github.com/repos/microsoft/onnxruntime",
                    "forks_url": "https://api.github.com/repos/microsoft/onnxruntime/forks",
                    "keys_url": "https://api.github.com/repos/microsoft/onnxruntime/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/microsoft/onnxruntime/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/microsoft/onnxruntime/teams",
                    "hooks_url": "https://api.github.com/repos/microsoft/onnxruntime/hooks",
                    "issue_events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/microsoft/onnxruntime/events",
                    "assignees_url": "https://api.github.com/repos/microsoft/onnxruntime/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/microsoft/onnxruntime/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/microsoft/onnxruntime/tags",
                    "blobs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/microsoft/onnxruntime/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/microsoft/onnxruntime/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/microsoft/onnxruntime/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/microsoft/onnxruntime/languages",
                    "stargazers_url": "https://api.github.com/repos/microsoft/onnxruntime/stargazers",
                    "contributors_url": "https://api.github.com/repos/microsoft/onnxruntime/contributors",
                    "subscribers_url": "https://api.github.com/repos/microsoft/onnxruntime/subscribers",
                    "subscription_url": "https://api.github.com/repos/microsoft/onnxruntime/subscription",
                    "commits_url": "https://api.github.com/repos/microsoft/onnxruntime/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/microsoft/onnxruntime/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/microsoft/onnxruntime/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/microsoft/onnxruntime/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/microsoft/onnxruntime/merges",
                    "archive_url": "https://api.github.com/repos/microsoft/onnxruntime/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/microsoft/onnxruntime/downloads",
                    "issues_url": "https://api.github.com/repos/microsoft/onnxruntime/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/microsoft/onnxruntime/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/microsoft/onnxruntime/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/microsoft/onnxruntime/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/labels{/name}",
                    "releases_url": "https://api.github.com/repos/microsoft/onnxruntime/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/microsoft/onnxruntime/deployments",
                    "created_at": "2018-11-10T02:22:53Z",
                    "updated_at": "2022-12-20T19:02:34Z",
                    "pushed_at": "2022-12-20T19:09:41Z",
                    "git_url": "git://github.com/microsoft/onnxruntime.git",
                    "ssh_url": "git@github.com:microsoft/onnxruntime.git",
                    "clone_url": "https://github.com/microsoft/onnxruntime.git",
                    "svn_url": "https://github.com/microsoft/onnxruntime",
                    "homepage": "https://www.onnxruntime.ai",
                    "size": 1018648,
                    "stargazers_count": 7949,
                    "watchers_count": 7949,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": true,
                    "has_discussions": true,
                    "forks_count": 1862,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 1452,
                    "license": {
                        "key": "mit",
                        "name": "MIT License",
                        "spdx_id": "MIT",
                        "url": "https://api.github.com/licenses/mit",
                        "node_id": "MDc6TGljZW5zZTEz"
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "ai-framework",
                        "deep-learning",
                        "hacktoberfest",
                        "hardware-acceleration",
                        "machine-learning",
                        "neural-networks",
                        "onnx",
                        "pytorch",
                        "scikit-learn",
                        "tensorflow"
                    ],
                    "visibility": "public",
                    "forks": 1862,
                    "open_issues": 1452,
                    "watchers": 7949,
                    "default_branch": "main",
                    "permissions": {
                        "admin": false,
                        "maintain": true,
                        "push": true,
                        "triage": true,
                        "pull": true
                    }
                },
                "body": "**Describe the bug**\r\nI use ONNX to release/distribute production models for modified base detection from Oxford Nanopore sequencing data in the [Remora repository](https://github.com/nanoporetech/remora). A user has reported an issue where onnxruntime hangs indefinitely when initializing an inference session from one of these released models. \r\n\r\n**Urgency**\r\nAs soon as possible, as these models are currently in production.\r\n\r\n**System information**\r\n@mattlooss may be able to provide more information here.\r\n\r\n**To Reproduce**\r\nSee the details of the issue in this thread (https://github.com/nanoporetech/bonito/issues/216), but the issue can be reproduced with the following snippet (after downloading [this model](https://github.com/nanoporetech/remora/blob/master/src/remora/trained_models/dna_r9.4.1_e8/hac/0.0.0/5mc/CG/v0/modbase_model.onnx):\r\n\r\n```\r\nimport onnxruntime as ort\r\nort.set_default_logger_severity(0)\r\nmodel = ort.InferenceSession('modbase_model.onnx', providers=['CPUExecutionProvider'])\r\n```\r\n\r\nUpon running the above snippet the reporting user sees the following message followed by the code stalling without completion.\r\n\r\n```\r\n2022-01-03 19:53:44.686663926 [I:onnxruntime:, inference_session.cc:273 operator()] Flush-to-zero and denormal-as-zero are off\r\n2022-01-03 19:53:44.686776610 [I:onnxruntime:, inference_session.cc:280 ConstructorCommon] Creating and using per session threadpools since use_per_session_threads_ is true\r\n```\r\n\r\n**Expected behavior**\r\nModel loaded and code able to continue execution.\r\n\r\n**Screenshots**\r\nNot applicable.\r\n\r\n**Additional context**\r\nNot applicable.",
                "reactions": {
                    "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10166/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "event": "cross-referenced"
    },
    {
        "id": 6174362548,
        "node_id": "LE_lADOCVq1mM5E_0dhzwAAAAFwBUu0",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/6174362548",
        "actor": {
            "login": "HectorSVC",
            "id": 29932710,
            "node_id": "MDQ6VXNlcjI5OTMyNzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/29932710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HectorSVC",
            "html_url": "https://github.com/HectorSVC",
            "followers_url": "https://api.github.com/users/HectorSVC/followers",
            "following_url": "https://api.github.com/users/HectorSVC/following{/other_user}",
            "gists_url": "https://api.github.com/users/HectorSVC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HectorSVC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HectorSVC/subscriptions",
            "organizations_url": "https://api.github.com/users/HectorSVC/orgs",
            "repos_url": "https://api.github.com/users/HectorSVC/repos",
            "events_url": "https://api.github.com/users/HectorSVC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HectorSVC/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2022-03-02T22:49:20Z",
        "label": {
            "name": "component:coreruntime",
            "color": "303a93"
        },
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-04T16:39:15Z",
        "updated_at": "2022-03-04T16:39:15Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6",
                "repository_url": "https://api.github.com/repos/hzi-bifo/RiboDetector",
                "labels_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6/labels{/name}",
                "comments_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6/comments",
                "events_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6/events",
                "html_url": "https://github.com/hzi-bifo/RiboDetector/issues/6",
                "id": 1149270552,
                "node_id": "I_kwDOEu29_s5EgHoY",
                "number": 6,
                "title": "Process hangs in CPU detection step",
                "user": {
                    "login": "sjaenick",
                    "id": 6491649,
                    "node_id": "MDQ6VXNlcjY0OTE2NDk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6491649?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sjaenick",
                    "html_url": "https://github.com/sjaenick",
                    "followers_url": "https://api.github.com/users/sjaenick/followers",
                    "following_url": "https://api.github.com/users/sjaenick/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sjaenick/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sjaenick/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sjaenick/subscriptions",
                    "organizations_url": "https://api.github.com/users/sjaenick/orgs",
                    "repos_url": "https://api.github.com/users/sjaenick/repos",
                    "events_url": "https://api.github.com/users/sjaenick/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sjaenick/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2548229468,
                        "node_id": "MDU6TGFiZWwyNTQ4MjI5NDY4",
                        "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 2548229483,
                        "node_id": "MDU6TGFiZWwyNTQ4MjI5NDgz",
                        "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 3890923096,
                        "node_id": "LA_kwDOEu29_s7n6sZY",
                        "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/labels/onnxruntime",
                        "name": "onnxruntime",
                        "color": "D93F0B",
                        "default": false,
                        "description": "onnxruntime on SLURM hangs"
                    },
                    {
                        "id": 3894861831,
                        "node_id": "LA_kwDOEu29_s7oJuAH",
                        "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/labels/SLURM",
                        "name": "SLURM",
                        "color": "5319e7",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 23,
                "created_at": "2022-02-24T13:09:36Z",
                "updated_at": "2022-03-08T16:40:55Z",
                "closed_at": "2022-03-08T16:40:55Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 317570558,
                    "node_id": "MDEwOlJlcG9zaXRvcnkzMTc1NzA1NTg=",
                    "name": "RiboDetector",
                    "full_name": "hzi-bifo/RiboDetector",
                    "private": false,
                    "owner": {
                        "login": "hzi-bifo",
                        "id": 11319345,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjExMzE5MzQ1",
                        "avatar_url": "https://avatars.githubusercontent.com/u/11319345?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/hzi-bifo",
                        "html_url": "https://github.com/hzi-bifo",
                        "followers_url": "https://api.github.com/users/hzi-bifo/followers",
                        "following_url": "https://api.github.com/users/hzi-bifo/following{/other_user}",
                        "gists_url": "https://api.github.com/users/hzi-bifo/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/hzi-bifo/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/hzi-bifo/subscriptions",
                        "organizations_url": "https://api.github.com/users/hzi-bifo/orgs",
                        "repos_url": "https://api.github.com/users/hzi-bifo/repos",
                        "events_url": "https://api.github.com/users/hzi-bifo/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/hzi-bifo/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/hzi-bifo/RiboDetector",
                    "description": "Accurate and rapid RiboRNA sequences Detector based on deep learning",
                    "fork": false,
                    "url": "https://api.github.com/repos/hzi-bifo/RiboDetector",
                    "forks_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/forks",
                    "keys_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/teams",
                    "hooks_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/hooks",
                    "issue_events_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/events",
                    "assignees_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/tags",
                    "blobs_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/languages",
                    "stargazers_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/stargazers",
                    "contributors_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/contributors",
                    "subscribers_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/subscribers",
                    "subscription_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/subscription",
                    "commits_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/merges",
                    "archive_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/downloads",
                    "issues_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/labels{/name}",
                    "releases_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/deployments",
                    "created_at": "2020-12-01T14:39:55Z",
                    "updated_at": "2022-12-05T03:26:54Z",
                    "pushed_at": "2022-09-15T22:08:46Z",
                    "git_url": "git://github.com/hzi-bifo/RiboDetector.git",
                    "ssh_url": "git@github.com:hzi-bifo/RiboDetector.git",
                    "clone_url": "https://github.com/hzi-bifo/RiboDetector.git",
                    "svn_url": "https://github.com/hzi-bifo/RiboDetector",
                    "homepage": null,
                    "size": 5228,
                    "stargazers_count": 56,
                    "watchers_count": 56,
                    "language": "Python",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_discussions": false,
                    "forks_count": 14,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 4,
                    "license": {
                        "key": "gpl-3.0",
                        "name": "GNU General Public License v3.0",
                        "spdx_id": "GPL-3.0",
                        "url": "https://api.github.com/licenses/gpl-3.0",
                        "node_id": "MDc6TGljZW5zZTk="
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [],
                    "visibility": "public",
                    "forks": 14,
                    "open_issues": 4,
                    "watchers": 56,
                    "default_branch": "pip",
                    "permissions": {
                        "admin": false,
                        "maintain": false,
                        "push": false,
                        "triage": false,
                        "pull": true
                    }
                },
                "body": "python 3.8.5, ribodetector 0.2.3 (installed via pip), on Ubuntu 20.04 LTS, invoked on a public dataset;\r\nprocess just hangs after a few seconds, no CPU consumption at all, and can't be cancelled via Ctrl-C\r\n(needs to be killed instead).\r\n\r\n```\r\nribodetector_cpu \\\r\n  -l 100 -t 10 \\\r\n  -e norrna \\\r\n  -i ../SRR3569371/SRR3569371_1.fastq ../SRR3569371/SRR3569371_2.fastq \\\r\n  -o read1.fq read2.fq\r\n```\r\n\r\nWhen invoked with `python -m trace --trace`, it seems to get stuck in the CPU detection step:\r\n\r\n```\r\ndetect_cpu.py(71):             cd, self.config['state_file'][model_file_ext]).replace('.pth', '.onnx')\r\ndetect_cpu.py(70):         self.model_file = os.path.join(\r\ndetect_cpu.py(74):         so = onnxruntime.SessionOptions()\r\ndetect_cpu.py(77):         so.graph_optimization_level = onnxruntime.GraphOptimizationLevel.ORT_ENABLE_ALL\r\ndetect_cpu.py(79):         self.model = onnxruntime.InferenceSession(self.model_file, so)\r\n --- modulename: onnxruntime_inference_collection, funcname: __init__\r\nonnxruntime_inference_collection.py(315):         Session.__init__(self)\r\n --- modulename: onnxruntime_inference_collection, funcname: __init__\r\nonnxruntime_inference_collection.py(104):         self._sess = None\r\nonnxruntime_inference_collection.py(105):         self._enable_fallback = True\r\nonnxruntime_inference_collection.py(317):         if isinstance(path_or_bytes, str):\r\nonnxruntime_inference_collection.py(318):             self._model_path = path_or_bytes\r\nonnxruntime_inference_collection.py(319):             self._model_bytes = None\r\nonnxruntime_inference_collection.py(326):         self._sess_options = sess_options\r\nonnxruntime_inference_collection.py(327):         self._sess_options_initial = sess_options\r\nonnxruntime_inference_collection.py(328):         self._enable_fallback = True\r\nonnxruntime_inference_collection.py(329):         self._read_config_from_model = os.environ.get('ORT_LOAD_CONFIG_FROM_MODEL') == '1'\r\n --- modulename: _collections_abc, funcname: get\r\n_collections_abc.py(659):         try:\r\n_collections_abc.py(660):             return self[key]\r\n --- modulename: os, funcname: __getitem__\r\nos.py(671):         try:\r\nos.py(672):             value = self._data[self.encodekey(key)]\r\n --- modulename: os, funcname: encode\r\nos.py(749):             if not isinstance(value, str):\r\nos.py(751):             return value.encode(encoding, 'surrogateescape')\r\nos.py(673):         except KeyError:\r\nos.py(675):             raise KeyError(key) from None\r\n_collections_abc.py(661):         except KeyError:\r\n_collections_abc.py(662):             return default\r\nonnxruntime_inference_collection.py(332):         disabled_optimizers = kwargs['disabled_optimizers'] if 'disabled_optimizers' in kwargs else None\r\nonnxruntime_inference_collection.py(334):         try:\r\nonnxruntime_inference_collection.py(335):             self._create_inference_session(providers, provider_options, disabled_optimizers)\r\n --- modulename: onnxruntime_inference_collection, funcname: _create_inference_session\r\nonnxruntime_inference_collection.py(347):         available_providers = C.get_available_providers()\r\nonnxruntime_inference_collection.py(350):         if 'TensorrtExecutionProvider' in available_providers:\r\nonnxruntime_inference_collection.py(353):             self._fallback_providers = ['CPUExecutionProvider']\r\nonnxruntime_inference_collection.py(356):         providers, provider_options = check_and_normalize_provider_args(providers,\r\nonnxruntime_inference_collection.py(357):                                                                         provider_options,\r\nonnxruntime_inference_collection.py(358):                                                                         available_providers)\r\nonnxruntime_inference_collection.py(356):         providers, provider_options = check_and_normalize_provider_args(providers,\r\n --- modulename: onnxruntime_inference_collection, funcname: check_and_normalize_provider_args\r\nonnxruntime_inference_collection.py(48):     if providers is None:\r\nonnxruntime_inference_collection.py(49):         return [], []\r\nonnxruntime_inference_collection.py(359):         if providers == [] and len(available_providers) > 1:\r\nonnxruntime_inference_collection.py(366):         session_options = self._sess_options if self._sess_options else C.get_default_session_options()\r\nonnxruntime_inference_collection.py(367):         if self._model_path:\r\nonnxruntime_inference_collection.py(368):             sess = C.InferenceSession(session_options, self._model_path, True, self._read_config_from_model)\r\n```\r\n\r\nI added some debugging output to verify `self.model_file`, which correctly points to the `ribodetector_600k_variable_len70_101_epoch47.onnx` file.\r\n\r\nAny ideas?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/hzi-bifo/RiboDetector/issues/6/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "event": "cross-referenced"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1060644639",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10736#issuecomment-1060644639",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10736",
        "id": 1060644639,
        "node_id": "IC_kwDOCVq1mM4_OCcf",
        "user": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-07T12:38:53Z",
        "updated_at": "2022-03-07T12:38:53Z",
        "author_association": "NONE",
        "body": "Seems to be solved by set \r\n```\r\nso.intra_op_num_threads = 1\r\nso.inter_op_num_threads = 1\r\n```\r\nand SLURM `--cpus-per-task <num_cpus> --threads-per-core 1`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1060644639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 6194564167,
        "node_id": "CE_lADOCVq1mM5E_0dhzwAAAAFxOYxH",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/6194564167",
        "actor": {
            "login": "dawnmy",
            "id": 497428,
            "node_id": "MDQ6VXNlcjQ5NzQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/497428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dawnmy",
            "html_url": "https://github.com/dawnmy",
            "followers_url": "https://api.github.com/users/dawnmy/followers",
            "following_url": "https://api.github.com/users/dawnmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dawnmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dawnmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dawnmy/subscriptions",
            "organizations_url": "https://api.github.com/users/dawnmy/orgs",
            "repos_url": "https://api.github.com/users/dawnmy/repos",
            "events_url": "https://api.github.com/users/dawnmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dawnmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2022-03-07T12:38:53Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "mkuemmel",
            "id": 10818276,
            "node_id": "MDQ6VXNlcjEwODE4Mjc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10818276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mkuemmel",
            "html_url": "https://github.com/mkuemmel",
            "followers_url": "https://api.github.com/users/mkuemmel/followers",
            "following_url": "https://api.github.com/users/mkuemmel/following{/other_user}",
            "gists_url": "https://api.github.com/users/mkuemmel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mkuemmel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mkuemmel/subscriptions",
            "organizations_url": "https://api.github.com/users/mkuemmel/orgs",
            "repos_url": "https://api.github.com/users/mkuemmel/repos",
            "events_url": "https://api.github.com/users/mkuemmel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mkuemmel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-09T08:53:11Z",
        "updated_at": "2022-06-09T08:53:11Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482",
                "repository_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus",
                "labels_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482/labels{/name}",
                "comments_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482/comments",
                "events_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482/events",
                "html_url": "https://github.com/astrorama/SourceXtractorPlusPlus/issues/482",
                "id": 1265809547,
                "node_id": "I_kwDOBivU4c5LcriL",
                "number": 482,
                "title": "ONNX does not run with slurm",
                "user": {
                    "login": "mkuemmel",
                    "id": 10818276,
                    "node_id": "MDQ6VXNlcjEwODE4Mjc2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10818276?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mkuemmel",
                    "html_url": "https://github.com/mkuemmel",
                    "followers_url": "https://api.github.com/users/mkuemmel/followers",
                    "following_url": "https://api.github.com/users/mkuemmel/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mkuemmel/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mkuemmel/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mkuemmel/subscriptions",
                    "organizations_url": "https://api.github.com/users/mkuemmel/orgs",
                    "repos_url": "https://api.github.com/users/mkuemmel/repos",
                    "events_url": "https://api.github.com/users/mkuemmel/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mkuemmel/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "marcschefer",
                    "id": 31961290,
                    "node_id": "MDQ6VXNlcjMxOTYxMjkw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/31961290?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/marcschefer",
                    "html_url": "https://github.com/marcschefer",
                    "followers_url": "https://api.github.com/users/marcschefer/followers",
                    "following_url": "https://api.github.com/users/marcschefer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/marcschefer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/marcschefer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/marcschefer/subscriptions",
                    "organizations_url": "https://api.github.com/users/marcschefer/orgs",
                    "repos_url": "https://api.github.com/users/marcschefer/repos",
                    "events_url": "https://api.github.com/users/marcschefer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/marcschefer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "marcschefer",
                        "id": 31961290,
                        "node_id": "MDQ6VXNlcjMxOTYxMjkw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31961290?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/marcschefer",
                        "html_url": "https://github.com/marcschefer",
                        "followers_url": "https://api.github.com/users/marcschefer/followers",
                        "following_url": "https://api.github.com/users/marcschefer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/marcschefer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/marcschefer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/marcschefer/subscriptions",
                        "organizations_url": "https://api.github.com/users/marcschefer/orgs",
                        "repos_url": "https://api.github.com/users/marcschefer/repos",
                        "events_url": "https://api.github.com/users/marcschefer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/marcschefer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/milestones/7",
                    "html_url": "https://github.com/astrorama/SourceXtractorPlusPlus/milestone/7",
                    "labels_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/milestones/7/labels",
                    "id": 8669430,
                    "node_id": "MI_kwDOBivU4c4AhEj2",
                    "number": 7,
                    "title": "0.20",
                    "description": null,
                    "creator": {
                        "login": "marcschefer",
                        "id": 31961290,
                        "node_id": "MDQ6VXNlcjMxOTYxMjkw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31961290?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/marcschefer",
                        "html_url": "https://github.com/marcschefer",
                        "followers_url": "https://api.github.com/users/marcschefer/followers",
                        "following_url": "https://api.github.com/users/marcschefer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/marcschefer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/marcschefer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/marcschefer/subscriptions",
                        "organizations_url": "https://api.github.com/users/marcschefer/orgs",
                        "repos_url": "https://api.github.com/users/marcschefer/repos",
                        "events_url": "https://api.github.com/users/marcschefer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/marcschefer/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 8,
                    "closed_issues": 0,
                    "state": "open",
                    "created_at": "2022-11-18T12:41:06Z",
                    "updated_at": "2022-11-18T13:55:50Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 1,
                "created_at": "2022-06-09T08:53:11Z",
                "updated_at": "2022-11-18T12:42:09Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "repository": {
                    "id": 103535841,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxMDM1MzU4NDE=",
                    "name": "SourceXtractorPlusPlus",
                    "full_name": "astrorama/SourceXtractorPlusPlus",
                    "private": false,
                    "owner": {
                        "login": "astrorama",
                        "id": 48352705,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ4MzUyNzA1",
                        "avatar_url": "https://avatars.githubusercontent.com/u/48352705?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/astrorama",
                        "html_url": "https://github.com/astrorama",
                        "followers_url": "https://api.github.com/users/astrorama/followers",
                        "following_url": "https://api.github.com/users/astrorama/following{/other_user}",
                        "gists_url": "https://api.github.com/users/astrorama/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/astrorama/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/astrorama/subscriptions",
                        "organizations_url": "https://api.github.com/users/astrorama/orgs",
                        "repos_url": "https://api.github.com/users/astrorama/repos",
                        "events_url": "https://api.github.com/users/astrorama/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/astrorama/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/astrorama/SourceXtractorPlusPlus",
                    "description": "SourceXtractor++, the next generation SExtractor",
                    "fork": false,
                    "url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus",
                    "forks_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/forks",
                    "keys_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/teams",
                    "hooks_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/hooks",
                    "issue_events_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/events",
                    "assignees_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/tags",
                    "blobs_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/languages",
                    "stargazers_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/stargazers",
                    "contributors_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/contributors",
                    "subscribers_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/subscribers",
                    "subscription_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/subscription",
                    "commits_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/merges",
                    "archive_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/downloads",
                    "issues_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/labels{/name}",
                    "releases_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/deployments",
                    "created_at": "2017-09-14T13:29:59Z",
                    "updated_at": "2022-12-14T22:44:39Z",
                    "pushed_at": "2022-12-20T09:10:34Z",
                    "git_url": "git://github.com/astrorama/SourceXtractorPlusPlus.git",
                    "ssh_url": "git@github.com:astrorama/SourceXtractorPlusPlus.git",
                    "clone_url": "https://github.com/astrorama/SourceXtractorPlusPlus.git",
                    "svn_url": "https://github.com/astrorama/SourceXtractorPlusPlus",
                    "homepage": "https://astrorama.github.io/SourceXtractorPlusPlus/",
                    "size": 13002,
                    "stargazers_count": 51,
                    "watchers_count": 51,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": false,
                    "has_pages": true,
                    "has_discussions": true,
                    "forks_count": 5,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 45,
                    "license": {
                        "key": "lgpl-3.0",
                        "name": "GNU Lesser General Public License v3.0",
                        "spdx_id": "LGPL-3.0",
                        "url": "https://api.github.com/licenses/lgpl-3.0",
                        "node_id": "MDc6TGljZW5zZTEy"
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "astronomy",
                        "c-plus-plus",
                        "model-fitting",
                        "science"
                    ],
                    "visibility": "public",
                    "forks": 5,
                    "open_issues": 45,
                    "watchers": 51,
                    "default_branch": "develop",
                    "permissions": {
                        "admin": false,
                        "maintain": false,
                        "push": false,
                        "triage": false,
                        "pull": true
                    }
                },
                "body": "Since we are using the ONNX runtime for the ML detection we suffer from a problem between ONNX and slurm:\r\nhttps://github.com/microsoft/onnxruntime/issues/10736\r\n\r\nSome comments from Alejandro:\r\n<pre>\r\nIt seems to be C++ code\r\n\r\nhttp://www.xavierdupre.fr/app/onnxruntime/helpsphinx/api_summary.html#onnxruntime.SessionOptions.intra_op_num_threads\r\n\r\nIt would have to be added here I guess\r\nhttps://github.com/astrorama/SourceXtractorPlusPlus/blob/2823f0c939a5464d4793994c71367c24b2aa32db/SEImplementation/src/lib/Common/OnnxModel.cpp#L23\r\n\r\nNot sure how to expose that to the user of sourcextractor++, though, because there are a *lot* of options.\r\n</pre>",
                "reactions": {
                    "url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/astrorama/SourceXtractorPlusPlus/issues/482/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "event": "cross-referenced"
    }
]