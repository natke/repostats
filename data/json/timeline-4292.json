[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647743241",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-647743241",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 647743241,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc0MzI0MQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-22T20:06:52Z",
        "updated_at": "2020-06-22T20:06:52Z",
        "author_association": "MEMBER",
        "body": "Any chance you could share the .onnx model file with the inputs in .pb format ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647743241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647766909",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-647766909",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 647766909,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc2NjkwOQ==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-22T21:00:16Z",
        "updated_at": "2020-06-23T06:17:39Z",
        "author_association": "NONE",
        "body": "The non optimized model is that one:\r\nhttps://itlab-public-data.s3-eu-west-1.amazonaws.com/onnx/bert-base-cased.zip\r\n(same as https://github.com/microsoft/onnxruntime/issues/4293)\r\n\r\nInput (16 tokens):\r\n```python\r\n{'input_ids': tensor([[     0,    581,  25545,  75678,    111,   1614,  54916,    136,     70,\r\n         118055,   5700,   2481,    111,    479,  35662,      2]]), 'attention_mask': tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])}\r\n```\r\nThis model doesn't use `token_type_ids`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/647766909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648481562",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648481562",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648481562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODQ4MTU2Mg==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-23T23:34:18Z",
        "updated_at": "2020-06-23T23:55:04Z",
        "author_association": "MEMBER",
        "body": "This is not a bug in the runtime as it seems like the model has had a weird conversion issue pertaining to one of the initializers. \r\n\r\nAttention masks can take 2 values - 0 or 1. It seems like the initializer has only data corresponding to mask == 0 and somehow missing stuff pertaining to mask == 1 (which is the provided input).\r\n\r\nHow did I get to this conclusion ? Please see below - \r\n\r\nThe `Gather` node that the exception is being thrown at (marked in red) has a `data` initializer of shape [**1**, 768]. Here is the Gather spec: https://github.com/onnx/onnx/blob/master/docs/Operators.md#Gather. The provided masks which flow in as `indices` of Gather now hold values of 1, which by definition of the spec are outside the range of dim value (axis defaulting to 0).\r\n\r\n![image](https://user-images.githubusercontent.com/9969784/85476833-f97cf480-b56d-11ea-83b7-2d9018e36be7.png)\r\n\r\nThis initializer needs to have been of shape [**2**, 768] and it is missing a set of 768 values corresponding to mask == 1.\r\n\r\nTo further add justification, I took another BERT based onnx model to see if I could confirm this suspicion and sure enough that model had masks fed into a Gather node that had an initializer of shape [2, 768] - \r\n\r\n![image](https://user-images.githubusercontent.com/9969784/85477236-c0914f80-b56e-11ea-9f6b-836ac17b8934.png)\r\n\r\n\r\nPlease open an issue with the Torch ONNX exporter project with these details.\r\n\r\nP.S. - As for the model only failing in the CPU EP, the CUDA EP by design doesn't  throw when it notices an index out of bound, it treats it as a no-op (i.e.) the output value is 0. This is because the operation is performed on multiple CUDA threads, whereas CPU has validation logic which throws. This design is common across other frameworks - pasting tf link - https://www.tensorflow.org/api_docs/python/tf/gather.\r\n\r\nClosing as this is a converter issue and not an ORT issue.\r\n\r\nCC: @neginraoof @spandantiwari for the PyTorch export issue",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648481562/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 3475188145,
        "node_id": "MDExOkNsb3NlZEV2ZW50MzQ3NTE4ODE0NQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475188145",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:34:19Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "id": 3475188150,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NTE4ODE1MA==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475188150",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:34:19Z",
        "performed_via_github_app": null
    },
    {
        "id": 3475188151,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzUxODgxNTE=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475188151",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:34:19Z",
        "performed_via_github_app": null
    },
    {
        "id": 3475188153,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3NTE4ODE1Mw==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475188153",
        "actor": {
            "login": "spandantiwari",
            "id": 23646532,
            "node_id": "MDQ6VXNlcjIzNjQ2NTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/23646532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spandantiwari",
            "html_url": "https://github.com/spandantiwari",
            "followers_url": "https://api.github.com/users/spandantiwari/followers",
            "following_url": "https://api.github.com/users/spandantiwari/following{/other_user}",
            "gists_url": "https://api.github.com/users/spandantiwari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spandantiwari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spandantiwari/subscriptions",
            "organizations_url": "https://api.github.com/users/spandantiwari/orgs",
            "repos_url": "https://api.github.com/users/spandantiwari/repos",
            "events_url": "https://api.github.com/users/spandantiwari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spandantiwari/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:34:19Z",
        "performed_via_github_app": null
    },
    {
        "id": 3475188158,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzUxODgxNTg=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475188158",
        "actor": {
            "login": "spandantiwari",
            "id": 23646532,
            "node_id": "MDQ6VXNlcjIzNjQ2NTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/23646532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spandantiwari",
            "html_url": "https://github.com/spandantiwari",
            "followers_url": "https://api.github.com/users/spandantiwari/followers",
            "following_url": "https://api.github.com/users/spandantiwari/following{/other_user}",
            "gists_url": "https://api.github.com/users/spandantiwari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spandantiwari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spandantiwari/subscriptions",
            "organizations_url": "https://api.github.com/users/spandantiwari/orgs",
            "repos_url": "https://api.github.com/users/spandantiwari/repos",
            "events_url": "https://api.github.com/users/spandantiwari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spandantiwari/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:34:19Z",
        "performed_via_github_app": null
    },
    {
        "id": 3475194949,
        "node_id": "MDEyOkxhYmVsZWRFdmVudDM0NzUxOTQ5NDk=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3475194949",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-23T23:37:50Z",
        "label": {
            "name": "Converter",
            "color": "006b75"
        },
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-23T23:42:36Z",
        "updated_at": "2020-06-23T23:42:36Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293",
                "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
                "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293/labels{/name}",
                "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293/comments",
                "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293/events",
                "html_url": "https://github.com/microsoft/onnxruntime/issues/4293",
                "id": 642645607,
                "node_id": "MDU6SXNzdWU2NDI2NDU2MDc=",
                "number": 4293,
                "title": "FusionLayerNormalization change output significantly on Transformers",
                "user": {
                    "login": "pommedeterresautee",
                    "id": 1029874,
                    "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pommedeterresautee",
                    "html_url": "https://github.com/pommedeterresautee",
                    "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
                    "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
                    "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
                    "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
                    "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2020-06-21T21:37:20Z",
                "updated_at": "2020-06-26T06:53:41Z",
                "closed_at": "2020-06-25T11:12:21Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 156939672,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxNTY5Mzk2NzI=",
                    "name": "onnxruntime",
                    "full_name": "microsoft/onnxruntime",
                    "private": false,
                    "owner": {
                        "login": "microsoft",
                        "id": 6154722,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjYxNTQ3MjI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6154722?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/microsoft",
                        "html_url": "https://github.com/microsoft",
                        "followers_url": "https://api.github.com/users/microsoft/followers",
                        "following_url": "https://api.github.com/users/microsoft/following{/other_user}",
                        "gists_url": "https://api.github.com/users/microsoft/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/microsoft/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/microsoft/subscriptions",
                        "organizations_url": "https://api.github.com/users/microsoft/orgs",
                        "repos_url": "https://api.github.com/users/microsoft/repos",
                        "events_url": "https://api.github.com/users/microsoft/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/microsoft/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/microsoft/onnxruntime",
                    "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator",
                    "fork": false,
                    "url": "https://api.github.com/repos/microsoft/onnxruntime",
                    "forks_url": "https://api.github.com/repos/microsoft/onnxruntime/forks",
                    "keys_url": "https://api.github.com/repos/microsoft/onnxruntime/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/microsoft/onnxruntime/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/microsoft/onnxruntime/teams",
                    "hooks_url": "https://api.github.com/repos/microsoft/onnxruntime/hooks",
                    "issue_events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/microsoft/onnxruntime/events",
                    "assignees_url": "https://api.github.com/repos/microsoft/onnxruntime/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/microsoft/onnxruntime/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/microsoft/onnxruntime/tags",
                    "blobs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/microsoft/onnxruntime/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/microsoft/onnxruntime/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/microsoft/onnxruntime/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/microsoft/onnxruntime/languages",
                    "stargazers_url": "https://api.github.com/repos/microsoft/onnxruntime/stargazers",
                    "contributors_url": "https://api.github.com/repos/microsoft/onnxruntime/contributors",
                    "subscribers_url": "https://api.github.com/repos/microsoft/onnxruntime/subscribers",
                    "subscription_url": "https://api.github.com/repos/microsoft/onnxruntime/subscription",
                    "commits_url": "https://api.github.com/repos/microsoft/onnxruntime/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/microsoft/onnxruntime/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/microsoft/onnxruntime/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/microsoft/onnxruntime/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/microsoft/onnxruntime/merges",
                    "archive_url": "https://api.github.com/repos/microsoft/onnxruntime/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/microsoft/onnxruntime/downloads",
                    "issues_url": "https://api.github.com/repos/microsoft/onnxruntime/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/microsoft/onnxruntime/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/microsoft/onnxruntime/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/microsoft/onnxruntime/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/labels{/name}",
                    "releases_url": "https://api.github.com/repos/microsoft/onnxruntime/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/microsoft/onnxruntime/deployments",
                    "created_at": "2018-11-10T02:22:53Z",
                    "updated_at": "2022-12-20T19:02:34Z",
                    "pushed_at": "2022-12-20T19:11:59Z",
                    "git_url": "git://github.com/microsoft/onnxruntime.git",
                    "ssh_url": "git@github.com:microsoft/onnxruntime.git",
                    "clone_url": "https://github.com/microsoft/onnxruntime.git",
                    "svn_url": "https://github.com/microsoft/onnxruntime",
                    "homepage": "https://www.onnxruntime.ai",
                    "size": 1018648,
                    "stargazers_count": 7949,
                    "watchers_count": 7949,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": true,
                    "has_discussions": true,
                    "forks_count": 1862,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 1453,
                    "license": {
                        "key": "mit",
                        "name": "MIT License",
                        "spdx_id": "MIT",
                        "url": "https://api.github.com/licenses/mit",
                        "node_id": "MDc6TGljZW5zZTEz"
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "ai-framework",
                        "deep-learning",
                        "hacktoberfest",
                        "hardware-acceleration",
                        "machine-learning",
                        "neural-networks",
                        "onnx",
                        "pytorch",
                        "scikit-learn",
                        "tensorflow"
                    ],
                    "visibility": "public",
                    "forks": 1862,
                    "open_issues": 1453,
                    "watchers": 7949,
                    "default_branch": "main",
                    "permissions": {
                        "admin": false,
                        "maintain": true,
                        "push": true,
                        "triage": true,
                        "pull": true
                    }
                },
                "body": "**Describe the bug**\r\nWhen Transformers optimization are applied, if enabled, `FusionLayerNormalization` may change significantly the output of the model (compared to original Pytorch output).\r\nIt may be related to the shape of the model input.\r\n\r\n**Urgency**\r\nmiddle, disabling this optimization gives the correct result, but makes the model 15% slower than with it enabled on 200 tokens length sequence (making it one of the most effective optimization).\r\n\r\n\r\n**System information**\r\n\r\n* Google Colab\r\n* P100\r\n* all libraries up to date installed from pip (onnx runtime gpu 1.3.1, onnxruntime-tools 1.3.0.1009, transformers 2.11)\r\n\r\n(also tried on local machine with Ubuntu 20.4, CUDA 10.1, Torch 1.5.0, and other lib up to date. GPU 2080 TI -> same results)\r\n\r\n**To Reproduce**\r\n\r\nBelow we download a model, infer something on pytorch, convert the model to onnx format, infer something, optimize onnx model with default parameter, including applying FusionLayerNormalization, infer something, optimize the original onnx model without FusionLayerNormalization, infer something. Then we compare results.\r\n\r\n```python\r\nfrom transformers import  AutoTokenizer, AutoModelForMultipleChoice\r\nimport torch\r\nfrom onnxruntime import InferenceSession, SessionOptions, get_all_providers\r\n# will download a model\r\nmodel_pt = AutoModelForMultipleChoice.from_pretrained(\"xlm-roberta-base\")\r\nmodel_pt.to(device=\"cuda\")\r\nmodel_pt.eval()\r\ntokenizer = AutoTokenizer.from_pretrained(\"xlm-roberta-base\")\r\n\r\n\r\ntext = \"\"\"The rapid growth of submissions and the increasing popularity of preprints have caused several problems to the current ACL reviewing system. To address these problems, the ACL Committee on Reviewing has been working on two proposals for reforming the reviewing system of ACL-related conferences: short-term and long-term. The following document presents the short-term proposals: https://www.aclweb.org/adminwiki/index.php?title=Short-Term_Reform_Propo... It consists of four complementary actions that can be realistically implemented to improve the ACL review process in the near future (while the committee continues to investigate changes that require a longer lead time). These actions address several of the problems identified in the proposal. The ACL Executive Committee has adopted these proposals. We hope that their implementation will have a quick positive impact on reviewing at ACL conferences.\"\"\"\r\n\r\n# Inputs are provided through numpy array\r\nmodel_inputs = tokenizer.encode_plus(text=text,\r\n                                 add_special_tokens=True,\r\n                                 max_length=16,\r\n                                 pad_to_max_length=False,\r\n                                 return_token_type_ids=False,\r\n                                 return_attention_mask=True,\r\n                                 return_overflowing_tokens=False,\r\n                                 return_special_tokens_mask=False,\r\n                                 return_tensors='pt',\r\n                                 )\r\n\r\nmodel_inputs = {k: v.unsqueeze(dim=0).to(device=\"cuda\") for k, v in model_inputs.items()}\r\nwith torch.no_grad():\r\n    score_pytorch, = model_pt(**model_inputs) # type: torch.Tensor\r\n\r\nprint(f\"pytorch score output: {score_pytorch}\")\r\n\r\ndef create_model_for_provider(model_path: str, provider: str) -> InferenceSession:\r\n\r\n  assert provider in get_all_providers(), f\"provider {provider} not found, {get_all_providers()}\"\r\n\r\n  # Few properties than might have an impact on performances (provided by MS)\r\n  options = SessionOptions()\r\n  options.intra_op_num_threads = 1\r\n\r\n  # Load the model as a graph and prepare the CPU backend\r\n  return InferenceSession(model_path, options, providers=[provider])\r\n\r\n\r\n!rm -rf onnx/\r\n!mkdir onnx\r\n# https://github.com/microsoft/onnxruntime/blob/master/onnxruntime/python/tools/transformers/notebooks/PyTorch_Bert-Squad_OnnxRuntime_GPU.ipynb\r\n# from transformers.convert_graph_to_onnx import convert\r\n# convert(framework=\"pt\", model=\"./output/xlm-r\", output=\"onnx/bert-base-cased.onnx\", opset=11)\r\n\r\nsymbolic_names = {0: 'batch_size', 1: 'answers', 2: 'sequence'}\r\n\r\ninputs = {\r\n    'input_ids':      model_inputs[\"input_ids\"],\r\n    'attention_mask': model_inputs[\"attention_mask\"],\r\n}\r\n\r\nwith torch.no_grad():\r\n    torch.onnx.export(model_pt,                                         # model being run\r\n                      args=tuple(inputs.values()),                      # model input (or a tuple for multiple inputs)\r\n                      f=\"onnx/bert-base-cased.onnx\",                    # where to save the model (can be a file or file-like object)\r\n                      opset_version=11,                                 # the ONNX version to export the model to\r\n                      do_constant_folding=True,                         # whether to execute constant folding for optimization\r\n                      input_names=['input_ids',                         # the model's input names\r\n                                   'attention_mask'],\r\n                      output_names=['score'],                    # the model's output names\r\n                      dynamic_axes={'input_ids': symbolic_names,        # variable length axes\r\n                                    'attention_mask' : symbolic_names,\r\n                                    'score' : symbolic_names,\r\n                                    },\r\n                      enable_onnx_checker=False,\r\n                      verbose=False,\r\n                      use_external_data_format=False,\r\n                      )\r\n\r\ninputs_onnx = {k: v.detach().cpu().numpy() for k, v in model_inputs.items()}\r\n\r\ncpu_model = create_model_for_provider(\"onnx/bert-base-cased.onnx\", \"CUDAExecutionProvider\")\r\n# Run the model (None = get all the outputs)\r\nscore_onnx = cpu_model.run(None, inputs_onnx)\r\n# Print information about outputs\r\nprint(f\"onnx score output: {score_onnx}\")\r\n\r\n!python -m onnxruntime_tools.optimizer_cli \\\r\n    --input onnx/bert-base-cased.onnx \\\r\n    --output onnx/bert-base-cased-optim.onnx \\\r\n    --num_heads 8 \\\r\n    --hidden_size 768 \\\r\n\r\ncpu_model = create_model_for_provider(\"onnx/bert-base-cased-optim.onnx\", \"CUDAExecutionProvider\")\r\n# Run the model (None = get all the outputs)\r\nscore_onnx = cpu_model.run(None, inputs_onnx)\r\n# Print information about outputs\r\nprint(f\"onnx optimized with layer norm fusion score output: {score_onnx}\")\r\n\r\n!python -m onnxruntime_tools.optimizer_cli \\\r\n    --input onnx/bert-base-cased.onnx \\\r\n    --output onnx/bert-base-cased-optim.onnx \\\r\n    --num_heads 8 \\\r\n    --hidden_size 768 \\\r\n    --disable_layer_norm\r\n\r\ncpu_model = create_model_for_provider(\"onnx/bert-base-cased-optim.onnx\", \"CUDAExecutionProvider\")\r\n# Run the model (None = get all the outputs)\r\nscore_onnx = cpu_model.run(None, inputs_onnx)\r\n# Print information about outputs\r\nprint(f\"onnx optimized without layer norm fusion score output: {score_onnx}\")\r\n```\r\n\r\nIt will output \r\n\r\n```log\r\npytorch score output: tensor([[0.0985]], device='cuda:0')\r\nonnx score output: [array([[0.09846155]], dtype=float32)]\r\noptimize_by_onnxruntime: Save optimized model by onnxruntime to onnx/bert-base-cased_o1_cpu.onnx\r\n               apply: Fused LayerNormalization count: 25\r\n               apply: Fused LayerNormalization count: 0\r\n               apply: Fused Gelu count: 12\r\n               apply: Fused FastGelu count: 0\r\n               apply: Fused Reshape count: 0\r\n               apply: Fused SkipLayerNormalization count: 25\r\n               apply: Fused Attention count: 12\r\n         prune_graph: Graph pruned: 0 inputs, 0 outputs and 4 nodes are removed\r\n                fuse: Failed to find position embedding\r\n               apply: Fused EmbedLayerNormalization(with mask) count: 0\r\n         prune_graph: Graph pruned: 0 inputs, 0 outputs and 0 nodes are removed\r\n               apply: Fused FastGelu(add bias) count: 0\r\n               apply: Fused BiasGelu count: 12\r\n               apply: Fused SkipLayerNormalization(add bias) count: 24\r\n            optimize: opset verion: 11\r\n  save_model_to_file: Output model to onnx/bert-base-cased-optim.onnx\r\nget_fused_operator_statistics: Optimized operators:{'EmbedLayerNormalization': 0, 'Attention': 12, 'Gelu': 0, 'FastGelu': 0, 'BiasGelu': 12, 'LayerNormalization': 0, 'SkipLayerNormalization': 25}\r\n  is_fully_optimized: EmbedLayer=0, Attention=12, Gelu=12, LayerNormalization=25, Successful=False\r\n                main: \u001b[33mThe output model is not fully optimized. It might not be usable.\u001b[0m\r\nonnx optimized with layer norm fusion score output: [array([[0.11336881]], dtype=float32)]\r\noptimize_by_onnxruntime: Save optimized model by onnxruntime to onnx/bert-base-cased_o1_cpu.onnx\r\n               apply: Fused Gelu count: 12\r\n               apply: Fused FastGelu count: 0\r\n               apply: Fused Reshape count: 0\r\n               apply: Fused SkipLayerNormalization count: 0\r\n               apply: Fused Attention count: 0\r\n               apply: Fused EmbedLayerNormalization(with mask) count: 0\r\n         prune_graph: Graph pruned: 0 inputs, 0 outputs and 0 nodes are removed\r\n               apply: Fused FastGelu(add bias) count: 0\r\n               apply: Fused BiasGelu count: 12\r\n               apply: Fused SkipLayerNormalization(add bias) count: 0\r\n            optimize: opset verion: 11\r\n  save_model_to_file: Output model to onnx/bert-base-cased-optim.onnx\r\nget_fused_operator_statistics: Optimized operators:{'EmbedLayerNormalization': 0, 'Attention': 0, 'Gelu': 0, 'FastGelu': 0, 'BiasGelu': 12, 'LayerNormalization': 0, 'SkipLayerNormalization': 0}\r\n  is_fully_optimized: EmbedLayer=0, Attention=0, Gelu=12, LayerNormalization=0, Successful=False\r\n                main: \u001b[33mThe output model is not fully optimized. It might not be usable.\u001b[0m\r\nonnx optimized without layer norm fusion score output: [array([[0.09846155]], dtype=float32)]\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\nPytorch, Onnx non optimized and Onnx optimized models should have approximately the same scores.  \r\nHere it is not the case:\r\n- Pytorch : 0.0985\r\n- Onnx no optimization: 0.09846155\r\n- Onnx optimized: **0.11336881**\r\n- Onnx optimized but without layer norm : 0.09846155\r\n\r\nWith this example, the difference may seem small thing, on other examples, it is 16.4 instead of 2.5, ...\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Additional context**\r\nThe code of `FusionLayerNormalization` makes some supposition about the dimensions that should be modified.  \r\nHere the model is for a `MultiChoice` task (a classical task managed out of the box by the Transformers library from Huggingface) and the input has a shape a bit different from the classification task.\r\nThe issue may be related to this point (not sure).",
                "reactions": {
                    "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4293/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "event": "cross-referenced"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648776822",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648776822",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648776822,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODc3NjgyMg==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T11:59:56Z",
        "updated_at": "2020-06-24T11:59:56Z",
        "author_association": "NONE",
        "body": "Thank you a lot for the tip!\r\nGoing deeper, I realize that the Gather operation is linked to `roberta.embeddings.token_type_embeddings.weight` matrix... but this model (and all Roberta based AFAIK) doesn't use token type input (as you can see in the code above, during input generation we set this parameter: `return_token_type_ids=False,`).\r\n\r\nSo basically it's using a matrix which should not be here (it's here because of the `Roberta` class inheritance from `Bert` class in Transformers). Clearly, it doesn't make any sense.\r\n\r\n![image](https://user-images.githubusercontent.com/1029874/85551249-1a068680-b622-11ea-8d68-ae386f922873.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648776822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648895016",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648895016",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648895016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg5NTAxNg==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T15:33:15Z",
        "updated_at": "2020-06-24T15:51:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "I tried your repro script, and I'm seeing the error below when running pytorch model:\r\n\r\nIndexError: index out of range in self: from torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)\r\n\r\nLooks like attentions_mask and input_type_ids are swapped in BertModel. Can you confirm this?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648895016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648931222",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648931222",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648931222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODkzMTIyMg==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T16:37:06Z",
        "updated_at": "2020-06-24T16:38:10Z",
        "author_association": "NONE",
        "body": "I get the same error only if I run pytorch on CPU (which I was not doing). I checked on my machine and a fresh one from our cloud.\r\nIt seems to match the explanation of @hariharans29 about most ML frameworks don't error on out of range when you are on GPU.\r\n@neginraoof did you modified the code I posted to run torch on CPU?\r\n\r\nRegarding the input_type_ids, I will work on it and report here... but it seems crazy to me they did such mistake and no one noticed.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648931222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 3478353897,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3ODM1Mzg5Nw==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3478353897",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-24T16:37:07Z",
        "performed_via_github_app": null
    },
    {
        "id": 3478353902,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzgzNTM5MDI=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3478353902",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-24T16:37:07Z",
        "performed_via_github_app": null
    },
    {
        "id": 3478353905,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3ODM1MzkwNQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3478353905",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-24T16:37:07Z",
        "performed_via_github_app": null
    },
    {
        "id": 3478353908,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0NzgzNTM5MDg=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3478353908",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-24T16:37:07Z",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648940972",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-648940972",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 648940972,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk0MDk3Mg==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T16:55:27Z",
        "updated_at": "2020-06-24T18:23:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "I copied your script and just changed CUDA to CPU, and hit this error on PyTorch.\r\n\r\nI think the problem happens when passing inputs_ids and attention_masks as a tuple, instead of dict, for ONNX export.\r\nThis could be due to lack of support for named optional parameters for model export. I'll look more into this.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/648940972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649007015",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649007015",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649007015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTAwNzAxNQ==",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T19:00:19Z",
        "updated_at": "2020-06-24T19:00:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, this is actually a known missing feature in exporter.\r\n\r\nCan you try the workaround below (using a wrapper class) to export the model?\r\n\r\n```\r\n        class MyAutoModel(torch.nn.Module):\r\n            def __init__(self):\r\n                super(MyAutoModel, self).__init__()\r\n                self.auto_model = AutoModelForMultipleChoice.from_pretrained(\"xlm-roberta-base\")\r\n\r\n            def forward(self,\r\n                        input_ids,\r\n                        attention_mask=None,\r\n                        labels=None,\r\n                        position_ids=None,\r\n                        head_mask=None,\r\n                        inputs_embeds=None):\r\n                return self.auto_model(input_ids,\r\n                                       token_type_ids=None,\r\n                                       attention_mask=attention_mask,\r\n                                       labels=labels,\r\n                                       position_ids=position_ids,\r\n                                       head_mask=head_mask,\r\n                                       inputs_embeds=inputs_embeds)\r\n\r\n        model = MyAutoModel()\r\n        # try export ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649007015/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649083817",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649083817",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649083817,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTA4MzgxNw==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T21:31:31Z",
        "updated_at": "2020-06-24T21:38:49Z",
        "author_association": "NONE",
        "body": "The custom class didn't fixed it. It seems to be related : https://github.com/huggingface/transformers/issues/4523 (but right the workaround doesn't work may be because here token ids is of no use unlike classical BERT?)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649083817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649091358",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649091358",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649091358,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTA5MTM1OA==",
        "user": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-24T21:49:07Z",
        "updated_at": "2020-06-24T21:54:15Z",
        "author_association": "NONE",
        "body": "Ok it also requires to reverse input as described in the issue linked in the previous message...\r\n\r\n```python\r\nfrom transformers import  AutoTokenizer, AutoModelForMultipleChoice\r\n\r\nfrom os import environ\r\n\r\nimport torch\r\nfrom psutil import cpu_count\r\n\r\nfrom onnxruntime import InferenceSession, SessionOptions, get_all_providers\r\n\r\nclass MyAutoModel(torch.nn.Module):\r\n    def __init__(self):\r\n        super(MyAutoModel, self).__init__()\r\n        self.auto_model = AutoModelForMultipleChoice.from_pretrained(\"xlm-roberta-base\")\r\n\r\n    def forward(self,\r\n                input_ids,\r\n                token_type_ids=None,\r\n                attention_mask=None,\r\n                labels=None,\r\n                position_ids=None,\r\n                head_mask=None,\r\n                inputs_embeds=None):\r\n        print(\"0---\")\r\n        print(input_ids)\r\n        print(\"1---\")\r\n        print(attention_mask)\r\n        print(\"2---\")\r\n        print(token_type_ids)\r\n        print(\"3---\")\r\n        return self.auto_model(input_ids,\r\n                                token_type_ids=token_type_ids,\r\n                                attention_mask=attention_mask,\r\n                                labels=labels,\r\n                                position_ids=position_ids,\r\n                                head_mask=head_mask,\r\n                                inputs_embeds=inputs_embeds)\r\n\r\nmodel_pt = MyAutoModel()\r\n# model_pt.to(device=\"cuda\")\r\nmodel_pt.eval()\r\ntokenizer = AutoTokenizer.from_pretrained(\"xlm-roberta-base\")\r\n\r\n\r\ntext = \"\"\"The rapid growth of submissions and the increasing popularity of preprints have caused several problems to the current ACL reviewing system. To address these problems, the ACL Committee on Reviewing has been working on two proposals for reforming the reviewing system of ACL-related conferences: short-term and long-term. The following document presents the short-term proposals: https://www.aclweb.org/adminwiki/index.php?title=Short-Term_Reform_Propo... It consists of four complementary actions that can be realistically implemented to improve the ACL review process in the near future (while the committee continues to investigate changes that require a longer lead time). These actions address several of the problems identified in the proposal. The ACL Executive Committee has adopted these proposals. We hope that their implementation will have a quick positive impact on reviewing at ACL conferences.\"\"\"\r\n\r\n# Inputs are provided through numpy array\r\nmodel_inputs = tokenizer.encode_plus(text=text,\r\n                                 add_special_tokens=True,\r\n                                 max_length=16, # short to make print easy\r\n                                 pad_to_max_length=False,\r\n                                 return_token_type_ids=True,\r\n                                 return_attention_mask=True,\r\n                                 return_overflowing_tokens=False,\r\n                                 return_special_tokens_mask=False,\r\n                                 return_tensors='pt',\r\n                                 )\r\n\r\n# \r\nmodel_inputs = {k: v.unsqueeze(dim=0) for k, v in model_inputs.items()}  # .to(device=\"cuda\")\r\nwith torch.no_grad():\r\n    score_pytorch, = model_pt(**model_inputs) # type: torch.Tensor\r\n\r\nprint(score_pytorch)\r\n\r\n\r\ndef create_model_for_provider(model_path: str, provider: str) -> InferenceSession:\r\n\r\n  assert provider in get_all_providers(), f\"provider {provider} not found, {get_all_providers()}\"\r\n\r\n  # Few properties than might have an impact on performances (provided by MS)\r\n  options = SessionOptions()\r\n  options.intra_op_num_threads = 1\r\n\r\n  # Load the model as a graph and prepare the CPU backend\r\n  return InferenceSession(model_path, options, providers=[provider])\r\n\r\n\r\n!rm -rf onnx/\r\n!mkdir onnx\r\n\r\nsymbolic_names = {0: 'batch_size', 1: 'answers', 2: 'sequence'}\r\n\r\n# order issue\r\ninputs = {\r\n    'input_ids':      model_inputs[\"input_ids\"],\r\n    'attention_mask': model_inputs[\"token_type_ids\"],\r\n    'token_type_ids': model_inputs[\"attention_mask\"],\r\n}\r\n\r\nwith torch.no_grad():\r\n    torch.onnx.export(model_pt,                                         # model being run\r\n                      args=tuple(inputs.values()),                      # model input (or a tuple for multiple inputs)\r\n                      f=\"onnx/bert-base-cased.onnx\",                    # where to save the model (can be a file or file-like object)\r\n                      opset_version=11,                                 # the ONNX version to export the model to\r\n                      do_constant_folding=True,                         # whether to execute constant folding for optimization\r\n                      input_names=['input_ids',                         # the model's input names\r\n                                   'attention_mask',\r\n                                   'token_type_ids',\r\n                                   ],\r\n                      output_names=['score'],                    # the model's output names\r\n                      dynamic_axes={'input_ids': symbolic_names,        # variable length axes\r\n                                    'attention_mask' : symbolic_names,\r\n                                    'token_type_ids': symbolic_names,\r\n                                    'score' : symbolic_names,\r\n                                    },\r\n                      enable_onnx_checker=False,\r\n                      verbose=False,\r\n                      use_external_data_format=False,\r\n                      )\r\n\r\n\r\ninputs_onnx = {k: v.detach().cpu().numpy() for k, v in inputs.items()}\r\n\r\ncpu_model = create_model_for_provider(\"onnx/bert-base-cased.onnx\", \"CPUExecutionProvider\")\r\n\r\n# Run the model (None = get all the outputs)\r\nscore_onnx = cpu_model.run(None, inputs_onnx)\r\n\r\n# Print information about outputs\r\nprint(f\"score output: {score_onnx}\")\r\n```\r\n\r\nIt will print:\r\n```\r\n0---\r\ntensor([[[     0,    581,  25545,  75678,    111,   1614,  54916,    136,\r\n              70, 118055,   5700,   2481,    111,    479,  35662,      2]]])\r\n1---\r\ntensor([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]])\r\n2---\r\ntensor([[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]])\r\n3---\r\ntensor([[0.1764]])\r\n0---\r\ntensor([[[     0,    581,  25545,  75678,    111,   1614,  54916,    136,\r\n              70, 118055,   5700,   2481,    111,    479,  35662,      2]]])\r\n1---\r\ntensor([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]])\r\n2---\r\ntensor([[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]])\r\n3---\r\n/usr/local/lib/python3.6/dist-packages/torch/tensor.py:467: RuntimeWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\r\n  'incorrect results).', category=RuntimeWarning)\r\nscore output: [array([[0.17644826]], dtype=float32)]\r\n```\r\n-> **0.1764** in both pytorch and onnx runtime!\r\n\r\nTks a lot for the help!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649091358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649152205",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4292#issuecomment-649152205",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4292",
        "id": 649152205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTE1MjIwNQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-25T01:01:37Z",
        "updated_at": "2020-06-25T01:01:37Z",
        "author_association": "MEMBER",
        "body": "Thanks @neginraoof  for the help and thanks @pommedeterresautee  for confirming that it works now.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/649152205/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 3479916889,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3OTkxNjg4OQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3479916889",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-25T01:01:37Z",
        "performed_via_github_app": null
    },
    {
        "id": 3479916890,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Nzk5MTY4OTA=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3479916890",
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-25T01:01:37Z",
        "performed_via_github_app": null
    },
    {
        "id": 3479916893,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQ3OTkxNjg5Mw==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3479916893",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-25T01:01:37Z",
        "performed_via_github_app": null
    },
    {
        "id": 3479916894,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0Nzk5MTY4OTQ=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3479916894",
        "actor": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-06-25T01:01:37Z",
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "pommedeterresautee",
            "id": 1029874,
            "node_id": "MDQ6VXNlcjEwMjk4NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1029874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pommedeterresautee",
            "html_url": "https://github.com/pommedeterresautee",
            "followers_url": "https://api.github.com/users/pommedeterresautee/followers",
            "following_url": "https://api.github.com/users/pommedeterresautee/following{/other_user}",
            "gists_url": "https://api.github.com/users/pommedeterresautee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pommedeterresautee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pommedeterresautee/subscriptions",
            "organizations_url": "https://api.github.com/users/pommedeterresautee/orgs",
            "repos_url": "https://api.github.com/users/pommedeterresautee/repos",
            "events_url": "https://api.github.com/users/pommedeterresautee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pommedeterresautee/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-20T11:27:19Z",
        "updated_at": "2020-07-20T11:27:19Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/huggingface/transformers/issues/5687",
                "repository_url": "https://api.github.com/repos/huggingface/transformers",
                "labels_url": "https://api.github.com/repos/huggingface/transformers/issues/5687/labels{/name}",
                "comments_url": "https://api.github.com/repos/huggingface/transformers/issues/5687/comments",
                "events_url": "https://api.github.com/repos/huggingface/transformers/issues/5687/events",
                "html_url": "https://github.com/huggingface/transformers/pull/5687",
                "id": 655245857,
                "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzkzNTg1",
                "number": 5687,
                "title": "Making ONNX conversion directly load the model and tokenizer + adding tests",
                "user": {
                    "login": "abelriboulot",
                    "id": 34995848,
                    "node_id": "MDQ6VXNlcjM0OTk1ODQ4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/34995848?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/abelriboulot",
                    "html_url": "https://github.com/abelriboulot",
                    "followers_url": "https://api.github.com/users/abelriboulot/followers",
                    "following_url": "https://api.github.com/users/abelriboulot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/abelriboulot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/abelriboulot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/abelriboulot/subscriptions",
                    "organizations_url": "https://api.github.com/users/abelriboulot/orgs",
                    "repos_url": "https://api.github.com/users/abelriboulot/repos",
                    "events_url": "https://api.github.com/users/abelriboulot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/abelriboulot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1314768611,
                        "node_id": "MDU6TGFiZWwxMzE0NzY4NjEx",
                        "url": "https://api.github.com/repos/huggingface/transformers/labels/wontfix",
                        "name": "wontfix",
                        "color": "ffffff",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "mfuntowicz",
                    "id": 2241520,
                    "node_id": "MDQ6VXNlcjIyNDE1MjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2241520?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mfuntowicz",
                    "html_url": "https://github.com/mfuntowicz",
                    "followers_url": "https://api.github.com/users/mfuntowicz/followers",
                    "following_url": "https://api.github.com/users/mfuntowicz/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mfuntowicz/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mfuntowicz/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mfuntowicz/subscriptions",
                    "organizations_url": "https://api.github.com/users/mfuntowicz/orgs",
                    "repos_url": "https://api.github.com/users/mfuntowicz/repos",
                    "events_url": "https://api.github.com/users/mfuntowicz/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mfuntowicz/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "mfuntowicz",
                        "id": 2241520,
                        "node_id": "MDQ6VXNlcjIyNDE1MjA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/2241520?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mfuntowicz",
                        "html_url": "https://github.com/mfuntowicz",
                        "followers_url": "https://api.github.com/users/mfuntowicz/followers",
                        "following_url": "https://api.github.com/users/mfuntowicz/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mfuntowicz/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mfuntowicz/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mfuntowicz/subscriptions",
                        "organizations_url": "https://api.github.com/users/mfuntowicz/orgs",
                        "repos_url": "https://api.github.com/users/mfuntowicz/repos",
                        "events_url": "https://api.github.com/users/mfuntowicz/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mfuntowicz/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 13,
                "created_at": "2020-07-11T17:16:42Z",
                "updated_at": "2020-11-04T15:33:32Z",
                "closed_at": "2020-10-25T00:40:18Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "repository": {
                    "id": 155220641,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxNTUyMjA2NDE=",
                    "name": "transformers",
                    "full_name": "huggingface/transformers",
                    "private": false,
                    "owner": {
                        "login": "huggingface",
                        "id": 25720743,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1NzIwNzQz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25720743?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/huggingface",
                        "html_url": "https://github.com/huggingface",
                        "followers_url": "https://api.github.com/users/huggingface/followers",
                        "following_url": "https://api.github.com/users/huggingface/following{/other_user}",
                        "gists_url": "https://api.github.com/users/huggingface/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/huggingface/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/huggingface/subscriptions",
                        "organizations_url": "https://api.github.com/users/huggingface/orgs",
                        "repos_url": "https://api.github.com/users/huggingface/repos",
                        "events_url": "https://api.github.com/users/huggingface/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/huggingface/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/huggingface/transformers",
                    "description": "🤗 Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX.",
                    "fork": false,
                    "url": "https://api.github.com/repos/huggingface/transformers",
                    "forks_url": "https://api.github.com/repos/huggingface/transformers/forks",
                    "keys_url": "https://api.github.com/repos/huggingface/transformers/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/huggingface/transformers/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/huggingface/transformers/teams",
                    "hooks_url": "https://api.github.com/repos/huggingface/transformers/hooks",
                    "issue_events_url": "https://api.github.com/repos/huggingface/transformers/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/huggingface/transformers/events",
                    "assignees_url": "https://api.github.com/repos/huggingface/transformers/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/huggingface/transformers/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/huggingface/transformers/tags",
                    "blobs_url": "https://api.github.com/repos/huggingface/transformers/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/huggingface/transformers/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/huggingface/transformers/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/huggingface/transformers/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/huggingface/transformers/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/huggingface/transformers/languages",
                    "stargazers_url": "https://api.github.com/repos/huggingface/transformers/stargazers",
                    "contributors_url": "https://api.github.com/repos/huggingface/transformers/contributors",
                    "subscribers_url": "https://api.github.com/repos/huggingface/transformers/subscribers",
                    "subscription_url": "https://api.github.com/repos/huggingface/transformers/subscription",
                    "commits_url": "https://api.github.com/repos/huggingface/transformers/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/huggingface/transformers/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/huggingface/transformers/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/huggingface/transformers/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/huggingface/transformers/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/huggingface/transformers/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/huggingface/transformers/merges",
                    "archive_url": "https://api.github.com/repos/huggingface/transformers/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/huggingface/transformers/downloads",
                    "issues_url": "https://api.github.com/repos/huggingface/transformers/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/huggingface/transformers/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/huggingface/transformers/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/huggingface/transformers/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/huggingface/transformers/labels{/name}",
                    "releases_url": "https://api.github.com/repos/huggingface/transformers/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/huggingface/transformers/deployments",
                    "created_at": "2018-10-29T13:56:00Z",
                    "updated_at": "2022-12-20T18:14:08Z",
                    "pushed_at": "2022-12-20T18:29:43Z",
                    "git_url": "git://github.com/huggingface/transformers.git",
                    "ssh_url": "git@github.com:huggingface/transformers.git",
                    "clone_url": "https://github.com/huggingface/transformers.git",
                    "svn_url": "https://github.com/huggingface/transformers",
                    "homepage": "https://huggingface.co/transformers",
                    "size": 116570,
                    "stargazers_count": 76530,
                    "watchers_count": 76530,
                    "language": "Python",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": false,
                    "has_discussions": false,
                    "forks_count": 17285,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 578,
                    "license": {
                        "key": "apache-2.0",
                        "name": "Apache License 2.0",
                        "spdx_id": "Apache-2.0",
                        "url": "https://api.github.com/licenses/apache-2.0",
                        "node_id": "MDc6TGljZW5zZTI="
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "bert",
                        "deep-learning",
                        "flax",
                        "hacktoberfest",
                        "jax",
                        "language-model",
                        "language-models",
                        "machine-learning",
                        "model-hub",
                        "natural-language-processing",
                        "nlp",
                        "nlp-library",
                        "pretrained-models",
                        "python",
                        "pytorch",
                        "pytorch-transformers",
                        "seq2seq",
                        "speech-recognition",
                        "tensorflow",
                        "transformer"
                    ],
                    "visibility": "public",
                    "forks": 17285,
                    "open_issues": 578,
                    "watchers": 76530,
                    "default_branch": "main",
                    "permissions": {
                        "admin": false,
                        "maintain": false,
                        "push": false,
                        "triage": false,
                        "pull": true
                    }
                },
                "pull_request": {
                    "url": "https://api.github.com/repos/huggingface/transformers/pulls/5687",
                    "html_url": "https://github.com/huggingface/transformers/pull/5687",
                    "diff_url": "https://github.com/huggingface/transformers/pull/5687.diff",
                    "patch_url": "https://github.com/huggingface/transformers/pull/5687.patch",
                    "merged_at": null
                },
                "body": "This is a proposal for an update in the ONNX conversion:\r\n- First, I investigated issue #4906 as I was having the same issue. This is due to a dependency on this [commit](https://github.com/pytorch/pytorch/commit/96989a2a114de9b77e7dd9495d62c4a8a549b40d) from the ONNX team available from version 1.5.0 of PyTorch, I therefore added it to the extra requirements and added to the messages to make it more obvious (along with keras2onnx for TF)\r\n- The bigger part of this PR aims to remove the dependency of the script for specific pipelines. I believe this dependency is not needed as a conversion to ONNX simply requires a model, and a tokenizer. There are a few advantages to doing it this way:\r\n1. This would solve #4788, and help greatly towards #5075. With this update, the conversion to ONNX no longer requires a given pipeline, and therefore any model can be converted (I have tested for instance with T5)\r\n2. It is maybe clearer since the elements of the pipeline are not exported onto ONNX.\r\nLet me know your thoughts on that one.\r\n- I added some fast-running integration testing of the script to the existing tests.\r\n- I made the onnx export compatible with the ModelOutput refactor (I believe previously it wasn't?)\r\n\r\nA question I have is whether I should add a message or add the possibility for the user to provide a pipeline even if it is not used in order to make it back-compatible?",
                "reactions": {
                    "url": "https://api.github.com/repos/huggingface/transformers/issues/5687/reactions",
                    "total_count": 5,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 3,
                    "rocket": 2,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/huggingface/transformers/issues/5687/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "event": "cross-referenced"
    }
]