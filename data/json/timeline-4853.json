[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/676617475",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4853#issuecomment-676617475",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4853",
        "id": 676617475,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjYxNzQ3NQ==",
        "user": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-19T19:29:42Z",
        "updated_at": "2020-08-19T19:29:42Z",
        "author_association": "NONE",
        "body": "```text\r\nScatterElements node: roi_pool_ScatterElements_102\r\nInput 0 Name: 83 Shape: {2}\r\nInput 1 Name: 103 Shape: {24}\r\nInput 2 Name: 110 Shape: {24}\r\n\r\n```\r\n\r\nSeems like [this](https://github.com/pytorch/pytorch/issues/43283) is the real issue, with invalid export in PyTorch 1.6",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/676617475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 3672303582,
        "node_id": "MDExOkNsb3NlZEV2ZW50MzY3MjMwMzU4Mg==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/3672303582",
        "actor": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2020-08-19T19:29:42Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-24T21:03:07Z",
        "updated_at": "2020-08-24T21:03:07Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898",
                "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
                "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898/labels{/name}",
                "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898/comments",
                "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898/events",
                "html_url": "https://github.com/microsoft/onnxruntime/issues/4898",
                "id": 684960683,
                "node_id": "MDU6SXNzdWU2ODQ5NjA2ODM=",
                "number": 4898,
                "title": "Optimizer changes dynamic shape to constant",
                "user": {
                    "login": "dashesy",
                    "id": 873905,
                    "node_id": "MDQ6VXNlcjg3MzkwNQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dashesy",
                    "html_url": "https://github.com/dashesy",
                    "followers_url": "https://api.github.com/users/dashesy/followers",
                    "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dashesy/orgs",
                    "repos_url": "https://api.github.com/users/dashesy/repos",
                    "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dashesy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "askhade",
                    "id": 6475296,
                    "node_id": "MDQ6VXNlcjY0NzUyOTY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/askhade",
                    "html_url": "https://github.com/askhade",
                    "followers_url": "https://api.github.com/users/askhade/followers",
                    "following_url": "https://api.github.com/users/askhade/following{/other_user}",
                    "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
                    "organizations_url": "https://api.github.com/users/askhade/orgs",
                    "repos_url": "https://api.github.com/users/askhade/repos",
                    "events_url": "https://api.github.com/users/askhade/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/askhade/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "askhade",
                        "id": 6475296,
                        "node_id": "MDQ6VXNlcjY0NzUyOTY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/askhade",
                        "html_url": "https://github.com/askhade",
                        "followers_url": "https://api.github.com/users/askhade/followers",
                        "following_url": "https://api.github.com/users/askhade/following{/other_user}",
                        "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
                        "organizations_url": "https://api.github.com/users/askhade/orgs",
                        "repos_url": "https://api.github.com/users/askhade/repos",
                        "events_url": "https://api.github.com/users/askhade/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/askhade/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 6,
                "created_at": "2020-08-24T20:56:57Z",
                "updated_at": "2020-08-31T20:14:04Z",
                "closed_at": "2020-08-31T20:14:03Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 156939672,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxNTY5Mzk2NzI=",
                    "name": "onnxruntime",
                    "full_name": "microsoft/onnxruntime",
                    "private": false,
                    "owner": {
                        "login": "microsoft",
                        "id": 6154722,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjYxNTQ3MjI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6154722?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/microsoft",
                        "html_url": "https://github.com/microsoft",
                        "followers_url": "https://api.github.com/users/microsoft/followers",
                        "following_url": "https://api.github.com/users/microsoft/following{/other_user}",
                        "gists_url": "https://api.github.com/users/microsoft/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/microsoft/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/microsoft/subscriptions",
                        "organizations_url": "https://api.github.com/users/microsoft/orgs",
                        "repos_url": "https://api.github.com/users/microsoft/repos",
                        "events_url": "https://api.github.com/users/microsoft/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/microsoft/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/microsoft/onnxruntime",
                    "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator",
                    "fork": false,
                    "url": "https://api.github.com/repos/microsoft/onnxruntime",
                    "forks_url": "https://api.github.com/repos/microsoft/onnxruntime/forks",
                    "keys_url": "https://api.github.com/repos/microsoft/onnxruntime/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/microsoft/onnxruntime/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/microsoft/onnxruntime/teams",
                    "hooks_url": "https://api.github.com/repos/microsoft/onnxruntime/hooks",
                    "issue_events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/microsoft/onnxruntime/events",
                    "assignees_url": "https://api.github.com/repos/microsoft/onnxruntime/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/microsoft/onnxruntime/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/microsoft/onnxruntime/tags",
                    "blobs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/microsoft/onnxruntime/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/microsoft/onnxruntime/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/microsoft/onnxruntime/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/microsoft/onnxruntime/languages",
                    "stargazers_url": "https://api.github.com/repos/microsoft/onnxruntime/stargazers",
                    "contributors_url": "https://api.github.com/repos/microsoft/onnxruntime/contributors",
                    "subscribers_url": "https://api.github.com/repos/microsoft/onnxruntime/subscribers",
                    "subscription_url": "https://api.github.com/repos/microsoft/onnxruntime/subscription",
                    "commits_url": "https://api.github.com/repos/microsoft/onnxruntime/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/microsoft/onnxruntime/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/microsoft/onnxruntime/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/microsoft/onnxruntime/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/microsoft/onnxruntime/merges",
                    "archive_url": "https://api.github.com/repos/microsoft/onnxruntime/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/microsoft/onnxruntime/downloads",
                    "issues_url": "https://api.github.com/repos/microsoft/onnxruntime/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/microsoft/onnxruntime/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/microsoft/onnxruntime/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/microsoft/onnxruntime/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/labels{/name}",
                    "releases_url": "https://api.github.com/repos/microsoft/onnxruntime/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/microsoft/onnxruntime/deployments",
                    "created_at": "2018-11-10T02:22:53Z",
                    "updated_at": "2022-12-20T19:02:34Z",
                    "pushed_at": "2022-12-20T19:11:59Z",
                    "git_url": "git://github.com/microsoft/onnxruntime.git",
                    "ssh_url": "git@github.com:microsoft/onnxruntime.git",
                    "clone_url": "https://github.com/microsoft/onnxruntime.git",
                    "svn_url": "https://github.com/microsoft/onnxruntime",
                    "homepage": "https://www.onnxruntime.ai",
                    "size": 1018648,
                    "stargazers_count": 7949,
                    "watchers_count": 7949,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": true,
                    "has_discussions": true,
                    "forks_count": 1862,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 1453,
                    "license": {
                        "key": "mit",
                        "name": "MIT License",
                        "spdx_id": "MIT",
                        "url": "https://api.github.com/licenses/mit",
                        "node_id": "MDc6TGljZW5zZTEz"
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "ai-framework",
                        "deep-learning",
                        "hacktoberfest",
                        "hardware-acceleration",
                        "machine-learning",
                        "neural-networks",
                        "onnx",
                        "pytorch",
                        "scikit-learn",
                        "tensorflow"
                    ],
                    "visibility": "public",
                    "forks": 1862,
                    "open_issues": 1453,
                    "watchers": 7949,
                    "default_branch": "main",
                    "permissions": {
                        "admin": false,
                        "maintain": true,
                        "push": true,
                        "triage": true,
                        "pull": true
                    }
                },
                "body": "**Describe the bug**\r\n1. We rely heavily on tensors with dynamic shape.\r\n2. We rely on `sess_options.optimized_model_filepath` and `ORT_ENABLE_BASIC` for basic optimizations, that would basically eliminate unused initializers (because onnx optimizer crashes)\r\n\r\nBefore optimization\r\n\r\n![image](https://user-images.githubusercontent.com/873905/91094541-cdcec700-e60f-11ea-81c2-0c9783fdfb8d.png)\r\n\r\nAfter optimization\r\n\r\n![image](https://user-images.githubusercontent.com/873905/91094986-72510900-e610-11ea-9aba-1779607484b3.png)\r\n\r\n\r\n**Urgency**\r\nWe have a workaround that avoids this optimizer mistake, but is an ugly hack. Plus, I am not sure if other places in the model might have the same issue.\r\nFirst we saw issue #4853 related to the exported model\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04\r\n- ONNX Runtime installed from (source or binary): pip\r\n- ONNX Runtime version: 1.4\r\n- Python version: 3.6\r\n\r\n**To Reproduce**\r\n\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n[test.zip](https://github.com/microsoft/onnxruntime/files/5120158/test.zip)\r\n\r\n```python\r\nimport onnxruntime as rt\r\nsess_options = rt.SessionOptions()\r\nsess_options.graph_optimization_level = rt.GraphOptimizationLevel.ORT_ENABLE_BASIC\r\nsess_options.optimized_model_filepath = \"test_opt.onnx\"\r\n\r\nsess = rt.InferenceSession(\"test.onnx\", sess_options)\r\n```\r\n\r\noutputs this onnx file:\r\n[test_opt.zip](https://github.com/microsoft/onnxruntime/files/5120198/test_opt.zip)\r\n\r\n\r\n**Expected behavior**\r\nOptimizer should not change dynamic shapes to constants.\r\n\r\n**Additional context**\r\nInitially we suspected `torch.full_like` is not generating `ConstantOfShape` and created [this issue](https://github.com/pytorch/pytorch/issues/43283) for exporter.\r\n\r\nHere is the code that generates the onnx file (PyTorch 1.6). It is a little piece of code that is part of a bigger model.\r\n\r\n```python\r\nimport torch\r\nimport onnxruntime as rt\r\n\r\ndef _align_box(im_h, im_w, bbs,\r\n               enlargement_factor, target_size, min_len, align='SHORTEST'):\r\n    zero = torch.as_tensor(0.0).float().to(bbs.device)\r\n\r\n    # enlarge the bounding box\r\n    w = (bbs[:, 2] * enlargement_factor).ceil()\r\n    h = (bbs[:, 3] * enlargement_factor).ceil()\r\n\r\n    # CXCYWH to XYWH\r\n    input_x = (bbs[:, 0] - w / 2).floor()\r\n    cond = input_x < 0\r\n    idx = torch.nonzero(cond).view(-1)\r\n    # TODO: use scatter_add when fixed: https://github.com/pytorch/pytorch/issues/26472\r\n    w = torch.scatter(w, 0, idx, w[idx] + input_x[idx])  # w[idx] += input_x[idx]\r\n    input_x = torch.where(cond, zero, input_x)  # input_x[idx] = 0\r\n    input_y = (bbs[:, 1] - h / 2).floor()\r\n    cond = input_y < 0\r\n    idx = torch.nonzero(cond).view(-1)\r\n    # TODO: use scatter_add when fixed: https://github.com/pytorch/pytorch/issues/26472\r\n    h = torch.scatter(h, 0, idx, h[idx] + input_y[idx])  # h[idx] += input_y[idx]\r\n    input_y = torch.where(cond, zero, input_y)  # input_y[idx] = 0\r\n\r\n    w = w.clamp(min=min_len)  # w[w < min_len] = min_len\r\n    h = h.clamp(min=min_len)  # h[h < min_len] = min_len\r\n\r\n    input_width = im_w - input_x\r\n    input_width = torch.where(w < input_width, w, input_width)  # input_width[idx=w < input_width] = w[idx]\r\n    input_height = im_h - input_y\r\n    input_height = torch.where(h < input_height, h, input_height)  # input_height[idx=h < input_height] = h[idx]\r\n    del w, h\r\n\r\n    # If too far to the right shift the coordinates\r\n    idx = input_width < min_len\r\n    input_width = torch.where(idx, min_len, input_width)  # input_width[idx] = min_len\r\n    input_x = torch.where(idx, im_w - min_len, input_x)  # input_x[idx] = im_w - min_len\r\n    idx = input_height < min_len\r\n    input_height = torch.where(idx, min_len, input_height)  # input_height[idx] = min_len\r\n    input_y = torch.where(idx, im_h - min_len, input_y)  # input_y[idx] = im_h - min_len\r\n\r\n    target_width = torch.full_like(input_width, target_size)\r\n    target_height = torch.full_like(input_height, target_size)\r\n\r\n    # align with constraint\r\n    if align == 'SHORTEST':\r\n        # Avoid `<=` because ONNX will export that as `Not` and `>` then we need another `Not`\r\n        #  instead, first compute `>` and use `~` to be exported as `Not`\r\n        nidx = input_width > input_height\r\n        idx = ~nidx  # this requires patch_logical_not_opset9 until bitwise_not for bool is in PyTorch\r\n        idx = torch.nonzero(idx).view(-1)\r\n        target_height = torch.scatter(target_height, 0, idx, target_size * input_height[idx] / input_width[idx])\r\n\r\n        idx = torch.nonzero(nidx).view(-1)\r\n        target_width = torch.scatter(target_width, 0, idx, target_size * input_width[idx] / input_height[idx])\r\n    elif align == 'LONGEST':\r\n        idx = input_width > input_height\r\n        nidx = ~idx  # this requires patch_logical_not_opset9 until bitwise_not for bool is in PyTorch\r\n        idx = torch.nonzero(idx).view(-1)\r\n        target_height = torch.scatter(target_height, 0, idx, target_size * input_height[idx] / input_width[idx])\r\n\r\n        idx = torch.nonzero(nidx).view(-1)\r\n        target_width = torch.scatter(target_width, 0, idx, target_size * input_width[idx] / input_height[idx])\r\n    else:\r\n        assert align == 'BOTH'\r\n\r\n    return input_x, input_y, input_width, input_height, target_width, target_height\r\n\r\nclass Module(torch.nn.Module):\r\n    def forward(self, img, bbs):\r\n        _, _, height, width = img.shape[0], img.shape[1], img.shape[2], img.shape[3]\r\n        # When tracing (for onnx export this is Tensor)\r\n        if not isinstance(height, torch.Tensor):\r\n            height, width = torch.as_tensor(height).to(img.device), torch.as_tensor(width).to(img.device)\r\n\r\n        input_x, input_y, input_width, input_height, target_width, target_height = _align_box(\r\n            height.float(), width.float(), bbs, 1.5, 256, torch.as_tensor(3).float()\r\n        )\r\n        return input_x, input_y, input_width, input_height, target_width, target_height\r\n\r\nmodel = Module()\r\nimg = torch.empty((1,3,256,512))\r\nbbs = torch.as_tensor([[0, 0, 100, 100], [0, 0, 500, 100]]).float()\r\n\r\ntargets = ['input_x', 'input_y', 'input_width', 'input_height', 'target_width', 'target_height']\r\ntorch.onnx.export(model, (img, bbs), 'test.onnx',\r\n                  verbose=True,\r\n                  input_names=['img', 'bbs'],\r\n                  output_names=targets,\r\n                  opset_version=11,\r\n                  dynamic_axes={'img': {2: 'h', 3: 'w'}, 'bbs': {0: 'rpn'}})\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4898/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "event": "cross-referenced"
    }
]