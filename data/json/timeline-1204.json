[
    {
        "id": 2404818297,
        "node_id": "MDEyOkxhYmVsZWRFdmVudDI0MDQ4MTgyOTc=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2404818297",
        "actor": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "event": "labeled",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T16:45:40Z",
        "label": {
            "name": "bug",
            "color": "d73a4a"
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500928527",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500928527",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500928527,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDkyODUyNw==",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2019-06-11T16:48:32Z",
        "updated_at": "2019-06-11T16:48:32Z",
        "author_association": "MEMBER",
        "body": "Hi, what model are you using and have you done all the appropriate preprocessing on the image to ensure the inputs are correct? ONNX Runtime is production ready and already powers many high-volume, high-scale production scenarios for Microsoft products and services. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500928527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500965754",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500965754",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500965754,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk2NTc1NA==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T18:25:51Z",
        "updated_at": "2019-06-11T18:25:51Z",
        "author_association": "NONE",
        "body": "I am using squeezenet 1.3 and I am normalizing the inputs with appropriate mean and std-dev.\r\nHowever the results are very similar even if I don't do any normalization.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500965754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500970110",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500970110",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500970110,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk3MDExMA==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T18:37:26Z",
        "updated_at": "2019-06-11T18:37:26Z",
        "author_association": "MEMBER",
        "body": "Hi, I have an alternative. I'm creating another demo for inception model on imagenet dataset. And the demo code uses the C API. I have checked the result, it's correct. If you are interested, you could use this new model.\r\nThe C API and runtime itself is good, if the result was wrong, mostly likely it's because of the model or preprocessing. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500970110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500979788",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500979788",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500979788,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk3OTc4OA==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T19:04:00Z",
        "updated_at": "2019-06-11T19:04:00Z",
        "author_association": "NONE",
        "body": "I'll be happy if I can take a look into this new demo, once it is available ! ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500979788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500987837",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-500987837",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 500987837,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk4NzgzNw==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T19:26:43Z",
        "updated_at": "2019-06-11T19:26:43Z",
        "author_association": "MEMBER",
        "body": "Hi @petrsm,\r\n\r\nI downloaded a sample image from the ONNX.JS squeezenet demo (the 'Granny Smith' apple) and ran a simple python script to check if the result label looked okay and it was fine. (I did this for 0.4.0 release and current master)\r\n\r\nThis is my python script - \r\n\r\nimport onnxruntime as rt\r\nimport numpy as np\r\nfrom PIL import Image\r\n\r\ndef preprocess(img_path):\r\n    img = Image.open(img_path)\r\n    img = img.resize((224, 224), Image.BILINEAR)\r\n    img_data = np.array(img, dtype=np.float32)\r\n    img_data = np.transpose(img_data, [2, 0, 1])\r\n    img_data = np.expand_dims(img_data, 0)\r\n    img_data = img_data[:,0:3,:,:] # Input is RGBA - so strip off A\r\n    return img_data\r\n\r\nsess = rt.InferenceSession(\"squeezenet.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\npred_onnx = sess.run(None, {input_name: preprocess(\"apple.png\")})[0]\r\n\r\nmax_index = np.argmax(pred_onnx)\r\n    \r\nprint(max_index)\r\n\r\nThis prints 948 which corresponds to 'Granny Smith' in the ImageNet categories. So this rules out any issue in the core runtime itself.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/500987837/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2405250334,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQwNTI1MDMzNA==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405250334",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T19:26:43Z",
        "performed_via_github_app": null
    },
    {
        "id": 2405250335,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MDUyNTAzMzU=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405250335",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T19:26:43Z",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501009450",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501009450",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501009450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAwOTQ1MA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T20:26:37Z",
        "updated_at": "2019-06-11T20:26:37Z",
        "author_association": "MEMBER",
        "body": "@petrsm - It would help if you showed (code snippet) how you were feeding in the images corresponding to these lines - \r\n\r\n\"\r\nWhen I however feed some images (very nice & clean from here: https://microsoft.github.io/onnxjs-demo/#/squeezenet)\r\n\r\nI get completely non-sensical results (ie for completely different images (cheetah / lighthouse)) network returns same resulting class.\r\n \"\r\nThe only explanation I can think of is that the pre-processing was incomplete/not correct.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501009450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2405402664,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQwNTQwMjY2NA==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405402664",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T20:26:37Z",
        "performed_via_github_app": null
    },
    {
        "id": 2405402666,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MDU0MDI2NjY=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405402666",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T20:26:37Z",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501014567",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501014567",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501014567,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAxNDU2Nw==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T20:41:24Z",
        "updated_at": "2019-06-11T20:41:24Z",
        "author_association": "NONE",
        "body": "I guess there must be something wrong in my code, question is what :)\r\n\r\nI created simple repro by modifying C_API_sample.cpp. Entire solution with data can be\r\ndownloaded from here:\r\n\r\nhttps://drive.google.com/file/d/1EBYkoXMGjwRJSy9p7XJNpQ43nP9qMpxs/view?usp=sharing\r\n\r\n\r\nAs stated before, when feeding test pattern, all is OK. When feeding cheetah image, it is classified as 669 - 'mosquito net'. I tried various layouts of input data (can be seen in code) without any success.\r\n\r\nI really appreciate willingness to help from all of you !\r\n\r\nHere is relevant part of code where I feed input tensor data:\r\n\r\n  // initialize input data with values in [0.0, 1.0]\r\n\r\n#if 0\r\n\r\n  // This works as expected\r\n\r\n  for (size_t i = 0; i < input_tensor_size; i++)\r\n    input_tensor_values[i] = (float)i / (input_tensor_size + 1);\r\n#else\r\n\r\n  int img_sizex, img_sizey, img_channels;\r\n\r\n  stbi_uc * img_data = stbi_load(\"cheetah.png\", &img_sizex, &img_sizey, &img_channels, STBI_default);\r\n\r\n  assert(img_data);\r\n  assert(img_sizex == 224);\r\n  assert(img_sizey == 224);\r\n  assert(img_channels == 4);\r\n\r\n  struct S_Pixel\r\n  {\r\n\t  unsigned char RGBA[4];\r\n  };\r\n\r\n  static_assert(sizeof(S_Pixel) == 4, \"\");\r\n\r\n  const S_Pixel * imgPixels(reinterpret_cast<const S_Pixel *>(img_data));\r\n\r\n\r\n#if 1\r\n  const float mean[3]\t= { 0.485f, 0.456f, 0.406f };\r\n  const float stddev[3]\t= { 0.229f, 0.224f, 0.225f };\r\n#else\r\n\r\n  // Does not make any difference\r\n  const float mean[3]\t= { 0.0f, 0.0f, 0.0f };\r\n  const float stddev[3]\t= { 1.0f, 1.0f, 1.0f };\r\n#endif\r\n\r\n\r\n  size_t offs = 0;\r\n\r\n#if 1\r\n\r\n  // NCWH layout (this should be correct)\r\n  for (size_t c = 0; c < 3; c++)\r\n  {\r\n\t  for (size_t y = 0; y < 224; y++)\r\n\t  {\r\n\t\t  for (size_t x = 0; x < 224; x++, offs++)\r\n\t\t  {\r\n\t\t\t  const float val((float)imgPixels[y * 224 + x].RGBA[c] / 255);\r\n\r\n\t\t\t  input_tensor_values[offs] = (val - mean[c]) / stddev[c];\r\n\t\t  }\r\n\t  }\r\n  }\r\n#else\r\n\r\n  // Desperate attempt to try NWHC layout (fails miserably - same as passing vector of zeroes)\r\n  for (size_t y = 0; y < 224; y++)\r\n  {\r\n\t  for (size_t x = 0; x < 224; x++)\r\n\t  {\r\n\t\t  for (size_t c = 0; c < 3; c++, offs++)\r\n\t\t  {\r\n\t\t\t  const float val((float)imgPixels[y * 224 + x].RGBA[c] / 255);\r\n\r\n\t\t\t  input_tensor_values[offs] = (val - mean[c]) / stddev[c];\r\n\t\t  }\r\n\t  }\r\n  }\r\n#endif\r\n\r\n  assert(offs == input_tensor_size);\r\n\r\n\r\n\r\n#endif\r\n\r\n  // create input tensor object from data values\r\n  OrtAllocatorInfo* allocator_info;\r\n  CHECK_STATUS(OrtCreateCpuAllocatorInfo(OrtArenaAllocator, OrtMemTypeDefault, &allocator_info));\r\n  OrtValue* input_tensor = NULL;\r\n  CHECK_STATUS(OrtCreateTensorWithDataAsOrtValue(allocator_info, input_tensor_values.data(), input_tensor_size * sizeof(float), input_node_dims.data(), 4, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT, &input_tensor));\r\n  assert(OrtIsTensor(input_tensor));\r\n  OrtReleaseAllocatorInfo(allocator_info);\r\n\r\n...\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501014567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501021001",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501021001",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501021001,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAyMTAwMQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T21:00:19Z",
        "updated_at": "2019-06-11T21:00:19Z",
        "author_association": "MEMBER",
        "body": "Hi @petrsm,\r\n\r\nI see several things that can be tried - \r\n\r\n1) For now we can skip the mean subtraction and standard_deviation division (as the python code that works didn't require that)\r\n\r\n2) We can skip the division by 255 for each pixel (as the python code that works works with values in the range 0-255) (i.e.) un-normalized\r\n\r\n3) I **think** the correct format is NCHW (and not NCWH as you mention as \"should work\" in your comment). \r\n\r\n4) After using stbi_load(), what is the format of the data bytes- is it HWC or CHW or WHC ? That needs to be checked first. If the format is HWC then life becomes easier - since we just want to ditch the last channel, you could just consume the first 224 * 224 * 3 values and after appropriate float casts, can try feeding this to ORT.\r\n\r\nThanks\r\n\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501021001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2405487695,
        "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjQwNTQ4NzY5NQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405487695",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "mentioned",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T21:00:19Z",
        "performed_via_github_app": null
    },
    {
        "id": 2405487698,
        "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI0MDU0ODc2OTg=",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405487698",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "subscribed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T21:00:19Z",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501028925",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501028925",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501028925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAyODkyNQ==",
        "user": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T21:25:02Z",
        "updated_at": "2019-06-11T21:25:02Z",
        "author_association": "NONE",
        "body": "You hit the nail on the head !\r\nAfter removing normalization to <0, 1> range (and also mean/std dev) everything works fine.\r\n\r\nI blindly followed advice from here :\r\n\r\nhttps://github.com/onnx/models/tree/master/models/image_classification/squeezenet\r\n\r\n\"Preprocessing\r\nThe images have to be loaded in to a range of [0, 1] and then normalized using mean = [0.485, 0.456, 0.406] and std = [0.229, 0.224, 0.225]. The transformation should preferrably happen at preprocessing. Check imagenet_preprocess.py for code.\"\r\n\r\nNext time, when facing such issue, denormalization will be first thing to try :)\r\n\r\nThanks a lot for your help !\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501028925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "petrsm",
            "id": 7002447,
            "node_id": "MDQ6VXNlcjcwMDI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7002447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/petrsm",
            "html_url": "https://github.com/petrsm",
            "followers_url": "https://api.github.com/users/petrsm/followers",
            "following_url": "https://api.github.com/users/petrsm/following{/other_user}",
            "gists_url": "https://api.github.com/users/petrsm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/petrsm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/petrsm/subscriptions",
            "organizations_url": "https://api.github.com/users/petrsm/orgs",
            "repos_url": "https://api.github.com/users/petrsm/repos",
            "events_url": "https://api.github.com/users/petrsm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/petrsm/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501039870",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1204#issuecomment-501039870",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1204",
        "id": 501039870,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAzOTg3MA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-11T22:01:37Z",
        "updated_at": "2019-06-11T22:01:37Z",
        "author_association": "MEMBER",
        "body": "Glad you could get it working!\r\n\r\nClosing this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/501039870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null,
        "event": "commented",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        }
    },
    {
        "id": 2405621291,
        "node_id": "MDExOkNsb3NlZEV2ZW50MjQwNTYyMTI5MQ==",
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events/2405621291",
        "actor": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "event": "closed",
        "commit_id": null,
        "commit_url": null,
        "created_at": "2019-06-11T22:01:38Z",
        "state_reason": null,
        "performed_via_github_app": null
    },
    {
        "actor": {
            "login": "addisonklinke",
            "id": 39926682,
            "node_id": "MDQ6VXNlcjM5OTI2Njgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39926682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/addisonklinke",
            "html_url": "https://github.com/addisonklinke",
            "followers_url": "https://api.github.com/users/addisonklinke/followers",
            "following_url": "https://api.github.com/users/addisonklinke/following{/other_user}",
            "gists_url": "https://api.github.com/users/addisonklinke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/addisonklinke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/addisonklinke/subscriptions",
            "organizations_url": "https://api.github.com/users/addisonklinke/orgs",
            "repos_url": "https://api.github.com/users/addisonklinke/repos",
            "events_url": "https://api.github.com/users/addisonklinke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/addisonklinke/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-24T20:29:01Z",
        "updated_at": "2020-03-24T20:29:01Z",
        "source": {
            "type": "issue",
            "issue": {
                "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310",
                "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
                "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310/labels{/name}",
                "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310/comments",
                "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310/events",
                "html_url": "https://github.com/microsoft/onnxruntime/issues/3310",
                "id": 587259242,
                "node_id": "MDU6SXNzdWU1ODcyNTkyNDI=",
                "number": 3310,
                "title": "Outputs from C/Python APIs don't match - how to properly load image data?",
                "user": {
                    "login": "addisonklinke",
                    "id": 39926682,
                    "node_id": "MDQ6VXNlcjM5OTI2Njgy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39926682?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/addisonklinke",
                    "html_url": "https://github.com/addisonklinke",
                    "followers_url": "https://api.github.com/users/addisonklinke/followers",
                    "following_url": "https://api.github.com/users/addisonklinke/following{/other_user}",
                    "gists_url": "https://api.github.com/users/addisonklinke/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/addisonklinke/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/addisonklinke/subscriptions",
                    "organizations_url": "https://api.github.com/users/addisonklinke/orgs",
                    "repos_url": "https://api.github.com/users/addisonklinke/repos",
                    "events_url": "https://api.github.com/users/addisonklinke/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/addisonklinke/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2020-03-24T20:29:01Z",
                "updated_at": "2020-04-21T05:04:49Z",
                "closed_at": "2020-04-21T05:04:48Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "repository": {
                    "id": 156939672,
                    "node_id": "MDEwOlJlcG9zaXRvcnkxNTY5Mzk2NzI=",
                    "name": "onnxruntime",
                    "full_name": "microsoft/onnxruntime",
                    "private": false,
                    "owner": {
                        "login": "microsoft",
                        "id": 6154722,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjYxNTQ3MjI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6154722?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/microsoft",
                        "html_url": "https://github.com/microsoft",
                        "followers_url": "https://api.github.com/users/microsoft/followers",
                        "following_url": "https://api.github.com/users/microsoft/following{/other_user}",
                        "gists_url": "https://api.github.com/users/microsoft/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/microsoft/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/microsoft/subscriptions",
                        "organizations_url": "https://api.github.com/users/microsoft/orgs",
                        "repos_url": "https://api.github.com/users/microsoft/repos",
                        "events_url": "https://api.github.com/users/microsoft/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/microsoft/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "html_url": "https://github.com/microsoft/onnxruntime",
                    "description": "ONNX Runtime: cross-platform, high performance ML inferencing and training accelerator",
                    "fork": false,
                    "url": "https://api.github.com/repos/microsoft/onnxruntime",
                    "forks_url": "https://api.github.com/repos/microsoft/onnxruntime/forks",
                    "keys_url": "https://api.github.com/repos/microsoft/onnxruntime/keys{/key_id}",
                    "collaborators_url": "https://api.github.com/repos/microsoft/onnxruntime/collaborators{/collaborator}",
                    "teams_url": "https://api.github.com/repos/microsoft/onnxruntime/teams",
                    "hooks_url": "https://api.github.com/repos/microsoft/onnxruntime/hooks",
                    "issue_events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/events{/number}",
                    "events_url": "https://api.github.com/repos/microsoft/onnxruntime/events",
                    "assignees_url": "https://api.github.com/repos/microsoft/onnxruntime/assignees{/user}",
                    "branches_url": "https://api.github.com/repos/microsoft/onnxruntime/branches{/branch}",
                    "tags_url": "https://api.github.com/repos/microsoft/onnxruntime/tags",
                    "blobs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/blobs{/sha}",
                    "git_tags_url": "https://api.github.com/repos/microsoft/onnxruntime/git/tags{/sha}",
                    "git_refs_url": "https://api.github.com/repos/microsoft/onnxruntime/git/refs{/sha}",
                    "trees_url": "https://api.github.com/repos/microsoft/onnxruntime/git/trees{/sha}",
                    "statuses_url": "https://api.github.com/repos/microsoft/onnxruntime/statuses/{sha}",
                    "languages_url": "https://api.github.com/repos/microsoft/onnxruntime/languages",
                    "stargazers_url": "https://api.github.com/repos/microsoft/onnxruntime/stargazers",
                    "contributors_url": "https://api.github.com/repos/microsoft/onnxruntime/contributors",
                    "subscribers_url": "https://api.github.com/repos/microsoft/onnxruntime/subscribers",
                    "subscription_url": "https://api.github.com/repos/microsoft/onnxruntime/subscription",
                    "commits_url": "https://api.github.com/repos/microsoft/onnxruntime/commits{/sha}",
                    "git_commits_url": "https://api.github.com/repos/microsoft/onnxruntime/git/commits{/sha}",
                    "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/comments{/number}",
                    "issue_comment_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments{/number}",
                    "contents_url": "https://api.github.com/repos/microsoft/onnxruntime/contents/{+path}",
                    "compare_url": "https://api.github.com/repos/microsoft/onnxruntime/compare/{base}...{head}",
                    "merges_url": "https://api.github.com/repos/microsoft/onnxruntime/merges",
                    "archive_url": "https://api.github.com/repos/microsoft/onnxruntime/{archive_format}{/ref}",
                    "downloads_url": "https://api.github.com/repos/microsoft/onnxruntime/downloads",
                    "issues_url": "https://api.github.com/repos/microsoft/onnxruntime/issues{/number}",
                    "pulls_url": "https://api.github.com/repos/microsoft/onnxruntime/pulls{/number}",
                    "milestones_url": "https://api.github.com/repos/microsoft/onnxruntime/milestones{/number}",
                    "notifications_url": "https://api.github.com/repos/microsoft/onnxruntime/notifications{?since,all,participating}",
                    "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/labels{/name}",
                    "releases_url": "https://api.github.com/repos/microsoft/onnxruntime/releases{/id}",
                    "deployments_url": "https://api.github.com/repos/microsoft/onnxruntime/deployments",
                    "created_at": "2018-11-10T02:22:53Z",
                    "updated_at": "2022-12-20T19:02:34Z",
                    "pushed_at": "2022-12-20T19:09:41Z",
                    "git_url": "git://github.com/microsoft/onnxruntime.git",
                    "ssh_url": "git@github.com:microsoft/onnxruntime.git",
                    "clone_url": "https://github.com/microsoft/onnxruntime.git",
                    "svn_url": "https://github.com/microsoft/onnxruntime",
                    "homepage": "https://www.onnxruntime.ai",
                    "size": 1018648,
                    "stargazers_count": 7949,
                    "watchers_count": 7949,
                    "language": "C++",
                    "has_issues": true,
                    "has_projects": true,
                    "has_downloads": true,
                    "has_wiki": true,
                    "has_pages": true,
                    "has_discussions": true,
                    "forks_count": 1862,
                    "mirror_url": null,
                    "archived": false,
                    "disabled": false,
                    "open_issues_count": 1452,
                    "license": {
                        "key": "mit",
                        "name": "MIT License",
                        "spdx_id": "MIT",
                        "url": "https://api.github.com/licenses/mit",
                        "node_id": "MDc6TGljZW5zZTEz"
                    },
                    "allow_forking": true,
                    "is_template": false,
                    "web_commit_signoff_required": false,
                    "topics": [
                        "ai-framework",
                        "deep-learning",
                        "hacktoberfest",
                        "hardware-acceleration",
                        "machine-learning",
                        "neural-networks",
                        "onnx",
                        "pytorch",
                        "scikit-learn",
                        "tensorflow"
                    ],
                    "visibility": "public",
                    "forks": 1862,
                    "open_issues": 1452,
                    "watchers": 7949,
                    "default_branch": "main",
                    "permissions": {
                        "admin": false,
                        "maintain": true,
                        "push": true,
                        "triage": true,
                        "pull": true
                    }
                },
                "body": "**Describe the bug**\r\nUsing a simple model with only one convolution operation, I am able to get the same inference results using PyTorch and ONNX Runtime's Python API. However, when I load the same image for inference with your C API, I cannot get the same results despite (as far as I can tell) passing the exact same pixel values to the model\r\n\r\nThis seems similar to https://github.com/microsoft/onnxruntime/issues/1204, but unfortunately the only proposed solution was proper normalizing. In my case, the normalization is explicitly controlled in both the Python and C APIs and can be shown to produce identical pixel values prior to feeding the model\r\n\r\n**Urgency**\r\nNone\r\n\r\n**System information**\r\n- OS Platform and Distribution: Linux Ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): source\r\n- ONNX Runtime version: 1.2.0\r\n- Python version: 3.6.10\r\n- Visual Studio version (if applicable): NA\r\n- GCC/Compiler version (if compiling from source): 7.5.0\r\n- CUDA/cuDNN version: CUDA 10.2 / cuDNN 7.3.1\r\n- GPU model and memory: Nvidia GeForce GTX 1060 mobile (6 GB)\r\n\r\n**To Reproduce**\r\n8 steps total - it just looks long because of the included scripts and sample output!\r\n\r\n1) Build from commit a02638e\r\n```\r\n./build.sh --config Debug --enable_pybind --build_wheel --build_shared_lib --parallel\r\n```\r\n\r\n2) Install the Python wheel\r\n```\r\npip install build/Linux/Debug/dist/onnxruntime-1.2.0-cp36-cp36m-linux_x86_64.whl\r\n```\r\n\r\n3) `pip` install other Python requirements\r\n```\r\nnumpy==1.18.1\r\nopencv-python==4.2.0\r\nonnx==1.6.0\r\ntorch==1.4.0\r\n```\r\n\r\n4) Add the two following scripts to a folder\r\n\r\n**ort-capi.py**\r\n```\r\nimport os\r\nimport random\r\nimport cv2\r\nimport numpy as np\r\nimport onnx\r\nimport onnxruntime\r\nimport torch\r\nimport torch.onnx\r\nimport torch.nn as nn\r\n\r\n\r\ndef load_image(img_path):\r\n    \"\"\"Load image data to PyTorch tensor\r\n\r\n    :param str img_path: Filepath to image data on disk\r\n    :return torch.tensor img: Shape ``(C, H, W)``\r\n    \"\"\"\r\n    loaded = cv2.imread(img_path)\r\n    img = torch.tensor(loaded).permute(2, 0, 1) / 255.0\r\n    print('Python first 3 pixels')\r\n    for channel in range(3):\r\n        print(f'{loaded.flatten()[channel]} --> {img[channel, 0, 0]:.6f}')\r\n    return img\r\n\r\n\r\ndef seed_everything(seed=1234):\r\n    \"\"\"Control all random seeds that could potentially be used by PyTorch\"\"\"\r\n    random.seed(seed)\r\n    torch.manual_seed(seed)\r\n    torch.cuda.manual_seed_all(seed)\r\n    np.random.seed(seed)\r\n    os.environ['PYTHONHASHSEED'] = str(seed)\r\n    torch.backends.cudnn.deterministic = True\r\n    torch.backends.cudnn.benchmark = False\r\n\r\n\r\ndef to_numpy(tensor):\r\n    return tensor.detach().cpu().numpy() if tensor.requires_grad else tensor.cpu().numpy()\r\n\r\n\r\nclass ReduceDims(nn.Module):\r\n\r\n    def __init__(self):\r\n        super(ReduceDims, self).__init__()\r\n        self.conv = nn.Conv2d(3, 3, (32, 64), (32, 64))\r\n\r\n    def forward(self, image):\r\n        \"\"\"Convolve with large filter to shrink spatial dimensions\r\n\r\n        :param torch.tensor image: Shape ``(N, C, H, W)`` in BGR order\r\n        :return:\r\n        \"\"\"\r\n        return self.conv(image)\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    # Export ONNX model\r\n    seed_everything()\r\n    model = ReduceDims()\r\n    image = load_image('crop.jpg').unsqueeze(0)\r\n    torch_out = model(image)\r\n    onnx_path = 'simple.onnx'\r\n    torch.onnx.export(model, image, onnx_path, input_names=['images'], output_names=['conv'])\r\n\r\n    # Run ORT inference\r\n    onnx_model = onnx.load(onnx_path)\r\n    onnx.checker.check_model(onnx_model)\r\n    ort_session = onnxruntime.InferenceSession(onnx_path)\r\n    ort_inputs = {'images': to_numpy(image)}\r\n    ort_outs = ort_session.run(None, ort_inputs)\r\n\r\n    # Compare and print results\r\n    np.testing.assert_allclose(to_numpy(torch_out), ort_outs[0], rtol=1e-03)\r\n    print(f'PyTorch: {torch_out.shape} \\n{torch_out}')\r\n    print(f'ORT-Py: {ort_outs[0].shape} \\n{ort_outs[0]}')\r\n```\r\n\r\n**ort-decode.cpp** (adapted with minimal changes from the C API [sample](https://github.com/microsoft/onnxruntime/blob/master/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests.Capi/C_Api_Sample.cpp))\r\n```\r\n#include <assert.h>\r\n#include <onnxruntime_c_api.h>\r\n#include <cmath>\r\n#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <vector>\r\n#include <opencv2/core.hpp>\r\n#include <opencv2/highgui.hpp>\r\n#include <opencv2/imgcodecs.hpp>\r\n#include <opencv2/imgproc/imgproc.hpp>\r\n\r\nconst OrtApi* g_ort = OrtGetApiBase()->GetApi(ORT_API_VERSION);\r\n\r\nvoid CheckStatus(OrtStatus* status) {\r\n    if (status != NULL) {\r\n        const char* msg = g_ort->GetErrorMessage(status);\r\n        fprintf(stderr, \"%s\\n\", msg);\r\n        g_ort->ReleaseStatus(status);\r\n        exit(1);\r\n    }\r\n}\r\n\r\nint main(int argc, char* argv[]) {\r\n\r\n    // Initialize enviroment (one per process) to maintain thread pools and other state info\r\n    OrtEnv* env;\r\n    CheckStatus(g_ort->CreateEnv(ORT_LOGGING_LEVEL_WARNING, \"test\", &env));\r\n\r\n    // Initialize session options if needed\r\n    OrtSessionOptions* session_options;\r\n    CheckStatus(g_ort->CreateSessionOptions(&session_options));\r\n    g_ort->SetIntraOpNumThreads(session_options, 1);\r\n\r\n    // Sets graph optimization level\r\n    g_ort->SetSessionGraphOptimizationLevel(session_options, ORT_ENABLE_BASIC);\r\n\r\n    // Create session and load model into memory\r\n    OrtSession* session;\r\n    const char* model_path = \"simple.onnx\";\r\n    printf(\"Using Onnxruntime C API\\n\");\r\n    CheckStatus(g_ort->CreateSession(env, model_path, session_options, &session));\r\n\r\n    // Print model input layer (node names, types, shape etc.)\r\n    size_t num_input_nodes;\r\n    OrtStatus* status;\r\n    OrtAllocator* allocator;\r\n    CheckStatus(g_ort->GetAllocatorWithDefaultOptions(&allocator));\r\n\r\n    // Print number of model input nodes\r\n    status = g_ort->SessionGetInputCount(session, &num_input_nodes);\r\n    std::vector<const char*> input_node_names(num_input_nodes);\r\n    std::vector<int64_t> input_node_dims;\r\n    printf(\"Number of inputs = %zu\\n\", num_input_nodes);\r\n\r\n    // Iterate over all input nodes and print names/types/shapes\r\n    std::vector<char*> input_names;\r\n    for (size_t i = 0; i < num_input_nodes; i++) {\r\n        char* input_name;\r\n        status = g_ort->SessionGetInputName(session, i, allocator, &input_name);\r\n        printf(\"Input %zu : name=%s\\n\", i, input_name);\r\n        input_node_names[i] = input_name;\r\n        input_names.push_back(input_name);\r\n\r\n        OrtTypeInfo* typeinfo;\r\n        status = g_ort->SessionGetInputTypeInfo(session, i, &typeinfo);\r\n        const OrtTensorTypeAndShapeInfo* tensor_info;\r\n        CheckStatus(g_ort->CastTypeInfoToTensorInfo(typeinfo, &tensor_info));\r\n        ONNXTensorElementDataType type;\r\n        CheckStatus(g_ort->GetTensorElementType(tensor_info, &type));\r\n        printf(\"Input %zu : type=%d\\n\", i, type);\r\n\r\n        size_t num_dims;\r\n        CheckStatus(g_ort->GetDimensionsCount(tensor_info, &num_dims));\r\n        printf(\"Input %zu : num_dims=%zu\\n\", i, num_dims);\r\n        input_node_dims.resize(num_dims);\r\n        g_ort->GetDimensions(tensor_info, (int64_t*)input_node_dims.data(), num_dims);\r\n        for (size_t j = 0; j < num_dims; j++) {\r\n            printf(\"Input %zu : dim %zu=%jd\\n\", i, j, input_node_dims[j]);\r\n        }\r\n        g_ort->ReleaseTypeInfo(typeinfo);\r\n    }\r\n\r\n    // Load image data to array\r\n    size_t input_tensor_size = 68 * 136 * 3;  // eventually use OrtGetTensorShapeElementCount() to get official size!\r\n    float input_tensor_values[input_tensor_size];\r\n    std::vector<const char*> output_node_names = {\"conv\"};\r\n    cv::Mat image_bgr = cv::imread(\"crop.jpg\", cv::IMREAD_COLOR);\r\n    if (!image_bgr.isContinuous()) {\r\n        image_bgr = image_bgr.clone();\r\n    }\r\n    for (size_t i = 0; i < input_tensor_size; i++) {\r\n        input_tensor_values[i] = image_bgr.data[i] / 255.0;\r\n    }\r\n\r\n    // Create input tensor object from data values\r\n    OrtMemoryInfo* memory_info;\r\n    CheckStatus(g_ort->CreateCpuMemoryInfo(OrtArenaAllocator, OrtMemTypeDefault, &memory_info));\r\n    OrtValue* input_tensor = NULL;\r\n    CheckStatus(g_ort->CreateTensorWithDataAsOrtValue(memory_info, input_tensor_values, input_tensor_size * sizeof(float), input_node_dims.data(), 4, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT, &input_tensor));\r\n    int is_tensor;\r\n    CheckStatus(g_ort->IsTensor(input_tensor, &is_tensor));\r\n    assert(is_tensor);\r\n    g_ort->ReleaseMemoryInfo(memory_info);\r\n    float* input_ort;\r\n    CheckStatus(g_ort->GetTensorMutableData(input_tensor, (void**)&input_ort));\r\n    printf(\"ORT first 3 pixels\\n\");\r\n    for (int i=0; i<3; i++) {\r\n        printf(\"%f\\n\", input_ort[i]);\r\n    }\r\n\r\n    // Run inference\r\n    std::vector<OrtValue*> outputs(output_node_names.size());\r\n    CheckStatus(g_ort->Run(session, NULL, input_node_names.data(), (const OrtValue* const*)&input_tensor, 1, output_node_names.data(), output_node_names.size(), outputs.data()));\r\n    CheckStatus(g_ort->IsTensor(outputs[0], &is_tensor));\r\n    assert(is_tensor);\r\n\r\n    // Get pointer to output tensor float values\r\n    float* conv;\r\n    CheckStatus(g_ort->GetTensorMutableData(outputs[0], (void**)&conv));\r\n    printf(\"ORT-C outputs\\n\");\r\n    for (int i=0; i<12; i++) {\r\n        printf(\"%f\\n\", conv[i]);\r\n    }\r\n    g_ort->ReleaseValue(outputs[0]);\r\n    g_ort->ReleaseValue(input_tensor);\r\n    g_ort->ReleaseSession(session);\r\n    g_ort->ReleaseSessionOptions(session_options);\r\n    g_ort->ReleaseEnv(env);\r\n    for (int i=0; i<input_names.size(); i++) {\r\n        free(input_names[i]);\r\n    }\r\n    printf(\"Done!\\n\");\r\n    return 0;\r\n}\r\n```\r\n\r\n5) Download the sample image (68x136 pixels) from the screenshots section below and save it as **crop.jpg** in the same folder as the Python and C++ scripts from above\r\n\r\n6) Run the Python script: `python3 ort-capi.py`. This should generate a `simple.onnx` file in the current directory and output the following results\r\n\r\n```\r\nPython first 3 pixels\r\n43 --> 0.168627\r\n44 --> 0.172549\r\n40 --> 0.156863\r\nCalled inference_session.cc:1054\r\nPyTorch: torch.Size([1, 3, 2, 2]) \r\ntensor([[[[-0.2275, -0.2554],\r\n          [-0.2656, -0.0904]],\r\n\r\n         [[ 0.2442,  0.2813],\r\n          [ 0.1520,  0.1503]],\r\n\r\n         [[ 0.4388,  0.4080],\r\n          [ 0.4567,  0.6156]]]], grad_fn=<MkldnnConvolutionBackward>)\r\nORT-Py: (1, 3, 2, 2) \r\n[[[[-0.22749133 -0.25542438]\r\n   [-0.26560846 -0.09042263]]\r\n\r\n  [[ 0.24415745  0.2812824 ]\r\n   [ 0.15198623  0.15028757]]\r\n\r\n  [[ 0.43876082  0.40797257]\r\n   [ 0.45668074  0.61562276]]]]\r\n```\r\n\r\n7) Compile the C++ program: `g++ ort-decode.cpp -g -o ort-decode -I . -lonnxruntime -lopencv_core -lopencv_imgcodecs -lopencv_imgproc` (you may need to `apt install libopencv-dev` for the OpenCV includes to work)\r\n\r\n8) Run the C++ executable: `./ort-decode` which will print\r\n\r\n```\r\nUsing Onnxruntime C API\r\nNumber of inputs = 1\r\nInput 0 : name=images\r\nInput 0 : type=1\r\nInput 0 : num_dims=4\r\nInput 0 : dim 0=1\r\nInput 0 : dim 1=3\r\nInput 0 : dim 2=68\r\nInput 0 : dim 3=136\r\nORT first 3 pixels\r\n0.168627\r\n0.172549\r\n0.156863\r\nCalled inference_session.cc:1054\r\nORT-C outputs\r\n-0.152388\r\n-0.278834\r\n-0.122822\r\n-0.277305\r\n0.098833\r\n-0.003909\r\n-0.030183\r\n0.163025\r\n0.328772\r\n0.277781\r\n0.425203\r\n0.529667\r\nDone!\r\n```\r\n\r\n**Expected behavior**\r\nThe outputs from PyTorch, ORT-Py, and ORT-C should all be identical. As demonstrated by the Python/C++ scripts, the pixel values passed to the model are the same, yet the C API comes back with a different set of 12 values for the `(1, 3, 2, 2)` shaped output tensor\r\n\r\nIt would be very helpful to have a C API sample script that shows loading of actual image data since the current sample only uses dummy pixels at [line 129](https://github.com/microsoft/onnxruntime/blob/master/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests.Capi/C_Api_Sample.cpp#L129). If you cannot directly help with loading image data so that the C and Python APIs return the same results, I would really appreciate guidance on how to better debug following my approach in the \"Additional context\" section\r\n\r\n**Screenshots**\r\nSample image to be used as crop.jpg\r\n\r\n![crop](https://user-images.githubusercontent.com/39926682/77471045-428aa480-6dd7-11ea-9a54-51f046cc02c4.jpg)\r\n\r\n**Additional context**\r\nMy assumption is that this is a user error related to passing the pixel values to the C API, so I have tried unsuccessfully to compile in debug prints to identify the exact values used in the `Run(session, ...)` call on `ort-decode.cpp:113`. My thought was to adapt the Run function definition in [`inference_session.cc:1054`](https://github.com/microsoft/onnxruntime/blob/435f014d71436f63527a939ece9b4c460e2a8bba/onnxruntime/core/session/inference_session.cc#L1054) to print the values of the `feeds` parameter. However, I am not familiar enough with the ORT library to know the appropriate method for this. The closest I got was \r\n\r\n```\r\nconst OrtApi* g_ort = OrtGetApiBase()->GetApi(ORT_API_VERSION);\r\n\r\nStatus InferenceSession::Run(const RunOptions& run_options, const std::vector<std::string>& feed_names,\r\n                             std::vector<OrtValue>& feeds, const std::vector<std::string>& output_names,\r\n                             std::vector<OrtValue>* p_fetches) {\r\n  std::cout << \"At inference_session.cc:1048\" << std::endl;\r\n  float* input_data;\r\n  g_ort->GetTensorMutableData(&feeds[0], (void**)&input_data);\r\n  ... rest of the function unchanged ...\r\n```\r\n\r\nHowever, this fails to compile because `feeds` is declared as a constant parameter in the function prototype, so I am stuck on how to access the underlying data of the input `OrtValue`\r\n\r\n```\r\nonnxruntime/onnxruntime/core/session/inference_session.cc: \r\nIn member function ‘onnxruntime::common::Status onnxruntime::InferenceSession::Run(const RunOptions&, const std::vector<std::__cxx11::basic_string<char> >&, const std::vector<OrtValue>&, const std::vector<std::__cxx11::basic_string<char> >&, std::vector<OrtValue>*)’:\r\nonnxruntime/onnxruntime/core/session/inference_session.cc:1050:31: \r\nerror: invalid conversion from ‘const value_type* {aka const OrtValue*}’ to ‘OrtValue*’ [-fpermissive]\r\n   g_ort->GetTensorMutableData(&feeds[0], (void**)&input_data);\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/3310/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "event": "cross-referenced"
    }
]