[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1540467784",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15867#issuecomment-1540467784",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15867",
        "id": 1540467784,
        "node_id": "IC_kwDOCVq1mM5b0axI",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-09T16:05:52Z",
        "updated_at": "2023-05-09T16:05:52Z",
        "author_association": "MEMBER",
        "body": "@IzanCatalan The answer to your larger question is yes, one can use onnxruntime to perform training. :)\r\n\r\nWe support two forms of training:\r\n1. On-Device Training: the API was primarily designed for training on edge devices. But the API can also be used on the server side if the user wants to. We have support for the cuda execution provider so it should meet your needs. The API supports easy transition to inferencing.\r\nThe limitation for this API is that it is not designed for large model training, so features like distributed training are not directly available. You can find the python API details [here](https://onnxruntime.ai/docs/api/python/learning_on_the_edge/overview.html).\r\nI am not sure, but it seems like this is what you're interested in.\r\n2. Large Model Training: This is primarily for training state of the art large models using onnxruntime. `ORTModule` is a PyTorch frontend and therefore looks and feels exactly like any other `torch.nn.Module`; the only difference being that the execution of the model in ORTModule is done by onnxruntime's engine. The entry point to this form of training is a PyTorch model, and most libraries compatible with an `torch.nn.Module` will work with `ORTModule`. More details can be found [here](https://onnxruntime.ai/docs/api/python/ortmodule/overview.html).\r\n\r\nHope this helps you.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1540467784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1542170654",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15867#issuecomment-1542170654",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15867",
        "id": 1542170654,
        "node_id": "IC_kwDOCVq1mM5b66ge",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-10T13:01:00Z",
        "updated_at": "2023-05-10T13:01:00Z",
        "author_association": "NONE",
        "body": "@baijumeswani Thanks for your quick answer. Based on your two options, I agree with you that the option that interests me most is the first one. I have my own device with a GPU with cuda 10.2/11.2 so it is nice if the API supports it.\r\nFurthermore, I do not seek large Model Training or train a model from the beginning. I already downloaded pre-trained models like Resnet50 or VGG16 from the official ONNX Model Zoo GitHub repo. I want to use these models, modify their weights and train them with Imagenet Dataset again. According to what you describe, I guess I will be able to do it with the Python API. \r\n\r\nDo you have any similar examples other than those shown at the API? \r\n\r\nThanks.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1542170654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1543303421",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15867#issuecomment-1543303421",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15867",
        "id": 1543303421,
        "node_id": "IC_kwDOCVq1mM5b_PD9",
        "user": {
            "login": "baijumeswani",
            "id": 12852605,
            "node_id": "MDQ6VXNlcjEyODUyNjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12852605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baijumeswani",
            "html_url": "https://github.com/baijumeswani",
            "followers_url": "https://api.github.com/users/baijumeswani/followers",
            "following_url": "https://api.github.com/users/baijumeswani/following{/other_user}",
            "gists_url": "https://api.github.com/users/baijumeswani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baijumeswani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baijumeswani/subscriptions",
            "organizations_url": "https://api.github.com/users/baijumeswani/orgs",
            "repos_url": "https://api.github.com/users/baijumeswani/repos",
            "events_url": "https://api.github.com/users/baijumeswani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baijumeswani/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-11T04:08:11Z",
        "updated_at": "2023-05-11T04:08:11Z",
        "author_association": "MEMBER",
        "body": "Here is an example for MobileNetV2:\r\n- [Generation of training artifacts](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/transfer_learning/mobilenetv2.ipynb)\r\n- [Training code](https://github.com/microsoft/onnxruntime-training-examples/blob/master/on_device_training/transfer_learning/train.ipynb)\r\n\r\nPlease note that i am currently working on making these examples up to date with our API (they are a little outdated and may not work out of the box). ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1543303421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1550632954",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15867#issuecomment-1550632954",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15867",
        "id": 1550632954,
        "node_id": "IC_kwDOCVq1mM5cbMf6",
        "user": {
            "login": "zhijxu-MS",
            "id": 43435212,
            "node_id": "MDQ6VXNlcjQzNDM1MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/43435212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhijxu-MS",
            "html_url": "https://github.com/zhijxu-MS",
            "followers_url": "https://api.github.com/users/zhijxu-MS/followers",
            "following_url": "https://api.github.com/users/zhijxu-MS/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhijxu-MS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhijxu-MS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhijxu-MS/subscriptions",
            "organizations_url": "https://api.github.com/users/zhijxu-MS/orgs",
            "repos_url": "https://api.github.com/users/zhijxu-MS/repos",
            "events_url": "https://api.github.com/users/zhijxu-MS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhijxu-MS/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-17T03:28:10Z",
        "updated_at": "2023-05-17T03:28:10Z",
        "author_association": "MEMBER",
        "body": "@IzanCatalan does the shared example work for you, anything else we can help here?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1550632954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1607794447",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/15867#issuecomment-1607794447",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/15867",
        "id": 1607794447,
        "node_id": "IC_kwDOCVq1mM5f1P8P",
        "user": {
            "login": "IzanCatalan",
            "id": 40836734,
            "node_id": "MDQ6VXNlcjQwODM2NzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40836734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IzanCatalan",
            "html_url": "https://github.com/IzanCatalan",
            "followers_url": "https://api.github.com/users/IzanCatalan/followers",
            "following_url": "https://api.github.com/users/IzanCatalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/IzanCatalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IzanCatalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IzanCatalan/subscriptions",
            "organizations_url": "https://api.github.com/users/IzanCatalan/orgs",
            "repos_url": "https://api.github.com/users/IzanCatalan/repos",
            "events_url": "https://api.github.com/users/IzanCatalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IzanCatalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-06-26T16:07:17Z",
        "updated_at": "2023-06-26T16:14:18Z",
        "author_association": "NONE",
        "body": "Sorry @zhijxu-MS, I was busy this past month, and I couldn't take a look. I'm going to focus now on implementing what @baijumeswani suggested to me.\r\n\r\nHowever, there is some trouble with the links, some of them are down, and those from GitHub repo don't exist at this moment. I could find this link inside onnx-trining-exmaples repo which may be similar: https://github.com/microsoft/onnxruntime-training-examples/tree/master/on_device_training/mobile/android/c-cpp\r\n\r\nI am interested in \"artifacts\". It seems that you can load an onnx model, and with these artifacts, select the parameters of the layer which won't be modified in post-training. Is that correct? \r\n\r\nMoreover, as my intention from the beginning was to apply some kind of transfer learning over several onnx models, my idea is first to modify some weights and save the model in a new onnx file, later I will re-train the model.  \r\n\r\nTransfer learning means changing some elements from some weights training the model again, and seeing how the weights are updated to keep the accuracy. However, the weights I modified to do this transfer learning must remain intact. I plan to do so with on-device training from ONNX API, because the modified onnx models are already pre-trained. Am I correct in assuming I could retrain the new model (with, for example, full Imagenet train dataset) with this option?\r\n\r\nI thought that with \"artifacts\", with option frozen_params, I could do this. However, this only applies to the full parameter, not individual elements inside a parameter. Could I \"froze\" some elements inside a parameter?\r\n\r\nI would appreciate any help from you @baijumeswani and @zhijxu-MS .\r\n\r\nThank you.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1607794447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]