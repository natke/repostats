[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/532772077",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1848#issuecomment-532772077",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1848",
        "id": 532772077,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjc3MjA3Nw==",
        "user": {
            "login": "csteegz",
            "id": 5024543,
            "node_id": "MDQ6VXNlcjUwMjQ1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5024543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csteegz",
            "html_url": "https://github.com/csteegz",
            "followers_url": "https://api.github.com/users/csteegz/followers",
            "following_url": "https://api.github.com/users/csteegz/following{/other_user}",
            "gists_url": "https://api.github.com/users/csteegz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/csteegz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/csteegz/subscriptions",
            "organizations_url": "https://api.github.com/users/csteegz/orgs",
            "repos_url": "https://api.github.com/users/csteegz/repos",
            "events_url": "https://api.github.com/users/csteegz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/csteegz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-18T16:53:32Z",
        "updated_at": "2019-09-18T16:53:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think this is more a question then an issue report.\r\n\r\nORT server is looking for the ID field of the input. \r\n\r\nI'd suggest using something like [Netron](https://github.com/lutzroeder/netron) to visualize your onnx graph. You can then click on the graph, and you'll get the inputs, including the ID. An example of locating the input in `test\\testdata\\mul_1.onnx`, where the input is \"X\".\r\n\r\n![image](https://user-images.githubusercontent.com/5024543/65168813-29ed9c00-d9fa-11e9-808c-b9be20200b2a.png)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/532772077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/532788234",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1848#issuecomment-532788234",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1848",
        "id": 532788234,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzMjc4ODIzNA==",
        "user": {
            "login": "TMVector",
            "id": 4268638,
            "node_id": "MDQ6VXNlcjQyNjg2Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4268638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TMVector",
            "html_url": "https://github.com/TMVector",
            "followers_url": "https://api.github.com/users/TMVector/followers",
            "following_url": "https://api.github.com/users/TMVector/following{/other_user}",
            "gists_url": "https://api.github.com/users/TMVector/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TMVector/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TMVector/subscriptions",
            "organizations_url": "https://api.github.com/users/TMVector/orgs",
            "repos_url": "https://api.github.com/users/TMVector/repos",
            "events_url": "https://api.github.com/users/TMVector/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TMVector/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-18T17:36:06Z",
        "updated_at": "2019-09-18T17:36:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "+1 for using Netron :smile: \r\n\r\nYou can also use the [onnx](https://pypi.org/project/onnx/) python library to inspect the model file (the protobuf definition is [here](https://github.com/onnx/onnx/blob/master/onnx/onnx.in.proto) FYI).\r\n\r\n```python\r\nimport onnx\r\nmodel = onnx.load('path/to/model.onnx')\r\nprint([input.name for input in model.graph.input])\r\nprint([output.name for output in model.graph.output])\r\n```\r\n```\r\n['x']\r\n['y']\r\n```\r\n\r\nBe aware that you may not want to feed values for every input -- some of them may really be initializers (constants which you can override if they are also listed as inputs*). If you want to exclude initializers from the list:\r\n```python\r\ninitializer_names = {initializer.name for initializer in model.graph.initializer}\r\ninput_names = [input.name for input in model.graph.input if input.name not in initializer_names]\r\n```\r\n\r\n\\*Depending on the version of ONNX",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/532788234/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1271956312",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1848#issuecomment-1271956312",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1848",
        "id": 1271956312,
        "node_id": "IC_kwDOCVq1mM5L0INY",
        "user": {
            "login": "Stefan-1313",
            "id": 81744617,
            "node_id": "MDQ6VXNlcjgxNzQ0NjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/81744617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Stefan-1313",
            "html_url": "https://github.com/Stefan-1313",
            "followers_url": "https://api.github.com/users/Stefan-1313/followers",
            "following_url": "https://api.github.com/users/Stefan-1313/following{/other_user}",
            "gists_url": "https://api.github.com/users/Stefan-1313/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Stefan-1313/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Stefan-1313/subscriptions",
            "organizations_url": "https://api.github.com/users/Stefan-1313/orgs",
            "repos_url": "https://api.github.com/users/Stefan-1313/repos",
            "events_url": "https://api.github.com/users/Stefan-1313/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Stefan-1313/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-07T18:43:53Z",
        "updated_at": "2022-10-12T13:22:14Z",
        "author_association": "NONE",
        "body": "I know this question is closed for a long time but posting this as it may be useful for others.\r\n\r\nNetron is a great tool indeed! But if you desire more automation, you can also get the input names in C# from the `session.InputMetadata.Keys` property (and the output names using `session.OutputMetadata.Keys`)\r\n\r\nSo the full example would look like:\r\n```\r\n// Create inference session.\r\nstring modelPath = \"C:\\Your\\Path\\File.onnx\";\r\nInferenceSession session = new(modelPath); \r\n\r\n// Get the model input and output names.\r\nIEnumerable<string> inputNames = session.InputMetadata.Keys;\r\nIEnumerable<string> outputNames = session.OutputMetadata.Keys;\r\n\r\n// In case you have a single input, you can use:\r\nstring InputName = inputMeta.First().Key;\r\n```\r\n\r\nGood luck!\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1271956312/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]