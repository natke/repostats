[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171727997",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12045#issuecomment-1171727997",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12045",
        "id": 1171727997,
        "node_id": "IC_kwDOCVq1mM5F1yZ9",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-30T22:11:50Z",
        "updated_at": "2022-06-30T22:11:50Z",
        "author_association": "MEMBER",
        "body": "Thanks for reporting. Looks like the actual bug is that the fusion (to make the Conv node + some other node(s)) shouldn't happen if there is no support for that kernel in the first place. Whether we can enhance the FusedConv kernel to support fp16 is the next question. \r\n\r\nThe default optimization level is ALL, until this is fixed, please make it BASIC and try running the model. It shouldn't trigger this optimization.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171727997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171750911",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12045#issuecomment-1171750911",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12045",
        "id": 1171750911,
        "node_id": "IC_kwDOCVq1mM5F13__",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-30T22:55:15Z",
        "updated_at": "2022-06-30T23:12:45Z",
        "author_association": "MEMBER",
        "body": "Interestingly, there is a check in the FusedConv optimizer to ensure that the data type is float before going ahead with the fusion - \r\nhttps://github.com/microsoft/onnxruntime/blob/f468ea40e59c6f3d7ca06c3d0c0b6d325c185602/onnxruntime/core/optimizer/conv_activation_fusion.cc#L79. This was there in 1.10, the only refacotring that took place in 1.11 is the change to make the ConvActivationFusion a SelectActionTransformer - https://github.com/microsoft/onnxruntime/commit/9e7d7a9e97c979c3b32fac4d54324e3f9c6b1d40. \r\n\r\n@edgchen1 - Not sure if this inadvertently introduced a regression in 1.11 ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171750911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171884798",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12045#issuecomment-1171884798",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12045",
        "id": 1171884798,
        "node_id": "IC_kwDOCVq1mM5F2Yr-",
        "user": {
            "login": "Magnus1cheng",
            "id": 88537848,
            "node_id": "MDQ6VXNlcjg4NTM3ODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/88537848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Magnus1cheng",
            "html_url": "https://github.com/Magnus1cheng",
            "followers_url": "https://api.github.com/users/Magnus1cheng/followers",
            "following_url": "https://api.github.com/users/Magnus1cheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/Magnus1cheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Magnus1cheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Magnus1cheng/subscriptions",
            "organizations_url": "https://api.github.com/users/Magnus1cheng/orgs",
            "repos_url": "https://api.github.com/users/Magnus1cheng/repos",
            "events_url": "https://api.github.com/users/Magnus1cheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Magnus1cheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-01T03:14:50Z",
        "updated_at": "2022-07-01T03:15:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you for fixing this. I also did some debug before but got no clue how did ORT generate FusedConv Node. Can you explain to me a little about how does ORT optimize or modify the graph when get a `.onnx` file. I thought ORT just add everything that the `.onnx` file has, but apparently it did many complex modification to the graph, where's the entry point to the graph optimization/modification in this case. Thank you so much.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1171884798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1172585629",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12045#issuecomment-1172585629",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12045",
        "id": 1172585629,
        "node_id": "IC_kwDOCVq1mM5F5Dyd",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-01T17:58:31Z",
        "updated_at": "2022-07-01T19:08:52Z",
        "author_association": "MEMBER",
        "body": "ORT has in-memory graph optimizations that fuse together nodes and execute them in one-shot where it makes sense logically. For example, combine Conv + Add + Relu = FusedConv. This has to happen ONLY if there is a kernel for FusedConv. There is a kernel for FusedConv but only for the float32 data type. Until we add support for the other types, we must ensure that the fusion does not happen for other data types (fp16 for instance) because of the missing implementation(s) for those data types. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1172585629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1240833476",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12045#issuecomment-1240833476",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12045",
        "id": 1240833476,
        "node_id": "IC_kwDOCVq1mM5J9Z3E",
        "user": {
            "login": "OvervCW",
            "id": 60606100,
            "node_id": "MDQ6VXNlcjYwNjA2MTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/60606100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OvervCW",
            "html_url": "https://github.com/OvervCW",
            "followers_url": "https://api.github.com/users/OvervCW/followers",
            "following_url": "https://api.github.com/users/OvervCW/following{/other_user}",
            "gists_url": "https://api.github.com/users/OvervCW/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OvervCW/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OvervCW/subscriptions",
            "organizations_url": "https://api.github.com/users/OvervCW/orgs",
            "repos_url": "https://api.github.com/users/OvervCW/repos",
            "events_url": "https://api.github.com/users/OvervCW/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OvervCW/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-08T14:56:12Z",
        "updated_at": "2022-09-09T11:06:14Z",
        "author_association": "NONE",
        "body": "> The default optimization level is ALL, until this is fixed, please make it BASIC and try running the model. It shouldn't trigger this optimization.\r\n\r\nWhat do you mean by ALL/BASIC? Where should that be configured?\r\n\r\n**Update:** Never mind, found that it can be configured in Triton through the `level` parameter: https://github.com/triton-inference-server/onnxruntime_backend#model-config-options",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1240833476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]