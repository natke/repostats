[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094456059",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1094456059",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1094456059,
        "node_id": "IC_kwDOCVq1mM5BPBL7",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T01:36:31Z",
        "updated_at": "2022-04-11T01:36:31Z",
        "author_association": "MEMBER",
        "body": "Does it build if you use the ORT build script? Easiest is via build.sh or build.bat in the top level directory or the ORT repo.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094456059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094530687",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1094530687",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1094530687,
        "node_id": "IC_kwDOCVq1mM5BPTZ_",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T04:20:25Z",
        "updated_at": "2022-04-11T04:20:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "Never tried but probably doesn't really matter. It's just a compile error and we can look into the msg directly.\r\nThey may have change the API and if it's not a bug, ort may be relying on an UB. \r\n\r\nThe error says ort casts an iter to ptr.\r\nThat doesn't sound right to me.\r\nIterator isn't always a ptr. \r\n\r\nIn addition, these recent commits may be related \r\n- https://github.com/protocolbuffers/protobuf/commit/76398dab31e7e14c4f98a26612a6f09dec2f8106\r\n- https://github.com/protocolbuffers/protobuf/commit/3ab97ce8301183b46a4412b28171512f00f8edb9\r\n- https://github.com/protocolbuffers/protobuf/commit/ab4585a6956675ce14a1cba5d321fde980bbf12b",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094530687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094592984",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1094592984",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1094592984,
        "node_id": "IC_kwDOCVq1mM5BPinY",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T06:14:23Z",
        "updated_at": "2022-04-11T06:14:23Z",
        "author_association": "MEMBER",
        "body": "I don't think we've done any testing with 3.20, and this change could potentially be problematic.\r\n\r\n>RepeatedField now defines an iterator type instead of using a pointer.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1094592984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104217759",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1104217759",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1104217759,
        "node_id": "IC_kwDOCVq1mM5B0Qaf",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-20T17:28:34Z",
        "updated_at": "2022-04-20T17:28:34Z",
        "author_association": "MEMBER",
        "body": "@faxu / @pranavsharma  , please help evaluate it.  ONNX Runtime Conda package also wants it. \r\n\r\nThe problem can be solved by adding an ifdef like:\r\n\r\n```c++\r\n#if GOOGLE_PROTOBUF_VERSION >= 3011000\r\n    // Only take one parameter since protobuf 3.11\r\n    coded_stream.SetTotalBytesLimit(total_bytes_limit);\r\n#else\r\n    // Total bytes hard limit / warning limit are set to 2GB and 512MB respectively.\r\n    coded_stream.SetTotalBytesLimit(total_bytes_limit, 512LL << 20);\r\n#endif\r\n```\r\nOr we may directly update protobuf to the latest. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104217759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104255972",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1104255972",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1104255972,
        "node_id": "IC_kwDOCVq1mM5B0Zvk",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-20T18:03:31Z",
        "updated_at": "2022-04-20T18:04:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "> @faxu / @pranavsharma , please help evaluate it. ONNX Runtime Conda package also wants it.\r\n> \r\n> The problem can be solved by adding an ifdef like:\r\n> \r\n> ```c++\r\n> #if GOOGLE_PROTOBUF_VERSION >= 3011000\r\n>     // Only take one parameter since protobuf 3.11\r\n>     coded_stream.SetTotalBytesLimit(total_bytes_limit);\r\n> #else\r\n>     // Total bytes hard limit / warning limit are set to 2GB and 512MB respectively.\r\n>     coded_stream.SetTotalBytesLimit(total_bytes_limit, 512LL << 20);\r\n> #endif\r\n> ```\r\n> \r\n> Or we may directly update protobuf to the latest.\r\n\r\n@snnn \r\nThanks for the investigation.\r\nPlease also make sure `GOOGLE_PROTOBUF_VERSION` won't be in any header, as that'll introduce dependency issue when building with other protobuf-related libs.\r\n\r\nAnd you may also want to `#if defined(GOOGLE_PROTOBUF_VERSION)` before using it, with a fallback path just in case.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104255972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104539497",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1104539497",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1104539497,
        "node_id": "IC_kwDOCVq1mM5B1e9p",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2022-04-20T23:11:43Z",
        "updated_at": "2022-04-20T23:11:43Z",
        "author_association": "MEMBER",
        "body": "> @faxu / @pranavsharma , please help evaluate it. ONNX Runtime Conda package also wants it.\r\n> \r\n> The problem can be solved by adding an ifdef like:\r\n> \r\n> ```c++\r\n> #if GOOGLE_PROTOBUF_VERSION >= 3011000\r\n>     // Only take one parameter since protobuf 3.11\r\n>     coded_stream.SetTotalBytesLimit(total_bytes_limit);\r\n> #else\r\n>     // Total bytes hard limit / warning limit are set to 2GB and 512MB respectively.\r\n>     coded_stream.SetTotalBytesLimit(total_bytes_limit, 512LL << 20);\r\n> #endif\r\n> ```\r\n> \r\n> Or we may directly update protobuf to the latest.\r\n\r\nwhat is the downside of directly updating to protobuf 3.20? Maintaining ifdef will be harder to manage over time. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104539497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104552374",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1104552374",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1104552374,
        "node_id": "IC_kwDOCVq1mM5B1iG2",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-20T23:33:07Z",
        "updated_at": "2022-04-20T23:33:07Z",
        "author_association": "MEMBER",
        "body": "> what is the downside of directly updating to protobuf 3.20?\r\n\r\nThe upgrade is not absolutely necessary. I'm not aware of any downside other than having such a small risk. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104552374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104554407",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1104554407",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1104554407,
        "node_id": "IC_kwDOCVq1mM5B1imn",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-20T23:37:35Z",
        "updated_at": "2022-04-20T23:37:35Z",
        "author_association": "MEMBER",
        "body": "* Not sure if 3.20 is security reviewed by Microsoft.\r\n* Are there any strong reasons for using 3.20? Upgrading dependencies doesn't add any value to the product unless it's absolutely needed to patch a security hole/major bug/perf issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1104554407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107867159",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1107867159",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1107867159,
        "node_id": "IC_kwDOCVq1mM5CCLYX",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-24T15:48:34Z",
        "updated_at": "2022-04-24T15:48:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "I can get onnxruntime 1.11.0 to build with protobuf 3.20.1 via the following change:\r\n```diff\r\ndiff --git a/onnxruntime/core/framework/tensorprotoutils.cc b/onnxruntime/core/framework/tensorprotoutils.cc\r\nindex 085c1ffbe..a9070d5e4 100644\r\n--- a/onnxruntime/core/framework/tensorprotoutils.cc\r\n+++ b/onnxruntime/core/framework/tensorprotoutils.cc\r\n@@ -256,7 +256,7 @@ Status UnpackTensor(const ONNX_NAMESPACE::TensorProto& tensor, const void* raw_d\r\n                              \") does not match the data size(\", tensor.field_size(), \") in proto\");         \\\r\n     auto& data = tensor.field_name();                                                                       \\\r\n     for (auto data_iter = data.cbegin(); data_iter != data.cend(); ++data_iter)                             \\\r\n-      *p_data++ = *reinterpret_cast<const T*>(data_iter);                                                   \\\r\n+      *p_data++ = *data_iter;                                                                               \\\r\n     return Status::OK();                                                                                    \\\r\n   }\r\n \r\n```\r\n\r\nPatched onnxruntime also builds with protobuf 3.19.4. Not sure if this approach is safe or not, though.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107867159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107870181",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1107870181",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1107870181,
        "node_id": "IC_kwDOCVq1mM5CCMHl",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-24T16:05:30Z",
        "updated_at": "2022-04-24T16:05:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Do you happen to know why it was casted?\r\nMaybe what you need is `*reinterpret_cast<const T*>(&*data_iter)`, in case it wants to binary cast int to float for example.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107870181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107892655",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1107892655",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1107892655,
        "node_id": "IC_kwDOCVq1mM5CCRmv",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-24T18:23:17Z",
        "updated_at": "2022-04-24T18:23:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Do you happen to know why it was casted?\r\n\r\nNo idea :(",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1107892655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109168989",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1109168989",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1109168989,
        "node_id": "IC_kwDOCVq1mM5CHJNd",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-26T00:29:47Z",
        "updated_at": "2022-04-26T00:29:47Z",
        "author_association": "MEMBER",
        "body": "There isn't a direct 1-1 mapping from the field names of TensorProto to Tensor data types.  For example, data_iter may points to int32*(from int32_data()) when p_data points to bool or int8.   See: https://github.com/onnx/onnx/blob/main/onnx/onnx.proto#L551\r\n\r\nI feel it should be \r\n```\r\n*p_data++ = static_cast<T>(*data_iter); \r\n```\r\ninstead.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1109168989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111795167",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1111795167",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1111795167,
        "node_id": "IC_kwDOCVq1mM5CRKXf",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T06:25:11Z",
        "updated_at": "2022-04-28T06:25:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the pointer! If I understand those comments, relevant ONNX issues (e.g., https://github.com/onnx/onnx/issues/838, https://github.com/onnx/onnx/issues/3733) and some ONNX codes (e.g., `onnx.numpy_helper`) correctly, each 8-bit or 16-bit value is expanded to int32 during serialization, so `static_cast` is indeed correct. `reinterpret_cast` may lead to incorrect values for 8-bit and 16-bit values on big endian systems as protobuf should have decoded each int32 value as big endian format, and thus each 8-bit or 16-bit value is at a higher address instead of `data_iter`. I don't have any big endian devices for testing, though.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1111795167/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112061287",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1112061287",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1112061287,
        "node_id": "IC_kwDOCVq1mM5CSLVn",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T10:51:43Z",
        "updated_at": "2022-04-28T10:51:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Agree with @yan12125 \r\nProbably try reinterpret_cast with endianness check?\r\nYou may use `*reinterpret_cast<uint64_t*>(\"01234567\")` for that.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112061287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112252848",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1112252848",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1112252848,
        "node_id": "IC_kwDOCVq1mM5CS6Gw",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T14:08:51Z",
        "updated_at": "2022-04-28T14:10:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hmm, I think snnn's approach `*p_data++ = static_cast<T>(*data_iter);` already works on both little and big endian systems, so there is no need to handle the complexity from `reinterpret_cast`. (I still have no idea why `reinterpret_cast` was used - it's not necessary for either newer or older protobuf from what I read.)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112252848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112310215",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1112310215",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1112310215,
        "node_id": "IC_kwDOCVq1mM5CTIHH",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-28T14:56:24Z",
        "updated_at": "2022-04-28T14:56:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "My guess would be it may stored under the wrong type and only binary representation can be trusted in that case, e.g. a float stored as int and want to restore to its original float.\r\nAdditionally, static_cast only takes care of endian when sizes are the same, or the pointer can point to the wrong side.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112310215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112895555",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1112895555",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1112895555,
        "node_id": "IC_kwDOCVq1mM5CVXBD",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-29T05:42:19Z",
        "updated_at": "2022-04-29T05:42:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "> float stored as int and want to restore to its original float\r\n\r\nYes, float values stored in int32_data need `reinterpret_cast` as per comments in ONNX, and they are handled in different template instantiations. For example, `FLOAT16` is handled by https://github.com/microsoft/onnxruntime/blob/v1.11.1/onnxruntime/core/framework/tensorprotoutils.cc#L332.\r\n\r\n> static_cast only takes care of endian when sizes are the same\r\n\r\nI think `static_cast` works for data types of different sizes on all kinds of architectures? I managed to have a try with qemu for aarch64_be (AArch64 big endian):\r\n\r\n```\r\n$ cat test-endian.cpp\r\n#include <cstdint>\r\n#include <cstdio>\r\n\r\nint main() {\r\n    int32_t a[1] = { 123 };\r\n    uint8_t b = *reinterpret_cast<const uint8_t*>(a);\r\n    uint8_t c = static_cast<uint8_t>(*a);\r\n    printf(\"%d %d\\n\", b, c);\r\n    return 0;\r\n}\r\n\r\n$ ./gcc-arm-11.2-2022.02-x86_64-aarch64_be-none-linux-gnu/bin/aarch64_be-none-linux-gnu-g++ test-endian.cpp -o test-endian-aarch64_be -static\r\n\r\n$ g++ test-endian.cpp -o test-endian-x86_64\r\n\r\n$ qemu-aarch64_be test-endian-aarch64_be\r\n0 123\r\n\r\n$ ./test-endian-x86_64\r\n123 123\r\n```\r\n\r\nThe emulator `qemu-aarch64_be` is from Arch Linux package https://archlinux.org/packages/extra/x86_64/qemu-arch-extra/, and the toolchain gcc-arm-11.2-2022.02-x86_64-aarch64_be-none-linux-gnu is downloaded from https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/downloads.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1112895555/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1143427088",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1143427088",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1143427088,
        "node_id": "IC_kwDOCVq1mM5EJ1AQ",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-01T10:32:01Z",
        "updated_at": "2022-06-01T10:32:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "FYI they did something new recently as well.\r\nProtobuf 3.21 is now 4.21 in python, with hard dependency on post-3.19 protoc.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1143427088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1143443366",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1143443366",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1143443366,
        "node_id": "IC_kwDOCVq1mM5EJ4-m",
        "user": {
            "login": "yan12125",
            "id": 1937689,
            "node_id": "MDQ6VXNlcjE5Mzc2ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1937689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yan12125",
            "html_url": "https://github.com/yan12125",
            "followers_url": "https://api.github.com/users/yan12125/followers",
            "following_url": "https://api.github.com/users/yan12125/following{/other_user}",
            "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions",
            "organizations_url": "https://api.github.com/users/yan12125/orgs",
            "repos_url": "https://api.github.com/users/yan12125/repos",
            "events_url": "https://api.github.com/users/yan12125/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yan12125/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-01T10:49:43Z",
        "updated_at": "2022-06-01T10:49:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yeah, both onnx and onnxruntime are pinning protobuf 3.x for now (https://github.com/microsoft/onnxruntime/pull/11687, https://github.com/microsoft/onnxruntime/pull/11682, https://github.com/onnx/onnx/pull/4223)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1143443366/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1355129474",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1355129474",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1355129474,
        "node_id": "IC_kwDOCVq1mM5QxaKC",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-16T15:55:35Z",
        "updated_at": "2022-12-16T15:55:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "Did I miss anything?\r\nTrying to build the latest release tag with protobuf 3.20.3 but failed:\r\n```\r\nFAILED: CMakeFiles/onnxruntime_test_utils.dir/tmp/scratch/onnxruntime/onnxruntime/test/util/test_utils.cc.o                                                                                                                                                   \r\nccache /usr/bin/g++-10 -DEIGEN_MPL2_ONLY -DEIGEN_USE_THREADS -DENABLE_CPU_FP16_TRAINING_OPS -DENABLE_LANGUAGE_INTEROP_OPS -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -DNSYNC_ATOMIC_CPP11 -DONNX_ML=1 -DONNX_NAMESPACE=onnx -DORT_RUN_EXTERNAL_ONNX_TESTS -DPLATFORM_P\r\nOSIX -DUSE_CUDA=1 -DUSE_DNNL=1 -I/tmp/scratch/onnxruntime/include/onnxruntime -I/tmp/scratch/onnxruntime/include/onnxruntime/core/session -I/tmp/scratch/onnxruntime/cmake/external/nsync/public -I/tmp/scratch/onnxruntime/build -I/tmp/scratch/onnxruntime/o\r\nnnxruntime -I/tmp/scratch/onnxruntime/build/_deps/abseil_cpp-src -I/tmp/scratch/onnxruntime/cmake/external/SafeInt -I/tmp/scratch/onnxruntime/cmake/external/flatbuffers/include -I/tmp/scratch/onnxruntime/onnxruntime/test/util/include -I/tmp/scratch/onnxr\r\nuntime/cmake/external/eigen -fdebug-prefix-map='/tmp/scratch'='/usr/local/src' -g -ffunction-sections -fdata-sections -march=native -mtune=native -DCPUINFO_SUPPORTED -O3 -DNDEBUG -DGSL_UNENFORCED_ON_CONTRACT_VIOLATION -flto=auto -fno-fat-lto-objects -fPI\r\nC -Wall -Wextra -Wno-deprecated-copy -Wno-nonnull-compare -std=gnu++17 -MD -MT CMakeFiles/onnxruntime_test_utils.dir/tmp/scratch/onnxruntime/onnxruntime/test/util/test_utils.cc.o -MF CMakeFiles/onnxruntime_test_utils.dir/tmp/scratch/onnxruntime/onnxrunti\r\nme/test/util/test_utils.cc.o.d -o CMakeFiles/onnxruntime_test_utils.dir/tmp/scratch/onnxruntime/onnxruntime/test/util/test_utils.cc.o -c /tmp/scratch/onnxruntime/onnxruntime/test/util/test_utils.cc                                                         \r\n../onnxruntime/test/util/test_utils.cc: In function ‘void onnxruntime::test::SparseIndicesChecker(const onnx::TensorProto&, gsl::span<const long int>)’:\r\n../onnxruntime/test/util/test_utils.cc:164:105: error: no matching function for call to ‘make_span(google::protobuf::RepeatedField<long int>::const_iterator, google::protobuf::RepeatedField<long int>::const_iterator)’\r\n  164 |         ind_span = gsl::make_span(indices_proto.int64_data().cbegin(), indices_proto.int64_data().cend());\r\n      |                                                                                                         ^\r\nIn file included from ../onnxruntime/gsl/gsl:25,\r\n                 from ../include/onnxruntime/core/common/logging/capture.h:7,\r\n                 from ../include/onnxruntime/core/common/logging/logging.h:16,\r\n                 from ../onnxruntime/core/framework/config_options.h:10,\r\n                 from ../include/onnxruntime/core/framework/run_options.h:9,\r\n                 from ../include/onnxruntime/core/framework/framework_common.h:9,\r\n                 from ../onnxruntime/test/util/include/test_utils.h:6,\r\n                 from ../onnxruntime/test/util/test_utils.cc:4: \r\n../onnxruntime/gsl/gsl-lite.hpp:2051:3: note: candidate: ‘template<class T> constexpr gsl::span<T> gsl::make_span(T*, typename gsl::span<T>::index_type)’\r\n 2051 |   make_span(T * ptr, typename span<T>::index_type count) {\r\n      |   ^~~~~~~~~\r\n../onnxruntime/gsl/gsl-lite.hpp:2051:3: note:   template argument deduction/substitution failed:\r\n../onnxruntime/test/util/test_utils.cc:164:105: note:   mismatched types ‘T*’ and ‘google::protobuf::internal::RepeatedIterator<const long int>’\r\n  164 |         ind_span = gsl::make_span(indices_proto.int64_data().cbegin(), indices_proto.int64_data().cend());\r\n      |                                                                                                         ^\r\nIn file included from ../onnxruntime/gsl/gsl:25,\r\n                 from ../include/onnxruntime/core/common/logging/capture.h:7,\r\n                 from ../include/onnxruntime/core/common/logging/logging.h:16,\r\n                 from ../onnxruntime/core/framework/config_options.h:10,\r\n                 from ../include/onnxruntime/core/framework/run_options.h:9,\r\n                 from ../include/onnxruntime/core/framework/framework_common.h:9,\r\n                 from ../onnxruntime/test/util/include/test_utils.h:6,\r\n                 from ../onnxruntime/test/util/test_utils.cc:4: \r\n../onnxruntime/gsl/gsl-lite.hpp:2057:3: note: candidate: ‘template<class T> constexpr gsl::span<T> gsl::make_span(T*, T*)’\r\n 2057 |   make_span(T * first, T * last) {\r\n      |   ^~~~~~~~~\r\n../onnxruntime/gsl/gsl-lite.hpp:2057:3: note:   template argument deduction/substitution failed:\r\n../onnxruntime/test/util/test_utils.cc:164:105: note:   mismatched types ‘T*’ and ‘google::protobuf::internal::RepeatedIterator<const long int>’\r\n  164 |         ind_span = gsl::make_span(indices_proto.int64_data().cbegin(), indices_proto.int64_data().cend());\r\n      |                                                                                                         ^\r\nIn file included from ../onnxruntime/gsl/gsl:25,\r\n                 from ../include/onnxruntime/core/common/logging/capture.h:7,\r\n                 from ../include/onnxruntime/core/common/logging/logging.h:16,\r\n                 from ../onnxruntime/core/framework/config_options.h:10,\r\n                 from ../include/onnxruntime/core/framework/run_options.h:9,\r\n                 from ../include/onnxruntime/core/framework/framework_common.h:9,\r\n                 from ../onnxruntime/test/util/include/test_utils.h:6,\r\n                 from ../onnxruntime/test/util/test_utils.cc:4: \r\n../onnxruntime/gsl/gsl-lite.hpp:2063:3: note: candidate: ‘template<class T, long unsigned int N> constexpr gsl::span<T> gsl::make_span(T (&)[N])’\r\n 2063 |   make_span(T(&arr)[N]) {\r\n      |   ^~~~~~~~~\r\n../onnxruntime/gsl/gsl-lite.hpp:2063:3: note:   template argument deduction/substitution failed:\r\n../onnxruntime/test/util/test_utils.cc:164:105: note:   mismatched types ‘T [N]’ and ‘google::protobuf::RepeatedField<long int>::const_iterator’ {aka ‘google::protobuf::internal::RepeatedIterator<const long int>’}\r\n  164 |         ind_span = gsl::make_span(indices_proto.int64_data().cbegin(), indices_proto.int64_data().cend());\r\n      |                                                                                                         ^\r\nIn file included from ../onnxruntime/gsl/gsl:25,\r\n                 from ../include/onnxruntime/core/common/logging/capture.h:7,\r\n                 from ../include/onnxruntime/core/common/logging/logging.h:16,\r\n                 from ../onnxruntime/core/framework/config_options.h:10,\r\n                 from ../include/onnxruntime/core/framework/run_options.h:9,\r\n                 from ../include/onnxruntime/core/framework/framework_common.h:9,\r\n                 from ../onnxruntime/test/util/include/test_utils.h:6,\r\n                 from ../onnxruntime/test/util/test_utils.cc:4: \r\n../onnxruntime/gsl/gsl-lite.hpp:2071:3: note: candidate: ‘template<class T, long unsigned int N> constexpr gsl::span<T> gsl::make_span(std::array<_Tp, _Nm>&)’\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1355129474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1360061600",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1360061600",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1360061600,
        "node_id": "IC_kwDOCVq1mM5REOSg",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-20T19:36:35Z",
        "updated_at": "2022-12-20T19:36:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "ping on this",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1360061600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1382937208",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1382937208",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1382937208,
        "node_id": "IC_kwDOCVq1mM5SbfJ4",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-14T22:10:26Z",
        "updated_at": "2023-01-14T22:10:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "ping on this again in the new year.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1382937208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1382960252",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/11129#issuecomment-1382960252",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/11129",
        "id": 1382960252,
        "node_id": "IC_kwDOCVq1mM5Sbkx8",
        "user": {
            "login": "xkszltl",
            "id": 5203025,
            "node_id": "MDQ6VXNlcjUyMDMwMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5203025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xkszltl",
            "html_url": "https://github.com/xkszltl",
            "followers_url": "https://api.github.com/users/xkszltl/followers",
            "following_url": "https://api.github.com/users/xkszltl/following{/other_user}",
            "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions",
            "organizations_url": "https://api.github.com/users/xkszltl/orgs",
            "repos_url": "https://api.github.com/users/xkszltl/repos",
            "events_url": "https://api.github.com/users/xkszltl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xkszltl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-14T23:20:17Z",
        "updated_at": "2023-01-14T23:20:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "Seems this was not fixed at the time of closure.\r\n\r\nI can only build 1.13.1 with this patch:\r\n- https://github.com/microsoft/onnxruntime/pull/13731\r\n- And sed the `onnxruntime::narrow` in that commit back to `gsl::narrow`, because the first one has not been released yet.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1382960252/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]