[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/513566155",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-513566155",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 513566155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzU2NjE1NQ==",
        "user": {
            "login": "Dian-Yi",
            "id": 44020057,
            "node_id": "MDQ6VXNlcjQ0MDIwMDU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/44020057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dian-Yi",
            "html_url": "https://github.com/Dian-Yi",
            "followers_url": "https://api.github.com/users/Dian-Yi/followers",
            "following_url": "https://api.github.com/users/Dian-Yi/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dian-Yi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dian-Yi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dian-Yi/subscriptions",
            "organizations_url": "https://api.github.com/users/Dian-Yi/orgs",
            "repos_url": "https://api.github.com/users/Dian-Yi/repos",
            "events_url": "https://api.github.com/users/Dian-Yi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dian-Yi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-21T15:57:51Z",
        "updated_at": "2019-07-21T15:57:51Z",
        "author_association": "NONE",
        "body": "......",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/513566155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/513960779",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-513960779",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 513960779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzk2MDc3OQ==",
        "user": {
            "login": "linkerzhang",
            "id": 5194557,
            "node_id": "MDQ6VXNlcjUxOTQ1NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5194557?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/linkerzhang",
            "html_url": "https://github.com/linkerzhang",
            "followers_url": "https://api.github.com/users/linkerzhang/followers",
            "following_url": "https://api.github.com/users/linkerzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/linkerzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/linkerzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/linkerzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/linkerzhang/orgs",
            "repos_url": "https://api.github.com/users/linkerzhang/repos",
            "events_url": "https://api.github.com/users/linkerzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/linkerzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-22T21:24:40Z",
        "updated_at": "2019-07-22T21:24:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "@xiuyangleiasp if you know which tensor you'd like to fetch. One good way is to put the tensor into your model (graph) outputs  field.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/513960779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514128746",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-514128746",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 514128746,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDEyODc0Ng==",
        "user": {
            "login": "paulbauriegel",
            "id": 20282916,
            "node_id": "MDQ6VXNlcjIwMjgyOTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/20282916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paulbauriegel",
            "html_url": "https://github.com/paulbauriegel",
            "followers_url": "https://api.github.com/users/paulbauriegel/followers",
            "following_url": "https://api.github.com/users/paulbauriegel/following{/other_user}",
            "gists_url": "https://api.github.com/users/paulbauriegel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paulbauriegel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paulbauriegel/subscriptions",
            "organizations_url": "https://api.github.com/users/paulbauriegel/orgs",
            "repos_url": "https://api.github.com/users/paulbauriegel/repos",
            "events_url": "https://api.github.com/users/paulbauriegel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paulbauriegel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-23T09:23:01Z",
        "updated_at": "2019-07-23T09:24:59Z",
        "author_association": "NONE",
        "body": "@linkerzhang I was trying that and I'm not sure if that is currently possible.\r\n\r\nLet's say I've a model.onnx with some hidden layer with the output name '65'\r\n```python\r\nimport onnx\r\nmodel_onnx = onnx.load(\"model.onnx\")\r\nassert [n for n in model_onnx.graph.node if '65' in n.output][0].output, \"65\"\r\n```\r\nwhen I now try to access that layer:\r\n```python\r\nimport onnxruntime as rt\r\nsess = rt.InferenceSession(\"model.onnx\")\r\ninput_name = sess.get_inputs()[0].name\r\nlabel_name = sess.get_outputs()[1].name # Using one of the output layer names works fine\r\nlabel_name = '65' # trying to access any hidden layer fails \r\npred_onx = sess.run([label_name], {input_name: blob})[0]\r\n```\r\nI'm getting following exception: `Method run failed due to: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Invalid Output Name:65`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514128746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514682731",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-514682731",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 514682731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4MjczMQ==",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-24T15:32:32Z",
        "updated_at": "2019-07-24T15:32:32Z",
        "author_association": "MEMBER",
        "body": "currently you can't fetch any arbitrary intermediate output.\r\nyou can only fetch outputs defined in the model's outputs. this is why @linkerzhang suggested a workaround might be to add the intermediate output you want to the model (graph) output field.\r\nthis assumes you are able to modify the onnx model (protobuf)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514682731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514805365",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-514805365",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 514805365,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDgwNTM2NQ==",
        "user": {
            "login": "jpa99",
            "id": 12013536,
            "node_id": "MDQ6VXNlcjEyMDEzNTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12013536?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpa99",
            "html_url": "https://github.com/jpa99",
            "followers_url": "https://api.github.com/users/jpa99/followers",
            "following_url": "https://api.github.com/users/jpa99/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpa99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpa99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpa99/subscriptions",
            "organizations_url": "https://api.github.com/users/jpa99/orgs",
            "repos_url": "https://api.github.com/users/jpa99/repos",
            "events_url": "https://api.github.com/users/jpa99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpa99/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-24T21:22:59Z",
        "updated_at": "2019-07-25T00:44:19Z",
        "author_association": "NONE",
        "body": "Given an onnx model file with predefined outputs, is it possible to modify the model to add an intermediate tensor to to the model output field? How might I go about doing this?\r\n\r\nEDIT: I was able to add any intermediate tensor to the model output via the following, which enables extracting the specified output in onnxruntime. \r\n\r\n```python\r\nimport onnx\r\nfrom onnx import helper\r\n\r\nmodel = onnx.load(model_path)\r\nintermediate_layer_value_info = helper.ValueInfoProto()\r\nintermediate_layer_value_info.name = intermediate_tensor_name\r\nmodel.graph.output.append(intermediate_layer_value_info)\r\nonnx.save(model, model_path)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514805365/reactions",
            "total_count": 11,
            "+1": 11,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514850239",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-514850239",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 514850239,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg1MDIzOQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-25T00:42:04Z",
        "updated_at": "2019-07-25T00:42:04Z",
        "author_association": "MEMBER",
        "body": "Thanks @jpa99 for the code snippet. That pretty much answers the question. So closing this. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514850239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/607944400",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-607944400",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 607944400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk0NDQwMA==",
        "user": {
            "login": "ranazulay",
            "id": 62506382,
            "node_id": "MDQ6VXNlcjYyNTA2Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/62506382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ranazulay",
            "html_url": "https://github.com/ranazulay",
            "followers_url": "https://api.github.com/users/ranazulay/followers",
            "following_url": "https://api.github.com/users/ranazulay/following{/other_user}",
            "gists_url": "https://api.github.com/users/ranazulay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ranazulay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ranazulay/subscriptions",
            "organizations_url": "https://api.github.com/users/ranazulay/orgs",
            "repos_url": "https://api.github.com/users/ranazulay/repos",
            "events_url": "https://api.github.com/users/ranazulay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ranazulay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-02T16:15:30Z",
        "updated_at": "2020-04-02T16:15:30Z",
        "author_association": "NONE",
        "body": "This issue is closed but the proposed solution isn't working.\r\nonnx.onnx_cpp2py_export.checker.ValidationError: Field 'type' of value_info is required but missing.\r\n\r\nAnyone else manged to extract results of arbitrary tensors for any layer in the model?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/607944400/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615423698",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-615423698",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 615423698,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTQyMzY5OA==",
        "user": {
            "login": "samratdebroy",
            "id": 10346242,
            "node_id": "MDQ6VXNlcjEwMzQ2MjQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10346242?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samratdebroy",
            "html_url": "https://github.com/samratdebroy",
            "followers_url": "https://api.github.com/users/samratdebroy/followers",
            "following_url": "https://api.github.com/users/samratdebroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/samratdebroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samratdebroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samratdebroy/subscriptions",
            "organizations_url": "https://api.github.com/users/samratdebroy/orgs",
            "repos_url": "https://api.github.com/users/samratdebroy/repos",
            "events_url": "https://api.github.com/users/samratdebroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samratdebroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T19:24:07Z",
        "updated_at": "2020-04-17T19:24:07Z",
        "author_association": "NONE",
        "body": "> This issue is closed but the proposed solution isn't working.\r\n> onnx.onnx_cpp2py_export.checker.ValidationError: Field 'type' of value_info is required but missing.\r\n> \r\n> Anyone else manged to extract results of arbitrary tensors for any layer in the model?\r\n\r\nLikewise, I'm also having the same issue. Is there work being done to eventually support inspecting data from intermediate layers? From my understanding, all node outputs have unique names even when the outputs only link to another node's inputs, so it would be nice if users could extract data for any uniquely identified outputs and not just graph-level outputs. It's very time consuming to implement this work-around especially because it fails for some models.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615423698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615429983",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-615429983",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 615429983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTQyOTk4Mw==",
        "user": {
            "login": "ranazulay",
            "id": 62506382,
            "node_id": "MDQ6VXNlcjYyNTA2Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/62506382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ranazulay",
            "html_url": "https://github.com/ranazulay",
            "followers_url": "https://api.github.com/users/ranazulay/followers",
            "following_url": "https://api.github.com/users/ranazulay/following{/other_user}",
            "gists_url": "https://api.github.com/users/ranazulay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ranazulay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ranazulay/subscriptions",
            "organizations_url": "https://api.github.com/users/ranazulay/orgs",
            "repos_url": "https://api.github.com/users/ranazulay/repos",
            "events_url": "https://api.github.com/users/ranazulay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ranazulay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T19:39:43Z",
        "updated_at": "2020-04-17T19:39:43Z",
        "author_association": "NONE",
        "body": "I've managed to get some progress with this, but it only works on models with inferred shapes (opset version 8, after that shapes inference is broken). \r\nAnother unfortunate limitation is that it only works on bottleneck nodes (not on nodes in parallel sub-graphs, such as shortcut/residual/shuffle blocks).\r\n\r\nHope it helps a bit:\r\n\r\n```\r\n    if end_node_names:\r\n        model = onnx.load(model_path)\r\n        end_node_shapes_and_names = dict()\r\n        for node in model.graph.value_info:\r\n            if node.name in end_node_names:\r\n                end_node_shapes_and_names[node.name] = [x.dim_value for x in node.type.tensor_type.shape.dim]\r\n\r\n        for name, shape in end_node_shapes_and_names.items():\r\n            out_node = make_tensor_value_info(name=name, elem_type=onnx.TensorProto.FLOAT, shape=shape)\r\n            model.graph.output.append(out_node)\r\n        onnx.save_model(model, model_path)\r\n\r\n    onnx_rt_sess = rt.InferenceSession(model_path)\r\n    end_node_names = end_node_names if end_node_names else [onnx_rt_sess.get_outputs()[0].name]\r\n    feed_dict = {onnx_rt_sess.get_inputs()[0].name: onnx_input_data}\r\n    onnx_results = onnx_rt_sess.run(end_node_names, feed_dict)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615429983/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615455570",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-615455570",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 615455570,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTQ1NTU3MA==",
        "user": {
            "login": "samratdebroy",
            "id": 10346242,
            "node_id": "MDQ6VXNlcjEwMzQ2MjQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10346242?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samratdebroy",
            "html_url": "https://github.com/samratdebroy",
            "followers_url": "https://api.github.com/users/samratdebroy/followers",
            "following_url": "https://api.github.com/users/samratdebroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/samratdebroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samratdebroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samratdebroy/subscriptions",
            "organizations_url": "https://api.github.com/users/samratdebroy/orgs",
            "repos_url": "https://api.github.com/users/samratdebroy/repos",
            "events_url": "https://api.github.com/users/samratdebroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samratdebroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T20:44:55Z",
        "updated_at": "2020-04-17T20:44:55Z",
        "author_association": "NONE",
        "body": "Sorry I should have mentioned I also made quite a bit of progress. I wrote a pretty generic script here: https://github.com/zetane/expose_onnx_node_outputs/blob/master/expose_node_outputs.py\r\nthat should work with most .onnx models in order to expose internal node outputs as graph-level outputs. It uses onnx.shape_inference to infer the shape and data type of different operator outputs.\r\n\r\nIt also suffers from some limitations. For example, any node for which data type cannot be inferred cannot be exposed as a graph output as that violates the onnx standard. It's just frustrating to have to use \"hacks\" like this to circumvent such a simple problem.\r\n\r\nI hope the script helps others. The script can be used to overwrite an existing model or it can create a copy with the exposed nodes and will return a filepath to the modified model.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/615455570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/751869467",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-751869467",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 751869467,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTg2OTQ2Nw==",
        "user": {
            "login": "Pafrak",
            "id": 8955436,
            "node_id": "MDQ6VXNlcjg5NTU0MzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8955436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pafrak",
            "html_url": "https://github.com/Pafrak",
            "followers_url": "https://api.github.com/users/Pafrak/followers",
            "following_url": "https://api.github.com/users/Pafrak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pafrak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pafrak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pafrak/subscriptions",
            "organizations_url": "https://api.github.com/users/Pafrak/orgs",
            "repos_url": "https://api.github.com/users/Pafrak/repos",
            "events_url": "https://api.github.com/users/Pafrak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pafrak/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-28T21:26:46Z",
        "updated_at": "2020-12-28T21:26:46Z",
        "author_association": "NONE",
        "body": "hi @samratdebroy the link you posted is now broken. Can you provide a working link?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/751869467/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/771883327",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-771883327",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 771883327,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTg4MzMyNw==",
        "user": {
            "login": "Ekta246",
            "id": 52435785,
            "node_id": "MDQ6VXNlcjUyNDM1Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/52435785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ekta246",
            "html_url": "https://github.com/Ekta246",
            "followers_url": "https://api.github.com/users/Ekta246/followers",
            "following_url": "https://api.github.com/users/Ekta246/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ekta246/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ekta246/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ekta246/subscriptions",
            "organizations_url": "https://api.github.com/users/Ekta246/orgs",
            "repos_url": "https://api.github.com/users/Ekta246/repos",
            "events_url": "https://api.github.com/users/Ekta246/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ekta246/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-02T18:47:04Z",
        "updated_at": "2021-02-02T18:47:04Z",
        "author_association": "NONE",
        "body": "@samratdebroy \r\n+1 can you provide a working link?\r\n\r\nTIA",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/771883327/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/785404429",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-785404429",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 785404429,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQwNDQyOQ==",
        "user": {
            "login": "takuya-takeuchi",
            "id": 6241854,
            "node_id": "MDQ6VXNlcjYyNDE4NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6241854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/takuya-takeuchi",
            "html_url": "https://github.com/takuya-takeuchi",
            "followers_url": "https://api.github.com/users/takuya-takeuchi/followers",
            "following_url": "https://api.github.com/users/takuya-takeuchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/takuya-takeuchi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/takuya-takeuchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/takuya-takeuchi/subscriptions",
            "organizations_url": "https://api.github.com/users/takuya-takeuchi/orgs",
            "repos_url": "https://api.github.com/users/takuya-takeuchi/repos",
            "events_url": "https://api.github.com/users/takuya-takeuchi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/takuya-takeuchi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T21:43:09Z",
        "updated_at": "2021-02-24T21:43:09Z",
        "author_association": "NONE",
        "body": "I'm interested in this issue.\r\nBecause I want to use onnxruntime as C++ and visualize feature map on cnn layer.\r\n\r\nHowever, there are GetNodeOutputName and RemoveNodeOutputEdges but no AddNodeOutput.\r\n\r\nIs there any resolution?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/785404429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/979901463",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-979901463",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 979901463,
        "node_id": "IC_kwDOCVq1mM46aBwX",
        "user": {
            "login": "Albert-Genius",
            "id": 63550799,
            "node_id": "MDQ6VXNlcjYzNTUwNzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/63550799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Albert-Genius",
            "html_url": "https://github.com/Albert-Genius",
            "followers_url": "https://api.github.com/users/Albert-Genius/followers",
            "following_url": "https://api.github.com/users/Albert-Genius/following{/other_user}",
            "gists_url": "https://api.github.com/users/Albert-Genius/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Albert-Genius/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Albert-Genius/subscriptions",
            "organizations_url": "https://api.github.com/users/Albert-Genius/orgs",
            "repos_url": "https://api.github.com/users/Albert-Genius/repos",
            "events_url": "https://api.github.com/users/Albert-Genius/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Albert-Genius/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-26T11:22:23Z",
        "updated_at": "2021-11-26T11:22:23Z",
        "author_association": "NONE",
        "body": "    # add all intermediate outputs to onnx net\r\n    ort_session = ort.InferenceSession('<you path>/model.onnx')\r\n    org_outputs = [x.name for x in ort_session.get_outputs()]\r\n\r\n    model = onnx.load('<you path>/model.onnx')\r\n    for node in model.graph.node:\r\n        for output in node.output:\r\n            if output not in org_outputs:\r\n                model.graph.output.extend([onnx.ValueInfoProto(name=output)])\r\n\r\n    # excute onnx\r\n    ort_session = ort.InferenceSession(model.SerializeToString())\r\n    outputs = [x.name for x in ort_session.get_outputs()]\r\n    in_img = np.fromfile('<you path>/input_img.raw', dtype=np.float32).reshape(1,3,511,511)\r\n    ort_outs = ort_session.run(outputs, {'actual_input_1': in_img} )\r\n    ort_outs = OrderedDict(zip(outputs, ort_outs))",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/979901463/reactions",
            "total_count": 7,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1050615116",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1455#issuecomment-1050615116",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1455",
        "id": 1050615116,
        "node_id": "IC_kwDOCVq1mM4-nx1M",
        "user": {
            "login": "ToughmanL",
            "id": 30554455,
            "node_id": "MDQ6VXNlcjMwNTU0NDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/30554455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ToughmanL",
            "html_url": "https://github.com/ToughmanL",
            "followers_url": "https://api.github.com/users/ToughmanL/followers",
            "following_url": "https://api.github.com/users/ToughmanL/following{/other_user}",
            "gists_url": "https://api.github.com/users/ToughmanL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ToughmanL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ToughmanL/subscriptions",
            "organizations_url": "https://api.github.com/users/ToughmanL/orgs",
            "repos_url": "https://api.github.com/users/ToughmanL/repos",
            "events_url": "https://api.github.com/users/ToughmanL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ToughmanL/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-25T07:49:59Z",
        "updated_at": "2022-02-25T07:49:59Z",
        "author_association": "NONE",
        "body": "```\r\n# Save calculation data of each layer\r\ndef onnx_layer_output(onnx_path, dummy_input):\r\n    providers = [\"CUDAExecutionProvider\"]\r\n    ort_session = onnxruntime.InferenceSession(onnx_path, providers=providers)\r\n    org_outputs = [x.name for x in ort_session.get_outputs()]\r\n    model = onnx.load(onnx_path)\r\n    for node in model.graph.node:\r\n        for output in node.output:\r\n            if output not in org_outputs:\r\n                model.graph.output.extend([onnx.ValueInfoProto(name=output)])\r\n    # excute onnx\r\n    ort_session = onnxruntime.InferenceSession(model.SerializeToString(), providers=providers)\r\n    outputs = [x.name for x in ort_session.get_outputs()]\r\n    ort_inputs = {ort_session.get_inputs()[0].name: to_numpy(dummy_input)}\r\n    ort_outs = ort_session.run(outputs, ort_inputs)\r\n    ort_outs = OrderedDict(zip(outputs, ort_outs))\r\n    print(ort_outs)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1050615116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]