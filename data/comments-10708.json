[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1055959992",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1055959992",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1055959992,
        "node_id": "IC_kwDOCVq1mM4-8Ku4",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-01T23:19:13Z",
        "updated_at": "2022-03-02T21:28:19Z",
        "author_association": "MEMBER",
        "body": "@wojtuss ðŸ¤” I don't have the answer yet (asking some teammates more familiar with D3D UAV limits and the graph code...), but it seems the graph is trying to coalesce tensors and allocate more than a 4GB of GPU memory in a single view (assuming it's float32, times 1GB element count). With 16GB, you probably have more than enough *total* GPU memory to execute the model, but it's evidently hitting a Direct3D limitation. Thanks for the D3D debug layer output, which helps.\r\n\r\nIn the meantime, since you are building from source, if you temporarily hack `AbiCustomRegistry::RegisterOperatorKernel()` `supportsGraph=false` or split the graph by setting one of the operators used in the graph to `DmlGraphSupport::Supported` in OperatorRegistration.cpp, does the issue still repro for you? (to be clear, that's *not* a fix, and it will hinder perf, but it's useful for the data point)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1055959992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1056127544",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1056127544",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1056127544,
        "node_id": "IC_kwDOCVq1mM4-8zo4",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T03:33:41Z",
        "updated_at": "2022-03-02T03:33:41Z",
        "author_association": "MEMBER",
        "body": "Does this happen only when the debug layer is on, or when disabled too? There was an issue with the D3D debug layer on older Windows (<=2019-03-06) rejecting >4GB tensors, but actually it worked fine if you disabled the debug layer or suppressed that specific debug layer error.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1056127544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1056815917",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1056815917",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1056815917,
        "node_id": "IC_kwDOCVq1mM4-_bst",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T11:24:43Z",
        "updated_at": "2022-03-02T11:32:53Z",
        "author_association": "NONE",
        "body": "@fdwr \r\nThank you. The error occurs even when debug layer is off.\r\nTo supplement the description, my models accepts three inputs of size [1, 3, h, w], and outputs one tensor [1, 3, h, w]. When hxw is 4K, for some models the error occurs, and for others do not, still with fp32 data type. If inference works with a model, then for 4K input size VRAM utilization is around 15 GB, for FHD there is plenty of free memory.\r\n\r\nI have forcefully set `supportsGraph=false` in `AbiCustomRegistry::RegisterOperatorKernel()` and the previously failing models started to run without the error :+1: \r\nIndeed, the patch affected the performance, latencies have doubled, at least.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1056815917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057433691",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1057433691",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1057433691,
        "node_id": "IC_kwDOCVq1mM4_Byhb",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T21:55:28Z",
        "updated_at": "2022-03-03T03:28:05Z",
        "author_association": "MEMBER",
        "body": ">for 4K input size VRAM utilization is around 15 GB\r\n\r\nIf your Radeon RX 6800 XT only has 16GB, and other processes need GPU memory too, including the DWM (Desktop Window Manager) and other open apps (particularly web browsers), which on my machine is about 200MB's, then when combined with possible memory fragmentation, that's concerningly near the edge. :/\r\n\r\nLooking at `ExecuteReusableCommandList`, I'm surprised it even reaches the `BindTemporaryResource` rather than failing earlier at `contextWrapper.AllocateTemporaryData(...)` (which calls `BucketizedBufferAllocator::Alloc` and ultimately `m_device->CreateCommittedResource`), if there was a memory allocation issue. Do you recall the `execBindingProps.TemporaryResourceSize` value? Was it huge?\r\n\r\n> Indeed, the patch affected the performance, latencies have doubled, at least.\r\n\r\nYeah, each ORT graph node's operator is called separately in that case rather than being fused into a single large DML_GRAPH node (which can apply optimizations - e.g. eliminate redundant copies, remove identities, slice/join directly in place...). So not a solution, but thank for you the confirmation.\r\n\r\nI presume this is a proprietary model that cannot be shared, but if you have other non-proprietary models that repro the issue or with zeroed weights that don't expose IP (e.g. [this tool](https://github.com/fdwr/ConvertOnnxModel/) `ConvertOnnxModel -zeromodelvalues input.onnx output.onnx`), that would be helpful.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057433691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057842405",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1057842405",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1057842405,
        "node_id": "IC_kwDOCVq1mM4_DWTl",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-03T09:23:44Z",
        "updated_at": "2022-03-03T10:33:05Z",
        "author_association": "NONE",
        "body": "> Do you recall the `execBindingProps.TemporaryResourceSize` value? Was it huge?\r\n\r\nYes, it was 2,281,725,696 at the point where `m_bindingTable->BindTemporaryResource(&tempBindingDesc);` was called\r\n![image](https://user-images.githubusercontent.com/19307410/156534734-6c0b3fbd-25e8-4adf-869f-788505476675.png)\r\n\r\nMore complete D3D debug output (some values differ between entries):\r\n```\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 935854080) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 137887744, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12: Removing Device.\r\nD3D12 ERROR: ID3D12Device::RemoveDevice: Device removal has been triggered for the following reason (DXGI_ERROR_INVALID_CALL: There is strong evidence that the application has performed an illegal or undefined operation, and such a condition could not be returned to the application cleanly through a return code). [ EXECUTION ERROR #232: DEVICE_REMOVAL_PROCESS_AT_FAULT]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 935854080) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 137887744, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 935854080) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 137887744, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 935854080) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 137887744, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 401080320) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 802160640) must be between 1 and 672661504, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 401080320) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 802160640) must be between 1 and 672661504, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\nD3D12 ERROR: ID3D12Device::CreateUnorderedAccessView: The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride 4, FirstElement (value = 808411136) must be between 0 and the maximum offset of the Buffer, 1073741823, inclusively. With the current FirstElement, NumElements (value = 267386880) must be between 1 and 265330688, inclusively, in order that the View fit on the Buffer. [ STATE_CREATION ERROR #345: CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS]\r\n```\r\n\r\n\r\n> I presume this is a proprietary model that cannot be shared, but if you have other non-proprietary models that repro the issue or with zeroed weights that don't expose IP (e.g. [this tool](https://github.com/fdwr/ConvertOnnxModel/) `ConvertOnnxModel -zeromodelvalues input.onnx output.onnx`), that would be helpful.\r\n\r\nTrue. I could not found publicly available models with reproduction.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1057842405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1066515866",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1066515866",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1066515866,
        "node_id": "IC_kwDOCVq1mM4_kb2a",
        "user": {
            "login": "wojtuss",
            "id": 19307410,
            "node_id": "MDQ6VXNlcjE5MzA3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19307410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wojtuss",
            "html_url": "https://github.com/wojtuss",
            "followers_url": "https://api.github.com/users/wojtuss/followers",
            "following_url": "https://api.github.com/users/wojtuss/following{/other_user}",
            "gists_url": "https://api.github.com/users/wojtuss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wojtuss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wojtuss/subscriptions",
            "organizations_url": "https://api.github.com/users/wojtuss/orgs",
            "repos_url": "https://api.github.com/users/wojtuss/repos",
            "events_url": "https://api.github.com/users/wojtuss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wojtuss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-14T08:40:46Z",
        "updated_at": "2022-03-14T08:40:46Z",
        "author_association": "NONE",
        "body": "@fdwr , do you have any idea about where the problem can be?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1066515866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1069398832",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1069398832",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1069398832,
        "node_id": "IC_kwDOCVq1mM4_vbsw",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-16T17:56:35Z",
        "updated_at": "2022-03-16T17:56:35Z",
        "author_association": "MEMBER",
        "body": "@wotjuss: Sorry, without a repro, I cannot know for sure. GPU VA memory fragmentation still seems a likely issue (or we could also have a latent bug overflowing a uint32 somewhere ðŸ¤”).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1069398832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1167730825",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10708#issuecomment-1167730825",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10708",
        "id": 1167730825,
        "node_id": "IC_kwDOCVq1mM5FmiiJ",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-27T18:33:58Z",
        "updated_at": "2022-11-01T21:20:23Z",
        "author_association": "MEMBER",
        "body": "We have changes in DML 1.9 (https://www.nuget.org/packages/Microsoft.AI.DirectML/) that hopefully address your private model, finding a few spots that used uint32 rather than uint64. ðŸ¤ž",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1167730825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]