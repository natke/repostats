[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012435516",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1012435516",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1012435516,
        "node_id": "IC_kwDOCVq1mM48WIo8",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-13T19:20:28Z",
        "updated_at": "2022-01-13T19:20:28Z",
        "author_association": "MEMBER",
        "body": "Is it expected since one session could use more threads (like one session uses 10 CPU cores, and two sessions could use 5 cores each).\r\n\r\nA general way for two inference sessions is to have two processes, and each process have one inference session, and set affinity for each process to different CPU cores (In Lunux, use taskset or numctrl commands as in https://www.glennklockwood.com/hpc-howtos/process-affinity.html). This could be better than hosting two sessions in one process.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012435516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012446653",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1012446653",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1012446653,
        "node_id": "IC_kwDOCVq1mM48WLW9",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-13T19:36:09Z",
        "updated_at": "2022-01-13T19:36:09Z",
        "author_association": "MEMBER",
        "body": "You could also try sharing a single threadpool between 2 inference sessions using the global threadpool feature. By default each session has its own separate threadpool. Using 2 processes is better though.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012446653/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012707449",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1012707449",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1012707449,
        "node_id": "IC_kwDOCVq1mM48XLB5",
        "user": {
            "login": "jayden333",
            "id": 31834261,
            "node_id": "MDQ6VXNlcjMxODM0MjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/31834261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jayden333",
            "html_url": "https://github.com/jayden333",
            "followers_url": "https://api.github.com/users/jayden333/followers",
            "following_url": "https://api.github.com/users/jayden333/following{/other_user}",
            "gists_url": "https://api.github.com/users/jayden333/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jayden333/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jayden333/subscriptions",
            "organizations_url": "https://api.github.com/users/jayden333/orgs",
            "repos_url": "https://api.github.com/users/jayden333/repos",
            "events_url": "https://api.github.com/users/jayden333/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jayden333/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-14T03:05:02Z",
        "updated_at": "2022-01-14T03:05:02Z",
        "author_association": "NONE",
        "body": "> Is it expected since one session could use more threads (like one session uses 10 CPU cores, and two sessions could use 5 cores each).\r\n> \r\n> A general way for two inference sessions is to have two processes, and each process have one inference session, and set affinity for each process to different CPU cores (In Lunux, use taskset or numctrl commands as in https://www.glennklockwood.com/hpc-howtos/process-affinity.html). This could be better than hosting two sessions in one process.\r\n\r\n@tianleiwu  thanks for your reply\r\nI change my script, use `intra_op_num_threads` to limit thread pool size to 5:\r\n```python\r\ndef run_single_sess():\r\n    opt = ort.SessionOptions()\r\n    opt.intra_op_num_threads = 5\r\n    opt.inter_op_num_threads = 1\r\n    ort_sess1 = ort.InferenceSession(model_path, opt)\r\n\r\ndef run_two_sess():\r\n    opt1 = ort.SessionOptions()\r\n    opt1.intra_op_num_threads = 5\r\n    opt1.inter_op_num_threads = 1\r\n    ort_sess1 = ort.InferenceSession(model_path, opt1)\r\n    opt2 = ort.SessionOptions()\r\n    opt2.intra_op_num_threads = 5\r\n    opt2.inter_op_num_threads = 1\r\n    ort_sess2 = ort.InferenceSession(model_path, opt2)\r\n```\r\nthe result is still strange, when two session exist, the `run()` speed slow down",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012707449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012709225",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1012709225",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1012709225,
        "node_id": "IC_kwDOCVq1mM48XLdp",
        "user": {
            "login": "jayden333",
            "id": 31834261,
            "node_id": "MDQ6VXNlcjMxODM0MjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/31834261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jayden333",
            "html_url": "https://github.com/jayden333",
            "followers_url": "https://api.github.com/users/jayden333/followers",
            "following_url": "https://api.github.com/users/jayden333/following{/other_user}",
            "gists_url": "https://api.github.com/users/jayden333/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jayden333/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jayden333/subscriptions",
            "organizations_url": "https://api.github.com/users/jayden333/orgs",
            "repos_url": "https://api.github.com/users/jayden333/repos",
            "events_url": "https://api.github.com/users/jayden333/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jayden333/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-14T03:09:31Z",
        "updated_at": "2022-01-14T03:09:31Z",
        "author_association": "NONE",
        "body": "\r\n> You could also try sharing a single threadpool between 2 inference sessions using the global threadpool feature. By default each session has its own separate threadpool. Using 2 processes is better though.\r\n\r\n@pranavsharma  I can't find the API in python for sharing a single threadpool between sessions, could you help show me a demo? thanks",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012709225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012753958",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1012753958",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1012753958,
        "node_id": "IC_kwDOCVq1mM48XWYm",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-14T04:40:00Z",
        "updated_at": "2022-01-14T04:40:00Z",
        "author_association": "MEMBER",
        "body": "> > You could also try sharing a single threadpool between 2 inference sessions using the global threadpool feature. By default each session has its own separate threadpool. Using 2 processes is better though.\r\n> \r\n> @pranavsharma I can't find the API in python for sharing a single threadpool between sessions, could you help show me a demo? thanks\r\n\r\nSorry, this feature is not available in the Python API.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1012753958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020948309",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1020948309",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1020948309,
        "node_id": "IC_kwDOCVq1mM482m9V",
        "user": {
            "login": "jayden333",
            "id": 31834261,
            "node_id": "MDQ6VXNlcjMxODM0MjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/31834261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jayden333",
            "html_url": "https://github.com/jayden333",
            "followers_url": "https://api.github.com/users/jayden333/followers",
            "following_url": "https://api.github.com/users/jayden333/following{/other_user}",
            "gists_url": "https://api.github.com/users/jayden333/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jayden333/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jayden333/subscriptions",
            "organizations_url": "https://api.github.com/users/jayden333/orgs",
            "repos_url": "https://api.github.com/users/jayden333/repos",
            "events_url": "https://api.github.com/users/jayden333/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jayden333/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-25T08:56:52Z",
        "updated_at": "2022-01-25T08:56:52Z",
        "author_association": "NONE",
        "body": "> \r\n\r\n\r\n\r\n> Is it expected since one session could use more threads (like one session uses 10 CPU cores, and two sessions could use 5 cores each).\r\n> \r\n> A general way for two inference sessions is to have two processes, and each process have one inference session, and set affinity for each process to different CPU cores (In Lunux, use taskset or numctrl commands as in https://www.glennklockwood.com/hpc-howtos/process-affinity.html). This could be better than hosting two sessions in one process.\r\n\r\n@tianleiwu I tried use two process and each use different CPU cores(by taskset), but still same result",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1020948309/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1100599261",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1100599261",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1100599261,
        "node_id": "IC_kwDOCVq1mM5Bmc_d",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-04-16T07:54:45Z",
        "updated_at": "2022-04-16T07:54:45Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1100599261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1164518259",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1164518259",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1164518259,
        "node_id": "IC_kwDOCVq1mM5FaSNz",
        "user": {
            "login": "cqray1990",
            "id": 32585434,
            "node_id": "MDQ6VXNlcjMyNTg1NDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32585434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cqray1990",
            "html_url": "https://github.com/cqray1990",
            "followers_url": "https://api.github.com/users/cqray1990/followers",
            "following_url": "https://api.github.com/users/cqray1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/cqray1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cqray1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cqray1990/subscriptions",
            "organizations_url": "https://api.github.com/users/cqray1990/orgs",
            "repos_url": "https://api.github.com/users/cqray1990/repos",
            "events_url": "https://api.github.com/users/cqray1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cqray1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-23T14:59:00Z",
        "updated_at": "2022-06-23T14:59:00Z",
        "author_association": "NONE",
        "body": "@jayden333  did you  solver it , the problem occurs on cpu ,but not on gpu,that's amazing",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1164518259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462431399",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1462431399",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1462431399,
        "node_id": "IC_kwDOCVq1mM5XKu6n",
        "user": {
            "login": "emhagman",
            "id": 1421702,
            "node_id": "MDQ6VXNlcjE0MjE3MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1421702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emhagman",
            "html_url": "https://github.com/emhagman",
            "followers_url": "https://api.github.com/users/emhagman/followers",
            "following_url": "https://api.github.com/users/emhagman/following{/other_user}",
            "gists_url": "https://api.github.com/users/emhagman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emhagman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emhagman/subscriptions",
            "organizations_url": "https://api.github.com/users/emhagman/orgs",
            "repos_url": "https://api.github.com/users/emhagman/repos",
            "events_url": "https://api.github.com/users/emhagman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emhagman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-09T17:06:27Z",
        "updated_at": "2023-03-09T17:40:01Z",
        "author_association": "NONE",
        "body": "> Sorry, this feature is not available in the Python API.\r\n\r\n@pranavsharma Is this still the case? We have 16 models using ONNX and would love to share the thread pool across them to prevent contention.\r\n\r\nReading the docs it appears that this now configurable???\r\n```\r\nsess_opt.add_session_config_entry('session.intra_op_thread_affinities', '1;2')\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462431399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462627787",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1462627787",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1462627787,
        "node_id": "IC_kwDOCVq1mM5XLe3L",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-09T19:10:34Z",
        "updated_at": "2023-03-09T19:10:34Z",
        "author_association": "MEMBER",
        "body": "Yeah, you can now create multiple sessions with limited number of threads and pin them to separate cores using the 'intra_op_thread_affinities' config. This is not really the same as sharing of the global threadpool between sessions but it'll do it for you and might be better due to thread pinning.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462627787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462639556",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1462639556",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1462639556,
        "node_id": "IC_kwDOCVq1mM5XLhvE",
        "user": {
            "login": "emhagman",
            "id": 1421702,
            "node_id": "MDQ6VXNlcjE0MjE3MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1421702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emhagman",
            "html_url": "https://github.com/emhagman",
            "followers_url": "https://api.github.com/users/emhagman/followers",
            "following_url": "https://api.github.com/users/emhagman/following{/other_user}",
            "gists_url": "https://api.github.com/users/emhagman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emhagman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emhagman/subscriptions",
            "organizations_url": "https://api.github.com/users/emhagman/orgs",
            "repos_url": "https://api.github.com/users/emhagman/repos",
            "events_url": "https://api.github.com/users/emhagman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emhagman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-09T19:18:53Z",
        "updated_at": "2023-03-09T19:23:55Z",
        "author_association": "NONE",
        "body": "> Yeah, you can now create multiple sessions with limited number of threads and pin them to separate cores using the 'intra_op_thread_affinities' config. This is not really the same as sharing of the global threadpool between sessions but it'll do it for you and might be better due to thread pinning.\r\n\r\nThank you for responding so quickly! Understood. So, in theory, there still can be resource contention here, though? I am using on `rt.SessionOptions` object for all of my sessions (16 in my case). \r\n\r\n> pin them to separate cores using the 'intra_op_thread_affinities' config.\r\n\r\nSo in my case, you're saying to lock each model onto different logical cores (or spread them out at-least if I have less cores than models) so they aren't competing as much? Which technically isn't the same as the global thread pool but will work for my use case?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462639556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462645863",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1462645863",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1462645863,
        "node_id": "IC_kwDOCVq1mM5XLjRn",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-09T19:24:00Z",
        "updated_at": "2023-03-09T19:24:00Z",
        "author_association": "MEMBER",
        "body": "Yeah, you want to pin the threads from each session to separate cores to avoid any contention.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462645863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462646660",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10273#issuecomment-1462646660",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10273",
        "id": 1462646660,
        "node_id": "IC_kwDOCVq1mM5XLjeE",
        "user": {
            "login": "emhagman",
            "id": 1421702,
            "node_id": "MDQ6VXNlcjE0MjE3MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1421702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emhagman",
            "html_url": "https://github.com/emhagman",
            "followers_url": "https://api.github.com/users/emhagman/followers",
            "following_url": "https://api.github.com/users/emhagman/following{/other_user}",
            "gists_url": "https://api.github.com/users/emhagman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emhagman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emhagman/subscriptions",
            "organizations_url": "https://api.github.com/users/emhagman/orgs",
            "repos_url": "https://api.github.com/users/emhagman/repos",
            "events_url": "https://api.github.com/users/emhagman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emhagman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-09T19:24:44Z",
        "updated_at": "2023-03-09T19:30:01Z",
        "author_association": "NONE",
        "body": "> Yeah, you want to pin the threads from each session to separate cores to avoid any contention.\r\n\r\nGot it, thanks! These are also being requested via API, so in theory, if I have let's say 100 parallel web requests happening, where each request is making predictions to all 16 models, would this defeat the purpose or still help with contention here? I guess I am just asking if at that point, all the cores are going to be contending either way or if still separating the work per model across specific cores will help? Or is this more a just experiment and figure out what is best situation?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1462646660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]