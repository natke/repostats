[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4417",
        "id": 650286143,
        "node_id": "MDU6SXNzdWU2NTAyODYxNDM=",
        "number": 4417,
        "title": "Java API documentation has broken links",
        "user": {
            "login": "pranasblk",
            "id": 3710066,
            "node_id": "MDQ6VXNlcjM3MTAwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3710066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranasblk",
            "html_url": "https://github.com/pranasblk",
            "followers_url": "https://api.github.com/users/pranasblk/followers",
            "following_url": "https://api.github.com/users/pranasblk/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranasblk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranasblk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranasblk/subscriptions",
            "organizations_url": "https://api.github.com/users/pranasblk/orgs",
            "repos_url": "https://api.github.com/users/pranasblk/repos",
            "events_url": "https://api.github.com/users/pranasblk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranasblk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Craigacp",
            "id": 729696,
            "node_id": "MDQ6VXNlcjcyOTY5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Craigacp",
            "html_url": "https://github.com/Craigacp",
            "followers_url": "https://api.github.com/users/Craigacp/followers",
            "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
            "organizations_url": "https://api.github.com/users/Craigacp/orgs",
            "repos_url": "https://api.github.com/users/Craigacp/repos",
            "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Craigacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Craigacp",
                "id": 729696,
                "node_id": "MDQ6VXNlcjcyOTY5Ng==",
                "avatar_url": "https://avatars.githubusercontent.com/u/729696?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Craigacp",
                "html_url": "https://github.com/Craigacp",
                "followers_url": "https://api.github.com/users/Craigacp/followers",
                "following_url": "https://api.github.com/users/Craigacp/following{/other_user}",
                "gists_url": "https://api.github.com/users/Craigacp/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Craigacp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Craigacp/subscriptions",
                "organizations_url": "https://api.github.com/users/Craigacp/orgs",
                "repos_url": "https://api.github.com/users/Craigacp/repos",
                "events_url": "https://api.github.com/users/Craigacp/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Craigacp/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-03T01:41:08Z",
        "updated_at": "2020-08-13T19:06:44Z",
        "closed_at": "2020-08-13T19:06:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nJava API descrition document: https://github.com/microsoft/onnxruntime/blob/master/docs/Java_API.md refers to broken link: https://github.com/microsoft/onnxruntime/blob/master/java/sample/ScoreMNIST.java\r\n\r\n**Urgency**\r\nNot urgent",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4417/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4418",
        "id": 650286988,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQzODA5Mzk5",
        "number": 4418,
        "title": "Optimize CUDA Sum op kernel and refactor CUDA elementwise variadic input op kernels",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            },
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-03T01:44:20Z",
        "updated_at": "2020-07-10T17:20:26Z",
        "closed_at": "2020-07-10T17:20:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4418",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4418",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4418.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4418.patch",
            "merged_at": "2020-07-10T17:20:24Z"
        },
        "body": "**Description**\r\nFor the special case where all variadic inputs of a kernel are the same shape (i.e. no broadcasting is required) and there are few enough of them, we can perform the entire computation in a single kernel. The general implementation (which was previously used for this special case) handles broadcasting by repeatedly invoking a binary kernel on successive inputs.\r\n\r\n**Motivation and Context**\r\nPerformance. The original motivation was to optimize Sum, but after some refactoring Min and Max should get similar benefits.\r\n\r\n**Performance tests**\r\nbaseline (0349479b19d7735956be3cfb0bc1c8014a214dbb), updated (04f27de6c95d525a0ba2cab672ed44b495526a6d)\r\n\r\nCUDA kernel benchmark:\r\nThe CUDA Sum op kernel was run 100 times with the specified input shape and number of inputs.\r\nnum_calls, average_duration, total_time and total_percentage refer to CUDA kernel calls.\r\nThe particular case motivating the optimization has four inputs, shown here. The full data including other input counts can be found in a separate PR comment.\r\n\r\nbaseline:\r\ninput_shape|input_count|num_calls|average_duration|total_time|total_percentage\r\n-|-|-|-|-|-\r\n[1024]|4|400|1.570000us|628.221000us|36.347473\r\n[1024,1024]|4|400|13.243000us|5.297296ms|2.439728\r\n[16,1024,1024]|4|400|0.238441ms|0.095377s|2.263378\r\n\r\nupdated:\r\ninput_shape|input_count|num_calls|average_duration|total_time|total_percentage\r\n-|-|-|-|-|-\r\n[1024]|4|100|2.167000us|216.700000us|19.038917\r\n[1024,1024]|4|100|30.299000us|3.029963ms|1.520693\r\n[16,1024,1024]|4|100|0.416080ms|0.041608s|1.083528\r\n\r\nBERT large throughput:\r\n```\r\n./onnxruntime_training_bert --model_name /bert_ort/bert_models/nv/bert-large/bert-large-uncased_L_24_H_1024_A_16_V_30528_S_512_Dp_0.1_optimized_layer_norm --train_data_dir /bert_data/128/books_wiki_en_corpus/train --test_data_dir /bert_data/128/books_wiki_en_corpus/test --train_batch_size 64 --mode train --num_train_steps 400 --display_loss_steps 1 --warmup_ratio=0.2843 --warmup_mode=Poly --optimizer lamb --gradient_accumulation_steps 1 --max_predictions_per_seq=20 --use_nccl --use_mixed_precision --allreduce_in_fp16\r\n```\r\n\r\nbaseline:\r\nStabilized Throughput: 180.306 Examples / Second\r\n\r\nupdated:\r\nStabilized Throughput: 182.129 Examples / Second\r\n\r\n1.01% improvement",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4418/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4419",
        "id": 650482066,
        "node_id": "MDU6SXNzdWU2NTA0ODIwNjY=",
        "number": 4419,
        "title": "Confuse about Resize(opset 10)  calculation method ",
        "user": {
            "login": "Channingss",
            "id": 12471701,
            "node_id": "MDQ6VXNlcjEyNDcxNzAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12471701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Channingss",
            "html_url": "https://github.com/Channingss",
            "followers_url": "https://api.github.com/users/Channingss/followers",
            "following_url": "https://api.github.com/users/Channingss/following{/other_user}",
            "gists_url": "https://api.github.com/users/Channingss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Channingss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Channingss/subscriptions",
            "organizations_url": "https://api.github.com/users/Channingss/orgs",
            "repos_url": "https://api.github.com/users/Channingss/repos",
            "events_url": "https://api.github.com/users/Channingss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Channingss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-03T09:48:08Z",
        "updated_at": "2020-10-04T03:56:36Z",
        "closed_at": "2020-10-04T03:56:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": " Resize(opset 10)  use`align_corners` or `asymmetric ` to arrange pixels?\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/5708c4feaf840ccfba95e3c087f87de75055800a/onnxruntime/core/providers/cpu/tensor/upsample.h#L70\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4419/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4420",
        "id": 650643316,
        "node_id": "MDU6SXNzdWU2NTA2NDMzMTY=",
        "number": 4420,
        "title": "Functional encryption models",
        "user": {
            "login": "pfeatherstone",
            "id": 45853521,
            "node_id": "MDQ6VXNlcjQ1ODUzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45853521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pfeatherstone",
            "html_url": "https://github.com/pfeatherstone",
            "followers_url": "https://api.github.com/users/pfeatherstone/followers",
            "following_url": "https://api.github.com/users/pfeatherstone/following{/other_user}",
            "gists_url": "https://api.github.com/users/pfeatherstone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pfeatherstone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pfeatherstone/subscriptions",
            "organizations_url": "https://api.github.com/users/pfeatherstone/orgs",
            "repos_url": "https://api.github.com/users/pfeatherstone/repos",
            "events_url": "https://api.github.com/users/pfeatherstone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pfeatherstone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-03T14:51:21Z",
        "updated_at": "2020-09-13T00:16:01Z",
        "closed_at": "2020-09-13T00:16:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Do you plan on supporting basic functional encryption?\r\nIt looks like https://github.com/fentec-project/CiFEr supports inner products so convolutional layers could be supported in theory.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4420/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4421",
        "id": 650677581,
        "node_id": "MDU6SXNzdWU2NTA2Nzc1ODE=",
        "number": 4421,
        "title": "Severe performance degradation with 1.3.0",
        "user": {
            "login": "emilianavt",
            "id": 38952746,
            "node_id": "MDQ6VXNlcjM4OTUyNzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38952746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emilianavt",
            "html_url": "https://github.com/emilianavt",
            "followers_url": "https://api.github.com/users/emilianavt/followers",
            "following_url": "https://api.github.com/users/emilianavt/following{/other_user}",
            "gists_url": "https://api.github.com/users/emilianavt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emilianavt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emilianavt/subscriptions",
            "organizations_url": "https://api.github.com/users/emilianavt/orgs",
            "repos_url": "https://api.github.com/users/emilianavt/repos",
            "events_url": "https://api.github.com/users/emilianavt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emilianavt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "askhade",
                "id": 6475296,
                "node_id": "MDQ6VXNlcjY0NzUyOTY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/askhade",
                "html_url": "https://github.com/askhade",
                "followers_url": "https://api.github.com/users/askhade/followers",
                "following_url": "https://api.github.com/users/askhade/following{/other_user}",
                "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
                "organizations_url": "https://api.github.com/users/askhade/orgs",
                "repos_url": "https://api.github.com/users/askhade/repos",
                "events_url": "https://api.github.com/users/askhade/events{/privacy}",
                "received_events_url": "https://api.github.com/users/askhade/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-03T16:03:32Z",
        "updated_at": "2020-08-01T22:49:00Z",
        "closed_at": "2020-08-01T22:49:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nMore than 3-5 times longer inference times on models with onnxruntime 1.3.0 than with 1.2.0 and 1.1.2. The models were converted from PyTorch models based on the [geffnet](https://github.com/rwightman/gen-efficientnet-pytorch/tree/master/geffnet) implementation of MobileNetV3. They were exported using opset 11, as they contain bilinear upsample layers with `align_corners=True`.\r\n\r\nThe models are loaded using version 1.3.0 of onnxruntime with `GraphOptimizationLevel.ORT_ENABLE_ALL`. The issue both occurs with models directly after exporting them from PyTorch and models that have been preoptimized with 1.2.0 using `ORT_ENABLE_EXTENDED`, but it appears to be worse for the preoptimized models.\r\n\r\nThe original PyTorch model definitions are given [here](https://github.com/emilianavt/OpenSeeFace/blob/master/model.py).\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux\r\n- ONNX Runtime installed from (source or binary): pip\r\n- ONNX Runtime version: 1.3.0\r\n- Python version: 3.7.3\r\n- Visual Studio version (if applicable): -\r\n- GCC/Compiler version (if compiling from source): -\r\n- CUDA/cuDNN version: running on CPU\r\n- GPU model and memory: running on CPU (AMD Ryzen Threadripper 2950X)\r\n\r\n**To Reproduce**\r\nCode to reproduce the issue:\r\n\r\n    from pathlib import Path\r\n    import numpy as np\r\n    import time\r\n    import torch\r\n    import torch.nn as nn\r\n    import onnxruntime\r\n\r\n    models = {\"gaze.onnx\": (2,3,32,32),\r\n              \"gaze_opt.onnx\": (2,3,32,32),\r\n              \"detection.onnx\": (1,3,224,224),\r\n              \"detection_opt.onnx\": (1,3,224,224),\r\n              \"lm_model0.onnx\": (1,3,224,224),\r\n              \"lm_model0_opt.onnx\": (1,3,224,224),\r\n              \"lm_model1.onnx\": (1,3,224,224),\r\n              \"lm_model1_opt.onnx\": (1,3,224,224),\r\n              \"lm_model2.onnx\": (1,3,224,224),\r\n              \"lm_model2_opt.onnx\": (1,3,224,224),\r\n              \"lm_model3.onnx\": (1,3,224,224),\r\n              \"lm_model3_opt.onnx\": (1,3,224,224)}\r\n\r\n\r\n    print(f\"Versions:\\n- pytorch: {torch.__version__}\\n- numpy: {np.__version__}\\n- onnxruntime: {onnxruntime.__version__}\")\r\n    print(\"============================\")\r\n\r\n    def benchmark(filename, size, runs=10000):\r\n        print(f\"Benchmarking model models/{filename} over {runs} runs.\")\r\n        np.random.seed(42)\r\n        x = np.float32(np.random.random_sample(size) - 0.5)\r\n\r\n        options = onnxruntime.SessionOptions()\r\n        options.inter_op_num_threads = 1\r\n        options.intra_op_num_threads = 4\r\n        options.execution_mode = onnxruntime.ExecutionMode.ORT_SEQUENTIAL\r\n        options.graph_optimization_level = onnxruntime.GraphOptimizationLevel.ORT_ENABLE_ALL\r\n        session = onnxruntime.InferenceSession(f\"models/{filename}\", sess_options=options)\r\n        session.run([], {'input': x})\r\n\r\n        total_time = 0.\r\n        for i in range(runs):\r\n            start = time.perf_counter()\r\n            session.run([], {'input': x})\r\n            total_time += time.perf_counter() - start\r\n        avg_time = 1000. * (total_time / runs)\r\n\r\n        print(f\"Average duration: {avg_time:.2f}ms\")\r\n\r\n    for model in models.keys():\r\n        benchmark(model, models[model])\r\n\r\nThe model files archive is too big to attach it here, so I put it on my Google drive.\r\n\r\nhttps://drive.google.com/file/d/12Bwg-_dK5Yh48oU-zRURZxwcm3eaOryE/view?usp=sharing\r\n\r\n**Expected behavior**\r\nInference time with 1.3.0 should at least be in line with 1.2.0.\r\n\r\n**Benchmark results**\r\nVersion 1.1.2:\r\n\r\n    Versions:\r\n    - pytorch: 1.4.0\r\n    - numpy: 1.18.2\r\n    - onnxruntime: 1.1.2\r\n    ============================\r\n    Benchmarking model models/gaze.onnx over 10000 runs.\r\n    Average duration: 1.39ms\r\n    Benchmarking model models/gaze_opt.onnx over 10000 runs.\r\n    Average duration: 1.33ms\r\n    Benchmarking model models/detection.onnx over 10000 runs.\r\n    Average duration: 8.01ms\r\n    Benchmarking model models/detection_opt.onnx over 10000 runs.\r\n    Average duration: 8.02ms\r\n    Benchmarking model models/lm_model0.onnx over 10000 runs.\r\n    Average duration: 6.40ms\r\n    Benchmarking model models/lm_model0_opt.onnx over 10000 runs.\r\n    Average duration: 6.20ms\r\n    Benchmarking model models/lm_model1.onnx over 10000 runs.\r\n    Average duration: 8.24ms\r\n    Benchmarking model models/lm_model1_opt.onnx over 10000 runs.\r\n    Average duration: 8.37ms\r\n    Benchmarking model models/lm_model2.onnx over 10000 runs.\r\n    Average duration: 11.81ms\r\n    Benchmarking model models/lm_model2_opt.onnx over 10000 runs.\r\n    Average duration: 11.75ms\r\n    Benchmarking model models/lm_model3.onnx over 10000 runs.\r\n    Average duration: 13.57ms\r\n    Benchmarking model models/lm_model3_opt.onnx over 10000 runs.\r\n    Average duration: 13.70ms\r\n\r\nVersion 1.2.0:\r\n\r\n    Versions:\r\n    - pytorch: 1.4.0\r\n    - numpy: 1.18.2\r\n    - onnxruntime: 1.1.2\r\n    ============================\r\n    Benchmarking model models/gaze.onnx over 10000 runs.\r\n    Average duration: 1.39ms\r\n    Benchmarking model models/gaze_opt.onnx over 10000 runs.\r\n    Average duration: 1.33ms\r\n    Benchmarking model models/detection.onnx over 10000 runs.\r\n    Average duration: 8.01ms\r\n    Benchmarking model models/detection_opt.onnx over 10000 runs.\r\n    Average duration: 8.02ms\r\n    Benchmarking model models/lm_model0.onnx over 10000 runs.\r\n    Average duration: 6.40ms\r\n    Benchmarking model models/lm_model0_opt.onnx over 10000 runs.\r\n    Average duration: 6.20ms\r\n    Benchmarking model models/lm_model1.onnx over 10000 runs.\r\n    Average duration: 8.24ms\r\n    Benchmarking model models/lm_model1_opt.onnx over 10000 runs.\r\n    Average duration: 8.37ms\r\n    Benchmarking model models/lm_model2.onnx over 10000 runs.\r\n    Average duration: 11.81ms\r\n    Benchmarking model models/lm_model2_opt.onnx over 10000 runs.\r\n    Average duration: 11.75ms\r\n    Benchmarking model models/lm_model3.onnx over 10000 runs.\r\n    Average duration: 13.57ms\r\n    Benchmarking model models/lm_model3_opt.onnx over 10000 runs.\r\n    Average duration: 13.70ms\r\n\r\nVersion 1.3.0 (For this version the variance is also quite high. I get quite different results upon running the benchmark again, but still very slow.):\r\n\r\n    Versions:\r\n    - pytorch: 1.4.0\r\n    - numpy: 1.18.2\r\n    - onnxruntime: 1.3.0\r\n    ============================\r\n    Benchmarking model models/gaze.onnx over 10000 runs.\r\n    Average duration: 6.09ms\r\n    Benchmarking model models/gaze_opt.onnx over 10000 runs.\r\n    Average duration: 6.41ms\r\n    Benchmarking model models/detection.onnx over 10000 runs.\r\n    Average duration: 30.44ms\r\n    Benchmarking model models/detection_opt.onnx over 10000 runs.\r\n    Average duration: 46.08ms\r\n    Benchmarking model models/lm_model0.onnx over 10000 runs.\r\n    Average duration: 25.53ms\r\n    Benchmarking model models/lm_model0_opt.onnx over 10000 runs.\r\n    Average duration: 28.35ms\r\n    Benchmarking model models/lm_model1.onnx over 10000 runs.\r\n    Average duration: 33.52ms\r\n    Benchmarking model models/lm_model1_opt.onnx over 10000 runs.\r\n    Average duration: 42.98ms\r\n    Benchmarking model models/lm_model2.onnx over 10000 runs.\r\n    Average duration: 45.63ms\r\n    Benchmarking model models/lm_model2_opt.onnx over 10000 runs.\r\n    Average duration: 43.23ms\r\n    Benchmarking model models/lm_model3.onnx over 10000 runs.\r\n    Average duration: 42.84ms\r\n    Benchmarking model models/lm_model3_opt.onnx over 10000 runs.\r\n    Average duration: 42.48ms",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4421/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4422",
        "id": 650704302,
        "node_id": "MDU6SXNzdWU2NTA3MDQzMDI=",
        "number": 4422,
        "title": "Improve support for tensor element access (C/C++ API)",
        "user": {
            "login": "jgbradley1",
            "id": 654554,
            "node_id": "MDQ6VXNlcjY1NDU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgbradley1",
            "html_url": "https://github.com/jgbradley1",
            "followers_url": "https://api.github.com/users/jgbradley1/followers",
            "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
            "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
            "repos_url": "https://api.github.com/users/jgbradley1/repos",
            "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            },
            {
                "id": 1267486731,
                "node_id": "MDU6TGFiZWwxMjY3NDg2NzMx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/contributions%20welcome",
                "name": "contributions welcome",
                "color": "545AB5",
                "default": false,
                "description": "lower priority issues for the core ORT teams"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jgbradley1",
            "id": 654554,
            "node_id": "MDQ6VXNlcjY1NDU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgbradley1",
            "html_url": "https://github.com/jgbradley1",
            "followers_url": "https://api.github.com/users/jgbradley1/followers",
            "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
            "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
            "repos_url": "https://api.github.com/users/jgbradley1/repos",
            "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jgbradley1",
                "id": 654554,
                "node_id": "MDQ6VXNlcjY1NDU1NA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jgbradley1",
                "html_url": "https://github.com/jgbradley1",
                "followers_url": "https://api.github.com/users/jgbradley1/followers",
                "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
                "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
                "repos_url": "https://api.github.com/users/jgbradley1/repos",
                "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-03T17:20:09Z",
        "updated_at": "2020-08-12T01:34:05Z",
        "closed_at": "2020-08-12T01:34:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently after a tensor has been created with one of the `Ort::Value::CreateTensor()` functions, there is no easy way to check individual elements in a multidimensional tensor to verify the data blob has mapped correctly to an ORT tensor. For example, in [this](https://github.com/microsoft/onnxruntime/issues/2832) issue, the user takes it on faith that mapping OpenCV data to an ORT tensor _just works_ (assuming row-major order of the data).\r\n\r\nI would like to propose a new helper function be added to the C/C++ API that would improve unit testing and inspection of ORT tensors.\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): master branch\r\n\r\n**Describe the solution you'd like**\r\nPerhaps a function called `At()` that could be used in the following manner:\r\n\r\n```cpp\r\nauto tensor = Ort::Value::CreateTensor(...)\r\n\r\n// allow the user to write unit tests like below\r\nfor(size_t row=0; row<row_count; row++) {\r\n  for(size_t col=0; col<col_count; col++) {\r\n    for(size_t channel=0; channel< 3; channel++) {\r\n      assert( tensor.At<float>({row, col, channel}) == imagedata(row, col, channel) ) // element access would probably be declared as an initializer_list\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nObviously `At()` would extend to any multidimensional tensor access. I only used an image example for clarity.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4422/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4423",
        "id": 650719066,
        "node_id": "MDU6SXNzdWU2NTA3MTkwNjY=",
        "number": 4423,
        "title": "Unable to Perform Inference using ONNX RUNTIME. Invalid Argument Error",
        "user": {
            "login": "CosmicHunter",
            "id": 52317137,
            "node_id": "MDQ6VXNlcjUyMzE3MTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52317137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CosmicHunter",
            "html_url": "https://github.com/CosmicHunter",
            "followers_url": "https://api.github.com/users/CosmicHunter/followers",
            "following_url": "https://api.github.com/users/CosmicHunter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CosmicHunter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CosmicHunter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CosmicHunter/subscriptions",
            "organizations_url": "https://api.github.com/users/CosmicHunter/orgs",
            "repos_url": "https://api.github.com/users/CosmicHunter/repos",
            "events_url": "https://api.github.com/users/CosmicHunter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CosmicHunter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-03T18:10:05Z",
        "updated_at": "2020-07-09T11:35:59Z",
        "closed_at": "2020-07-09T11:35:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI have exported a LSTM model from pytorch to onnx . The model takes sequences of length 200. It has hidden state size 256 , number of layers = 2.The forward function takes input size of (batches , sequencelength) as input along with a tuple consisting of hidden state and cell state. I am getting an error while inferencing the model with onnx runtime. hidden state and cell state dimensions are same. \r\n\r\n**Expected behavior**\r\n~~~\r\nioio1 = np.random.rand(1,200)\r\nioio2 = np.zeros((2,1,256),dtype = np.float)\r\npred = runtime_session.run([output_name],{runtime_session.get_inputs()[0].name:ioio1,\r\n                                          runtime_session.get_inputs()[1].name :ioio2,\r\n                                          runtime_session.get_inputs()[2].name : ioio2})\r\n~~~\r\n\r\n~~~ \r\nERROR\r\n\r\nInvalidArgument                           Traceback (most recent call last)\r\n<ipython-input-204-3928823f661e> in <module>()\r\n      1 pred = runtime_session.run([output_name],{runtime_session.get_inputs()[0].name:ioio1,\r\n      2                                           runtime_session.get_inputs()[1].name :ioio2,\r\n----> 3                                           runtime_session.get_inputs()[2].name : ioio2})\r\n\r\n/usr/local/lib/python3.6/dist-packages/onnxruntime/capi/session.py in run(self, output_names, input_feed, run_options)\r\n    109             output_names = [output.name for output in self._outputs_meta]\r\n    110         try:\r\n--> 111             return self._sess.run(output_names, input_feed, run_options)\r\n    112         except C.EPFail as err:\r\n    113             if self._enable_fallback:\r\n\r\nInvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Unexpected input data type. Actual: (N11onnxruntime17PrimitiveDataTypeIdEE) , expected: (N11onnxruntime17PrimitiveDataTypeIlEE)\r\n\r\n~~~\r\n\r\nI have exported the model like this \r\n\r\n~~~\r\ninput_names = [ \"input1\", \"hidden\"]\r\noutput_names = [ \"output\" ]\r\ndummy_input = torch.autograd.Variable(torch.ones(1,200,dtype=torch.long))\r\ndummy_h = torch.autograd.Variable(torch.zeros(2,1,256,dtype = torch.float))\r\ndummy_h = (dummy_h,dummy_h)\r\n\r\ntorch.onnx.export(net ,(dummy_input ,dummy_h),\"lstm_model_5_test.onnx\",input_names = input_names ,output_names = output_names,verbose=True,export_params=True)\r\n~~~\r\n\r\nOn exporting the model the conversion is like the below screenshot\r\n\r\n![exportouts](https://user-images.githubusercontent.com/52317137/86490822-6e2e0b00-bd86-11ea-9a46-88f1a30cb154.PNG)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4423/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4424",
        "id": 650733872,
        "node_id": "MDU6SXNzdWU2NTA3MzM4NzI=",
        "number": 4424,
        "title": "Session load fails with Protobuf serialization failed",
        "user": {
            "login": "dashesy",
            "id": 873905,
            "node_id": "MDQ6VXNlcjg3MzkwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/873905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dashesy",
            "html_url": "https://github.com/dashesy",
            "followers_url": "https://api.github.com/users/dashesy/followers",
            "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
            "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
            "organizations_url": "https://api.github.com/users/dashesy/orgs",
            "repos_url": "https://api.github.com/users/dashesy/repos",
            "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dashesy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-07-03T19:03:00Z",
        "updated_at": "2020-07-20T22:18:36Z",
        "closed_at": "2020-07-20T22:18:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nExported a modified BERT model.\r\nWhen loading the model I get this error in the log:\r\n\r\n> [libprotobuf ERROR /onnxruntime_src/cmake/external/protobuf/src/google/protobuf/message_lite.cc:379] onnx.ModelProto exceeded maximum protobuf size of 2GB: 2192699607\r\n\r\nAnd then this is the exception:\r\n\r\n> InvalidProtobuf: [ONNXRuntimeError] : 7 : INVALID_PROTOBUF : Protobuf serialization failed.\r\n\r\n**Urgency**\r\nNeeded for new captioning model\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04\r\n- ONNX Runtime installed from (source or binary): pip\r\n- ONNX Runtime version: 1.2.0\r\n- Python version: 3.6.9\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version: \r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n\r\n```python\r\n    sess_options = rt.SessionOptions()\r\n    sess_options.graph_optimization_level = rt.GraphOptimizationLevel.ORT_ENABLE_BASIC\r\n    sess_options.optimized_model_filepath = onnxfile_optimized\r\n    sess = rt.InferenceSession(onnxfile, sess_options)\r\n```\r\n\r\nresults in \r\n\r\n> InvalidProtobuf: [ONNXRuntimeError] : 7 : INVALID_PROTOBUF : Protobuf serialization failed.\r\n\r\nNormally loading the session however does not show that error:\r\n\r\n```python\r\nsess = rt.InferenceSession(onnxfile)\r\n```\r\n\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\nWill send the model\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nThis is BERT but with some changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4424/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4425",
        "id": 650781081,
        "node_id": "MDU6SXNzdWU2NTA3ODEwODE=",
        "number": 4425,
        "title": "Session.Run(inputs) returns null result",
        "user": {
            "login": "hanzigs",
            "id": 30790120,
            "node_id": "MDQ6VXNlcjMwNzkwMTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30790120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanzigs",
            "html_url": "https://github.com/hanzigs",
            "followers_url": "https://api.github.com/users/hanzigs/followers",
            "following_url": "https://api.github.com/users/hanzigs/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanzigs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanzigs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanzigs/subscriptions",
            "organizations_url": "https://api.github.com/users/hanzigs/orgs",
            "repos_url": "https://api.github.com/users/hanzigs/repos",
            "events_url": "https://api.github.com/users/hanzigs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanzigs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2185567573,
                "node_id": "MDU6TGFiZWwyMTg1NTY3NTcz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/more%20info%20needed",
                "name": "more info needed",
                "color": "CFB717",
                "default": false,
                "description": "issues that cannot be triaged until more information is submitted by the original user"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-03T22:17:56Z",
        "updated_at": "2020-07-07T02:26:01Z",
        "closed_at": "2020-07-07T02:26:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have this code for keras2onnx model prediction\r\n```\r\nvar Session = new InferenceSession(modelPath);\r\nfloat[] data = new float[] { 0.62382546f, -0.37804684f, -0.079906f, -0.45980235f, 0.34740723f, 0.00235355f, -0.29869863f,...};\r\nvar dimensions = new int[] { 1, 25 };\r\nTensor<float> tensorA = new DenseTensor<float>(data, dimensions); \r\nvar inputs = new List<NamedOnnxValue>();\r\nvar t1 = NamedOnnxValue.CreateFromTensor<float>(\"dense_4_input\", tensorA);          \r\ninputs.Add(t1);\r\nusing (IDisposableReadOnlyCollection<DisposableNamedOnnxValue> results = Session.Run(inputs))\r\n            {\r\n                Console.WriteLine(results);\r\n            }\r\n```\r\nresults value should be a float '0.014536', I get null, may I know my issue, Thanks",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4425/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4426",
        "id": 650818346,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjMyNzg2",
        "number": 4426,
        "title": "Fix symbolic_shape_infer for Resize with roi",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-04T03:21:35Z",
        "updated_at": "2020-07-06T06:37:38Z",
        "closed_at": "2020-07-06T06:37:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4426",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4426",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4426.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4426.patch",
            "merged_at": "2020-07-06T06:37:37Z"
        },
        "body": "\r\n\r\n**Description**: Fix symbolic_shape_infer for Resize with roi\r\n\r\n**Motivation and Context**\r\n- Should only apply roi when coordinate_transformation_mode == tf_crop_and_resize\r\n- Some models failed because of this bug\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4426/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4427",
        "id": 650876096,
        "node_id": "MDU6SXNzdWU2NTA4NzYwOTY=",
        "number": 4427,
        "title": "Segmentation fault (core dumped) CUDAExecutionProvider",
        "user": {
            "login": "arijitx",
            "id": 6756124,
            "node_id": "MDQ6VXNlcjY3NTYxMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6756124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arijitx",
            "html_url": "https://github.com/arijitx",
            "followers_url": "https://api.github.com/users/arijitx/followers",
            "following_url": "https://api.github.com/users/arijitx/following{/other_user}",
            "gists_url": "https://api.github.com/users/arijitx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arijitx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arijitx/subscriptions",
            "organizations_url": "https://api.github.com/users/arijitx/orgs",
            "repos_url": "https://api.github.com/users/arijitx/repos",
            "events_url": "https://api.github.com/users/arijitx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arijitx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2185567573,
                "node_id": "MDU6TGFiZWwyMTg1NTY3NTcz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/more%20info%20needed",
                "name": "more info needed",
                "color": "CFB717",
                "default": false,
                "description": "issues that cannot be triaged until more information is submitted by the original user"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-04T11:35:10Z",
        "updated_at": "2021-03-19T00:09:10Z",
        "closed_at": "2021-03-19T00:09:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nonnxruntime 1.1.2 with CUDAExecutionProvider results in Segmentation fault (core dumped) in python the model is dumped from hugginface transformers with onnx 1.6.0. The model runs successfully when run with CPUExecutionProvider. And loads properly.\r\n\r\n**Urgency**\r\nNA\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Jetpack 4.3\r\n- ONNX Runtime installed from (source or binary): source ( as suggested from the doc to build from source)\r\n- ONNX Runtime version: 1.1.2\r\n- Python version: 3.6\r\n- Visual Studio version (if applicable): na\r\n- GCC/Compiler version (if compiling from source): 7.4.0\r\n- CUDA/cuDNN version: 10.0.326/ 7.6.3.28\r\n- GPU model and memory:   Jetson Nano tegra210 / 4GB\r\n\r\n**To Reproduce**\r\n\r\nBuild onnxruntime\r\n`/build.sh --config Release --update --build --build_wheel --cuda_home /usr/local/cuda --cudnn_home /usr/lib/aarch64-linux-gnu --use_cuda`\r\n\r\nModel Dump\r\n`python3 convert_graph_to_onnx.py onnx/dbert_squad.onnx --pipeline question-answering --model distilbert-base-uncased-distilled-squad --tokenizer distilbert-base-uncased-distilled-squad --framework pt`\r\n\r\nRun Model\r\nhttps://gist.github.com/arijitx/5c5803a9f54700c9ccc0f526591fbf36\r\n\r\n\r\n**Expected behavior**\r\nSuccessful Run\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4427/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4428",
        "id": 651105059,
        "node_id": "MDU6SXNzdWU2NTExMDUwNTk=",
        "number": 4428,
        "title": "specify install location using build.sh",
        "user": {
            "login": "jinz2014",
            "id": 7799920,
            "node_id": "MDQ6VXNlcjc3OTk5MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7799920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jinz2014",
            "html_url": "https://github.com/jinz2014",
            "followers_url": "https://api.github.com/users/jinz2014/followers",
            "following_url": "https://api.github.com/users/jinz2014/following{/other_user}",
            "gists_url": "https://api.github.com/users/jinz2014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jinz2014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jinz2014/subscriptions",
            "organizations_url": "https://api.github.com/users/jinz2014/orgs",
            "repos_url": "https://api.github.com/users/jinz2014/repos",
            "events_url": "https://api.github.com/users/jinz2014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jinz2014/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-07-05T16:52:44Z",
        "updated_at": "2020-07-25T18:16:34Z",
        "closed_at": "2020-07-07T16:01:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Please advise how to specify a custom install location using build.sh. I don't have root permission. \r\n\r\nThank you\r\n\r\nInstall the project...\r\n-- Install configuration: \"RelWithDebInfo\"\r\n-- Installing: /usr/local/include/onnxruntime/core/common\r\nCMake Error at cmake_install.cmake:41 (file):\r\n  file INSTALL cannot make directory\r\n  \"/usr/local/include/onnxruntime/core/common\": No such file or directory\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4428/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4429",
        "id": 651339156,
        "node_id": "MDU6SXNzdWU2NTEzMzkxNTY=",
        "number": 4429,
        "title": "Display all input types on type error",
        "user": {
            "login": "vuvko",
            "id": 6129086,
            "node_id": "MDQ6VXNlcjYxMjkwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6129086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuvko",
            "html_url": "https://github.com/vuvko",
            "followers_url": "https://api.github.com/users/vuvko/followers",
            "following_url": "https://api.github.com/users/vuvko/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuvko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuvko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuvko/subscriptions",
            "organizations_url": "https://api.github.com/users/vuvko/orgs",
            "repos_url": "https://api.github.com/users/vuvko/repos",
            "events_url": "https://api.github.com/users/vuvko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuvko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            },
            {
                "id": 1267486731,
                "node_id": "MDU6TGFiZWwxMjY3NDg2NzMx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/contributions%20welcome",
                "name": "contributions welcome",
                "color": "545AB5",
                "default": false,
                "description": "lower priority issues for the core ORT teams"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-06T08:13:11Z",
        "updated_at": "2020-07-20T22:19:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\nWhile trying to convert PyTorch model, I was frustrated trying to understand the types of input tensors after the conversion.\r\nONNX Runtime only shows an error for the specific input without displaying other inputs.\r\n\r\nFor example, I would get the following output:\r\n```\r\nonnxruntime.capi.onnxruntime_pybind11_state.InvalidGraph: [ONNXRuntimeError] : 10 : INVALID_GRAPH : This is an invalid model. Type Error: Type 'tensor(int32)' of input parameter (3230) of operator (Clip) in node () is invalid.\r\n```\r\nAnd from it, I couldn't understand which type is expected and why.\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): 1.3.0\r\n\r\n**Describe the solution you'd like**\r\nA clear indication of the expected type and explanation would be great. \r\n\r\n**Describe alternatives you've considered**\r\nIt will help even if the error shows only types for every input node.\r\n\r\n**Additional context**\r\nFor now, the only workaround I found is to split the graph and run every part separately. It is time consumable and error-prone method from my perspective.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4430",
        "id": 651358330,
        "node_id": "MDU6SXNzdWU2NTEzNTgzMzA=",
        "number": 4430,
        "title": "ARMNN build failed due to signature change of CPUAllocator introduced by PR2850",
        "user": {
            "login": "clockfly",
            "id": 2595532,
            "node_id": "MDQ6VXNlcjI1OTU1MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2595532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clockfly",
            "html_url": "https://github.com/clockfly",
            "followers_url": "https://api.github.com/users/clockfly/followers",
            "following_url": "https://api.github.com/users/clockfly/following{/other_user}",
            "gists_url": "https://api.github.com/users/clockfly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clockfly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clockfly/subscriptions",
            "organizations_url": "https://api.github.com/users/clockfly/orgs",
            "repos_url": "https://api.github.com/users/clockfly/repos",
            "events_url": "https://api.github.com/users/clockfly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clockfly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "prabhat00155",
            "id": 7043157,
            "node_id": "MDQ6VXNlcjcwNDMxNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhat00155",
            "html_url": "https://github.com/prabhat00155",
            "followers_url": "https://api.github.com/users/prabhat00155/followers",
            "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
            "repos_url": "https://api.github.com/users/prabhat00155/repos",
            "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "prabhat00155",
                "id": 7043157,
                "node_id": "MDQ6VXNlcjcwNDMxNTc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/prabhat00155",
                "html_url": "https://github.com/prabhat00155",
                "followers_url": "https://api.github.com/users/prabhat00155/followers",
                "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
                "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
                "repos_url": "https://api.github.com/users/prabhat00155/repos",
                "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
                "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-06T08:43:36Z",
        "updated_at": "2021-01-23T22:23:08Z",
        "closed_at": "2020-07-13T23:07:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nIn https://github.com/microsoft/onnxruntime/pull/2850, the CPUAllocator signature changed from\r\n\r\n```\r\nCPUAllocator(std::unique_ptr<OrtMemoryInfo> memory_info)\r\n```\r\n\r\nto \r\n\r\n```\r\n CPUAllocator(const OrtMemoryInfo& memory_info) : IDeviceAllocator(memory_info) {}\r\n```\r\n\r\nThis breaks armnn build,\r\n\r\n```\r\n/usr/include/c++/7/bits/unique_ptr.h: In instantiation of 'typename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = onnxruntime::CPUAllocator; _Args = {std::unique_ptr<OrtMemoryInfo, std::default_delete<OrtMemoryInfo> >}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<onnxruntime::CPUAllocator, std::default_delete<onnxruntime::CPUAllocator> >]':\r\n/workspace/trtis-build/framework/onnxruntime/src/onnxruntime/onnxruntime/core/providers/armnn/armnn_execution_provider.cc:78:73:   required from here\r\n/usr/include/c++/7/bits/unique_ptr.h:821:30: error: no matching function for call to 'onnxruntime::CPUAllocator::CPUAllocator(std::unique_ptr<OrtMemoryInfo, std::default_delete<OrtMemoryInfo> >)'\r\n     { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }\r\n                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /workspace/trtis-build/framework/onnxruntime/src/onnxruntime/onnxruntime/core/framework/arena.h:9:0,\r\n                 from /workspace/trtis-build/framework/onnxruntime/src/onnxruntime/onnxruntime/core/framework/allocatormgr.h:7,\r\n                 from /workspace/trtis-build/framework/onnxruntime/src/onnxruntime/onnxruntime/core/providers/armnn/armnn_execution_provider.h:7,\r\n                 from /workspace/trtis-build/framework/onnxruntime/src/onnxruntime/onnxruntime/core/providers/armnn/armnn_execution_provider.cc:5:\r\n```\r\n\r\n**Urgency**\r\nnone\r\n\r\n**System information**\r\n- OS Platform and Distribution: ubuntu18 arm64v8\r\n- ONNX Runtime installed from (source or binary): source\r\n- ONNX Runtime version: master\r\n\r\n**To Reproduce**\r\n\r\narmnn provider build.\r\n\r\n**Expected behavior**\r\n\r\nbuild pass.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4430/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4431",
        "id": 651449163,
        "node_id": "MDU6SXNzdWU2NTE0NDkxNjM=",
        "number": 4431,
        "title": "Why is the onnx version down to 1.2 in the document docs/version.md that chapter is compatibility/version matrix?",
        "user": {
            "login": "zxgm",
            "id": 17983863,
            "node_id": "MDQ6VXNlcjE3OTgzODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17983863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zxgm",
            "html_url": "https://github.com/zxgm",
            "followers_url": "https://api.github.com/users/zxgm/followers",
            "following_url": "https://api.github.com/users/zxgm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zxgm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zxgm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zxgm/subscriptions",
            "organizations_url": "https://api.github.com/users/zxgm/orgs",
            "repos_url": "https://api.github.com/users/zxgm/repos",
            "events_url": "https://api.github.com/users/zxgm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zxgm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-06T11:03:41Z",
        "updated_at": "2020-07-07T02:17:26Z",
        "closed_at": "2020-07-07T02:17:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Why is the onnx version down to 1.2 in the document docs/version.md that chapter is compatibility/version matrix?If i have pytorch pt model,i want to convert to onnx model,and use torch.onnx.export interface that set `opset_version=10`, what is the onnx release version ?What is the ONNX Runtime release version?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4431/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4432",
        "id": 651696238,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTAyMTM3",
        "number": 4432,
        "title": "IOBinding docs",
        "user": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-06T17:10:15Z",
        "updated_at": "2020-07-08T10:48:25Z",
        "closed_at": "2020-07-08T10:48:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4432",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4432",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4432.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4432.patch",
            "merged_at": "2020-07-08T10:48:23Z"
        },
        "body": "**Description**: Describe your changes.\r\nDocs for IOBinding python API\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4432/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4433",
        "id": 651743996,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTQwMzU1",
        "number": 4433,
        "title": "MLAS: support prepacking APIs for quantized GEMM",
        "user": {
            "login": "tracysh",
            "id": 42477615,
            "node_id": "MDQ6VXNlcjQyNDc3NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42477615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tracysh",
            "html_url": "https://github.com/tracysh",
            "followers_url": "https://api.github.com/users/tracysh/followers",
            "following_url": "https://api.github.com/users/tracysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tracysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tracysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tracysh/subscriptions",
            "organizations_url": "https://api.github.com/users/tracysh/orgs",
            "repos_url": "https://api.github.com/users/tracysh/repos",
            "events_url": "https://api.github.com/users/tracysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tracysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-06T18:40:52Z",
        "updated_at": "2020-07-06T22:20:12Z",
        "closed_at": "2020-07-06T22:20:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4433",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4433",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4433.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4433.patch",
            "merged_at": "2020-07-06T22:20:11Z"
        },
        "body": "**Description**: Add support for prepacking matrix B for use in the quantized GEMMs. Only the quantized contrib ops used for BERT have been updated to use the prepacking routines at this time.\r\n\r\n**Motivation and Context**\r\nThis removes the CPU time used to pack matrix B for the standard GEMM signature. The prepacking routines also can support longer strides to further improve performance because the packed buffers are no longer contrained to the stack.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4433/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4434",
        "id": 651774859,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTY1NjMw",
        "number": 4434,
        "title": "add function initialization back to graph resolve",
        "user": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-06T19:39:58Z",
        "updated_at": "2020-07-06T22:17:30Z",
        "closed_at": "2020-07-06T22:17:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4434",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4434",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4434.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4434.patch",
            "merged_at": "2020-07-06T22:17:28Z"
        },
        "body": "**Description**: Reverting a change introduced by PR https://github.com/microsoft/onnxruntime/pull/4332\r\nThis is causing failure in building gradient graph for 1 model. More investigation is needed to apply a fix so for now just undoing the change. \r\nAdding the function initialization back during graph resolve. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4434/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4435",
        "id": 651818436,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDAxNzA5",
        "number": 4435,
        "title": "Add basic ORTTrainer API",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "thiagocrepaldi",
                "id": 5469809,
                "node_id": "MDQ6VXNlcjU0Njk4MDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thiagocrepaldi",
                "html_url": "https://github.com/thiagocrepaldi",
                "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
                "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
                "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
                "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
                "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
                "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rayankrish",
                "id": 16053755,
                "node_id": "MDQ6VXNlcjE2MDUzNzU1",
                "avatar_url": "https://avatars.githubusercontent.com/u/16053755?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rayankrish",
                "html_url": "https://github.com/rayankrish",
                "followers_url": "https://api.github.com/users/rayankrish/followers",
                "following_url": "https://api.github.com/users/rayankrish/following{/other_user}",
                "gists_url": "https://api.github.com/users/rayankrish/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rayankrish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rayankrish/subscriptions",
                "organizations_url": "https://api.github.com/users/rayankrish/orgs",
                "repos_url": "https://api.github.com/users/rayankrish/repos",
                "events_url": "https://api.github.com/users/rayankrish/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rayankrish/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-06T21:05:35Z",
        "updated_at": "2020-07-17T21:55:30Z",
        "closed_at": "2020-07-17T21:55:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4435",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4435",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4435.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4435.patch",
            "merged_at": "2020-07-17T21:55:29Z"
        },
        "body": "This PR presents the public API for ORTTrainer for the short term\r\ndevelopment.\r\n\r\nIt also validates and saves input parameters, which will be used in the\r\nnext stages, such as building OONNX model, post processing the model and\r\nconfiguring the training session",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4435/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4436",
        "id": 651829639,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDExMDcz",
        "number": 4436,
        "title": "Remove Unused Initializer in Graph After Embed Fusion",
        "user": {
            "login": "liuziyue",
            "id": 9273813,
            "node_id": "MDQ6VXNlcjkyNzM4MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9273813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuziyue",
            "html_url": "https://github.com/liuziyue",
            "followers_url": "https://api.github.com/users/liuziyue/followers",
            "following_url": "https://api.github.com/users/liuziyue/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuziyue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuziyue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuziyue/subscriptions",
            "organizations_url": "https://api.github.com/users/liuziyue/orgs",
            "repos_url": "https://api.github.com/users/liuziyue/repos",
            "events_url": "https://api.github.com/users/liuziyue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuziyue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-06T21:27:12Z",
        "updated_at": "2020-07-06T23:04:04Z",
        "closed_at": "2020-07-06T23:04:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4436",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4436",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4436.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4436.patch",
            "merged_at": "2020-07-06T23:04:03Z"
        },
        "body": "**Description**: Describe your changes.\r\nTrigger graph.resolve() and remove unused initializers by setting \"modified\" to true right after a new initializer is created in EmbedLayerNormalization fusion. \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\nPreviously unused initializers are not removed when an initializer is created in the middle of an unsuccessful fusion. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4436/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4437",
        "id": 651864045,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDM5MjU3",
        "number": 4437,
        "title": "Add Fusion for GPT Attention with both past state and attention mask",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-06T22:48:23Z",
        "updated_at": "2020-07-07T02:37:39Z",
        "closed_at": "2020-07-07T02:37:38Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4437",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4437",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4437.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4437.patch",
            "merged_at": "2020-07-07T02:37:38Z"
        },
        "body": "**Description**: \r\nAdd Fusion for GPT-2 Attention (with attention mask and past state).\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nBoost performance of GPT-2 attention.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4438",
        "id": 651879297,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDUxNzI3",
        "number": 4438,
        "title": "Update dependency introduced by fuzzing change.",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-06T23:28:31Z",
        "updated_at": "2020-07-07T04:56:42Z",
        "closed_at": "2020-07-07T04:56:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4438",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4438",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4438.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4438.patch",
            "merged_at": "2020-07-07T04:56:41Z"
        },
        "body": "**Description**: Update dependency introduced by fuzzing change.\r\n\r\n**Motivation and Context**\r\nThis was introduced in the fuzzing change here https://github.com/microsoft/onnxruntime/pull/4341.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4439",
        "id": 651936427,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDk5MzU2",
        "number": 4439,
        "title": "Support binding a graph output to a specific device via the Python binding",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-07-07T02:12:54Z",
        "updated_at": "2020-07-08T04:09:39Z",
        "closed_at": "2020-07-08T04:09:38Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4439",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4439",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4439.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4439.patch",
            "merged_at": "2020-07-08T04:09:38Z"
        },
        "body": "**Description**: This change supports binding a graph output to a specific device (like GPU) without the requiring a pre-allocated output buffer to do so (ORT will internally allocate and manage the buffer). For this release, the user won't have access to the ORT allocated buffer and hence won't directly be able to access its contents (we don't support an equivalent of an OrtValue in the Python world - we need to design of the life cycle management for such a struct and we will probably do this for the next release). The user can call the exposed get_outputs() which will copy the contents to the host and return back the result as a Numpy object. This provides the advantage that Run() will not incur the device-host copying cost (as is the case today) and helps the benchmarking scenario. This feature is in addition to the already exposed feature where-in a user can use a custom allocator (for example - Torch) to pre-allocate memory on a device and have ORT directly write results into the buffer.\r\n\r\nBrings in this bug fix as it is required - https://github.com/microsoft/onnxruntime/pull/4415 \r\n\r\n**Motivation and Context**\r\nSupport IOBinding via Python API\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4439/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4440",
        "id": 651974981,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTMxMTk0",
        "number": 4440,
        "title": "Add bias for DynamicQuantizeMatMul",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-07T03:52:49Z",
        "updated_at": "2020-07-07T05:31:31Z",
        "closed_at": "2020-07-07T05:31:30Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4440",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4440",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4440.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4440.patch",
            "merged_at": "2020-07-07T05:31:30Z"
        },
        "body": "**Description**: Fix bad merge of the packed quantized GEMM with the latest version of DynamicQuantizeMatMul that supports an optional bias tensor.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4441",
        "id": 651988709,
        "node_id": "MDU6SXNzdWU2NTE5ODg3MDk=",
        "number": 4441,
        "title": "Porting the controller in C/C++ imagenet example to Linux ",
        "user": {
            "login": "jinz2014",
            "id": 7799920,
            "node_id": "MDQ6VXNlcjc3OTk5MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7799920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jinz2014",
            "html_url": "https://github.com/jinz2014",
            "followers_url": "https://api.github.com/users/jinz2014/followers",
            "following_url": "https://api.github.com/users/jinz2014/following{/other_user}",
            "gists_url": "https://api.github.com/users/jinz2014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jinz2014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jinz2014/subscriptions",
            "organizations_url": "https://api.github.com/users/jinz2014/orgs",
            "repos_url": "https://api.github.com/users/jinz2014/repos",
            "events_url": "https://api.github.com/users/jinz2014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jinz2014/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-07-07T04:29:11Z",
        "updated_at": "2020-12-24T11:39:26Z",
        "closed_at": "2020-12-24T11:39:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am not clear how controller.cc and controller.h in the C/C++ Imagenet example can be ported to Linux. Please advise. Thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4441/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4442",
        "id": 652041067,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTg1NjU1",
        "number": 4442,
        "title": "Build new AVX file with /ARCH:AVX",
        "user": {
            "login": "tracysh",
            "id": 42477615,
            "node_id": "MDQ6VXNlcjQyNDc3NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42477615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tracysh",
            "html_url": "https://github.com/tracysh",
            "followers_url": "https://api.github.com/users/tracysh/followers",
            "following_url": "https://api.github.com/users/tracysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tracysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tracysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tracysh/subscriptions",
            "organizations_url": "https://api.github.com/users/tracysh/orgs",
            "repos_url": "https://api.github.com/users/tracysh/repos",
            "events_url": "https://api.github.com/users/tracysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tracysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-07T06:29:37Z",
        "updated_at": "2020-07-07T19:00:14Z",
        "closed_at": "2020-07-07T19:00:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4442",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4442",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4442.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4442.patch",
            "merged_at": "2020-07-07T19:00:13Z"
        },
        "body": "**Description**: In the Windows build, build min_max_elements.cpp with /ARCH:AVX to ensure that the vzeroupper instruction is emitted at the proper location. With the existing code, vzeroupper is happening before another pair of instructions that uses ymm registers. That leaves the processor in a state where SSE instructions run with poor performance. This is costing several milliseconds per inference for a quantized BERT.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4442/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4443",
        "id": 652429348,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDk4OTMx",
        "number": 4443,
        "title": "Memory planner and pattern generation enhancements.",
        "user": {
            "login": "codemzs",
            "id": 1211949,
            "node_id": "MDQ6VXNlcjEyMTE5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1211949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codemzs",
            "html_url": "https://github.com/codemzs",
            "followers_url": "https://api.github.com/users/codemzs/followers",
            "following_url": "https://api.github.com/users/codemzs/following{/other_user}",
            "gists_url": "https://api.github.com/users/codemzs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codemzs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codemzs/subscriptions",
            "organizations_url": "https://api.github.com/users/codemzs/orgs",
            "repos_url": "https://api.github.com/users/codemzs/repos",
            "events_url": "https://api.github.com/users/codemzs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codemzs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            },
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-07T15:45:23Z",
        "updated_at": "2020-11-02T16:54:16Z",
        "closed_at": "2020-11-02T07:05:47Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4443",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4443",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4443.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4443.patch",
            "merged_at": "2020-11-02T07:05:47Z"
        },
        "body": "## Objective\r\nThis change introduces two enhancements to the memory planner and pattern generator to reduce memory footprint in the short and long term:\r\n\r\n1. To have the option to contiguously allocate kernel input tensors in memory while being able to reuse that memory with other tensors as much as possible. This prevents the need to allocate an extra buffer in scenarios such as ncclAllReduce and NCCL Send/Receive. It also removes the hacky usage of View Operator and fusing gradients in gradient accumulation scenario with multiple GPUs.\r\n\r\n2. Introduces fine grained memory pattern generation by scheduling memory blocks based on time ranges, i.e memory blocks of two tensors can overlap on memory address as long as their time schedules do not overlap, this prevents holding on to memory blocks longer than needed in the case of memory-reuse. With this change there is a modest decrease in memory footprint across all workloads that I have tested and this enhancement introduces infrastructure that can be used to optimize memory pattern generation further by applying more heuristics that are based on memory and time.\r\n\r\n## Validation\r\n\r\n### CI Builds\r\nNew code paths are well tested using CI Builds since they are fundamental to ONNX Runtime. This validates basic correctness of memory pattern generation by making sure existing test baseline values still match the output produced by ONNX Runtime.\r\n\r\n### Bert-Large training (single GPU)\r\n\r\n#### Commands used\r\n`./build/Debug/onnxruntime_training_bert --mode train --model_name /bert_ort/bert_models/nv/bert-large/bert-large-uncased_L_24_H_1024_A_16_V_30528_S_512_Dp_0.1_optimized_layer_norm_opset12 --train_data_dir /bert_data/512/books_wiki_en_corpus/train --test_data_dir /bert_data/512/books_wiki_en_corpus/test --use_mixed_precision --num_train_steps 11 --train_batch_size 10 --max_seq_length 512`\r\n\r\n`./build/Debug/onnxruntime_training_bert --mode train --model_name /bert_ort/bert_models/nv/bert-large/bert-large-uncased_L_24_H_1024_A_16_V_30528_S_512_Dp_0.1_optimized_layer_norm_opset12 --train_data_dir /bert_data/128/books_wiki_en_corpus/train --test_data_dir /bert_data/128/books_wiki_en_corpus/test --use_mixed_precision --num_train_steps 11 --train_batch_size 10 --max_seq_length 128`\r\n\r\n#### Static memory footprint\r\n\r\n![image](https://user-images.githubusercontent.com/1211949/97835177-6fb50480-1c8e-11eb-84a3-d4b810560e7f.png)\r\n\r\n#### Accuracy\r\n\r\nBranch |Step #|Batch Size|Sequence Length|Total Loss| MLM Loss | NSP Loss\r\n|----------------|----------------|----------------|-------------------------------|-----------------------------|-----------------------------|-----------------------------|\r\n|Private|10|5|512|11.1043|9.0051|2.0992 \r\n|Master|10|5|512|11.1029|9.0050|2.0979 \r\n|Private|10|10|512|9.1685|8.4824|0.6860 \r\n|Master|10|10|512|9.1662|8.4825|0.6837 \r\n|Private|10|5|128|9.6234|8.9611|0.6623 \r\n|Master|10|5|128|9.6234|8.9612|0.6622\r\n|Private|10|10|128|9.7542|8.7368|1.0174 \r\n|Master|10|10|128|9.7541|8.7369|1.0172\r\n|Private|10|20|128|9.3342|8.6361|0.6981\r\n|Master|10|20|128|9.3338|8.6359|0.6979\r\n|Private|10|40|128|8.9699|8.3141|0.6557 \r\n|Master|10|40|128|8.9695|8.3137|0.6558\r\n|Private|10|65|128|8.9526|8.2601|0.6925 \r\n|Master|10|65|128|8.9527|8.2602|0.6925 \r\n\r\n**Please note accuracy number are not deterministic because of the dropout operator that uses random number generator, even with the same seed randomness cannot be controlled because CUDA can generate variable sequences from GPU to GPU.**\r\n\r\n### Bert-Large training with gradient accumulation (multi GPU)\r\nContiguous allocation of kernel input tensors using convergence test but with gradient accumulation and 2 GPUs so that NCCL_AllReduce has its inputs contiguous in memory and there is no need for view Operator hack and gradient fusion. Shows 1.0768 MB in saving.\r\n\r\n#### Command used:\r\n` subprocess.run([\r\n        \"/bert_ort/openmpi/bin/mpirun\",\r\n        \"-n\", \"2\",\r\n        os.path.join(args.binary_dir, \"onnxruntime_training_bert\"),\r\n        \"--model_name\", os.path.join(\r\n            args.model_root, \"nv/bert-base/bert-base-uncased_L_12_H_768_A_12_V_30528_S_512_Dp_0.1_optimized_layer_norm_opset12\"),\r\n        \"--train_data_dir\", os.path.join(\r\n            args.training_data_root, \"128/books_wiki_en_corpus/train\"),\r\n        \"--test_data_dir\", os.path.join(\r\n            args.training_data_root, \"128/books_wiki_en_corpus/test\"),\r\n        \"--train_batch_size\", \"64\",\r\n        \"--mode\", \"train\",\r\n        \"--num_train_steps\", \"800\",\r\n        \"--display_loss_steps\", \"5\",\r\n        \"--optimizer\", \"adam\",\r\n        \"--learning_rate\", \"5e-4\",\r\n        \"--warmup_ratio\", \"0.1\",\r\n        \"--warmup_mode\", \"Linear\",\r\n        \"--gradient_accumulation_steps\", \"16\",\r\n        \"--max_predictions_per_seq=20\",\r\n        \"--use_mixed_precision\",\r\n        \"--allreduce_in_fp16\",\r\n        \"--lambda\", \"0\",\r\n        \"--use_nccl\",\r\n        \"--convergence_test_output_file\", convergence_test_output_path,\r\n        \"--seed\", \"42\",\r\n        \"--enable_grad_norm_clip=false\",\r\n    ]).check_returncode()`\r\n\r\n`./orttraining/tools/ci_test/run_convergence_test.py --binary_dir /bert_ort/mzs/onnxruntime/build/Debug --model_root /bert_ort/bert_models  --training_data_root /bert_data/`\r\n\r\n#### Static memory footprint\r\n\r\n**Master**\r\nStage 0, Round 0, Step: 799, epoch: 0, batch: 798/2383, shard_iteration: 1/512, time: 100.79 ms, throughput: 616.00 ex/sec \r\nTraining data range: [51072 - 51135)\r\nAllocated memory for activations, size: 3554787584 bytes\r\n\r\n**Private**\r\nStage 0, Round 0, Step: 799, epoch: 0, batch: 798/2383, shard_iteration: 1/512, time: 100.03 ms, throughput: 613.61 ex/sec \r\nTraining data range: [51072 - 51135)\r\nAllocated memory for activations, size: 3553710784 bytes\r\n\r\n#### Accuracy\r\n\r\nPlease note for each branch there are two values per step, this is because there are two GPUs. The order of GPU values between branches can be different from run to run, i.e values from GPU 1 from branch 1 may not correspond to GPU 1 from branch 2, instead it may correspond to GPU 2 from branch 2 (and vice-versa).\r\n\r\n|branch|step   |total_loss|mlm_loss|nsp_loss|\r\n|------|-------|----------|--------|--------|\r\n|master|0      |11.2402   |10.5228 |0.717432|\r\n|master|0      |11.2207   |10.5096 |0.711112|\r\n|private|0      |11.2402   |10.5228 |0.717432|\r\n|private|0      |11.2207   |10.5096 |0.711112|\r\n|master|5      |15.2509   |11.4566 |3.79427 |\r\n|master|5      |16.0994   |11.4635 |4.63591 |\r\n|private|5      |15.2448   |11.4533 |3.79144 |\r\n|private|5      |16.0942   |11.4604 |4.63387 |\r\n|master|10     |8.19913   |7.50075 |0.698379|\r\n|master|10     |8.41715   |7.66109 |0.756059|\r\n|private|10     |8.48146   |7.68067 |0.800797|\r\n|private|10     |8.22898   |7.51765 |0.711336|\r\n|master|15     |8.25711   |7.53925 |0.717863|\r\n|master|15     |8.20579   |7.4636  |0.742189|\r\n|private|15     |8.18173   |7.51926 |0.66247 |\r\n|private|15     |8.27141   |7.5923  |0.679105|\r\n|master|20     |8.10141   |7.39819 |0.703219|\r\n|master|20     |8.12199   |7.42022 |0.701768|\r\n|private|20     |8.10769   |7.42731 |0.680376|\r\n|private|20     |8.08645   |7.40574 |0.680705|\r\n|master|25     |8.18843   |7.46725 |0.721185|\r\n|master|25     |8.15111   |7.48083 |0.670285|\r\n|private|25     |8.15712   |7.48572 |0.671395|\r\n|private|25     |8.1752    |7.47383 |0.701373|\r\n|master|30     |8.02735   |7.33735 |0.690002|\r\n|master|30     |8.08923   |7.42611 |0.663115|\r\n|private|30     |8.08743   |7.4323  |0.655125|\r\n|private|30     |8.03908   |7.34837 |0.690709|\r\n|master|35     |8.13484   |7.47728 |0.657562|\r\n|master|35     |7.92745   |7.22318 |0.70427 |\r\n|private|35     |8.13985   |7.47803 |0.661823|\r\n|private|35     |7.91951   |7.22002 |0.699489|\r\n|master|40     |8.09314   |7.41282 |0.680321|\r\n|master|40     |7.87309   |7.20394 |0.669148|\r\n|private|40     |7.86417   |7.20365 |0.660524|\r\n|private|40     |8.08971   |7.41344 |0.67627 |\r\n|master|45     |7.91028   |7.24647 |0.663814|\r\n|master|45     |8.01976   |7.32086 |0.698901|\r\n|private|45     |8.01902   |7.32407 |0.694942|\r\n|private|45     |7.91238   |7.24647 |0.665912|\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4443/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4444",
        "id": 652455067,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTE5ODQ1",
        "number": 4444,
        "title": "Remove use of RTTI in CUDA provider",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-07T16:22:58Z",
        "updated_at": "2020-07-07T18:44:41Z",
        "closed_at": "2020-07-07T18:38:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4444",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4444",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4444.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4444.patch",
            "merged_at": "2020-07-07T18:38:10Z"
        },
        "body": "**Description**: These usages are downcasts/upcasts that can be done without RTTI.\r\n\r\nI'm running the zip packaging pipeline here: https://aiinfra.visualstudio.com/Lotus/_build/results?buildId=128375&view=results to ensure it's working.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4444/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4445",
        "id": 652502963,
        "node_id": "MDU6SXNzdWU2NTI1MDI5NjM=",
        "number": 4445,
        "title": "Build with OpenVINO",
        "user": {
            "login": "oliveirara",
            "id": 12023276,
            "node_id": "MDQ6VXNlcjEyMDIzMjc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12023276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oliveirara",
            "html_url": "https://github.com/oliveirara",
            "followers_url": "https://api.github.com/users/oliveirara/followers",
            "following_url": "https://api.github.com/users/oliveirara/following{/other_user}",
            "gists_url": "https://api.github.com/users/oliveirara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oliveirara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oliveirara/subscriptions",
            "organizations_url": "https://api.github.com/users/oliveirara/orgs",
            "repos_url": "https://api.github.com/users/oliveirara/repos",
            "events_url": "https://api.github.com/users/oliveirara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oliveirara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1624868154,
                "node_id": "MDU6TGFiZWwxNjI0ODY4MTU0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:OpenVINO",
                "name": "ep:OpenVINO",
                "color": "0052CC",
                "default": false,
                "description": "issues related to OpenVINO execution provider"
            },
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2020-07-07T17:42:21Z",
        "updated_at": "2020-09-07T23:26:38Z",
        "closed_at": "2020-09-07T23:26:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I tried to build onnxruntime with OpenVINO following the procedures from [BUILD.md#openvino](https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#openvino) but when the compiler tries `Linking CXX executable onnxruntime_test_all`, `undefined references` appears and end it up with errors:\r\n\r\n```bash\r\n[ 81%] [Building CXX object]\r\nCMakeFiles/onnxruntime_test_all.dir/share/storage1/TNG/onnxruntime/onnxruntime/test/contrib_ops/inverse_test.cc.o\u001b[0m\r\nlibonnxruntime_providers_openvino.a(backend_manager.cc.o): In function `onnxruntime::openvino_ep::GlobalContext::GlobalContext()':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/contexts.h:12: undefined reference to `InferenceEngine::Core::Core(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::details::extract_exception(InferenceEngine::StatusCode, char*)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/details/ie_exception_conversion.hpp:62: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::GetBlob(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:114: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:113: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:110: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::StartAsync()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:215: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:114: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `onnxruntime::openvino_ep::BasicBackend::BasicBackend(onnx::ModelProto const&, onnxruntime::openvino_ep::GlobalContext&, onnxruntime::openvino_ep::SubGraphContext const&)':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/basic_backend.cc:39: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::ExecutableNetwork::CreateInferRequestPtr()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_executable_network.hpp:122: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::InferRequest(std::shared_ptr<InferenceEngine::IInferRequest>, InferenceEngine::details::SOPointer<InferenceEngine::IInferencePlugin, InferenceEngine::details::SharedObjectLoader>)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:205: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::ExecutableNetwork::CreateInferRequestPtr()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_executable_network.hpp:122: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::InferRequest::InferRequest(std::shared_ptr<InferenceEngine::IInferRequest>, InferenceEngine::details::SOPointer<InferenceEngine::IInferencePlugin, InferenceEngine::details::SharedObjectLoader>)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:205: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::InferRequest::GetBlob(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:113: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:110: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `onnxruntime::openvino_ep::VADMBackend::VADMBackend(onnx::ModelProto const&, onnxruntime::openvino_ep::GlobalContext&, onnxruntime::openvino_ep::SubGraphContext const&)':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/vadm_backend.cc:58: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/vadm_backend.cc:88: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::setPrecision(InferenceEngine::Precision)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:60: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::getTensorDesc() const':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:131: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::setLayout(InferenceEngine::Layout)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\ncollect2: error: ld returned 1 exit status\r\ngmake[2]: *** [onnx_test_runner] Error 1\r\ngmake[1]: *** [CMakeFiles/onnx_test_runner.dir/all] Error 2\r\n```\r\n\r\nand\r\n\r\n```bash\r\n[ 95%] [Linking CXX executable onnxruntime_test_all]\r\nlibonnxruntime_providers_openvino.a(backend_manager.cc.o): In function `onnxruntime::openvino_ep::GlobalContext::GlobalContext()':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/contexts.h:12: undefined reference to `InferenceEngine::Core::Core(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::details::extract_exception(InferenceEngine::StatusCode, char*)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/details/ie_exception_conversion.hpp:62: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::GetBlob(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:114: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:113: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:110: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::StartAsync()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:215: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:114: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `onnxruntime::openvino_ep::BasicBackend::BasicBackend(onnx::ModelProto const&, onnxruntime::openvino_ep::GlobalContext&, onnxruntime::openvino_ep::SubGraphContext const&)':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/basic_backend.cc:39: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::ExecutableNetwork::CreateInferRequestPtr()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_executable_network.hpp:122: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(basic_backend.cc.o): In function `InferenceEngine::InferRequest::InferRequest(std::shared_ptr<InferenceEngine::IInferRequest>, InferenceEngine::details::SOPointer<InferenceEngine::IInferencePlugin, InferenceEngine::details::SharedObjectLoader>)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:205: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::ExecutableNetwork::CreateInferRequestPtr()':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_executable_network.hpp:122: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::InferRequest::InferRequest(std::shared_ptr<InferenceEngine::IInferRequest>, InferenceEngine::details::SOPointer<InferenceEngine::IInferencePlugin, InferenceEngine::details::SharedObjectLoader>)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:205: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `InferenceEngine::InferRequest::GetBlob(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:113: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/cpp/ie_infer_request.hpp:110: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\nlibonnxruntime_providers_openvino.a(vadm_backend.cc.o): In function `onnxruntime::openvino_ep::VADMBackend::VADMBackend(onnx::ModelProto const&, onnxruntime::openvino_ep::GlobalContext&, onnxruntime::openvino_ep::SubGraphContext const&)':\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/vadm_backend.cc:58: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\n/share/storage1/TNG/onnxruntime/onnxruntime/core/providers/openvino/backends/vadm_backend.cc:88: undefined reference to `InferenceEngine::Core::LoadNetwork(InferenceEngine::CNNNetwork, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::setPrecision(InferenceEngine::Precision)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:60: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::getTensorDesc() const':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:131: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o): In function `InferenceEngine::InputInfo::setLayout(InferenceEngine::Layout)':\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\n/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: undefined reference to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)'\r\nlibonnxruntime_providers_openvino.a(backend_utils.cc.o):/opt/intel/openvino_2020.3.194/deployment_tools/inference_engine/include/ie_input_info.hpp:91: more undefined references to `InferenceEngine::details::InferenceEngineException::InferenceEngineException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)' follow\r\ncollect2: error: ld returned 1 exit status\r\ngmake[2]: *** [onnxruntime_test_all] Error 1\r\ngmake[1]: *** [CMakeFiles/onnxruntime_test_all.dir/all] Error 2\r\ngmake: *** [all] Error 2\r\nTraceback (most recent call last):\r\n  File \"/share/storage1/TNG/onnxruntime/tools/ci_build/build.py\", line 1891, in <module>\r\n    sys.exit(main())\r\n  File \"/share/storage1/TNG/onnxruntime/tools/ci_build/build.py\", line 1780, in main\r\n    build_targets(args, cmake_path, build_dir, configs, args.parallel)\r\n  File \"/share/storage1/TNG/onnxruntime/tools/ci_build/build.py\", line 920, in build_targets\r\n    run_subprocess(cmd_args, env=env)\r\n  File \"/share/storage1/TNG/onnxruntime/tools/ci_build/build.py\", line 422, in run_subprocess\r\n    env=my_env, shell=shell)\r\n  File \"/share/storage1/TNG/Softwares/Anaconda3-2020.02/lib/python3.7/subprocess.py\", line 512, in run\r\n    output=stdout, stderr=stderr)\r\nsubprocess.CalledProcessError: Command '['/share/storage1/TNG/Softwares/Anaconda3-2020.02/bin/cmake', '--build', '/share/storage1/TNG/onnxruntime/build/Linux/RelWithDebInfo', '--config', 'RelWithDebInfo', '--', '-j32']' returned non-zero exit status 2.]0;\r\n```\r\n\r\nThe complete log file is attached at the end.\r\n\r\n**System information**\r\n- OS Platform and Distribution: CentOS Linux 7\r\n- ONNX Runtime installed from (source or binary): latest, from source\r\n- Python version: 3.7.7\r\n- GCC/Compiler version (if compiling from source): 5.3.0\r\n- OpenVINO version: 2020.03\r\n\r\n**To Reproduce**\r\n[log_onnxruntime.txt](https://github.com/microsoft/onnxruntime/files/4886266/log_onnxruntime.txt)\r\n\r\n1. source <openvino_install_directory>/bin/setupvars.sh\r\n2. git clone --recursive https://github.com/Microsoft/onnxruntime\r\n3. cd onnxruntime\r\n4. ./build.sh --config RelWithDebInfo --build_shared_lib --parallel --use_openvino CPU_FP32",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4445/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4446",
        "id": 652597526,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NjM4Nzg5",
        "number": 4446,
        "title": "Transformer benchmark: add option to use raw attention mask",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-07T20:02:52Z",
        "updated_at": "2020-07-08T19:34:43Z",
        "closed_at": "2020-07-08T19:34:42Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4446",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4446",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4446.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4446.patch",
            "merged_at": "2020-07-08T19:34:42Z"
        },
        "body": "**Description**:\r\n1. Add option to use raw attention mask\r\n2. Remove temporary model generated in model optimization\r\n3. Update message in embed layer normalization\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nAllow benchmark different formats (1D and 2D) of attention mask to find which format is better for performance.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4446/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4447",
        "id": 652693906,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NzIzNjU4",
        "number": 4447,
        "title": "[Node.js binding] support CentOS 7 in CI",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-07T22:20:58Z",
        "updated_at": "2020-07-09T07:59:53Z",
        "closed_at": "2020-07-09T07:59:52Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4447",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4447",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4447.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4447.patch",
            "merged_at": "2020-07-09T07:59:51Z"
        },
        "body": "**Description**: support CentOS 7 in CI\r\n\r\n- Node.js official binary does not run in CentOS 6 and building Node.js requires 7+ for CentOS as well\r\n- do not use std::make_unique as it is not supported under the GCC version.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4447/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4448",
        "id": 652766544,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1Nzg5MzE0",
        "number": 4448,
        "title": "Readme updates",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T00:15:47Z",
        "updated_at": "2020-07-29T20:25:38Z",
        "closed_at": "2020-07-29T20:25:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4448",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4448",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4448.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4448.patch",
            "merged_at": "2020-07-29T20:25:37Z"
        },
        "body": "",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4448/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4449",
        "id": 653052760,
        "node_id": "MDU6SXNzdWU2NTMwNTI3NjA=",
        "number": 4449,
        "title": "Longformer Optimization",
        "user": {
            "login": "Nouman97",
            "id": 42269506,
            "node_id": "MDQ6VXNlcjQyMjY5NTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42269506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nouman97",
            "html_url": "https://github.com/Nouman97",
            "followers_url": "https://api.github.com/users/Nouman97/followers",
            "following_url": "https://api.github.com/users/Nouman97/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nouman97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nouman97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nouman97/subscriptions",
            "organizations_url": "https://api.github.com/users/Nouman97/orgs",
            "repos_url": "https://api.github.com/users/Nouman97/repos",
            "events_url": "https://api.github.com/users/Nouman97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nouman97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tianleiwu",
                "id": 30328909,
                "node_id": "MDQ6VXNlcjMwMzI4OTA5",
                "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tianleiwu",
                "html_url": "https://github.com/tianleiwu",
                "followers_url": "https://api.github.com/users/tianleiwu/followers",
                "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
                "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
                "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
                "repos_url": "https://api.github.com/users/tianleiwu/repos",
                "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-07-08T07:14:38Z",
        "updated_at": "2021-02-22T06:14:30Z",
        "closed_at": "2021-02-22T06:14:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, I wanted to use a similar procedure as the one mentioned in this notebook: PyTorch_Bert-Squad_OnnxRuntime_CPU.ipynb in order to optimize my question answering model based on the longformer. I wasn't able to find a mechanism to do this, can someone guide me regarding this?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4449/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4450",
        "id": 653098549,
        "node_id": "MDU6SXNzdWU2NTMwOTg1NDk=",
        "number": 4450,
        "title": "How to import  onnxruntime when I build from source?",
        "user": {
            "login": "dongzhen123",
            "id": 29719811,
            "node_id": "MDQ6VXNlcjI5NzE5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29719811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongzhen123",
            "html_url": "https://github.com/dongzhen123",
            "followers_url": "https://api.github.com/users/dongzhen123/followers",
            "following_url": "https://api.github.com/users/dongzhen123/following{/other_user}",
            "gists_url": "https://api.github.com/users/dongzhen123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dongzhen123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dongzhen123/subscriptions",
            "organizations_url": "https://api.github.com/users/dongzhen123/orgs",
            "repos_url": "https://api.github.com/users/dongzhen123/repos",
            "events_url": "https://api.github.com/users/dongzhen123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dongzhen123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-08T08:28:23Z",
        "updated_at": "2021-03-05T02:25:41Z",
        "closed_at": "2020-07-09T02:21:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have build the onnxruntime use \"./build.sh --config RelWithDebInfo --build_shared_lib --parallel\" successully.\r\n\r\n\r\nThen how to import onnxruntime? or before I import onnxruntime what else should I do?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4450/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4451",
        "id": 653213124,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTc0MTAz",
        "number": 4451,
        "title": "fix build break from PR#2850 for rocknpu and armnn ep's",
        "user": {
            "login": "jywu-msft",
            "id": 43355415,
            "node_id": "MDQ6VXNlcjQzMzU1NDE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43355415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jywu-msft",
            "html_url": "https://github.com/jywu-msft",
            "followers_url": "https://api.github.com/users/jywu-msft/followers",
            "following_url": "https://api.github.com/users/jywu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jywu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jywu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jywu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/jywu-msft/orgs",
            "repos_url": "https://api.github.com/users/jywu-msft/repos",
            "events_url": "https://api.github.com/users/jywu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jywu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T11:23:29Z",
        "updated_at": "2020-07-09T00:02:15Z",
        "closed_at": "2020-07-09T00:02:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4451",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4451",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4451.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4451.patch",
            "merged_at": "2020-07-09T00:02:14Z"
        },
        "body": "fix build breaks due to https://github.com/microsoft/onnxruntime/pull/2850",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4451/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4452",
        "id": 653246869,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjAxODgy",
        "number": 4452,
        "title": "Improve shape inference for OneHot",
        "user": {
            "login": "orausch",
            "id": 22137236,
            "node_id": "MDQ6VXNlcjIyMTM3MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22137236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orausch",
            "html_url": "https://github.com/orausch",
            "followers_url": "https://api.github.com/users/orausch/followers",
            "following_url": "https://api.github.com/users/orausch/following{/other_user}",
            "gists_url": "https://api.github.com/users/orausch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orausch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orausch/subscriptions",
            "organizations_url": "https://api.github.com/users/orausch/orgs",
            "repos_url": "https://api.github.com/users/orausch/repos",
            "events_url": "https://api.github.com/users/orausch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orausch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2020-07-08T12:12:18Z",
        "updated_at": "2020-08-08T15:28:54Z",
        "closed_at": "2020-08-07T21:05:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4452",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4452",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4452.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4452.patch",
            "merged_at": "2020-08-07T21:05:21Z"
        },
        "body": "**Description**: Attempt to get the depth parameter before adding a new symbolic dimension.\r\n\r\n**Motivation and Context**\r\nPreviously shape inference for `OneHot` would always add a new symbolic dimension for depth. However, it's sometimes possible to get the depth from the initalizers.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4453",
        "id": 653264857,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjE2Njc3",
        "number": 4453,
        "title": "Single Operator Execution Interface",
        "user": {
            "login": "orausch",
            "id": 22137236,
            "node_id": "MDQ6VXNlcjIyMTM3MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22137236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orausch",
            "html_url": "https://github.com/orausch",
            "followers_url": "https://api.github.com/users/orausch/followers",
            "following_url": "https://api.github.com/users/orausch/following{/other_user}",
            "gists_url": "https://api.github.com/users/orausch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orausch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orausch/subscriptions",
            "organizations_url": "https://api.github.com/users/orausch/orgs",
            "repos_url": "https://api.github.com/users/orausch/repos",
            "events_url": "https://api.github.com/users/orausch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orausch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            },
            {
                "id": 4419012097,
                "node_id": "LA_kwDOCVq1mM8AAAABB2TGAQ",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/api",
                "name": "api",
                "color": "F9D0C4",
                "default": false,
                "description": "issues related to all other APIs: C, C++, Python, etc."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 34,
        "created_at": "2020-07-08T12:40:37Z",
        "updated_at": "2022-08-12T08:22:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4453",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4453",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4453.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4453.patch",
            "merged_at": null
        },
        "body": "**Description**: This PR adds an interface to the C ABI that enables the execution of single ONNX nodes, without the overhead of graph construction and memory allocation\r\n\r\n**Motivation and Context**\r\nThe alternative way to execute single operators/nodes is to create an ONNX graph containing a single node only. However, this (understandably) adds a lot of overhead, as can be seen in the plot below.\r\n\r\n![image](https://user-images.githubusercontent.com/22137236/86919467-915f0e80-c128-11ea-920f-b15cb4d9e4ef.png)\r\n\r\nHere is an example of how the API can be used (UPDATE: new api for adding attributes):\r\n```c\r\n// Setup the context\r\nOrtExecutableKernelContext* kernel_context;\r\nCheckStatus(OrtApi->CreateExecutableKernelContext(\"MyConv\", \"Conv\", &kernel_context));\r\n\r\n// Add parameter X\r\nCheckStatus(OrtApi->ExecutableKernelContext_AddInput(kernel_context, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT));\r\n// Add parameter W\r\nCheckStatus(OrtApi->ExecutableKernelContext_AddInput(kernel_context, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT));\r\n// Add parameter Y\r\nCheckStatus(OrtApi->ExecutableKernelContext_AddOutput(kernel_context, ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT));\r\n\r\n// Setup attributes\r\nCheckStatus(OrtApi->ExecutableKernelContext_AddAttributeString(kernel_context, \"auto_pad\", \"NOTSET\"));\r\nCheckStatus(OrtApi->ExecutableKernelContext_AddAttributeInt(kernel_context, \"group\", 1));\r\n{\r\n\t// Setup attribute strides\r\n\tint64_t values[2];\r\n\tvalues[0] = 2;\r\n\tvalues[1] = 2;\r\n\r\n\tCheckStatus(OrtApi->ExecutableKernelContext_AddAttributeInts(kernel_context, \"strides\", values, 2));\r\n}\r\n// Create the executable kernel\r\nOrtExecutableKernel* kernel;\r\nCheckStatus(OrtApi->CreateExecutableKernel(__ort_session, kernel_context, /*provider_index=*/0, &kernel));\r\n\r\n// Execute the kernel\r\nCheckStatus(OrtApi->ExecutableKernel_SetInput(kernel, 0, ort_value_input_X));\r\nCheckStatus(OrtApi->ExecutableKernel_SetInput(kernel, 1, ort_value_input_W));\r\nCheckStatus(OrtApi->ExecutableKernel_SetOutput(kernel, 0, ort_value_output_Y));\r\nCheckStatus(OrtApi->ExecutableKernel_Compute(kernel));\r\n```\r\nIt has been tested with the CPU and CUDA execution providers.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 3,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4454",
        "id": 653496940,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDA0MjE2",
        "number": 4454,
        "title": "Remove code which is not thread-safe.",
        "user": {
            "login": "wschin",
            "id": 3524474,
            "node_id": "MDQ6VXNlcjM1MjQ0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3524474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wschin",
            "html_url": "https://github.com/wschin",
            "followers_url": "https://api.github.com/users/wschin/followers",
            "following_url": "https://api.github.com/users/wschin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wschin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wschin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wschin/subscriptions",
            "organizations_url": "https://api.github.com/users/wschin/orgs",
            "repos_url": "https://api.github.com/users/wschin/repos",
            "events_url": "https://api.github.com/users/wschin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wschin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-08T18:10:37Z",
        "updated_at": "2020-07-08T21:27:59Z",
        "closed_at": "2020-07-08T21:27:57Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4454",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4454",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4454.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4454.patch",
            "merged_at": "2020-07-08T21:27:57Z"
        },
        "body": "Because of acync access to the memory logger when using parallel executor,\r\nORT crashes sometime. This PR just removes memory logger, which should be replaced with a thread-safe map.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4454/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4455",
        "id": 653527365,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDI5MDM3",
        "number": 4455,
        "title": "Fix avx2 load 32 bytes buffer overrun.",
        "user": {
            "login": "zhanghuanrong",
            "id": 5163183,
            "node_id": "MDQ6VXNlcjUxNjMxODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5163183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhanghuanrong",
            "html_url": "https://github.com/zhanghuanrong",
            "followers_url": "https://api.github.com/users/zhanghuanrong/followers",
            "following_url": "https://api.github.com/users/zhanghuanrong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhanghuanrong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhanghuanrong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhanghuanrong/subscriptions",
            "organizations_url": "https://api.github.com/users/zhanghuanrong/orgs",
            "repos_url": "https://api.github.com/users/zhanghuanrong/repos",
            "events_url": "https://api.github.com/users/zhanghuanrong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhanghuanrong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T19:04:20Z",
        "updated_at": "2020-07-09T22:54:33Z",
        "closed_at": "2020-07-09T22:54:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4455",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4455",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4455.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4455.patch",
            "merged_at": "2020-07-09T22:54:32Z"
        },
        "body": "",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4455/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4456",
        "id": 653553424,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDUwMTU5",
        "number": 4456,
        "title": "GPT-2 Attention Fusion without input mask",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T19:50:48Z",
        "updated_at": "2020-07-08T22:59:59Z",
        "closed_at": "2020-07-08T22:59:58Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4456",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4456",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4456.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4456.patch",
            "merged_at": "2020-07-08T22:59:58Z"
        },
        "body": "**Description**:\r\n\r\nInput mask is optional for Attention operator. This change allow GPT-2 Attention Fusion detect graph without input mask, and generate an Attention node without mask input.\r\n\r\nAdd two unit test cases: one has past input but no mask, one without past and mask inputs.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nSome user might not use attention mask in gpt2 model (For example, batch_size=1 does not need attention mask). This could help optimization for the senario.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4456/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4457",
        "id": 653553781,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDUwNDM5",
        "number": 4457,
        "title": "Add new api function At()",
        "user": {
            "login": "jgbradley1",
            "id": 654554,
            "node_id": "MDQ6VXNlcjY1NDU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgbradley1",
            "html_url": "https://github.com/jgbradley1",
            "followers_url": "https://api.github.com/users/jgbradley1/followers",
            "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
            "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
            "repos_url": "https://api.github.com/users/jgbradley1/repos",
            "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "RyanUnderhill",
            "id": 38674843,
            "node_id": "MDQ6VXNlcjM4Njc0ODQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38674843?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RyanUnderhill",
            "html_url": "https://github.com/RyanUnderhill",
            "followers_url": "https://api.github.com/users/RyanUnderhill/followers",
            "following_url": "https://api.github.com/users/RyanUnderhill/following{/other_user}",
            "gists_url": "https://api.github.com/users/RyanUnderhill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RyanUnderhill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RyanUnderhill/subscriptions",
            "organizations_url": "https://api.github.com/users/RyanUnderhill/orgs",
            "repos_url": "https://api.github.com/users/RyanUnderhill/repos",
            "events_url": "https://api.github.com/users/RyanUnderhill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RyanUnderhill/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "RyanUnderhill",
                "id": 38674843,
                "node_id": "MDQ6VXNlcjM4Njc0ODQz",
                "avatar_url": "https://avatars.githubusercontent.com/u/38674843?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RyanUnderhill",
                "html_url": "https://github.com/RyanUnderhill",
                "followers_url": "https://api.github.com/users/RyanUnderhill/followers",
                "following_url": "https://api.github.com/users/RyanUnderhill/following{/other_user}",
                "gists_url": "https://api.github.com/users/RyanUnderhill/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RyanUnderhill/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RyanUnderhill/subscriptions",
                "organizations_url": "https://api.github.com/users/RyanUnderhill/orgs",
                "repos_url": "https://api.github.com/users/RyanUnderhill/repos",
                "events_url": "https://api.github.com/users/RyanUnderhill/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RyanUnderhill/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 33,
        "created_at": "2020-07-08T19:51:26Z",
        "updated_at": "2020-08-17T21:11:16Z",
        "closed_at": "2020-08-12T01:34:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4457",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4457",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4457.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4457.patch",
            "merged_at": "2020-08-12T01:34:04Z"
        },
        "body": "**Description**:\r\nThis will give C/C++ API users the ability to easily write unit tests and verify that data is mapped correctly to an Ort Tensor. It is currently difficult to verify whether or not the exact data blob being passing into an onnx model from another library (for example OpenCV) is actually passed in correctly.\r\n\r\nMotivation for the `At()` name comes from the OpenCV library which provides a [similar functionality](https://docs.opencv.org/trunk/d3/d63/classcv_1_1Mat.html).\r\n\r\n**Motivation and Context**\r\n- Closes #4422 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4458",
        "id": 653637064,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTE4MDc1",
        "number": 4458,
        "title": "Add quantization tool to python package",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T22:31:17Z",
        "updated_at": "2020-07-09T04:42:55Z",
        "closed_at": "2020-07-09T04:42:54Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4458",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4458",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4458.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4458.patch",
            "merged_at": "2020-07-09T04:42:54Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4458/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4459",
        "id": 653643744,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTIzNTI2",
        "number": 4459,
        "title": "Fix condition of running tests in win CI",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-08T22:49:25Z",
        "updated_at": "2020-07-16T23:33:32Z",
        "closed_at": "2020-07-16T23:33:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4459",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4459",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4459.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4459.patch",
            "merged_at": "2020-07-16T23:33:31Z"
        },
        "body": "**Description**:\r\n\r\nCurrently, if `BuildCSharp` is set to false, the tests ('Run tests') will not run. This is not the expected behavior and should be fixed.\r\n\r\nThis change fixes this issue introduced in previous change: https://github.com/microsoft/onnxruntime/commit/647a8865871d0860bfea9564567dc0ae183a96f4#diff-2b5432276603f2e45b4e2aa626c57758R149",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4460",
        "id": 653651973,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTMwMjY0",
        "number": 4460,
        "title": "Constexpr CreateFeatureValueFromInspectable",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-08T23:12:09Z",
        "updated_at": "2020-07-24T20:08:16Z",
        "closed_at": "2020-07-24T20:08:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4460",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4460",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4460.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4460.patch",
            "merged_at": "2020-07-24T20:08:15Z"
        },
        "body": "**Description**: Easy saving of ~4KB by making the array at compile time",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4460/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4461",
        "id": 653653167,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTMxMTcy",
        "number": 4461,
        "title": "Update Git submodule cgmanifest.json.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-08T23:15:16Z",
        "updated_at": "2020-07-09T02:24:06Z",
        "closed_at": "2020-07-09T02:24:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4461",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4461",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4461.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4461.patch",
            "merged_at": "2020-07-09T02:24:05Z"
        },
        "body": "**Description**\r\nSync submodule cgmanifest.json.\r\n\r\n**Motivation and Context**\r\nKeep the submodule cgmanifest.json file up to date.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4461/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4462",
        "id": 653674552,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTQ4NjY5",
        "number": 4462,
        "title": "Fix Nuget GPU pipeline",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T00:21:41Z",
        "updated_at": "2020-07-10T21:02:30Z",
        "closed_at": "2020-07-10T21:02:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4462",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4462",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4462.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4462.patch",
            "merged_at": "2020-07-10T21:02:29Z"
        },
        "body": "**Description**: \r\n\r\n1) Fix Nuget GPU pipeline failure caused because of changes in #4439 \r\n2) Keep Python IOBinding feature covered by tests\r\n\r\n**Motivation and Context**\r\nRelease readiness",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4462/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4463",
        "id": 653725649,
        "node_id": "MDU6SXNzdWU2NTM3MjU2NDk=",
        "number": 4463,
        "title": "onnxruntime_test_all --gtest_filter=ActivationOpTest.Relu fails, cross-compile onnxruntime v1.3.1 against ACL v19.08",
        "user": {
            "login": "dhunt-ambarella",
            "id": 67397170,
            "node_id": "MDQ6VXNlcjY3Mzk3MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67397170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhunt-ambarella",
            "html_url": "https://github.com/dhunt-ambarella",
            "followers_url": "https://api.github.com/users/dhunt-ambarella/followers",
            "following_url": "https://api.github.com/users/dhunt-ambarella/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhunt-ambarella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhunt-ambarella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhunt-ambarella/subscriptions",
            "organizations_url": "https://api.github.com/users/dhunt-ambarella/orgs",
            "repos_url": "https://api.github.com/users/dhunt-ambarella/repos",
            "events_url": "https://api.github.com/users/dhunt-ambarella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhunt-ambarella/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2192943459,
                "node_id": "MDU6TGFiZWwyMTkyOTQzNDU5",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:ACL",
                "name": "ep:ACL",
                "color": "0052CC",
                "default": false,
                "description": "issues related to ACL execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "prabhat00155",
            "id": 7043157,
            "node_id": "MDQ6VXNlcjcwNDMxNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhat00155",
            "html_url": "https://github.com/prabhat00155",
            "followers_url": "https://api.github.com/users/prabhat00155/followers",
            "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
            "repos_url": "https://api.github.com/users/prabhat00155/repos",
            "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "prabhat00155",
                "id": 7043157,
                "node_id": "MDQ6VXNlcjcwNDMxNTc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/prabhat00155",
                "html_url": "https://github.com/prabhat00155",
                "followers_url": "https://api.github.com/users/prabhat00155/followers",
                "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
                "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
                "repos_url": "https://api.github.com/users/prabhat00155/repos",
                "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
                "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-07-09T03:04:17Z",
        "updated_at": "2020-09-14T18:58:44Z",
        "closed_at": "2020-09-14T18:58:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Note: Google Test filter = ActivationOpTest.Relu\r\n [==========] Running 1 test from 1 test suite.\r\n [----------] Global test environment set-up.\r\n [----------] 1 test from ActivationOpTest\r\n [ RUN      ] ActivationOpTest.Relu\r\n free(): invalid pointer\r\n Aborted (core dumped)\r\n\r\nAll tests preceding this test (hundreds) are OK.  Some tests after fail also.\r\n\r\nAlso, but possibly not related:\r\n# onnxruntime_perf_test -e acl testdata/squeezenet/model.onnx result.csv\r\n free(): invalid pointer\r\n Aborted (core dumped)\r\n #\r\n\r\nonnxruntime v1.3.1 cross compiled with linaro-gcc8.2.\r\n\r\nIn onnxruntime, I changed these files:\r\n\r\nonnxruntime/core/providers/acl/acl_execution_provider.cc\r\n\r\nonnxruntime/core/providers/acl/acl_common.cc\r\n\r\nonnxruntime/core/providers/acl/nn/conv.cc\r\n\r\n \r\n\r\nIn onnxruntime/core/providers/acl/acl_execution_provider.cc, pretend to use the return value from Register():\r\n\r\n \r\n\r\n+  Status ret_val;\r\n +\r\n +  ret_val =\r\n    kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 6, Relu)>());\r\n +  ret_val =\r\n    kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 7, 9, Gemm)>());\r\n\r\n \r\n\r\nIn onnxruntime/core/providers/acl/acl_common.cc, fixed an unused-variable warning:\r\n\r\n \r\n\r\n--- a/onnxruntime/core/providers/acl/acl_common.cc\r\n +++ b/onnxruntime/core/providers/acl/acl_common.cc\r\n @@ -70,7 +70,8 @@ void importDataFromTensor(arm_compute::Tensor* tensor, T* data){\r\n    // copy input tensor into the larger buffer\r\n    arm_compute::execute_window_loop(\r\n        aclInpuWindow,\r\n -      [&](const arm_compute::Coordinates& co) {\r\n +//      [&](const arm_compute::Coordinates& co) {\r\n +      [&](const arm_compute::Coordinates&) {\r\n\r\n \r\n\r\nIn onnxruntime/core/providers/acl/nn/conv.cc, fixed 'used uninitialized' error:\r\n\r\n \r\n\r\n-  arm_compute::ActivationLayerInfo::ActivationFunction acl_activ_func;\r\n +  arm_compute::ActivationLayerInfo::ActivationFunction acl_activ_func = arm_compute::ActivationLayerInfo::ActivationFunction::RELU;\r\n\r\n \r\n\r\n \r\n\r\nAlso, to compile and link, there were changes to my environment.\r\n\r\n \r\n\r\nIn .bashrc, I added ACL include files to CPATH:\r\n\r\nexport ACL_VER=\"19.08\"\r\n\r\nexport CPATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/include:/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux:$CPATH\"\r\n\r\nAnd for linking, I added this to environment:\r\n\r\nexport LD_RUN_PATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/lib/linux-arm64-v8a-neon/\"\r\n export LD_LIBRARY_PATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/lib/linux-arm64-v8a-neon/\"\r\n\r\n \r\n\r\nI provided soft links to the ACL libraries so onnxruntime could find them.\r\n\r\n \r\n\r\ndhunt@ubu-sw4:/dump/dump201/dhunt/onnxruntime$ ln -s /dump/dump201/dhunt/arm_compute-v19.08-bin-linux/lib/linux-arm64-v8a-neon/libarm_compute.so libarm_compute.so\r\n\r\ndhunt@ubu-sw4:/dump/dump201/dhunt/onnxruntime$ ln -s /dump/dump201/dhunt/arm_compute-v19.08-bin-linux/lib/linux-arm64-v8a-neon/libarm_compute_core.so libarm_compute_core.so\r\n\r\ndhunt@ubu-sw4:/dump/dump201/dhunt/onnxruntime$ ln -s /dump/dump201/dhunt/arm_compute-v19.08-bin-linux/lib/linux-arm64-v8a-neon/libarm_compute_graph.so libarm_compute_graph.so\r\n\r\n \r\n\r\nI used this cmake command, and 'make -j 6' to build:\r\n\r\ncmake -DCMAKE_TOOLCHAIN_FILE=/dump/dump201/dhunt/tool.cmake -Donnxruntime_CROSS_COMPILING=ON -Donnxruntime_RUN_ONNX_TESTS=OFF -Donnxruntime_DEV_MODE=ON -DPYTHON_EXECUTABLE=/opt/amba/cv2_third/tv2/exe/python3 -Donnxruntime_USE_CUDA=OFF -Donnxruntime_USE_NSYNC=OFF -Donnxruntime_CUDNN_HOME= -Donnxruntime_USE_JEMALLOC=OFF -Donnxruntime_ENABLE_PYTHON=OFF -Donnxruntime_BUILD_CSHARP=OFF -Donnxruntime_BUILD_SHARED_LIB=ON -Donnxruntime_USE_EIGEN_FOR_BLAS=ON -Donnxruntime_USE_OPENBLAS=OFF -Donnxruntime_USE_DNNL=OFF -Donnxruntime_USE_MKLML=OFF -Donnxruntime_USE_OPENMP=ON -Donnxruntime_USE_TVM=OFF -Donnxruntime_USE_LLVM=OFF -Donnxruntime_ENABLE_MICROSOFT_INTERNAL=OFF -Donnxruntime_USE_BRAINSLICE=OFF -Donnxruntime_USE_NUPHAR=OFF -Donnxruntime_USE_EIGEN_THREADPOOL=OFF -Donnxruntime_BUILD_UNIT_TESTS=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dprotobuf_WITH_ZLIB=OFF -DONNX_CUSTOM_PROTOC_EXECUTABLE=/dump/dump201/dhunt/protoc_3.11.3/bin/protoc -DCMAKE_VERBOSE_MAKEFILE=ON -Donnxruntime_USE_ACL=ON -Donnxruntime_USE_ACL_1902=OFF -Donnxruntime_USE_ACL_1905=OFF -Donnxruntime_USE_ACL_1908=ON -Donnxruntime_USE_ACL_2005=OFF cmake\r\n\r\n \r\n\r\ncat tool.cmake\r\n\r\n    SET(CMAKE_SYSTEM_NAME Linux)\r\n     SET(CMAKE_SYSTEM_VERSION 1)\r\n     SET(CMAKE_C_COMPILER /usr/local/linaro-aarch64-2018.08-gcc8.2/bin/aarch64-linux-gnu-gcc)\r\n     SET(CMAKE_CXX_COMPILER /usr/local/linaro-aarch64-2018.08-gcc8.2/bin/aarch64-linux-gnu-g++)\r\n\r\n \r\n\r\n \r\n\r\nAfter all that, the compile and link succeed.\r\n\r\n \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4463/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4464",
        "id": 653742900,
        "node_id": "MDU6SXNzdWU2NTM3NDI5MDA=",
        "number": 4464,
        "title": "Direct GPU Inference",
        "user": {
            "login": "solarflarefx",
            "id": 45402633,
            "node_id": "MDQ6VXNlcjQ1NDAyNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45402633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solarflarefx",
            "html_url": "https://github.com/solarflarefx",
            "followers_url": "https://api.github.com/users/solarflarefx/followers",
            "following_url": "https://api.github.com/users/solarflarefx/following{/other_user}",
            "gists_url": "https://api.github.com/users/solarflarefx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solarflarefx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solarflarefx/subscriptions",
            "organizations_url": "https://api.github.com/users/solarflarefx/orgs",
            "repos_url": "https://api.github.com/users/solarflarefx/repos",
            "events_url": "https://api.github.com/users/solarflarefx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solarflarefx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-09T03:55:40Z",
        "updated_at": "2020-11-16T03:48:06Z",
        "closed_at": "2020-11-16T03:48:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "So it seems that the latest release of OnnxRuntime has the capability of direct GPU inference (meaning that if the tensors are already in the GPU then they do not need to be copied to the CPU and then passed back into the GPU but can instead be passed into the model directly from the GPU).\r\n\r\nMy question is which APIs have this capability?  It appears that the Python API has it, but do any of the other APIs have it as well?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4464/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4465",
        "id": 653755616,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjExMjQ4",
        "number": 4465,
        "title": "Update Convergence Baseline for github-onnxruntime-linux-gpu-training-e2e-tests",
        "user": {
            "login": "er3x3",
            "id": 11661208,
            "node_id": "MDQ6VXNlcjExNjYxMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/er3x3",
            "html_url": "https://github.com/er3x3",
            "followers_url": "https://api.github.com/users/er3x3/followers",
            "following_url": "https://api.github.com/users/er3x3/following{/other_user}",
            "gists_url": "https://api.github.com/users/er3x3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/er3x3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/er3x3/subscriptions",
            "organizations_url": "https://api.github.com/users/er3x3/orgs",
            "repos_url": "https://api.github.com/users/er3x3/repos",
            "events_url": "https://api.github.com/users/er3x3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/er3x3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T04:34:30Z",
        "updated_at": "2020-07-09T07:29:38Z",
        "closed_at": "2020-07-09T07:29:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4465",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4465",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4465.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4465.patch",
            "merged_at": "2020-07-09T07:29:37Z"
        },
        "body": "**Description**: Update Convergence Baseline for github-onnxruntime-linux-gpu-training-e2e-tests as the FP32 loss scale fix generates different loss numbers.\r\n\r\n**Motivation and Context**\r\n- The FP32 loss scale fix is to use FP32 for loss_scale calculation while before that the loss scale will be casted to FP16 before timing loss. FP16 is <65504 while our initial loss_scale value is 1<<16=65536, which means the number timing to loss and the number passed to optimizer are different. I tried passing loss_scale from the frontend as parameter, before the fix, if using 65536, the loss curve just didn't reducing at all, while it works fine when using a smaller number such as 1024. With the fix, no matter what number to use, we can get consistent loss curve. Below are some test results for comparison.\r\n\r\nBefore fix, dynamic loss scaler, init value is 65536:\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2422,10.5228,0.717476\r\n5,10.1875,7.75453,2.43238\r\n10,8.42578,7.63755,0.792425\r\n15,8.35156,7.60502,0.744699\r\n20,8.22656,7.4854,0.749099\r\n25,8.29688,7.56207,0.73899\r\n30,8.125,7.40926,0.716592\r\n35,7.99219,7.26281,0.726583\r\n40,7.94531,7.26573,0.679934\r\n45,7.94141,7.27335,0.668663\r\n\r\nAfter fix, dynamic loss scaler, init value is 65536:\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2403,10.5228,0.717444\r\n5,9.67238,7.51595,2.15643\r\n10,8.27554,7.56897,0.706572\r\n15,8.26999,7.55625,0.71374\r\n20,8.16621,7.4605,0.70571\r\n25,8.2243,7.53056,0.693737\r\n30,8.07708,7.38574,0.691342\r\n35,7.96605,7.25034,0.715708\r\n40,7.94507,7.2564,0.688668\r\n45,7.92962,7.26224,0.667383\r\n\r\nBefore fix, fixed loss scale = 65536\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2422,10.5229,0.717479\r\n5,11.2109,10.4883,0.725145\r\n10,11.2266,10.5205,0.699967\r\n15,11.1719,10.4668,0.701468\r\n20,11.2109,10.5031,0.71233\r\n25,11.1953,10.4858,0.711551\r\n30,11.2031,10.4962,0.702751\r\n35,11.2422,10.5054,0.733334\r\n40,11.25,10.5118,0.73202\r\n45,11.2109,10.4865,0.724446\r\n\r\nAfter fix, fixed loss scale = 65536\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2403,10.5228,0.717444\r\n5,9.6722,7.51595,2.15625\r\n10,8.27545,7.56892,0.706533\r\n15,8.27002,7.55626,0.713755\r\n20,8.16617,7.46048,0.705697\r\n25,8.22435,7.53055,0.693796\r\n30,8.07706,7.3857,0.691354\r\n35,7.96593,7.25026,0.715675\r\n40,7.94511,7.25639,0.688721\r\n45,7.92963,7.26226,0.667372\r\n\r\nBefore fix, fixed loss scale = 1024\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2422,10.5229,0.717479\r\n5,9.67188,7.51594,2.15556\r\n10,8.27344,7.56891,0.706516\r\n15,8.26562,7.55626,0.713709\r\n20,8.16406,7.46044,0.705734\r\n25,8.22656,7.53047,0.693739\r\n30,8.07812,7.38566,0.691267\r\n35,7.96484,7.25025,0.715929\r\n40,7.94531,7.25627,0.688704\r\n45,7.92969,7.26225,0.667403\r\n\r\nAfter fix, fixed loss scale = 1024\r\nstep,total_loss,mlm_loss,nsp_loss\r\n0,11.2403,10.5228,0.717444\r\n5,9.67239,7.51593,2.15646\r\n10,8.27551,7.56894,0.706573\r\n15,8.26996,7.55628,0.713679\r\n20,8.16623,7.4605,0.705729\r\n25,8.22414,7.53043,0.693709\r\n30,8.07699,7.38571,0.691282\r\n35,7.96615,7.25021,0.715936\r\n40,7.94493,7.25626,0.688668\r\n45,7.92965,7.26224,0.667409\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4465/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4466",
        "id": 654194887,
        "node_id": "MDU6SXNzdWU2NTQxOTQ4ODc=",
        "number": 4466,
        "title": "Running models with dynamic output shapes (C++)",
        "user": {
            "login": "tna0y",
            "id": 22504374,
            "node_id": "MDQ6VXNlcjIyNTA0Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22504374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tna0y",
            "html_url": "https://github.com/tna0y",
            "followers_url": "https://api.github.com/users/tna0y/followers",
            "following_url": "https://api.github.com/users/tna0y/following{/other_user}",
            "gists_url": "https://api.github.com/users/tna0y/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tna0y/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tna0y/subscriptions",
            "organizations_url": "https://api.github.com/users/tna0y/orgs",
            "repos_url": "https://api.github.com/users/tna0y/repos",
            "events_url": "https://api.github.com/users/tna0y/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tna0y/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-09T16:29:48Z",
        "updated_at": "2022-09-27T12:19:41Z",
        "closed_at": "2020-07-09T19:56:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a model which accepts and returns tensors with dynamic axes (variable input/output shape).\r\n\r\nI run models via C++ onnxruntime SDK. The problem is that according to all examples and docs I managed to find you have to preallocate input and output tensors. While input tensors are fine it is still unclear how do you preallocate output tensors if their shape is unknown. \r\n\r\nBelow is an example how I run models. It lacks a few details but they should be deductible. Note that output tensors are already allocated. \r\n```c++\r\ntemplate<typename T>\r\nstd::vector<std::unique_ptr<Tensor>>\r\n        run(std::vector<std::unique_ptr<Tensor>> input, std::vector<std::unique_ptr<Tensor>> output) {\r\n        \r\n        auto memory_info = Ort::MemoryInfo::CreateCpu(OrtArenaAllocator, OrtMemTypeDefault);\r\n\r\n        // setup inputs\r\n     \r\n        std::vector<const char*> input_names(input.size());\r\n        \r\n        std::vector<Ort::Value> input_tensors;\r\n        input_tensors.reserve(input.size());\r\n\r\n        for (uint32_t i = 0; i < input.size(); ++i) {\r\n            input_names[i] = this->session->GetInputName(i, Ort::AllocatorWithDefaultOptions());\r\n            input_tensors.push_back(\r\n                    Ort::Value::CreateTensor<T>(\r\n                            memory_info,\r\n                            reinterpret_cast<T*>(const_cast<char*>(input[i]->Ptr())),\r\n                            input[i]->Size(),\r\n                            this->meta->InputShape[i].data(),\r\n                            this->meta->InputShape[i].size())\r\n                    );\r\n        }\r\n\r\n        std::vector<const char*> output_names(output.size());\r\n\r\n        std::vector<Ort::Value> output_tensors;\r\n        output_tensors.reserve(output.size());\r\n\r\n        for (uint32_t i = 0; i < output.size(); ++i) {\r\n            output_names[i] = this->session->GetOutputName(i, Ort::AllocatorWithDefaultOptions());\r\n            output_tensors.push_back(\r\n                    Ort::Value::CreateTensor<T>(\r\n                            memory_info,\r\n                            reinterpret_cast<T*>(const_cast<char*>(output[i]->Ptr())),\r\n                            output[i]->Size(),\r\n                            this->meta->OutputShape[i].data(),\r\n                            this->meta->OutputShape[i].size())\r\n            );\r\n        }\r\n\r\n        Ort::RunOptions run_options;\r\n        // run_options.SetRunLogSeverityLevel(0);\r\n\r\n        this->session->Run(run_options,\r\n                input_names.data(), input_tensors.data(), input_tensors.size(),\r\n                output_names.data(), output_tensors.data(), output_tensors.size());\r\n\r\n        return std::move(output);\r\n}\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4466/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4467",
        "id": 654207552,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTc4OTI2",
        "number": 4467,
        "title": "Fix segmentation fault caused by invalid tensor type",
        "user": {
            "login": "prabhat00155",
            "id": 7043157,
            "node_id": "MDQ6VXNlcjcwNDMxNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhat00155",
            "html_url": "https://github.com/prabhat00155",
            "followers_url": "https://api.github.com/users/prabhat00155/followers",
            "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
            "repos_url": "https://api.github.com/users/prabhat00155/repos",
            "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T16:51:20Z",
        "updated_at": "2020-07-10T10:23:17Z",
        "closed_at": "2020-07-10T10:23:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4467",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4467",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4467.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4467.patch",
            "merged_at": "2020-07-10T10:23:14Z"
        },
        "body": "**Description**: This would fix segmentation fault caused by models(invalid) having nodes(that need input) with no inputs.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve? Explained above in description.\r\n- If it fixes an open issue, please link to the issue here. https://github.com/microsoft/onnxruntime/issues/4349\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4467/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4468",
        "id": 654254415,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDE3MTg1",
        "number": 4468,
        "title": "Apply security options in debug builds only",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-07-09T18:13:40Z",
        "updated_at": "2020-07-10T17:27:56Z",
        "closed_at": "2020-07-10T17:27:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4468",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4468",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4468.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4468.patch",
            "merged_at": null
        },
        "body": "**Description**: Apply /sdl and /GS security options in debug builds only.\r\n\r\nThese add many runtime checks (see https://docs.microsoft.com/en-us/cpp/build/reference/gs-buffer-security-check?view=vs-2019 and https://docs.microsoft.com/en-us/cpp/build/reference/sdl-enable-additional-security-checks?view=vs-2019 - they add some stack protection from buffer overflows, initialization of member pointers to null, setting pointers to null on destruction, and so on). They add a decent amount of bloat to the executable (201KB in my Release build).\r\n\r\nI'm suggesting their removal from Release builds as part of the effort to reduce binary size. Let me know if we have any security requirements that disallow the removal of those.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4468/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4469",
        "id": 654262001,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDIzMzU0",
        "number": 4469,
        "title": "Only quantize gather with initializer",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T18:26:39Z",
        "updated_at": "2020-07-09T20:33:45Z",
        "closed_at": "2020-07-09T20:33:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4469",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4469",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4469.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4469.patch",
            "merged_at": "2020-07-09T20:33:44Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4469/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4470",
        "id": 654273459,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDMyNjc4",
        "number": 4470,
        "title": "fix xcode alerts",
        "user": {
            "login": "RandySheriffH",
            "id": 48490400,
            "node_id": "MDQ6VXNlcjQ4NDkwNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48490400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RandySheriffH",
            "html_url": "https://github.com/RandySheriffH",
            "followers_url": "https://api.github.com/users/RandySheriffH/followers",
            "following_url": "https://api.github.com/users/RandySheriffH/following{/other_user}",
            "gists_url": "https://api.github.com/users/RandySheriffH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RandySheriffH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RandySheriffH/subscriptions",
            "organizations_url": "https://api.github.com/users/RandySheriffH/orgs",
            "repos_url": "https://api.github.com/users/RandySheriffH/repos",
            "events_url": "https://api.github.com/users/RandySheriffH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RandySheriffH/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T18:46:55Z",
        "updated_at": "2020-07-16T17:20:37Z",
        "closed_at": "2020-07-16T17:20:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4470",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4470",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4470.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4470.patch",
            "merged_at": "2020-07-16T17:20:35Z"
        },
        "body": "Fix alerts from xcode --analyze.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4470/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4471",
        "id": 654345126,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDkxNjE0",
        "number": 4471,
        "title": "Handle multiple embed nodes in transformer optimizer",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1974915201,
                "node_id": "MDU6TGFiZWwxOTc0OTE1MjAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/model:transformer",
                "name": "model:transformer",
                "color": "4EF6CD",
                "default": false,
                "description": "issues related to a transformer model: BERT, GPT2, Hugging Face, Longformer, T5, etc."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-09T21:01:07Z",
        "updated_at": "2020-07-10T22:28:29Z",
        "closed_at": "2020-07-10T22:28:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4471",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4471",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4471.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4471.patch",
            "merged_at": "2020-07-10T22:28:28Z"
        },
        "body": "**Description**: Describe your changes.\r\n(1) Update fusion of embed layer to handle multiple embed nodes. Remove assumption that a model has only one EmbedLayerNormalization node.\r\n(2) Fix temp model path in optimizer. Add a check that whether temp path is used.\r\n(3) Add unit test for gpt2 fusion with past state and mask.\r\n(4) Add unit test for change input to int32\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nSome models from customer have multiple embed nodes. Current optimizer will throw assert exception (since we assumed there is only one embed per graph). This change make optimizer works on such model by removing such assumption.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4472",
        "id": 654358723,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTAyNjA5",
        "number": 4472,
        "title": "(WIP) Liqun/nuphar shape infer",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-09T21:27:44Z",
        "updated_at": "2023-03-22T21:42:51Z",
        "closed_at": "2020-09-20T04:39:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4472",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4472",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4472.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4472.patch",
            "merged_at": null
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4472/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4473",
        "id": 654391067,
        "node_id": "MDU6SXNzdWU2NTQzOTEwNjc=",
        "number": 4473,
        "title": "Support for ACL v20.05",
        "user": {
            "login": "dhunt-ambarella",
            "id": 67397170,
            "node_id": "MDQ6VXNlcjY3Mzk3MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67397170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhunt-ambarella",
            "html_url": "https://github.com/dhunt-ambarella",
            "followers_url": "https://api.github.com/users/dhunt-ambarella/followers",
            "following_url": "https://api.github.com/users/dhunt-ambarella/following{/other_user}",
            "gists_url": "https://api.github.com/users/dhunt-ambarella/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dhunt-ambarella/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dhunt-ambarella/subscriptions",
            "organizations_url": "https://api.github.com/users/dhunt-ambarella/orgs",
            "repos_url": "https://api.github.com/users/dhunt-ambarella/repos",
            "events_url": "https://api.github.com/users/dhunt-ambarella/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dhunt-ambarella/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            },
            {
                "id": 2192943459,
                "node_id": "MDU6TGFiZWwyMTkyOTQzNDU5",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:ACL",
                "name": "ep:ACL",
                "color": "0052CC",
                "default": false,
                "description": "issues related to ACL execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2020-07-09T22:41:33Z",
        "updated_at": "2020-09-14T19:00:41Z",
        "closed_at": "2020-09-14T19:00:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to use the newest ACL library, v20.05, but I have been solving compile issues, which means I am making source changes in onnxruntime.  I would prefer not to make source changes.  I would prefer that somebody else does that.  :-)\r\n\r\nFarther below is the make error reported to console.  Basically, in onnxruntime/core/providers/acl/nn/pool.cc:\r\n arm_compute::PoolingLayerInfo(pool_type));\r\nneeds another parameter:\r\n arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, arm_compute::DataLayout)\r\n\r\nI need help with that, but again, I prefer the changes are made and made available by someone more qualified than I.\r\n\r\nI pulled onnxruntime v1.3.1 today, 07/09/2020.\r\ngit clone --single-branch --recursive --branch master https://github.com/Microsoft/onnxruntime\r\n\r\nI made no source changes to ACL v20.05.\r\n\r\nAdded to my bash environment in .bashrc:\r\necho ACL_VER=$ACL_VER\r\nalias goonnx='cd /dump/dump201/dhunt/onnxruntime'\r\nalias goacl=\"cd /dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux\"\r\nexport PATH=\"/dump/dump201/dhunt/cmake-3.17.3/bin:$PATH\"\r\nexport CPATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/include:/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux:$CPATH\"\r\nexport LD_RUN_PATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/lib/linux-arm64-v8a-neon/\"\r\nexport LD_LIBRARY_PATH=\"/dump/dump201/dhunt/arm_compute-v${ACL_VER}-bin-linux/lib/linux-arm64-v8a-neon/\"\r\n\r\n\r\nFollowing are:\r\n-my cmake command\r\n-a list of source changes in onnxruntime to get where I am\r\n-the error report to console from the 'make -j 6'\r\n\r\nHere is my cmake command (note that I added onnxruntime_USE_ACL_2005 to cmake/CMakeLists.txt):\r\ncmake -DCMAKE_TOOLCHAIN_FILE=/dump/dump201/dhunt/tool.cmake -Donnxruntime_CROSS_COMPILING=ON -Donnxruntime_RUN_ONNX_TESTS=OFF -Donnxruntime_DEV_MODE=ON -DPYTHON_EXECUTABLE=/opt/amba/cv2_third/tv2/exe/python3 -Donnxruntime_USE_CUDA=OFF -Donnxruntime_USE_NSYNC=OFF -Donnxruntime_CUDNN_HOME= -Donnxruntime_USE_JEMALLOC=OFF -Donnxruntime_ENABLE_PYTHON=OFF -Donnxruntime_BUILD_CSHARP=OFF -Donnxruntime_BUILD_SHARED_LIB=ON -Donnxruntime_USE_EIGEN_FOR_BLAS=ON -Donnxruntime_USE_OPENBLAS=OFF -Donnxruntime_USE_DNNL=OFF -Donnxruntime_USE_MKLML=OFF -Donnxruntime_USE_OPENMP=ON -Donnxruntime_USE_TVM=OFF -Donnxruntime_USE_LLVM=OFF -Donnxruntime_ENABLE_MICROSOFT_INTERNAL=OFF -Donnxruntime_USE_BRAINSLICE=OFF -Donnxruntime_USE_NUPHAR=OFF -Donnxruntime_USE_EIGEN_THREADPOOL=OFF -Donnxruntime_BUILD_UNIT_TESTS=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dprotobuf_WITH_ZLIB=OFF -DONNX_CUSTOM_PROTOC_EXECUTABLE=/dump/dump201/dhunt/protoc_3.11.3/bin/protoc -DCMAKE_VERBOSE_MAKEFILE=ON -Donnxruntime_USE_ACL=ON -Donnxruntime_USE_ACL_1902=OFF -Donnxruntime_USE_ACL_1905=OFF -Donnxruntime_USE_ACL_1908=OFF -Donnxruntime_USE_ACL_2005=ON cmake\r\n\r\n\r\nI made these source changes to onnxruntime:\r\n\r\ndiff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt\r\nindex af70328..07e7822 100644\r\n--- a/cmake/CMakeLists.txt\r\n+++ b/cmake/CMakeLists.txt\r\n@@ -96,6 +96,7 @@ option(onnxruntime_USE_ACL \"Build with ACL support\" OFF)\r\n option(onnxruntime_USE_ACL_1902 \"Build with ACL version 1902 support\" OFF)\r\n option(onnxruntime_USE_ACL_1905 \"Build with ACL version 1905 support\" OFF)\r\n option(onnxruntime_USE_ACL_1908 \"Build with ACL version 1908 support\" OFF)\r\n+option(onnxruntime_USE_ACL_2005 \"Build with ACL version 2005 support\" OFF)\r\n option(onnxruntime_USE_ARMNN \"Build with ArmNN support\" OFF)\r\n option(onnxruntime_ARMNN_RELU_USE_CPU \"Use the CPU implementation for the Relu operator for the ArmNN EP\" ON)\r\n option(onnxruntime_ENABLE_INSTRUMENT \"Enable Instrument with Event Tracing for Windows (ETW)\" OFF)\r\n@@ -534,7 +535,9 @@ endfunction()\r\n set(onnxruntime_EXTERNAL_DEPENDENCIES onnx_proto)\r\n\r\n # ACL\r\n-if (onnxruntime_USE_ACL OR onnxruntime_USE_ACL_1902 OR onnxruntime_USE_ACL_1905 OR onnxruntime_USE_ACL_1908)\r\n+if (onnxruntime_USE_ACL OR onnxruntime_USE_ACL_1902 OR\r\n+onnxruntime_USE_ACL_1905 OR onnxruntime_USE_ACL_1908 OR\r\n+onnxruntime_USE_ACL_2005)\r\n   set(onnxruntime_USE_ACL ON)\r\n   if(onnxruntime_USE_ACL_1902)\r\n     add_definitions(-DACL_1902=1)\r\n@@ -542,7 +545,11 @@ if (onnxruntime_USE_ACL OR onnxruntime_USE_ACL_1902 OR onnxruntime_USE_ACL_1905\r\n     if(onnxruntime_USE_ACL_1908)\r\n       add_definitions(-DACL_1908=1)\r\n     else()\r\n-      add_definitions(-DACL_1905=1)\r\n+      if(onnxruntime_USE_ACL_1905)\r\n+        add_definitions(-DACL_1905=1)\r\n+      else()\r\n+        add_definitions(-DACL_2005=1)\r\n+      endif()\r\n     endif()\r\n   endif()\r\n\r\ndiff --git a/onnxruntime/core/providers/acl/acl_execution_provider.cc b/onnxruntime/core/providers/acl/acl_execution_provider.cc\r\nindex 3e4655b..700c660 100644\r\n--- a/onnxruntime/core/providers/acl/acl_execution_provider.cc\r\n+++ b/onnxruntime/core/providers/acl/acl_execution_provider.cc\r\n@@ -43,30 +43,50 @@ class ONNX_OPERATOR_VERSIONED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDoma\r\n class ONNX_OPERATOR_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kMSDomain, 1, float, FusedConv);\r\n\r\n static void RegisterACLKernels(KernelRegistry& kernel_registry) {\r\n+  Status ret_val;\r\n+\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 6, Relu)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 7, 9, Gemm)>());\r\n\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 1, 9, float, MatMul)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 9, 9, int32_t, MatMul)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 9, 9, uint32_t, MatMul)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 9, 9, int64_t, MatMul)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 9, 9, uint64_t, MatMul)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 1, Conv)>());\r\n\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 7, 9, float, AveragePool)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 1, 7, float, MaxPool)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 8, 11, float, MaxPool)>());\r\n\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 1, 8, float, GlobalAveragePool)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 1, 8, float, GlobalMaxPool)>());\r\n\r\n   // Opset 10\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 10, 10, float, AveragePool)>());\r\n\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 7, 9, BatchNormalization)>());\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_VERSIONED_KERNEL_CLASS_NAME(kAclExecutionProvider, kOnnxDomain, 4, 10, Concat)>());\r\n\r\n+  ret_val =\r\n   kernel_registry.Register(BuildKernelCreateInfo<ONNX_OPERATOR_TYPED_KERNEL_CLASS_NAME(kAclExecutionProvider, kMSDomain, 1, float, FusedConv)>());\r\n }\r\n\r\ndiff --git a/onnxruntime/core/providers/acl/nn/conv.cc b/onnxruntime/core/providers/acl/nn/conv.cc\r\nindex 4fb119e..df7aa1b 100644\r\n--- a/onnxruntime/core/providers/acl/nn/conv.cc\r\n+++ b/onnxruntime/core/providers/acl/nn/conv.cc\r\n@@ -27,7 +27,7 @@\r\n #ifdef ACL_1902\r\n #include \"arm_compute/core/NEON/kernels/NEDepthwiseConvolutionLayer3x3Kernel.h\"\r\n #endif\r\n-#if defined(ACL_1905) || defined(ACL_1908)\r\n+#if defined(ACL_1905) || defined(ACL_1908) || defined(ACL_2005)\r\n #include \"arm_compute/runtime/NEON/functions/assembly/NEDepthwiseConvolutionAssemblyDispatch.h\"\r\n #endif\r\n\r\n@@ -107,7 +107,7 @@ Status Conv<T>::Compute(OpKernelContext* context) const {\r\n   Tensor* Y = context->Output(0, TensorShape(Y_dims));\r\n   LOGS_DEFAULT(VERBOSE) << \"Y \" << Y->Shape().ToString().c_str() << std::endl;\r\n\r\n-  arm_compute::ActivationLayerInfo::ActivationFunction acl_activ_func;\r\n+  arm_compute::ActivationLayerInfo::ActivationFunction acl_activ_func = arm_compute::ActivationLayerInfo::ActivationFunction::RELU;\r\n   bool acl_activ_enabled = false;\r\n\r\n   if (activation_type == \"Relu\") {\r\n@@ -198,7 +198,7 @@ Status Conv<T>::Compute(OpKernelContext* context) const {\r\n                                                                                                1 /* depth multiplier */,\r\n                                                                                                tconv.in->info()->data_layout());\r\n #endif\r\n-#if defined(ACL_1905) || defined(ACL_1908)\r\n+#if defined(ACL_1905) || defined(ACL_1908) || defined(ACL_2005)\r\n       bool optimizable =\r\n             arm_compute::NEDepthwiseConvolutionAssemblyDispatch::is_optimized_supported(tconv.in->info(),\r\n                                                                                         tconv.k->info(),\r\n@@ -214,12 +214,15 @@ Status Conv<T>::Compute(OpKernelContext* context) const {\r\n #ifdef ACL_1908\r\n         auto layer = std::make_shared<arm_compute::NEDepthwiseConvolutionLayerOptimized>();\r\n #endif\r\n+#ifdef ACL_2005\r\n+        auto layer = std::make_shared<arm_compute::NEDepthwiseConvolutionLayer>();\r\n+#endif\r\n #ifdef ACL_1902\r\n         layer->configure(tconv.in.get(), tconv.k.get(), (B != nullptr) ? tconv.b.get() : nullptr, tconv.out.get(),\r\n                          aclPadStride, 1 /* depth multiplier */,\r\n                          acl_activ_enabled ? arm_compute::ActivationLayerInfo(acl_activ_func, conv_attrs_.alpha) : arm_compute::ActivationLayerInfo());\r\n #endif\r\n-#if defined(ACL_1905) || defined(ACL_1908)\r\n+#if defined(ACL_1905) || defined(ACL_1908) || defined(ACL_2005)\r\n         layer->configure(tconv.in.get(), tconv.k.get(), (B != nullptr) ? tconv.b.get() : nullptr, tconv.out.get(),\r\n                          aclPadStride, 1 /* depth multiplier */,\r\n                          acl_activ_enabled ? arm_compute::ActivationLayerInfo(acl_activ_func, conv_attrs_.alpha) : arm_compute::ActivationLayerInfo(),\r\n\r\ndhunt@ubu-sw4:/dump/dump201/dhunt/onnxruntime$ diff onnxruntime/core/providers/acl/acl_common.cc ../onnxruntime_changes/\r\n73c73,74\r\n<       [&](const arm_compute::Coordinates& co) {\r\n---\r\n> //      [&](const arm_compute::Coordinates& co) {\r\n>       [&](const arm_compute::Coordinates&) {\r\n\r\n\r\n\r\nThe make error reported to console (that broke my spirit):\r\n\r\n[ 35%] Building CXX object CMakeFiles/onnxruntime_providers_acl.dir/onnxruntime/core/providers/acl/nn/pool.cc.o\r\n/usr/local/linaro-aarch64-2018.08-gcc8.2/bin/aarch64-linux-gnu-g++  -DACL_2005=1 -DEIGEN_MPL2_ONLY -DNSYNC_ATOMIC_CPP11 -DONNX_ML -DONNX_NAMESPACE=onnx -DONNX_USE_LITE_PROTO -DPLATFORM_POSIX -DUSE_ACL=1 -DUSE_EIGEN_FOR_BLAS -D__ONNX_NO_DOC_STRINGS -I/dump/dump201/dhunt/onnxruntime/include/onnxruntime -I/dump/dump201/dhunt/onnxruntime/include/onnxruntime/core/session -I/dump/dump201/dhunt/onnxruntime/cmake/external/SafeInt -I/dump/dump201/dhunt/onnxruntime/cmake/external/nsync/public -I/dump/dump201/dhunt/onnxruntime -I/dump/dump201/dhunt/onnxruntime/cmake/external/onnx -I/dump/dump201/dhunt/onnxruntime/cmake/external/protobuf/src -I/dump/dump201/dhunt/onnxruntime/onnx/.. -I/dump/dump201/dhunt/onnxruntime/onnxruntime -I/dump/dump201/dhunt/onnxruntime/cmake/external/eigen  -fopenmp -Wno-error=attributes -Dgsl_CONFIG_CONTRACT_VIOLATION_THROWS -Wall -Wextra -ffunction-sections -fdata-sections -Werror -Wno-parentheses -O2 -g -DNDEBUG -DGSL_UNENFORCED_ON_CONTRACT_VIOLATION -fPIC   -std=gnu++14 -o CMakeFiles/onnxruntime_providers_acl.dir/onnxruntime/core/providers/acl/nn/pool.cc.o -c /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc\r\n\r\n/dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc: In instantiation of ‘onnxruntime::acl::ACLNEPool onnxruntime::acl::PoolOperation(onnxruntime::OpKernelContext*, arm_compute::PoolingType, onnxruntime::PoolAttributes, onnxruntime::acl::PoolLayersIterator, bool) [with T = float; onnxruntime::acl::PoolLayersIterator = std::_Rb_tree_iterator<std::pair<onnxruntime::OpKernel* const, onnxruntime::acl::ACLNEPool> >]’:\r\n/dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:190:37:   required from ‘onnxruntime::common::Status onnxruntime::acl::MaxPoolV8<T>::Compute(onnxruntime::OpKernelContext*) const [with T = float]’\r\n/dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:174:8:   required from here\r\n/dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:64:70: error: no matching function for call to ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType&)’\r\n       layer->configure(tpool.in.get(), tpool.out.get(), arm_compute::PoolingLayerInfo(pool_type));\r\n                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/ITensorInfo.h:30,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/ITensor.h:27,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/runtime/Tensor.h:27,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.h:11,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:12:\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1255:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, arm_compute::DataLayout)’\r\n     explicit PoolingLayerInfo(PoolingType pool_type, DataLayout data_layout)\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1255:14: note:   candidate expects 2 arguments, 1 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1232:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, arm_compute::Size2D, arm_compute::DataLayout, arm_compute::PadStrideInfo, bool, bool)’\r\n     explicit PoolingLayerInfo(PoolingType   pool_type,\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1232:14: note:   candidate expects 6 arguments, 1 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1205:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, unsigned int, arm_compute::DataLayout, arm_compute::PadStrideInfo, bool, bool)’\r\n     explicit PoolingLayerInfo(PoolingType   pool_type,\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1205:14: note:   candidate expects 6 arguments, 1 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1184:5: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo()’\r\n     PoolingLayerInfo()\r\n     ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1184:5: note:   candidate expects 0 arguments, 1 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note: candidate: ‘constexpr arm_compute::PoolingLayerInfo::PoolingLayerInfo(const arm_compute::PoolingLayerInfo&)’\r\n struct PoolingLayerInfo\r\n        ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note:   no known conversion for argument 1 from ‘arm_compute::PoolingType’ to ‘const arm_compute::PoolingLayerInfo&’\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note: candidate: ‘constexpr arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingLayerInfo&&)’\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note:   no known conversion for argument 1 from ‘arm_compute::PoolingType’ to ‘arm_compute::PoolingLayerInfo&&’\r\n/dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:102:37: error: no matching function for call to ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType&, arm_compute::Size2D&, arm_compute::PadStrideInfo&, bool&)’\r\n       arm_compute::PoolingLayerInfo pool_info(pool_type, aclSize, aclPadStride, excludePadding);\r\n                                     ^~~~~~~~~\r\nIn file included from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/ITensorInfo.h:30,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/ITensor.h:27,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/runtime/Tensor.h:27,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.h:11,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:12:\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1255:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, arm_compute::DataLayout)’\r\n     explicit PoolingLayerInfo(PoolingType pool_type, DataLayout data_layout)\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1255:14: note:   candidate expects 2 arguments, 4 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1232:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, arm_compute::Size2D, arm_compute::DataLayout, arm_compute::PadStrideInfo, bool, bool)’\r\n     explicit PoolingLayerInfo(PoolingType   pool_type,\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1232:14: note:   no known conversion for argument 3 from ‘arm_compute::PadStrideInfo’ to ‘arm_compute::DataLayout’\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1205:14: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingType, unsigned int, arm_compute::DataLayout, arm_compute::PadStrideInfo, bool, bool)’\r\n     explicit PoolingLayerInfo(PoolingType   pool_type,\r\n              ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1205:14: note:   no known conversion for argument 2 from ‘arm_compute::Size2D’ to ‘unsigned int’\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1184:5: note: candidate: ‘arm_compute::PoolingLayerInfo::PoolingLayerInfo()’\r\n     PoolingLayerInfo()\r\n     ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1184:5: note:   candidate expects 0 arguments, 4 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note: candidate: ‘constexpr arm_compute::PoolingLayerInfo::PoolingLayerInfo(const arm_compute::PoolingLayerInfo&)’\r\n struct PoolingLayerInfo\r\n        ^~~~~~~~~~~~~~~~\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note:   candidate expects 1 argument, 4 provided\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note: candidate: ‘constexpr arm_compute::PoolingLayerInfo::PoolingLayerInfo(arm_compute::PoolingLayerInfo&&)’\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Types.h:1181:8: note:   candidate expects 1 argument, 4 provided\r\nIn file included from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Helpers.h:847,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/TensorInfo.h:31,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/runtime/ITensorAllocator.h:27,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/runtime/TensorAllocator.h:26,\r\n                 from /dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/runtime/Tensor.h:28,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.h:11,\r\n                 from /dump/dump201/dhunt/onnxruntime/onnxruntime/core/providers/acl/nn/pool.cc:12:\r\n/dump/dump201/dhunt/arm_compute-v20.05-bin-linux/arm_compute/core/Helpers.inl:123:13: error: ‘void arm_compute::execute_window_loop(const arm_compute::Window&, L&&, Ts&& ...) [with L = onnxruntime::acl::PoolOperation(onnxruntime::OpKernelContext*, arm_compute::PoolingType, onnxruntime::PoolAttributes, onnxruntime::acl::PoolLayersIterator, bool) [with T = float; onnxruntime::acl::PoolLayersIterator = std::_Rb_tree_iterator<std::pair<onnxruntime::OpKernel* const, onnxruntime::acl::ACLNEPool> >]::<lambda(const arm_compute::Coordinates&)>; Ts = {arm_compute::Iterator&}]’, declared using local type ‘onnxruntime::acl::PoolOperation(onnxruntime::OpKernelContext*, arm_compute::PoolingType, onnxruntime::PoolAttributes, onnxruntime::acl::PoolLayersIterator, bool) [with T = float; onnxruntime::acl::PoolLayersIterator = std::_Rb_tree_iterator<std::pair<onnxruntime::OpKernel* const, onnxruntime::acl::ACLNEPool> >]::<lambda(const arm_compute::Coordinates&)>’, is used but never defined [-fpermissive]\r\n inline void execute_window_loop(const Window &w, L &&lambda_function, Ts &&... iterators)\r\n             ^~~~~~~~~~~~~~~~~~~\r\nCMakeFiles/onnxruntime_providers_acl.dir/build.make:202: recipe for target 'CMakeFiles/onnxruntime_providers_acl.dir/onnxruntime/core/providers/acl/nn/pool.cc.o' failed\r\nmake[2]: *** [CMakeFiles/onnxruntime_providers_acl.dir/onnxruntime/core/providers/acl/nn/pool.cc.o] Error 1\r\nmake[2]: Leaving directory '/dump/dump201/dhunt/onnxruntime'\r\nCMakeFiles/Makefile2:391: recipe for target 'CMakeFiles/onnxruntime_providers_acl.dir/all' failed\r\nmake[1]: *** [CMakeFiles/onnxruntime_providers_acl.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4473/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4474",
        "id": 654419397,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTUyMDQ4",
        "number": 4474,
        "title": "[WIP] Move AutoPadType to common.h",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T00:02:47Z",
        "updated_at": "2020-07-10T23:40:33Z",
        "closed_at": "2020-07-10T23:40:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4474",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4474",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4474.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4474.patch",
            "merged_at": "2020-07-10T23:40:33Z"
        },
        "body": "**Description**: Extracting some common code related to \"AutoPadType\" from the cpu execution provider into \"common.h\".\r\n\r\n**Motivation and Context**\r\n- Sharing code with authors of other execution providers that need the same functionality.\r\n- I didn't modify the code in shared_library or dnnl EP to avoid changing their dependency structure, so there is still a redundant copy of the `AutoPadType` code in there.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4474/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4475",
        "id": 654490531,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjA4MTk1",
        "number": 4475,
        "title": "fix crashes caused by test runner",
        "user": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-10T03:54:55Z",
        "updated_at": "2020-07-13T18:48:52Z",
        "closed_at": "2020-07-10T21:04:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4475",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4475",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4475.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4475.patch",
            "merged_at": "2020-07-10T21:04:23Z"
        },
        "body": "**Description**: This PR fixes mem access violation caused by onnx_test_runner parallel tests. \r\nPTestRunner::Start throws when it cannot schedule a new task and in this case DataRunner is destroyed and so is the session object held by DataRunner. This becomens an issue when there are other threads which are still executing tests. \r\n\r\n**Motivation and Context**\r\n- Fixes crashes in onnx_test_runner\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4475/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4476",
        "id": 654519762,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjMyMDcz",
        "number": 4476,
        "title": "Enable onnxruntime_test_all for NNAPI EP",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T05:24:55Z",
        "updated_at": "2020-07-10T20:34:47Z",
        "closed_at": "2020-07-10T20:34:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4476",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4476",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4476.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4476.patch",
            "merged_at": "2020-07-10T20:34:45Z"
        },
        "body": "**Description**: \r\nEnable onnxruntime_test_all for NNAPI EP\r\n\r\n**Motivation and Context**\r\nWe do not have test coverage for NNAPI EP on Android CI\r\n\r\nDisable some tests for NNAPI since NNAPI does not handle scalar as data input (tensor only) for most operators.\r\nAlso disabled the NNAPI EP on subgraph since this will need more time to investigate. (opened Task 812756 to track this)\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4476/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4477",
        "id": 654625498,
        "node_id": "MDU6SXNzdWU2NTQ2MjU0OTg=",
        "number": 4477,
        "title": "Question about default multi-thread of mlas",
        "user": {
            "login": "feiyuvl",
            "id": 13388702,
            "node_id": "MDQ6VXNlcjEzMzg4NzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13388702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feiyuvl",
            "html_url": "https://github.com/feiyuvl",
            "followers_url": "https://api.github.com/users/feiyuvl/followers",
            "following_url": "https://api.github.com/users/feiyuvl/following{/other_user}",
            "gists_url": "https://api.github.com/users/feiyuvl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/feiyuvl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/feiyuvl/subscriptions",
            "organizations_url": "https://api.github.com/users/feiyuvl/orgs",
            "repos_url": "https://api.github.com/users/feiyuvl/repos",
            "events_url": "https://api.github.com/users/feiyuvl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/feiyuvl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-10T08:52:01Z",
        "updated_at": "2020-07-13T22:45:22Z",
        "closed_at": "2020-07-13T22:45:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, what's the default multi-thread version of mlas, Openmp or thread-pool defined by onnxruntime?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4477/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4478",
        "id": 654715065,
        "node_id": "MDU6SXNzdWU2NTQ3MTUwNjU=",
        "number": 4478,
        "title": "Assertion failed: f.pitches[i] >= s",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2204061391,
                "node_id": "MDU6TGFiZWwyMjA0MDYxMzkx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:TensorRT",
                "name": "ep:TensorRT",
                "color": "0052CC",
                "default": false,
                "description": "issues related to TensorRT execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-10T11:30:08Z",
        "updated_at": "2020-08-10T09:07:13Z",
        "closed_at": "2020-08-10T09:07:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nWhen loading an ONNX model in python with onnxruntime.InferenceSession(), I get the `Assertion failed: f.pitches[i] >= s`.\r\nThe model was generated using `torch.onnx.export`, opset=12, in PyTorch container `nvcr.io/nvidia/pytorch:20.06-py3`\r\n**Urgency**\r\nI have a model in ONNX format that I would like to test.\r\n\r\n**System information**\r\n- OS Platform and Distribution: Linux Ubuntu 16.04:\r\n- ONNX Runtime installed from docker: https://github.com/microsoft/onnxruntime/blob/v1.3.1/dockerfiles/Dockerfile.tensorrt\r\n- ONNX Runtime version: 1.3.1\r\n- Python version: 3.7\r\n- CUDA version: 10.2.89\r\n- CUDA driver version: 440.33.01\r\n- CUDNN version: 7.6.5.32\r\n- GPU model and memory: NVIDIA TitanV 12gb\r\n\r\n**To Reproduce**\r\nFollow instructions to build onnxruntime-trt\r\nhttps://github.com/microsoft/onnxruntime/tree/master/dockerfiles#tensorrt\r\nIn the docker, with accessible ONNX model: https://drive.google.com/file/d/1lPN2iANiI7mjm1V2XkguFPds2Q0KSzb8/view?usp=sharing\r\n```bash\r\n# python3.7\r\nin interpreter:\r\n>>> import onnxruntime as ort\r\n>>> sess = ort.InferenceSession(\"waveglow.onnx\")\r\n```\r\n- ONNX model: \r\n\r\n**Expected behavior**\r\nSuccessful model loading\r\n\r\n**Additional context**\r\ncommand and full error:\r\n```bash\r\n>import onnxruntime as ort\r\n>sess = ort.InferenceSession(\"triton_models/waveglow/1/waveglow.onnx\")\r\n2020-07-10 09:56:30.231246592 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-10 09:56:30 WARNING] /code/onnxruntime/cmake/external/onnx-tensorrt/onnx2trt_utils.cpp:235: Your ONNX model has been generated with INT64 weights, while TensorRT does not natively support INT64. Attempting to cast down to INT32.\r\n2020-07-10 09:56:30.231284361 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-10 09:56:30 WARNING] /code/onnxruntime/cmake/external/onnx-tensorrt/onnx2trt_utils.cpp:261: One or more weights outside the range of INT32 was clamped\r\n...\r\n2020-07-10 09:56:32.539329200 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-10 09:56:32 WARNING] /code/onnxruntime/cmake/external/onnx-tensorrt/onnx2trt_utils.cpp:261: One or more weights outside the range of INT32 was clamped\r\n2020-07-10 09:57:11.654768766 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-10 09:57:11     BUG] Assertion failed: f.pitches[i] >= s\r\n../builder/tacticOptimizer.cpp:617\r\nAborting...\r\n\r\n2020-07-10 09:57:11.664716702 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-10 09:57:11   ERROR] ../builder/tacticOptimizer.cpp (617) - Assertion Error in shrink: 0 (f.pitches[i] >= s)\r\n---------------------------------------------------------------------------\r\nEPFail                                    Traceback (most recent call last)\r\n<ipython-input-2-9e2b45df1a75> in <module>\r\n----> 1 sess = ort.InferenceSession(\"triton_models/waveglow/1/waveglow.onnx\")\r\n\r\n/opt/miniconda/lib/python3.7/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n    156         self._path_or_bytes = path_or_bytes\r\n    157         self._sess_options = sess_options\r\n--> 158         self._load_model(providers or [])\r\n    159         self._enable_fallback = True\r\n    160         Session.__init__(self, self._sess)\r\n\r\n/opt/miniconda/lib/python3.7/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n    175             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n    176\r\n--> 177         self._sess.load_model(providers)\r\n    178\r\n    179         self._sess_options = self._sess.session_options\r\n\r\nEPFail: [ONNXRuntimeError] : 11 : EP_FAIL : TensorRT EP could not build Engine for fused node: TensorrtExecutionProvider_TRTKernel_graph_torch-jit-export_0_0\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4478/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4479",
        "id": 654864408,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTA3MDc0",
        "number": 4479,
        "title": "Add multiple choice example test",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T15:34:45Z",
        "updated_at": "2020-07-10T15:36:32Z",
        "closed_at": "2020-07-10T15:36:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4479",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4479",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4479.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4479.patch",
            "merged_at": null
        },
        "body": "**Description**: Describe your changes.\r\nAdd multiple choice example test - ported from HuggingFace\r\n\r\n**Motivation and Context**\r\nMore fine tuning examples and tests\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4479/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4480",
        "id": 654866860,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTA5MDU0",
        "number": 4480,
        "title": "Liqun/multiple choice",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T15:38:38Z",
        "updated_at": "2020-07-15T00:58:00Z",
        "closed_at": "2020-07-15T00:57:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4480",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4480",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4480.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4480.patch",
            "merged_at": "2020-07-15T00:57:58Z"
        },
        "body": "**Description**: Describe your changes.\r\nadd multiple choice example test\r\n**Motivation and Context**\r\nport Huggingface multiple choice examples to ORT examples and tests",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4480/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4481",
        "id": 655027103,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjM2ODUy",
        "number": 4481,
        "title": "Android CI build, test copy, emulator boot improvement",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T20:46:04Z",
        "updated_at": "2020-07-13T21:18:36Z",
        "closed_at": "2020-07-13T21:18:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4481",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4481",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4481.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4481.patch",
            "merged_at": "2020-07-13T21:18:35Z"
        },
        "body": "**Description**:\r\nUse Ninja as cmake_generator for Android CI\r\nMove from using adb-push.sh copy file by file to use adb push with faster file copying\r\nUpdate some options to let speedup android emulator\r\n\r\n**Motivation and Context**\r\nSometimes Android CI will fail because time out, and most time the most time consuming task is to use adb-push.sh copy file by file to the device for thousands of files, move to android sdk's adb push for faster copy.\r\n\r\n\r\nSuccessful CI run https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=181698&view=results\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4481/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4482",
        "id": 655034796,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjQzMDU1",
        "number": 4482,
        "title": "Add quantization benchmark for transformer based model",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T21:02:50Z",
        "updated_at": "2020-07-13T22:46:25Z",
        "closed_at": "2020-07-13T22:46:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4482",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4482",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4482.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4482.patch",
            "merged_at": "2020-07-13T22:46:24Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4482/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4483",
        "id": 655056773,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjYwMjUw",
        "number": 4483,
        "title": "Make TArray safer to use and update method name for consistency.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-10T21:56:31Z",
        "updated_at": "2020-07-13T16:59:58Z",
        "closed_at": "2020-07-13T16:59:57Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4483",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4483",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4483.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4483.patch",
            "merged_at": "2020-07-13T16:59:57Z"
        },
        "body": "**Description**\r\nUpdate TArray:\r\n- make size_ and data_ data members private\r\n- rename GetCapacity() to Capacity() to be consistent (e.g., with Size())\r\n- add static_assert for trivially copyable T because it is copied with memcpy\r\n\r\n**Motivation and Context**\r\nThe original potential issue was that size_ could be set to any value, including beyond the capacity of the TArray. This could result in out of bounds memory access. Now the invariant that size_ <= capacity is enforced.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4483/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4484",
        "id": 655065597,
        "node_id": "MDU6SXNzdWU2NTUwNjU1OTc=",
        "number": 4484,
        "title": "[Question] graph early exiting",
        "user": {
            "login": "ykim362",
            "id": 22177353,
            "node_id": "MDQ6VXNlcjIyMTc3MzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22177353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ykim362",
            "html_url": "https://github.com/ykim362",
            "followers_url": "https://api.github.com/users/ykim362/followers",
            "following_url": "https://api.github.com/users/ykim362/following{/other_user}",
            "gists_url": "https://api.github.com/users/ykim362/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ykim362/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ykim362/subscriptions",
            "organizations_url": "https://api.github.com/users/ykim362/orgs",
            "repos_url": "https://api.github.com/users/ykim362/repos",
            "events_url": "https://api.github.com/users/ykim362/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ykim362/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-07-10T22:20:50Z",
        "updated_at": "2021-11-03T20:51:45Z",
        "closed_at": "2020-10-04T03:56:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\nDuring a single inference session, is there a way to stop the execution earlier before finishing all the nodes in the graph based on a certain condition? (e.g. There are 5 layers in a model, but stop and return intermediate results just after finishing 2 layers.)\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): Latest master branch\r\n\r\n**Describe the solution you'd like**\r\nEarly exiting of the graph. In my use case, it needs to be dynamically decided. In other words, the exit layer can be different for every inference.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4484/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4485",
        "id": 655124057,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzExOTk1",
        "number": 4485,
        "title": "C# UWP Apps cannot add Microsoft.AI.MachineLearning nuget package",
        "user": {
            "login": "smk2007",
            "id": 6754002,
            "node_id": "MDQ6VXNlcjY3NTQwMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6754002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smk2007",
            "html_url": "https://github.com/smk2007",
            "followers_url": "https://api.github.com/users/smk2007/followers",
            "following_url": "https://api.github.com/users/smk2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/smk2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smk2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smk2007/subscriptions",
            "organizations_url": "https://api.github.com/users/smk2007/orgs",
            "repos_url": "https://api.github.com/users/smk2007/repos",
            "events_url": "https://api.github.com/users/smk2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smk2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tiagoshibata",
                "id": 5521887,
                "node_id": "MDQ6VXNlcjU1MjE4ODc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tiagoshibata",
                "html_url": "https://github.com/tiagoshibata",
                "followers_url": "https://api.github.com/users/tiagoshibata/followers",
                "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
                "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
                "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
                "repos_url": "https://api.github.com/users/tiagoshibata/repos",
                "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "walrusmcd",
                "id": 7937284,
                "node_id": "MDQ6VXNlcjc5MzcyODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7937284?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/walrusmcd",
                "html_url": "https://github.com/walrusmcd",
                "followers_url": "https://api.github.com/users/walrusmcd/followers",
                "following_url": "https://api.github.com/users/walrusmcd/following{/other_user}",
                "gists_url": "https://api.github.com/users/walrusmcd/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/walrusmcd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/walrusmcd/subscriptions",
                "organizations_url": "https://api.github.com/users/walrusmcd/orgs",
                "repos_url": "https://api.github.com/users/walrusmcd/repos",
                "events_url": "https://api.github.com/users/walrusmcd/events{/privacy}",
                "received_events_url": "https://api.github.com/users/walrusmcd/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "ryanlai2",
                "id": 16694211,
                "node_id": "MDQ6VXNlcjE2Njk0MjEx",
                "avatar_url": "https://avatars.githubusercontent.com/u/16694211?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ryanlai2",
                "html_url": "https://github.com/ryanlai2",
                "followers_url": "https://api.github.com/users/ryanlai2/followers",
                "following_url": "https://api.github.com/users/ryanlai2/following{/other_user}",
                "gists_url": "https://api.github.com/users/ryanlai2/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ryanlai2/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ryanlai2/subscriptions",
                "organizations_url": "https://api.github.com/users/ryanlai2/orgs",
                "repos_url": "https://api.github.com/users/ryanlai2/repos",
                "events_url": "https://api.github.com/users/ryanlai2/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ryanlai2/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "zhangxiang1993",
                "id": 17421593,
                "node_id": "MDQ6VXNlcjE3NDIxNTkz",
                "avatar_url": "https://avatars.githubusercontent.com/u/17421593?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zhangxiang1993",
                "html_url": "https://github.com/zhangxiang1993",
                "followers_url": "https://api.github.com/users/zhangxiang1993/followers",
                "following_url": "https://api.github.com/users/zhangxiang1993/following{/other_user}",
                "gists_url": "https://api.github.com/users/zhangxiang1993/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zhangxiang1993/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zhangxiang1993/subscriptions",
                "organizations_url": "https://api.github.com/users/zhangxiang1993/orgs",
                "repos_url": "https://api.github.com/users/zhangxiang1993/repos",
                "events_url": "https://api.github.com/users/zhangxiang1993/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zhangxiang1993/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "orilevari",
                "id": 20074529,
                "node_id": "MDQ6VXNlcjIwMDc0NTI5",
                "avatar_url": "https://avatars.githubusercontent.com/u/20074529?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/orilevari",
                "html_url": "https://github.com/orilevari",
                "followers_url": "https://api.github.com/users/orilevari/followers",
                "following_url": "https://api.github.com/users/orilevari/following{/other_user}",
                "gists_url": "https://api.github.com/users/orilevari/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/orilevari/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/orilevari/subscriptions",
                "organizations_url": "https://api.github.com/users/orilevari/orgs",
                "repos_url": "https://api.github.com/users/orilevari/repos",
                "events_url": "https://api.github.com/users/orilevari/events{/privacy}",
                "received_events_url": "https://api.github.com/users/orilevari/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "martinb35",
                "id": 42186431,
                "node_id": "MDQ6VXNlcjQyMTg2NDMx",
                "avatar_url": "https://avatars.githubusercontent.com/u/42186431?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/martinb35",
                "html_url": "https://github.com/martinb35",
                "followers_url": "https://api.github.com/users/martinb35/followers",
                "following_url": "https://api.github.com/users/martinb35/following{/other_user}",
                "gists_url": "https://api.github.com/users/martinb35/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/martinb35/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/martinb35/subscriptions",
                "organizations_url": "https://api.github.com/users/martinb35/orgs",
                "repos_url": "https://api.github.com/users/martinb35/repos",
                "events_url": "https://api.github.com/users/martinb35/events{/privacy}",
                "received_events_url": "https://api.github.com/users/martinb35/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-11T03:25:16Z",
        "updated_at": "2020-07-11T05:11:35Z",
        "closed_at": "2020-07-11T05:11:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4485",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4485",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4485.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4485.patch",
            "merged_at": "2020-07-11T05:11:33Z"
        },
        "body": "Issue: Recent Desktop C# .NET Core, .NET Framework, and .NET Standard support regressed C# UWP Apps by preventing the Microsoft.AI.MachineLearning NuGet package from being installable on these project types. This is because Desktop C# Apps require the Microsoft.Windows.SDK.NET package, which only works on desktop apps. On UWP apps they cause type collisions, since SDK metadata is brought in from alternate means. The reason why this happens is because the .NET Standard dependency group is a fallback for apps with the UWP targetFramework.\r\n\r\nImpact: Sideloaded C# apps which were creatable in 1.3.0 are no longer possible.\r\n\r\nFix: for UWP apps, create a dependency group that explicitly target the UWP targetFramework that does NOT have the Microsoft.Windows.SDK.NET package dependency.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4486",
        "id": 655138286,
        "node_id": "MDU6SXNzdWU2NTUxMzgyODY=",
        "number": 4486,
        "title": " RUNTIME_EXCEPTION : Exception during initialization",
        "user": {
            "login": "blcksrx",
            "id": 35199552,
            "node_id": "MDQ6VXNlcjM1MTk5NTUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/35199552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blcksrx",
            "html_url": "https://github.com/blcksrx",
            "followers_url": "https://api.github.com/users/blcksrx/followers",
            "following_url": "https://api.github.com/users/blcksrx/following{/other_user}",
            "gists_url": "https://api.github.com/users/blcksrx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blcksrx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blcksrx/subscriptions",
            "organizations_url": "https://api.github.com/users/blcksrx/orgs",
            "repos_url": "https://api.github.com/users/blcksrx/repos",
            "events_url": "https://api.github.com/users/blcksrx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blcksrx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2185567573,
                "node_id": "MDU6TGFiZWwyMTg1NTY3NTcz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/more%20info%20needed",
                "name": "more info needed",
                "color": "CFB717",
                "default": false,
                "description": "issues that cannot be triaged until more information is submitted by the original user"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-11T05:19:34Z",
        "updated_at": "2021-06-09T21:10:21Z",
        "closed_at": "2021-02-10T01:07:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n```\r\nIn [6]: from onnxruntime import InferenceSession                                                                                                                                                             \r\n\r\nIn [7]: model = InferenceSession(MODEL_PATH)                                                                                                                                                                 \r\n2020-07-11 08:47:37.095827038 [W:onnxruntime:, model.cc:121 Model] ONNX Runtime only *guarantees* support for models stamped with opset version 7 or above for opset domain 'ai.onnx'. Please upgrade your model to opset 7 or higher. For now, this opset 4 model may run depending upon legacy support of some older opset version operators.\r\n2020-07-11 08:47:37.130688209 [E:onnxruntime:, inference_session.cc:925 Initialize] Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/ml/tree_ensemble_common.h:166 onnxruntime::ml::detail::TreeEnsembleCommon<ITYPE, OTYPE>::TreeEnsembleCommon(int, int, const string&, const std::vector<IT>&, int64_t, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&, const std::vector<long int>&, const std::vector<std::basic_string<char> >&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&, const string&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&) [with ITYPE = float; OTYPE = float; std::string = std::basic_string<char>; int64_t = long int] One falsenode is pointing either to itself, either to another tree.\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeException                          Traceback (most recent call last)\r\n<ipython-input-7-8f7dd7722c9e> in <module>\r\n----> 1 model = InferenceSession(MODEL_PATH)\r\n\r\n/usr/lib/python3.8/site-packages/onnxruntime/capi/session.py in __init__(self, path_or_bytes, sess_options, providers)\r\n    156         self._path_or_bytes = path_or_bytes\r\n    157         self._sess_options = sess_options\r\n--> 158         self._load_model(providers)\r\n    159         self._enable_fallback = True\r\n    160         Session.__init__(self, self._sess)\r\n\r\n/usr/lib/python3.8/site-packages/onnxruntime/capi/session.py in _load_model(self, providers)\r\n    175             raise TypeError(\"Unable to load from type '{0}'\".format(type(self._path_or_bytes)))\r\n    176 \r\n--> 177         self._sess.load_model(providers)\r\n    178 \r\n    179         self._sess_options = self._sess.session_options\r\n\r\nRuntimeException: [ONNXRuntimeError] : 6 : RUNTIME_EXCEPTION : Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/ml/tree_ensemble_common.h:166 onnxruntime::ml::detail::TreeEnsembleCommon<ITYPE, OTYPE>::TreeEnsembleCommon(int, int, const string&, const std::vector<IT>&, int64_t, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&, const std::vector<long int>&, const std::vector<std::basic_string<char> >&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&, const string&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<long int>&, const std::vector<IT>&) [with ITYPE = float; OTYPE = float; std::string = std::basic_string<char>; int64_t = long int] One falsenode is pointing either to itself, either to another tree.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4486/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4487",
        "id": 655138915,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzIyMTg3",
        "number": 4487,
        "title": "Split the shared ComputePadAndOutputShape into 2 separated functions ComputePad and ComputeOutputShape",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-11T05:24:33Z",
        "updated_at": "2020-07-13T22:07:36Z",
        "closed_at": "2020-07-13T22:07:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4487",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4487",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4487.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4487.patch",
            "merged_at": "2020-07-13T22:07:35Z"
        },
        "body": "**Description**: \r\nSplit the shared ComputePadAndOutputShape into 2 separated functions ComputePad and ComputeOutputShape\r\nUpdate NNAPI output shape compute to use shared ComputeOutputShape\r\n\r\n**Motivation and Context**\r\nReplace the NNAPI specific conv output shape compute functionalities with the shared functionalities\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4487/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4488",
        "id": 655139452,
        "node_id": "MDU6SXNzdWU2NTUxMzk0NTI=",
        "number": 4488,
        "title": "Different Output when Inference on CPU / GPU in some case",
        "user": {
            "login": "hirokic5",
            "id": 19792127,
            "node_id": "MDQ6VXNlcjE5NzkyMTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19792127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hirokic5",
            "html_url": "https://github.com/hirokic5",
            "followers_url": "https://api.github.com/users/hirokic5/followers",
            "following_url": "https://api.github.com/users/hirokic5/following{/other_user}",
            "gists_url": "https://api.github.com/users/hirokic5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hirokic5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hirokic5/subscriptions",
            "organizations_url": "https://api.github.com/users/hirokic5/orgs",
            "repos_url": "https://api.github.com/users/hirokic5/repos",
            "events_url": "https://api.github.com/users/hirokic5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hirokic5/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2186357781,
                "node_id": "MDU6TGFiZWwyMTg2MzU3Nzgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:CUDA",
                "name": "ep:CUDA",
                "color": "0052CC",
                "default": false,
                "description": "issues related to the CUDA execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hariharans29",
                "id": 9969784,
                "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hariharans29",
                "html_url": "https://github.com/hariharans29",
                "followers_url": "https://api.github.com/users/hariharans29/followers",
                "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
                "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
                "organizations_url": "https://api.github.com/users/hariharans29/orgs",
                "repos_url": "https://api.github.com/users/hariharans29/repos",
                "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hariharans29/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-07-11T05:29:14Z",
        "updated_at": "2021-03-17T18:34:02Z",
        "closed_at": "2020-08-18T09:09:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nThe output of onnx model with GPU seems to different from that with CPU in some case(in my case, segmentation! ).\r\n\r\n**Urgency**\r\nASAP\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):Windows10 64bit\r\n- ONNX Runtime installed from (source or binary):binary (by pip install onnxruntime-gpu)\r\n- ONNX Runtime version:1.3.0\r\n- Python version:3.7.2\r\n- Visual Studio version (if applicable):2019\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:CUDA 10.1 cuDNN 7.6.5\r\n- GPU model and memory:1080Ti \r\n\r\n**To Reproduce**\r\nI trained segmentation model in keras, and using [keras2onnx](https://github.com/onnx/keras-onnx/tree/master/keras2onnx), convert keras model to onnx model.   \r\nBut there seems to be non-negligible difference outputs of these models. \r\nHere is an example. Dog Segmentation. \r\n\r\n![onnx_segmentation_gpu](https://user-images.githubusercontent.com/19792127/87217259-2f99e100-c382-11ea-8bbd-28d93303f5ab.png)\r\n\r\n![onnx_segmentation_cpu](https://user-images.githubusercontent.com/19792127/87217293-830c2f00-c382-11ea-95f6-0b0f1b2073a5.png)\r\n\r\nThe output of onnxruntime on **CPU** is almost same as that of keras, but Output of onnxruntime on GPU seems to be different !!! \r\n\r\nBy the way, for classification model , the output of onnxruntime on GPU is almost same as that of keras... \r\n\r\n![onnx_classification_gpu](https://user-images.githubusercontent.com/19792127/87217305-ae8f1980-c382-11ea-8478-3e2e1cbd2957.png)\r\n\r\nAnd [here](https://drive.google.com/drive/folders/1Ph8KC1zj17OUGsxMOEvnAaKf8r0_Hmvv?usp=sharing) is source code & weights & image. \r\n\r\nDid I have mistake when convert keras model , or when inference on GPU ? \r\n\r\nThank you.\r\n\r\n**Expected behavior**\r\nthe outputs are almost same in keras / onnxruntime on CPU / onnxruntime on GPU \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4488/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4489",
        "id": 655194699,
        "node_id": "MDU6SXNzdWU2NTUxOTQ2OTk=",
        "number": 4489,
        "title": "Suggestion: add python wheels of various providers to each release",
        "user": {
            "login": "AStupidBear",
            "id": 16422976,
            "node_id": "MDQ6VXNlcjE2NDIyOTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16422976?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AStupidBear",
            "html_url": "https://github.com/AStupidBear",
            "followers_url": "https://api.github.com/users/AStupidBear/followers",
            "following_url": "https://api.github.com/users/AStupidBear/following{/other_user}",
            "gists_url": "https://api.github.com/users/AStupidBear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AStupidBear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AStupidBear/subscriptions",
            "organizations_url": "https://api.github.com/users/AStupidBear/orgs",
            "repos_url": "https://api.github.com/users/AStupidBear/repos",
            "events_url": "https://api.github.com/users/AStupidBear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AStupidBear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            },
            {
                "id": 2159809301,
                "node_id": "MDU6TGFiZWwyMTU5ODA5MzAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/build",
                "name": "build",
                "color": "D93F0B",
                "default": false,
                "description": "build issues; typically submitted using template"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-11T11:50:33Z",
        "updated_at": "2021-03-19T00:11:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "For example, I find that dnnl backend is a lot faster than the default backend but I have to manually compile onnxruntime, which is time consuming and error prone. It'll be a lot easier for users if developers who are familiar with code can upload wheels of various providers to each release.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4489/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4490",
        "id": 655253213,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3Nzk4NzY0",
        "number": 4490,
        "title": "Pin typing version for install_onnx.sh",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-11T18:05:02Z",
        "updated_at": "2020-07-13T18:48:33Z",
        "closed_at": "2020-07-13T18:48:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4490",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4490",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4490.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4490.patch",
            "merged_at": "2020-07-13T18:48:31Z"
        },
        "body": "**Description**: \r\nWe explicitly install `typing` with pinned version in `install_onnx.sh`\r\n\r\n**Motivation and Context**\r\nOnnx packages require typing as a dependency. \r\nMost recent controversial change in typing prevents using it with python 3.5 Rather than filtering on Python we decided to stick to the most recent version of typing before the change and see which direction things will work later.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4490/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4491",
        "id": 655815335,
        "node_id": "MDU6SXNzdWU2NTU4MTUzMzU=",
        "number": 4491,
        "title": "ONNXRuntime C++ Documentation",
        "user": {
            "login": "TratsiakY",
            "id": 56832989,
            "node_id": "MDQ6VXNlcjU2ODMyOTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/56832989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TratsiakY",
            "html_url": "https://github.com/TratsiakY",
            "followers_url": "https://api.github.com/users/TratsiakY/followers",
            "following_url": "https://api.github.com/users/TratsiakY/following{/other_user}",
            "gists_url": "https://api.github.com/users/TratsiakY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TratsiakY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TratsiakY/subscriptions",
            "organizations_url": "https://api.github.com/users/TratsiakY/orgs",
            "repos_url": "https://api.github.com/users/TratsiakY/repos",
            "events_url": "https://api.github.com/users/TratsiakY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TratsiakY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "natke",
            "id": 3302433,
            "node_id": "MDQ6VXNlcjMzMDI0MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3302433?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/natke",
            "html_url": "https://github.com/natke",
            "followers_url": "https://api.github.com/users/natke/followers",
            "following_url": "https://api.github.com/users/natke/following{/other_user}",
            "gists_url": "https://api.github.com/users/natke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/natke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/natke/subscriptions",
            "organizations_url": "https://api.github.com/users/natke/orgs",
            "repos_url": "https://api.github.com/users/natke/repos",
            "events_url": "https://api.github.com/users/natke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/natke/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "natke",
                "id": 3302433,
                "node_id": "MDQ6VXNlcjMzMDI0MzM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3302433?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/natke",
                "html_url": "https://github.com/natke",
                "followers_url": "https://api.github.com/users/natke/followers",
                "following_url": "https://api.github.com/users/natke/following{/other_user}",
                "gists_url": "https://api.github.com/users/natke/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/natke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/natke/subscriptions",
                "organizations_url": "https://api.github.com/users/natke/orgs",
                "repos_url": "https://api.github.com/users/natke/repos",
                "events_url": "https://api.github.com/users/natke/events{/privacy}",
                "received_events_url": "https://api.github.com/users/natke/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-13T12:34:40Z",
        "updated_at": "2020-10-22T04:26:38Z",
        "closed_at": "2020-10-22T04:26:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Could anybody add documentation for onnxruntime for C++? I believe that this will make use of the onnxruntime in C++ more user friendly.\r\n\r\nExisting examples must be simplified!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4491/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4492",
        "id": 655816283,
        "node_id": "MDU6SXNzdWU2NTU4MTYyODM=",
        "number": 4492,
        "title": "How can I get a reference to an already running environment on the same thread?",
        "user": {
            "login": "brnd42",
            "id": 68229816,
            "node_id": "MDQ6VXNlcjY4MjI5ODE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/68229816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brnd42",
            "html_url": "https://github.com/brnd42",
            "followers_url": "https://api.github.com/users/brnd42/followers",
            "following_url": "https://api.github.com/users/brnd42/following{/other_user}",
            "gists_url": "https://api.github.com/users/brnd42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brnd42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brnd42/subscriptions",
            "organizations_url": "https://api.github.com/users/brnd42/orgs",
            "repos_url": "https://api.github.com/users/brnd42/repos",
            "events_url": "https://api.github.com/users/brnd42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brnd42/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-13T12:36:12Z",
        "updated_at": "2020-07-22T19:29:56Z",
        "closed_at": "2020-07-22T19:29:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am writing a plugin that uses ONNX Runtime for neural network inference. This plugin is a dynamic library on MacOs or Windows and it can be opened on the same thread with other plugins using ONNX Runtime. To run our inference I need to create an environment when the plugin is opened. If two plugins are opened the second one will throw an exception, since there can only be one environment on one thread at a time.\r\nWhat is the best way to solve this? Do I need shared memory between the plugins to hold a pointer to an environment or should I call another dynamic library that holds the environment? Is there maybe some ONNX Runtime API call to get a pointer to existing environments on a thread?\r\n\r\nI do not have any control over the threading by the plugin host and I cannot exchange information over the host.\r\n\r\nI am using the c++ api",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4492/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4493",
        "id": 655882290,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjgwNzM1",
        "number": 4493,
        "title": "Create N-1 threads in intra-op pool, given main thread now active",
        "user": {
            "login": "tlh20",
            "id": 66783730,
            "node_id": "MDQ6VXNlcjY2NzgzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/66783730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlh20",
            "html_url": "https://github.com/tlh20",
            "followers_url": "https://api.github.com/users/tlh20/followers",
            "following_url": "https://api.github.com/users/tlh20/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlh20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlh20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlh20/subscriptions",
            "organizations_url": "https://api.github.com/users/tlh20/orgs",
            "repos_url": "https://api.github.com/users/tlh20/repos",
            "events_url": "https://api.github.com/users/tlh20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlh20/received_events",
            "type": "User",
            "site_admin": true
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-13T14:08:57Z",
        "updated_at": "2020-07-14T08:48:52Z",
        "closed_at": "2020-07-14T08:48:51Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4493",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4493",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4493.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4493.patch",
            "merged_at": "2020-07-14T08:48:51Z"
        },
        "body": "**Description**: Create N-1 threads in a thread pool when configured with intra-op parallelism of N.  This ensures we have N active threads, given that the main thread also runs work.  To avoid ambiguity on the value returned, rename ThreadPool::NumThreads method to ThreadPool::DegreeOfParallelism, and make corresponding updates in MLAS and operators.\r\n\r\n**Motivation and Context**\r\nPrior commit #4236 created a thread pool of N threads, and aimed to keep at most N-1 of them _active_ when the main thread was being used.  On some workloads, including resnet50 on Windows, all N threads in the pool would be active, leading to contention. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4493/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4494",
        "id": 655937532,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzI1Mzkz",
        "number": 4494,
        "title": "Remove docstrigs if __ONNX_NO_DOC_STRINGS",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-13T15:22:05Z",
        "updated_at": "2020-07-13T18:08:49Z",
        "closed_at": "2020-07-13T18:08:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4494",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4494",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4494.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4494.patch",
            "merged_at": "2020-07-13T18:08:47Z"
        },
        "body": "**Description**: Remove some docstrings if __ONNX_NO_DOC_STRINGS is defined. I'm also looking into other ways to make operator registration smaller/less costly.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4494/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4495",
        "id": 656096806,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDU1MzM5",
        "number": 4495,
        "title": "Revert \"Remove docstrigs if __ONNX_NO_DOC_STRINGS\"",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-13T19:51:06Z",
        "updated_at": "2020-07-13T21:55:39Z",
        "closed_at": "2020-07-13T21:55:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4495",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4495",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4495.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4495.patch",
            "merged_at": "2020-07-13T21:55:38Z"
        },
        "body": "This reverts commit bb4d331fa7bf1fe8d68b1527dda56e4739c80800.\r\n\r\n**Description**: CentOS build didn't like the constexpr",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4495/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4496",
        "id": 656172778,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTE4OTUw",
        "number": 4496,
        "title": "Bump ORT  version to 1.4.0",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-13T21:59:25Z",
        "updated_at": "2020-07-14T00:09:20Z",
        "closed_at": "2020-07-14T00:09:19Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4496",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4496",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4496.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4496.patch",
            "merged_at": "2020-07-14T00:09:19Z"
        },
        "body": "**Description**: \r\nPrepare for release and bump the version to 1.4.0",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4496/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4497",
        "id": 656189318,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTMyOTEx",
        "number": 4497,
        "title": "updated expected values for frontend test to pass frontend e2e pipeline. raise tolerance to reduce future risk of failure ",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-13T22:31:01Z",
        "updated_at": "2020-07-14T02:25:56Z",
        "closed_at": "2020-07-14T02:25:55Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4497",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4497",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4497.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4497.patch",
            "merged_at": "2020-07-14T02:25:55Z"
        },
        "body": "**Description**: Describe your changes.\r\nupdated expected values for frontend test to pass frontend e2e pipeline. raise tolerance to reduce future risk of failure \r\n\r\n**Motivation and Context**\r\nTo unblock frontend pipeline run",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4498",
        "id": 656235062,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTcyNDE5",
        "number": 4498,
        "title": "0713 picks for rel-1.4.0",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-14T00:20:55Z",
        "updated_at": "2020-07-14T20:26:36Z",
        "closed_at": "2020-07-14T20:26:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4498",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4498",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4498.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4498.patch",
            "merged_at": "2020-07-14T20:26:35Z"
        },
        "body": "**Description**:\r\nCherry picks to unblock pipelines\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4498/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4499",
        "id": 656239006,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTc1NTI0",
        "number": 4499,
        "title": "Nnapi, add auto_pad support for Conv/GlobalAveragePool/AveragePool/GlobalMaxPool/MaxPool operators",
        "user": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T00:33:24Z",
        "updated_at": "2020-07-15T07:21:44Z",
        "closed_at": "2020-07-15T07:21:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4499",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4499",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4499.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4499.patch",
            "merged_at": "2020-07-15T07:21:43Z"
        },
        "body": "**Description**:\r\nAdd auto_pad support for Conv/GlobalAveragePool/AveragePool/GlobalMaxPool/MaxPool operators\r\n\r\nRemove template ForceSymmetricAutoPadding for shared InferOutputShape/ComputePadAndOutputShape\r\nMove shared InferOutputShape from using ptr to ref for pads_p/output_shape\r\nDid **not** change the impl for DNNL EP, since it may eventually move to shared impl\r\n\r\n**Motivation and Context**\r\nThe perf of NNAPI EP for mobilenet v3 is slower than CPU EP\r\nBecause for NNAPI, a conv operator will fall back to cpu if either of the following condition meet\r\n1.\tThe pads are asymmetric, and the padding not specified by auto_pad (TFLite is always use auto_pad)\r\n2.\tThe operator has dilation (even it is 1) and pads are asymmetric, this seems to be a bug on NNAPI or the underlying NPU driver.\r\n\r\nAfter this change, the inference time of NNAPI for mobilenet v3 improved from 300ms+==>64ms (google pixel 3a) which is on a par with TFLite NNAPI delegate\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4499/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4500",
        "id": 656263486,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTk0OTEy",
        "number": 4500,
        "title": "Add option --torchscript in benchmark_gpt2.py",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T01:52:23Z",
        "updated_at": "2020-07-14T18:53:25Z",
        "closed_at": "2020-07-14T18:53:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4500",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4500",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4500.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4500.patch",
            "merged_at": "2020-07-14T18:53:24Z"
        },
        "body": "**Description**: \r\n(1) Add option --torchscript in benchmark_gpt2.py\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nCompare performance of TorchScript and OnnxRunime.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4501",
        "id": 656349491,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NjY0MTAx",
        "number": 4501,
        "title": "Deprecate TrainableDropout",
        "user": {
            "login": "codemzs",
            "id": 1211949,
            "node_id": "MDQ6VXNlcjEyMTE5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1211949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codemzs",
            "html_url": "https://github.com/codemzs",
            "followers_url": "https://api.github.com/users/codemzs/followers",
            "following_url": "https://api.github.com/users/codemzs/following{/other_user}",
            "gists_url": "https://api.github.com/users/codemzs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codemzs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codemzs/subscriptions",
            "organizations_url": "https://api.github.com/users/codemzs/orgs",
            "repos_url": "https://api.github.com/users/codemzs/repos",
            "events_url": "https://api.github.com/users/codemzs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codemzs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-07-14T05:59:21Z",
        "updated_at": "2020-07-17T23:58:54Z",
        "closed_at": "2020-07-17T20:43:26Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4501",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4501",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4501.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4501.patch",
            "merged_at": "2020-07-17T20:43:26Z"
        },
        "body": "This change removes TrainableDropout because Dropout(12) supports training mode.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4502",
        "id": 656370525,
        "node_id": "MDU6SXNzdWU2NTYzNzA1MjU=",
        "number": 4502,
        "title": "Aggregate Operators (\"functions\") should favor primary EP over secondary EP",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            },
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "codemzs",
            "id": 1211949,
            "node_id": "MDQ6VXNlcjEyMTE5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1211949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codemzs",
            "html_url": "https://github.com/codemzs",
            "followers_url": "https://api.github.com/users/codemzs/followers",
            "following_url": "https://api.github.com/users/codemzs/following{/other_user}",
            "gists_url": "https://api.github.com/users/codemzs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codemzs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codemzs/subscriptions",
            "organizations_url": "https://api.github.com/users/codemzs/orgs",
            "repos_url": "https://api.github.com/users/codemzs/repos",
            "events_url": "https://api.github.com/users/codemzs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codemzs/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "codemzs",
                "id": 1211949,
                "node_id": "MDQ6VXNlcjEyMTE5NDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1211949?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/codemzs",
                "html_url": "https://github.com/codemzs",
                "followers_url": "https://api.github.com/users/codemzs/followers",
                "following_url": "https://api.github.com/users/codemzs/following{/other_user}",
                "gists_url": "https://api.github.com/users/codemzs/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/codemzs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codemzs/subscriptions",
                "organizations_url": "https://api.github.com/users/codemzs/orgs",
                "repos_url": "https://api.github.com/users/codemzs/repos",
                "events_url": "https://api.github.com/users/codemzs/events{/privacy}",
                "received_events_url": "https://api.github.com/users/codemzs/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-14T06:43:44Z",
        "updated_at": "2020-10-11T11:41:34Z",
        "closed_at": "2020-10-11T11:41:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "When one executive provider has priority over another (e.g. the DirectML/CUDA EP over the CPU EP), ORT decomposes aggregate operators into their constituent operators, and the graph rightly executes using DML/CUDA EP for each constituent. For example, `DynamicQuantizeLinear` decomposes into multiple operators, and those constituents can all run on the GPU.\r\n\r\nOnce a lower priority EP registers a kernel for that operator though (e.g. `DynamicQuantizeLinear` being newly registered for CPU, while there is no kernel for DirectML), ORT <i>then</i> favors the lower priority provider instead of the decompositions into the higher priority provider. This sounds like a good thing (a single operator instead of multiple), but it can become a significant perf regression, because GPU <-> CPU synchronization is costly, and executing multiple component operators on the GPU is faster than executing a single operator on the CPU, which stalls the whole pipeline in and out of that node.\r\n\r\n**System information**\r\n- ONNX Runtime version: v1.3.1\r\n\r\n**Describe the solution you'd like**\r\nPrefer an operator decomposition using a higher priority provider over an atomic kernel definition of a lower priority provider. As an algorithm, it would be...\r\n\r\nFor each node:\r\n1. If a kernel definition (whether atomic operator or aggregate operator) is found in <s>any provider</s> <i>the current provider</i> (in priority order), use that kernel - goto end.\r\n2. If it’s a decomposable aggregate operator.\r\n    a. If all constituent operators are supported with the current provider, decompose using the current provider. Goto step 1.\r\n    b. If more providers remain, advance to the next current provider and goto step 1.\r\n    c. Decompose the aggregate, and resume at step 1 for all new nodes (restarting from highest priority provider)\r\n4. If more providers remain, advance to the next current provider and goto step 1.\r\n5. If still no kernel found (all providers exhausted), then error.\r\n\r\n**Describe alternatives you've considered**\r\nOne simpler alternative would be that step 2a ignores whether the decomposed operators are all supported by the current provider. This could lead to some even worse cases though, as some decomposed operators may be on the GPU and others on the CPU, causing even more stalls.\r\n\r\n**Additional context**\r\nNA",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4502/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4503",
        "id": 656371065,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4NjgyMTAx",
        "number": 4503,
        "title": "Split Microsoft.AI.MachineLearning.nupkg in a NuGet package and symbol NuGet package",
        "user": {
            "login": "smk2007",
            "id": 6754002,
            "node_id": "MDQ6VXNlcjY3NTQwMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6754002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smk2007",
            "html_url": "https://github.com/smk2007",
            "followers_url": "https://api.github.com/users/smk2007/followers",
            "following_url": "https://api.github.com/users/smk2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/smk2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smk2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smk2007/subscriptions",
            "organizations_url": "https://api.github.com/users/smk2007/orgs",
            "repos_url": "https://api.github.com/users/smk2007/repos",
            "events_url": "https://api.github.com/users/smk2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smk2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T06:44:57Z",
        "updated_at": "2020-07-14T21:52:42Z",
        "closed_at": "2020-07-14T21:52:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4503",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4503",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4503.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4503.patch",
            "merged_at": "2020-07-14T21:52:40Z"
        },
        "body": "Issue: The Microsoft.AI.MachineLearning.nupkg is very large because it contains symbols.\r\n\r\nFix: Split symbols into a snupkg.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4504",
        "id": 656374631,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4Njg1MDMw",
        "number": 4504,
        "title": "Refactor TensorRT EP code to better handle dynamic shape subgraphs",
        "user": {
            "login": "stevenlix",
            "id": 38092805,
            "node_id": "MDQ6VXNlcjM4MDkyODA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38092805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevenlix",
            "html_url": "https://github.com/stevenlix",
            "followers_url": "https://api.github.com/users/stevenlix/followers",
            "following_url": "https://api.github.com/users/stevenlix/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevenlix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevenlix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevenlix/subscriptions",
            "organizations_url": "https://api.github.com/users/stevenlix/orgs",
            "repos_url": "https://api.github.com/users/stevenlix/repos",
            "events_url": "https://api.github.com/users/stevenlix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevenlix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-14T06:52:26Z",
        "updated_at": "2020-07-15T09:35:44Z",
        "closed_at": "2020-07-15T09:35:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4504",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4504",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4504.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4504.patch",
            "merged_at": "2020-07-15T09:35:43Z"
        },
        "body": "1. Build dynamic shape engine during runtime\r\nTensorRT requires shape tensor input to be deterministic when engine is built, so the engine must be built at run-time (rather than compile phase) specifically for dynamic shape subgraphs. This PR moves all engine builds to compute() except static shape engines.\r\n2. Rebuild TensorRT engine at run-time if the range of dynamic shape inputs (either shape tensor or execution tensor) changes\r\nEven model's inputs are static, at subgraph level the inputs could still be dynamic and the engine for the subgraph may need to be re-build at run-time.\r\n3. Allocate dummy buffer for empty shape tensor, which is required by TensorRT\r\n4. Serialize TensorRT engine to save build time\r\nIn some cases it takes long time for TRT to build engine because of engine optimization. In this PR the engine of static shape subgraph is serialized/cached when it was first built, and will be de-serialized/loaded to save build time for new sessions. Dynamic shape case will be addressed later due to its extra complexity since the engine is created dynamically during run time. Thank @jywu-msft for drafting the code\r\n   \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4505",
        "id": 656511356,
        "node_id": "MDU6SXNzdWU2NTY1MTEzNTY=",
        "number": 4505,
        "title": "TX2 - Jetpack 4.4 - Network has dynamic or shape inputs, but no optimization profile has been defined.",
        "user": {
            "login": "danielecazzari",
            "id": 37703014,
            "node_id": "MDQ6VXNlcjM3NzAzMDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/37703014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielecazzari",
            "html_url": "https://github.com/danielecazzari",
            "followers_url": "https://api.github.com/users/danielecazzari/followers",
            "following_url": "https://api.github.com/users/danielecazzari/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielecazzari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielecazzari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielecazzari/subscriptions",
            "organizations_url": "https://api.github.com/users/danielecazzari/orgs",
            "repos_url": "https://api.github.com/users/danielecazzari/repos",
            "events_url": "https://api.github.com/users/danielecazzari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielecazzari/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2204061391,
                "node_id": "MDU6TGFiZWwyMjA0MDYxMzkx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:TensorRT",
                "name": "ep:TensorRT",
                "color": "0052CC",
                "default": false,
                "description": "issues related to TensorRT execution provider"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-14T10:36:26Z",
        "updated_at": "2020-09-20T04:40:29Z",
        "closed_at": "2020-09-20T04:40:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nWhile trying to inferencing the Tiny Yolo v2 model from [model zoo](https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/tiny-yolov2) on Nividia Jetson TX2 with the latest Jetpack 4.4 I hit the described error.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Nividia Jetson TX2 with the latest Jetpack 4.4\r\n- ONNX Runtime installed from (source or binary): compiled from source\r\n- ONNX Runtime version: 1.3.0\r\n- Python version: 3.6.9\r\n- GCC/Compiler version (if compiling from source): 7.5.0\r\n\r\n\r\n**Log**\r\n2020-07-14 11:29:28.409070242 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-14 10:29:28   ERROR] Network has dynamic or shape inputs, but no optimization profile has been defined.\r\n2020-07-14 11:29:28.409148866 [W:onnxruntime:Default, tensorrt_execution_provider.h:36 log] [2020-07-14 10:29:28   ERROR] Network validation failed.\r\nTraceback (most recent call last):\r\n  File \"Onnx_Inference.py\", line 154, in <module>\r\n    main()\r\n  File \"Onnx_Inference.py\", line 78, in main\r\n    args.execution_provider, args.device)\r\n  File \"/data/onnxruntime_inferencing/_modules/onnxruntime_inferencing.py\", line 30, in __init__\r\n    self.sess = rt.InferenceSession(self.model_path, self.options, self.exec_provider)\r\n  File \"/home/sas/.local/lib/python3.6/site-packages/onnxruntime/capi/session.py\", line 158, in __init__\r\n    self._load_model(providers)\r\n  File \"/home/sas/.local/lib/python3.6/site-packages/onnxruntime/capi/session.py\", line 177, in _load_model\r\n    self._sess.load_model(providers)\r\nonnxruntime.capi.onnxruntime_pybind11_state.EPFail: [ONNXRuntimeError] : 11 : EP_FAIL : TensorRT EP could not build Engine for fused node: TensorrtExecutionProvider_TRTKernel_graph_Example Model_0_0\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4505/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4506",
        "id": 656611437,
        "node_id": "MDU6SXNzdWU2NTY2MTE0Mzc=",
        "number": 4506,
        "title": "GPU Memory Release Problem ONNRuntime C++",
        "user": {
            "login": "anirudha16101",
            "id": 46598161,
            "node_id": "MDQ6VXNlcjQ2NTk4MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/46598161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anirudha16101",
            "html_url": "https://github.com/anirudha16101",
            "followers_url": "https://api.github.com/users/anirudha16101/followers",
            "following_url": "https://api.github.com/users/anirudha16101/following{/other_user}",
            "gists_url": "https://api.github.com/users/anirudha16101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anirudha16101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anirudha16101/subscriptions",
            "organizations_url": "https://api.github.com/users/anirudha16101/orgs",
            "repos_url": "https://api.github.com/users/anirudha16101/repos",
            "events_url": "https://api.github.com/users/anirudha16101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anirudha16101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "HectorSVC",
            "id": 29932710,
            "node_id": "MDQ6VXNlcjI5OTMyNzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/29932710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HectorSVC",
            "html_url": "https://github.com/HectorSVC",
            "followers_url": "https://api.github.com/users/HectorSVC/followers",
            "following_url": "https://api.github.com/users/HectorSVC/following{/other_user}",
            "gists_url": "https://api.github.com/users/HectorSVC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HectorSVC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HectorSVC/subscriptions",
            "organizations_url": "https://api.github.com/users/HectorSVC/orgs",
            "repos_url": "https://api.github.com/users/HectorSVC/repos",
            "events_url": "https://api.github.com/users/HectorSVC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HectorSVC/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "HectorSVC",
                "id": 29932710,
                "node_id": "MDQ6VXNlcjI5OTMyNzEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/29932710?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/HectorSVC",
                "html_url": "https://github.com/HectorSVC",
                "followers_url": "https://api.github.com/users/HectorSVC/followers",
                "following_url": "https://api.github.com/users/HectorSVC/following{/other_user}",
                "gists_url": "https://api.github.com/users/HectorSVC/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/HectorSVC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HectorSVC/subscriptions",
                "organizations_url": "https://api.github.com/users/HectorSVC/orgs",
                "repos_url": "https://api.github.com/users/HectorSVC/repos",
                "events_url": "https://api.github.com/users/HectorSVC/events{/privacy}",
                "received_events_url": "https://api.github.com/users/HectorSVC/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-07-14T13:27:05Z",
        "updated_at": "2020-08-19T06:42:15Z",
        "closed_at": "2020-08-19T06:42:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\nHi, Currently I am using ONNX C++ Api and when I analysis the GPU Memory Usage.  I find that Onnx is not Releasing the Whole memory until its .exe got killed. Can Somebody Explain me why it is not releasing the memory completely. I have used gort->ReleaseSession(session);, g_ort->ReleaseSessionOptions(session_options); g_ort->ReleaseEnv(env);\r\n code at the last to release the memory.\r\n\r\nFor Reference:---\r\nHere memory is not released It is still occupying 7% of GPU Memory. but after some time when I close the exe it goes down to 0\r\nPlease Help!! me How can I release the memory completely without killing the .exe.\r\n![github](https://user-images.githubusercontent.com/46598161/87430844-6a5e7c00-c603-11ea-9e21-56e08ca186e1.PNG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4506/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4507",
        "id": 656669767,
        "node_id": "MDU6SXNzdWU2NTY2Njk3Njc=",
        "number": 4507,
        "title": "remove_initializer_from_input.py not removing all ininitializers from inputs",
        "user": {
            "login": "camilltrueeb",
            "id": 63647197,
            "node_id": "MDQ6VXNlcjYzNjQ3MTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63647197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camilltrueeb",
            "html_url": "https://github.com/camilltrueeb",
            "followers_url": "https://api.github.com/users/camilltrueeb/followers",
            "following_url": "https://api.github.com/users/camilltrueeb/following{/other_user}",
            "gists_url": "https://api.github.com/users/camilltrueeb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camilltrueeb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camilltrueeb/subscriptions",
            "organizations_url": "https://api.github.com/users/camilltrueeb/orgs",
            "repos_url": "https://api.github.com/users/camilltrueeb/repos",
            "events_url": "https://api.github.com/users/camilltrueeb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camilltrueeb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2185567573,
                "node_id": "MDU6TGFiZWwyMTg1NTY3NTcz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/more%20info%20needed",
                "name": "more info needed",
                "color": "CFB717",
                "default": false,
                "description": "issues that cannot be triaged until more information is submitted by the original user"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-14T14:45:23Z",
        "updated_at": "2022-12-31T14:06:28Z",
        "closed_at": "2020-07-16T09:50:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using my exported TF model I am getting the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/Workspaces/ML/Zahnsegmentierung_KI/Model_Training/TestScript/TestOnnx.py\", line 51, in <module>\r\n    'labels_pl:0': np.random.randn(1, 2000).astype(np.int32), 'is_training_pl:0': np.array(False)})\r\n  File \"C:\\Anaconda3\\envs\\py37\\lib\\site-packages\\onnxruntime\\capi\\session.py\", line 111, in run\r\n    return self._sess.run(output_names, input_feed, run_options)\r\nonnxruntime.capi.onnxruntime_pybind11_state.RuntimeException: [ONNXRuntimeError] : 6 : RUNTIME_EXCEPTION : Non-zero status code returned while running Mul node. Name:'conv0/batch_normalization/mul_3' Status Message: D:\\2\\s\\include\\onnxruntime\\core/framework/op_kernel.h:88 onnxruntime::OpKernelContext::Input Missing Input: conv0/batch_normalization/cond_3/Merge:0\r\n```\r\nTherefore I have tried to use onnxruntime/tools/python/remove_initializer_from_input.py to clean up the inputs. After running the script and starting a session with the cleaned up model, I am still getting the same error. The warnings reveal that the model inputs still contain some initializers (most of them have been removed):\r\n\r\n```\r\n2020-07-14 15:44:10.7294799 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__49:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7295972 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__800 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7296120 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__799 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7298176 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__73:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7298704 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__814 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7298824 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__813 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7300587 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__97:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7301062 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__810 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7301178 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__809 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7303060 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__121:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7303546 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__806 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7303652 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__805 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7305517 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__812 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7305633 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__811 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7306118 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__808 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7319337 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__807 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7322793 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__169:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7323384 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__816 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7323516 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__815 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7325435 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__193:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7326140 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__802 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7326268 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__801 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7328374 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__217:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7329132 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__804 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7329604 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__803 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7331998 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer sub_graph_ending_node_Identity__241:0 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7333040 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__818 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7333171 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer const_fold_opt__817 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.7336573 [W:onnxruntime:, graph.cc:814 onnxruntime::Graph::Graph] Initializer cond__457 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n2020-07-14 15:44:10.8512426 [E:onnxruntime:, sequential_executor.cc:281 onnxruntime::SequentialExecutor::Execute] Non-zero status code returned while running Mul node. Name:'conv0/batch_normalization/mul_3' Status Message: D:\\2\\s\\include\\onnxruntime\\core/framework/op_kernel.h:88 onnxruntime::OpKernelContext::Input Missing Input: conv0/batch_normalization/cond_3/Merge:0\r\n```\r\n\r\n\r\n**System information**\r\n- Windows 10\r\n- onnxruntime 1.3.0\r\n- model: tf2onnx 1.6.2 --opset 9\r\n\r\nUnfortunately I cannot share the model.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4507/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4508",
        "id": 656680765,
        "node_id": "MDU6SXNzdWU2NTY2ODA3NjU=",
        "number": 4508,
        "title": "use shared library for onnx",
        "user": {
            "login": "mslacken",
            "id": 2189930,
            "node_id": "MDQ6VXNlcjIxODk5MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2189930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mslacken",
            "html_url": "https://github.com/mslacken",
            "followers_url": "https://api.github.com/users/mslacken/followers",
            "following_url": "https://api.github.com/users/mslacken/following{/other_user}",
            "gists_url": "https://api.github.com/users/mslacken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mslacken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mslacken/subscriptions",
            "organizations_url": "https://api.github.com/users/mslacken/orgs",
            "repos_url": "https://api.github.com/users/mslacken/repos",
            "events_url": "https://api.github.com/users/mslacken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mslacken/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-07-14T15:00:03Z",
        "updated_at": "2020-11-16T03:48:04Z",
        "closed_at": "2020-11-16T03:48:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Problem**\r\nAt the moment it is not possible to use system libraries for ONNX and protobuf at the same time. imho this is due to the fact, that ONNXRUNTIME uses sllghtly different `*.proto` files for building its internal ONNX library.\r\n\r\n**Workaround**\r\nBy removing the FATAL_ERROR in https://github.com/microsoft/onnxruntime/blob/a95ae164f7e21c2f31f4748e127b52c075c6ecb3/cmake/CMakeLists.txt#L421\r\nand making `onnx` and `onnx_proto` shared (but not install them) in\r\nhttps://raw.githubusercontent.com/microsoft/onnxruntime/master/cmake/onnx/CMakeLists.txt\r\nit is possible to compile a version of onnxruntime which consumes the `libonnx` and `libonnx_proto` found the system . To get this working proto files from ONNX have to replaced by the proto files from ONNXRUNTIME when building ONNX.\r\n\r\n**Desired solution**\r\nONNRUNTIME should be able to use ONNX library when ``onnxruntime_PREFER_SYSTEM_LIB=ON`` is used.\r\n\r\n**System information**\r\n- ONNX Runtime version 1.3.1\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4508/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4509",
        "id": 656727932,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTc0ODI0",
        "number": 4509,
        "title": "Replace loss function in BERT_LOSS with SoftmaxCrossEntropyLoss.",
        "user": {
            "login": "codemzs",
            "id": 1211949,
            "node_id": "MDQ6VXNlcjEyMTE5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1211949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codemzs",
            "html_url": "https://github.com/codemzs",
            "followers_url": "https://api.github.com/users/codemzs/followers",
            "following_url": "https://api.github.com/users/codemzs/following{/other_user}",
            "gists_url": "https://api.github.com/users/codemzs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codemzs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codemzs/subscriptions",
            "organizations_url": "https://api.github.com/users/codemzs/orgs",
            "repos_url": "https://api.github.com/users/codemzs/repos",
            "events_url": "https://api.github.com/users/codemzs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codemzs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-07-14T16:06:30Z",
        "updated_at": "2020-07-16T22:28:27Z",
        "closed_at": "2020-07-16T22:28:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4509",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4509",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4509.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4509.patch",
            "merged_at": "2020-07-16T22:28:25Z"
        },
        "body": "\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4509/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4510",
        "id": 656895067,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTEwOTI3",
        "number": 4510,
        "title": "Conditionally compile without std::is_trivially_copyable to satisfy old GCC versions.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T20:58:44Z",
        "updated_at": "2020-07-14T23:47:42Z",
        "closed_at": "2020-07-14T23:47:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4510",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4510",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4510.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4510.patch",
            "merged_at": "2020-07-14T23:47:41Z"
        },
        "body": "**Description**\r\nConditionally compile without std::is_trivially_copyable to satisfy old GCC versions.\r\n\r\n**Motivation and Context**\r\nFix build which uses GCC 4.8.2.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4510/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4511",
        "id": 656907011,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTIwODQ1",
        "number": 4511,
        "title": "Add the BroadcastGradientArgs op",
        "user": {
            "login": "ashbhandare",
            "id": 14295305,
            "node_id": "MDQ6VXNlcjE0Mjk1MzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14295305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashbhandare",
            "html_url": "https://github.com/ashbhandare",
            "followers_url": "https://api.github.com/users/ashbhandare/followers",
            "following_url": "https://api.github.com/users/ashbhandare/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashbhandare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashbhandare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashbhandare/subscriptions",
            "organizations_url": "https://api.github.com/users/ashbhandare/orgs",
            "repos_url": "https://api.github.com/users/ashbhandare/repos",
            "events_url": "https://api.github.com/users/ashbhandare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashbhandare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T21:22:19Z",
        "updated_at": "2020-07-21T06:59:13Z",
        "closed_at": "2020-07-21T06:59:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4511",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4511",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4511.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4511.patch",
            "merged_at": "2020-07-21T06:59:11Z"
        },
        "body": "This PR adds the BroadcastGradientArgs op to be used to dynamically calculate the broadcast axes.\r\n\r\nThis will be used for making the gradient graph builder independent on shape inferencing. Currently, the broadcast axes are calculated by relying on shape-inferencing capabilities. Instead, this op will be used to calculate the broadcast axes used in the forward pass, and the axes will be passed to the ReduceSum op to build the gradient graph.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4511/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4512",
        "id": 656916786,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTI4OTcw",
        "number": 4512,
        "title": "Add sudo --preserve-env option to allow environment to go through to docker commands.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T21:43:02Z",
        "updated_at": "2020-07-15T01:12:34Z",
        "closed_at": "2020-07-15T01:12:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4512",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4512",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4512.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4512.patch",
            "merged_at": "2020-07-15T01:12:32Z"
        },
        "body": "**Description**\r\nIn run_dockerbuild.sh, add sudo --preserve-env option to allow environment to go through to docker commands.\r\n\r\n**Motivation and Context**\r\nFor at least one case, docker run, environment variables set by name only with -e might not make it through in the case where docker is run with sudo. Adding the sudo --preserve-env option will make current environment variables available to the command.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4512/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4513",
        "id": 656928148,
        "node_id": "MDU6SXNzdWU2NTY5MjgxNDg=",
        "number": 4513,
        "title": "Question about Tensorflow_Keras_Bert-Squad_OnnxRuntime_CPU.ipynb",
        "user": {
            "login": "652994331",
            "id": 51428350,
            "node_id": "MDQ6VXNlcjUxNDI4MzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/51428350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/652994331",
            "html_url": "https://github.com/652994331",
            "followers_url": "https://api.github.com/users/652994331/followers",
            "following_url": "https://api.github.com/users/652994331/following{/other_user}",
            "gists_url": "https://api.github.com/users/652994331/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/652994331/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/652994331/subscriptions",
            "organizations_url": "https://api.github.com/users/652994331/orgs",
            "repos_url": "https://api.github.com/users/652994331/repos",
            "events_url": "https://api.github.com/users/652994331/events{/privacy}",
            "received_events_url": "https://api.github.com/users/652994331/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1974915201,
                "node_id": "MDU6TGFiZWwxOTc0OTE1MjAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/model:transformer",
                "name": "model:transformer",
                "color": "4EF6CD",
                "default": false,
                "description": "issues related to a transformer model: BERT, GPT2, Hugging Face, Longformer, T5, etc."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-14T22:08:33Z",
        "updated_at": "2020-08-25T18:39:16Z",
        "closed_at": "2020-08-25T18:39:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, i am following this tutorial and have 2 questions. The first one is , after i finished this part:\r\n![image](https://user-images.githubusercontent.com/51428350/87481022-1a160700-c661-11ea-8672-c46f595ce21a.png)\r\nthe result i got was length 512 = 486ms not 94ms.\r\n\r\nThe other one is, i have a question, why the average inference time for original tensorflow(100 sentenses) is 94 ms, but the inference time for onnx is 300+ms ~ 600+ms. i thought onnxruntime's a oprimization method so it should have better result right? \r\nThank you\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4513/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4514",
        "id": 656965819,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTY5MDcz",
        "number": 4514,
        "title": "Cehrry-pick Conditionally compile without std::is_trivially_copyable",
        "user": {
            "login": "yuslepukhin",
            "id": 11303988,
            "node_id": "MDQ6VXNlcjExMzAzOTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11303988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuslepukhin",
            "html_url": "https://github.com/yuslepukhin",
            "followers_url": "https://api.github.com/users/yuslepukhin/followers",
            "following_url": "https://api.github.com/users/yuslepukhin/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuslepukhin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuslepukhin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuslepukhin/subscriptions",
            "organizations_url": "https://api.github.com/users/yuslepukhin/orgs",
            "repos_url": "https://api.github.com/users/yuslepukhin/repos",
            "events_url": "https://api.github.com/users/yuslepukhin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuslepukhin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T23:54:01Z",
        "updated_at": "2020-07-15T04:34:39Z",
        "closed_at": "2020-07-15T04:34:38Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4514",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4514",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4514.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4514.patch",
            "merged_at": "2020-07-15T04:34:38Z"
        },
        "body": "**Description**:  Cherry-pick a fix for CentOS build.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4514/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4515",
        "id": 657074694,
        "node_id": "MDU6SXNzdWU2NTcwNzQ2OTQ=",
        "number": 4515,
        "title": "How to register a new domain?",
        "user": {
            "login": "dongzhen123",
            "id": 29719811,
            "node_id": "MDQ6VXNlcjI5NzE5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29719811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongzhen123",
            "html_url": "https://github.com/dongzhen123",
            "followers_url": "https://api.github.com/users/dongzhen123/followers",
            "following_url": "https://api.github.com/users/dongzhen123/following{/other_user}",
            "gists_url": "https://api.github.com/users/dongzhen123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dongzhen123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dongzhen123/subscriptions",
            "organizations_url": "https://api.github.com/users/dongzhen123/orgs",
            "repos_url": "https://api.github.com/users/dongzhen123/repos",
            "events_url": "https://api.github.com/users/dongzhen123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dongzhen123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-15T05:37:47Z",
        "updated_at": "2020-07-15T07:12:51Z",
        "closed_at": "2020-07-15T07:12:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Which files need to be modified?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4515/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4516",
        "id": 657366808,
        "node_id": "MDU6SXNzdWU2NTczNjY4MDg=",
        "number": 4516,
        "title": "loading a model in ort throws error: onnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Node (Reshape_46) Op (Reshape) [ShapeInferenceError] Invalid position of 0 ",
        "user": {
            "login": "natangold85",
            "id": 24711661,
            "node_id": "MDQ6VXNlcjI0NzExNjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24711661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/natangold85",
            "html_url": "https://github.com/natangold85",
            "followers_url": "https://api.github.com/users/natangold85/followers",
            "following_url": "https://api.github.com/users/natangold85/following{/other_user}",
            "gists_url": "https://api.github.com/users/natangold85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/natangold85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/natangold85/subscriptions",
            "organizations_url": "https://api.github.com/users/natangold85/orgs",
            "repos_url": "https://api.github.com/users/natangold85/repos",
            "events_url": "https://api.github.com/users/natangold85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/natangold85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2185567573,
                "node_id": "MDU6TGFiZWwyMTg1NTY3NTcz",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/more%20info%20needed",
                "name": "more info needed",
                "color": "CFB717",
                "default": false,
                "description": "issues that cannot be triaged until more information is submitted by the original user"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jcwchen",
            "id": 14194980,
            "node_id": "MDQ6VXNlcjE0MTk0OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14194980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcwchen",
            "html_url": "https://github.com/jcwchen",
            "followers_url": "https://api.github.com/users/jcwchen/followers",
            "following_url": "https://api.github.com/users/jcwchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcwchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcwchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcwchen/subscriptions",
            "organizations_url": "https://api.github.com/users/jcwchen/orgs",
            "repos_url": "https://api.github.com/users/jcwchen/repos",
            "events_url": "https://api.github.com/users/jcwchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcwchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jcwchen",
                "id": 14194980,
                "node_id": "MDQ6VXNlcjE0MTk0OTgw",
                "avatar_url": "https://avatars.githubusercontent.com/u/14194980?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jcwchen",
                "html_url": "https://github.com/jcwchen",
                "followers_url": "https://api.github.com/users/jcwchen/followers",
                "following_url": "https://api.github.com/users/jcwchen/following{/other_user}",
                "gists_url": "https://api.github.com/users/jcwchen/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jcwchen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jcwchen/subscriptions",
                "organizations_url": "https://api.github.com/users/jcwchen/orgs",
                "repos_url": "https://api.github.com/users/jcwchen/repos",
                "events_url": "https://api.github.com/users/jcwchen/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jcwchen/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-07-15T13:50:52Z",
        "updated_at": "2020-07-20T15:08:34Z",
        "closed_at": "2020-07-20T15:08:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "i'm trying to convert a model from pytorch to onnxruntime. one part of the model is roi align algorithm.\r\ni converted the roi align function to onnx and its also pass onnx.checker.\r\nwhen i'm trying to load this model using onnxruntime i get this error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/vzqgyc/projects/uc_workspace/ultracruise/nn_product/python_converter/roi_align_test.py\", line 91, in <module>\r\n    ort_model = onnxruntime.InferenceSession(path)\r\n  File \"/usr/local/lib/python3.6/dist-packages/onnxruntime/capi/session.py\", line 158, in __init__\r\n    self._load_model(providers)\r\n  File \"/usr/local/lib/python3.6/dist-packages/onnxruntime/capi/session.py\", line 177, in _load_model\r\n    self._sess.load_model(providers)\r\nonnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Node (Reshape_29) Op (Reshape) [ShapeInferenceError] Invalid position of 0\r\n\r\ni'm on linux os with python 3.6.8, pytorch 1.5, onnx 1.3.0, onnxruntime 1.7.0\r\nthis is my roi align class:\r\n\r\n`class RoIAlignTensorOpImp(torch.nn.Module):\r\n    def __init__(self, aligned_height, aligned_width, spatial_scale):\r\n        super(RoIAlignTensorOpImp, self).__init__()\r\n\r\n        self.aligned_width = int(aligned_width)\r\n        self.aligned_height = int(aligned_height)\r\n        self.spatial_scale = float(spatial_scale)\r\n\r\n        self.pw_all = torch.arange(self.aligned_width)\r\n        self.ph_all = torch.arange(self.aligned_height)\r\n\r\n    def get_slice(self, ten: torch.Tensor, n: int, h_idx: torch.Tensor, w_idx: torch.Tensor):\r\n        d4t_tmp = ten[n, :, h_idx, :]\r\n        return d4t_tmp[:, :, :, w_idx]\r\n\r\n    def forward(self, features: torch.Tensor, rois: torch.Tensor) -> torch.Tensor:\r\n        num_rois = rois.size(0)\r\n        # Number of channels\r\n        channels = features.size(1)\r\n\r\n        output = torch.zeros((num_rois, channels, self.aligned_height, self.aligned_width))\r\n\r\n        for n in range(num_rois):\r\n            roi_batch_ind = int(rois[n, 0].item())\r\n            roi_start_w = rois[n, 1].item() * self.spatial_scale\r\n            roi_start_h = rois[n, 2].item() * self.spatial_scale\r\n            roi_end_w = rois[n, 3].item() * self.spatial_scale\r\n            roi_end_h = rois[n, 4].item() * self.spatial_scale\r\n            roi_width = max(roi_end_w - roi_start_w, 1.0)\r\n            roi_height = max(roi_end_h - roi_start_h, 1.0)\r\n\r\n            bin_size_h = roi_height / float(self.aligned_height)\r\n            bin_size_w = roi_width / float(self.aligned_width)\r\n\r\n            hstart = self.ph_all * bin_size_h + roi_start_h\r\n            hend = hstart + bin_size_h\r\n\r\n            hsize = (hend - hstart).int()\r\n\r\n            hlow_start = hstart.int()\r\n            hhigh_start = hstart.ceil().int()\r\n\r\n            wstart = self.pw_all * bin_size_w + roi_start_w\r\n            wend = wstart + bin_size_w\r\n            wsize = (wend - wstart).int()\r\n\r\n            wleft_start = wstart.int()\r\n            wright_start = wstart.ceil().int()\r\n\r\n            beta = ((wstart - wstart.floor()) / (wstart.ceil() - wstart.floor()))\r\n            beta_nan = ((wstart.ceil() - wstart.floor()) == 0).nonzero().squeeze(0).long()\r\n            beta[beta_nan] = torch.tensor(0.5, dtype=torch.float32)\r\n\r\n\r\n            alpha = (hstart - hstart.floor()) / (hstart.ceil() - hstart.floor())\r\n            alpha_nan = ((hstart.ceil() - hstart.floor()) == 0).nonzero().squeeze(0).long()\r\n            alpha[alpha_nan.long()] = torch.tensor(0.5, dtype=torch.float32)\r\n\r\n            # todo see what needs to do for different sizes of wsize or hsize\r\n            h_base = torch.arange(hsize[0] + 1).unsqueeze(0).repeat(self.aligned_height, 1)\r\n            w_base = torch.arange(wsize[0] + 1).unsqueeze(0).repeat(self.aligned_width, 1)\r\n\r\n            hlow_idx = h_base + hlow_start.unsqueeze(1)\r\n            hhigh_idx = h_base + hhigh_start.unsqueeze(1)\r\n\r\n            wleft_idx = w_base + wleft_start.unsqueeze(1)\r\n            wright_idx = w_base + wright_start.unsqueeze(1)\r\n\r\n            d1_all = self.get_slice(features, roi_batch_ind, hlow_idx, wleft_idx)\r\n            d2_all = self.get_slice(features, roi_batch_ind, hhigh_idx, wleft_idx)\r\n            d3_all = self.get_slice(features, roi_batch_ind, hlow_idx, wright_idx)\r\n            d4_all = self.get_slice(features, roi_batch_ind, hhigh_idx, wright_idx)\r\n\r\n            alpha_all = alpha.reshape(1, alpha.size()[0], 1, 1, 1)\r\n            beta_all = beta.reshape(1, 1, 1, beta.size()[0], 1)\r\n            values_all = (1 - alpha_all) * (1 - beta_all) * d1_all + \\\r\n                         alpha_all * (1 - beta_all) * d2_all + \\\r\n                         (1 - alpha_all) * beta_all * d3_all + \\\r\n                         alpha_all * beta_all * d4_all\r\n\r\n            out_sum_all = values_all.sum(4).sum(2)\r\n            bin_area = bin_size_h * bin_size_w\r\n\r\n            output[n, :, :, :] = out_sum_all / bin_area\r\n\r\n        return output`\r\n\r\nand this is the code to convert it and load it:\r\n\r\n`width = 7\r\nheight = 7\r\nscale = 0.125\r\n\r\nroi_align = RoIAlignTensorOpImp(height, width, scale)\r\n\r\n\r\nfeatures = torch.rand((1,16,96,170))\r\nrois = torch.rand((9,5))\r\n\r\npath = \"/tmp/t.onnx\"\r\n\r\noutput_keys = [\"outputs\"]\r\ntorch.onnx.export(roi_align, (features, rois), path,\r\n                  do_constant_folding=False,\r\n                  opset_version=12,\r\n                  input_names=[\"features\", \"rois\"],\r\n                  output_names=output_keys)\r\n\r\n\r\n\r\nmodel = onnx.load_model(path)\r\nonnx.shape_inference.infer_shapes(model)\r\nonnx.checker.check_model(model)\r\nprint(\"finish check onnx model\")\r\n\r\nort_model = onnxruntime.InferenceSession(path)`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4516/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]