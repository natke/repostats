[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1073183004",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1073183004",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1073183004,
        "node_id": "IC_kwDOCVq1mM4_93kc",
        "user": {
            "login": "josephrocca",
            "id": 1167575,
            "node_id": "MDQ6VXNlcjExNjc1NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1167575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrocca",
            "html_url": "https://github.com/josephrocca",
            "followers_url": "https://api.github.com/users/josephrocca/followers",
            "following_url": "https://api.github.com/users/josephrocca/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrocca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrocca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrocca/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrocca/orgs",
            "repos_url": "https://api.github.com/users/josephrocca/repos",
            "events_url": "https://api.github.com/users/josephrocca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrocca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-20T06:58:33Z",
        "updated_at": "2023-06-16T10:32:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've just realised that you can simply write this: (**Edit**: wrong - read next comment)\r\n```js\r\nimport \"https://cdn.jsdelivr.net/npm/onnxruntime-web@1.10.0/dist/ort.js\"\r\n```\r\nAnd it will create the `window.ort` global. Not ideal since it pollutes the global namespace, but at least this means it's possible to import it into Deno.\r\n\r\nI'll leave this issue open since it still would be nice to have proper ES6 module support.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1073183004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1073192680",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1073192680",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1073192680,
        "node_id": "IC_kwDOCVq1mM4_957o",
        "user": {
            "login": "josephrocca",
            "id": 1167575,
            "node_id": "MDQ6VXNlcjExNjc1NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1167575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrocca",
            "html_url": "https://github.com/josephrocca",
            "followers_url": "https://api.github.com/users/josephrocca/followers",
            "following_url": "https://api.github.com/users/josephrocca/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrocca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrocca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrocca/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrocca/orgs",
            "repos_url": "https://api.github.com/users/josephrocca/repos",
            "events_url": "https://api.github.com/users/josephrocca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrocca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-20T08:01:12Z",
        "updated_at": "2022-03-20T08:03:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh, but now I see that a new problem arises. If we do a bare module import like this:\r\n```js\r\nimport \"https://cdn.jsdelivr.net/npm/onnxruntime-web@1.10.0/dist/ort.js\";\r\n```\r\nthen `ort.js` isn't able to find the wasm file because `document.currentScript.src` doesn't exist in modules (and `ort.js` is treated like a module in this case). So, to fix this, all references to `document.currentScript.src` should try to fall back to `import.meta.url`.\r\n\r\nHere's an example of some code in `ort.js` trying to detect where it's running, but I think this code is actually generated by webpack? (I haven't used webpack before)\r\n```js\r\nvar _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n```\r\nYou can see other examples by searching [onnxruntime-web@1.10.0/dist/ort.js](https://cdn.jsdelivr.net/npm/onnxruntime-web@1.10.0/dist/ort.js) for \"currentScript\" using `Ctrl+F`.\r\n\r\nI was only able to find [one reference to `document.currentScript.src`](https://github.com/microsoft/onnxruntime/blob/91722e2bc4ef63add6d548f2b1212a7fd0b10531/js/web/lib/wasm/proxy-wrapper.ts#L82) within the ONNX Runtime Web codebase itself.\r\n\r\n@hanbitmyths, @fs-eire Wondering if you could provide guidance on if/how I can submit a pull request to fall back to `import.meta.url` when `ort.js` is trying to determine its own location? Specifically in regard to how this `_scriptDir` stuff is generated by the bundler. This would allow the library to work in [Deno](https://github.com/denoland/deno) and with a \"bare\" ES6 `import` statement in the browser.\r\n\r\nNote that currently it falls back to `__filename` which has a default hard-coded value of `/index.js`, which causes `ort.js` to try to load the wasm file from `/ort-wasm-simd-threaded.wasm`. So, if it's possible ([?](https://webpack.js.org/configuration/node/)) to change the default `__filename` to a runtime-generated value, then a quick solution might be to set it to `import.meta.url` by default.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1073192680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1081217023",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1081217023",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1081217023,
        "node_id": "IC_kwDOCVq1mM5Acg__",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-28T22:30:19Z",
        "updated_at": "2022-03-28T22:30:19Z",
        "author_association": "MEMBER",
        "body": "I will take a look at this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1081217023/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1347548613",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1347548613",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1347548613,
        "node_id": "IC_kwDOCVq1mM5QUfXF",
        "user": {
            "login": "nestarz",
            "id": 5360876,
            "node_id": "MDQ6VXNlcjUzNjA4NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5360876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nestarz",
            "html_url": "https://github.com/nestarz",
            "followers_url": "https://api.github.com/users/nestarz/followers",
            "following_url": "https://api.github.com/users/nestarz/following{/other_user}",
            "gists_url": "https://api.github.com/users/nestarz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nestarz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nestarz/subscriptions",
            "organizations_url": "https://api.github.com/users/nestarz/orgs",
            "repos_url": "https://api.github.com/users/nestarz/repos",
            "events_url": "https://api.github.com/users/nestarz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nestarz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-13T00:02:26Z",
        "updated_at": "2022-12-13T00:02:26Z",
        "author_association": "NONE",
        "body": "Any workarounds to make onnx runtime works on Deno ?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1347548613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1348786325",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1348786325",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1348786325,
        "node_id": "IC_kwDOCVq1mM5QZNiV",
        "user": {
            "login": "josephrocca",
            "id": 1167575,
            "node_id": "MDQ6VXNlcjExNjc1NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1167575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrocca",
            "html_url": "https://github.com/josephrocca",
            "followers_url": "https://api.github.com/users/josephrocca/followers",
            "following_url": "https://api.github.com/users/josephrocca/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrocca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrocca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrocca/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrocca/orgs",
            "repos_url": "https://api.github.com/users/josephrocca/repos",
            "events_url": "https://api.github.com/users/josephrocca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrocca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-13T15:20:42Z",
        "updated_at": "2022-12-13T15:20:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "@fs-eire Wondering if you could just add this to the top of the published `ort.js` file?\r\n\r\n```js\r\nif(typeof document === \"undefined\") {\r\n  var document = {currentScript:{src:import.meta.url}};\r\n}\r\n```\r\n\r\nI.e. just add a \"dummy\" `document` to fix the issue in Deno and other JS runtimes that don't have `document`/DOM stuff. It's not a \"proper\" fix, but is simple enough that it might make sense until the webpack stuff mentioned in my previous comment can be sorted out?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1348786325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1352201871",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1352201871",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1352201871,
        "node_id": "IC_kwDOCVq1mM5QmPaP",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-14T21:13:46Z",
        "updated_at": "2022-12-14T21:13:56Z",
        "author_association": "MEMBER",
        "body": "I found that Emscripten actually [supports this feature](https://github.com/emscripten-core/emscripten/blob/main/src/settings.js#L1235). I am trying to make a change to support it for ORTWEB.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1352201871/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1421182943",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1421182943",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1421182943,
        "node_id": "IC_kwDOCVq1mM5UtYff",
        "user": {
            "login": "nestarz",
            "id": 5360876,
            "node_id": "MDQ6VXNlcjUzNjA4NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5360876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nestarz",
            "html_url": "https://github.com/nestarz",
            "followers_url": "https://api.github.com/users/nestarz/followers",
            "following_url": "https://api.github.com/users/nestarz/following{/other_user}",
            "gists_url": "https://api.github.com/users/nestarz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nestarz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nestarz/subscriptions",
            "organizations_url": "https://api.github.com/users/nestarz/orgs",
            "repos_url": "https://api.github.com/users/nestarz/repos",
            "events_url": "https://api.github.com/users/nestarz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nestarz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-07T17:41:20Z",
        "updated_at": "2023-02-07T17:42:41Z",
        "author_association": "NONE",
        "body": "I published a repo with a working version of onnx-runtime-web on Deno (note: it discard multithreading !).\r\n\r\nhttps://github.com/nestarz/onnx_runtime\r\n\r\nI built the wasm files with:\r\n\r\n`set_property(TARGET onnxruntime_webassembly APPEND_STRING PROPERTY LINK_FLAGS \" -s EXPORT_ES6=1 -s MODULARIZE=1 -s USE_ES6_IMPORT_META=1\")`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1421182943/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1421776001",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1421776001",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1421776001,
        "node_id": "IC_kwDOCVq1mM5UvpSB",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-08T01:24:57Z",
        "updated_at": "2023-02-08T01:24:57Z",
        "author_association": "MEMBER",
        "body": "@nestarz thank you so much for this example! it's a good learning for me.\r\n\r\nCurrently, we have 3 different scenarios for consuming the onnxruntime-web library:\r\n1. consume from script tag ( `<script src=\"https://some-cdn-server/ort.min.js\">`):\r\n2. consume from module import ( `import * as ort from 'onnxruntime-web'` )\r\n3. consume from module URL (`import * as ort from \"https://deno.land/x/onnx_runtime/mod.ts\";`)\r\n\r\nThere are a few hacks we currently doing in our build process :\r\n\r\n -  the Emscripten generated file `ort-wasm.js` and `ort-wasm-simd.js` are identical in content. To reduce the final file size (ort.min.js), we force it to always use ort-wasm.js. This also apply to `ort-wasm-threaded.js` vs `ort-wasm-simd-threaded.js`.\r\n \r\n      the standard way:\r\n      ```ts\r\n      import ortWasmFactory from './binding/ort-wasm.js';\r\n      import ortWasmSimdFactory from './binding/ort-wasm-simd.js';\r\n\r\n      ...\r\n      if (simd) {\r\n          ortWasmSimdFactory()...\r\n      } else {\r\n          ortWasmFactory()...\r\n      }\r\n      ```\r\n\r\n      onnxruntime-web currently doing:\r\n      ```ts\r\n      import ortWasmFactory from './binding/ort-wasm.js';\r\n\r\n      ...\r\n      const config = {\r\n         locateFile: (fileName: string, scriptDirectory: string) => {\r\n            ...\r\n            if (fileName == 'ort-wasm.wasm' && simd) {\r\n               return 'ort-wasm-simd.wasm';\r\n            }\r\n         }\r\n      };\r\n      ortWasmFactory(config)...\r\n      ```\r\n\r\n      This indeed helped to reduce the final javascript size, but it caused the problem that webpack failed to analyze the file dependency of `ort-wasm-simd.wasm`, so it will not copy the web assembly file and modify the file path as it does by default.\r\n\r\n-  inline worker for proxy mode. The motivation of doing this is for simple distribution (scenario.1). By using the worker-loader webpack plugin, we are able to put whole content of the worker source code into an inline string so that we can distribute single file (ort.min.js).\r\n\r\n      standard way:\r\n      ```ts\r\n      proxyWorker = new Worker('./proxy-worker/main');\r\n      ```\r\n\r\n      onnxruntime-web currently doing:\r\n      ```ts\r\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\r\n      ```\r\n\r\n      the `require(worker-loader?...)` can only be understood by webpack with configured to use worker-loader plugin. Webpack recommended to use its builtin worker loader however it does not support inline mode.\r\n\r\n- override processing of `/ort-wasm.*\\.worker\\.js$/` to use `asset/source`. This also helps to inline the .worker.js file, but instead of using in proxy mode, this file is generated by Emscripten in multi-thread build. The file is processed as \"asset\" instead of source code, to work with special code so that we can still distribute a single file.\r\n\r\n      standard way:\r\n      ```ts\r\n      // no extra code\r\n      ```\r\n\r\n      onnxruntime-web currently doing:\r\n      ```ts\r\n      const config = {\r\n         locateFile: (fileName: string, scriptDirectory: string) => {\r\n            if (useThreads && fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\r\n                return URL.createObjectURL(new Blob(\r\n                    [ require('./binding/ort-wasm-threaded.worker.js') ],\r\n                    {type: 'text/javascript'}));\r\n            }\r\n          }\r\n        }\r\n        ...\r\n      ```\r\n\r\n- use `function.toString()` on the exported variable from file `ort-wasm-threaded.js` to reduce file size. This hack specifically rely on the UMD output type for the generated files and webpack config to preserve symbol name of `_scriptDir` and `ortWasmThreaded` to work.\r\n\r\n      standard way:\r\n      ```ts\r\n      // no extra code\r\n      ```\r\n\r\n      onnxruntime-web currently doing:\r\n      ```ts\r\n      const config = {\r\n          ...\r\n      };\r\n\r\n      if (useThreads) {\r\n        if (typeof Blob === 'undefined') {\r\n          config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\r\n        } else {\r\n          const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\r\n          config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\r\n        }\r\n      }\r\n      ```\r\n\r\ncombining of the hacks, it makes ORT web very difficult to support ES6 module for now. We need to re-think the balance between the benefit of (single-file distribution and file size) VS. (easy-to-maintain code and webpack friendly)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1421776001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1530968813",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1530968813",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1530968813,
        "node_id": "IC_kwDOCVq1mM5bQLrt",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-02T06:47:58Z",
        "updated_at": "2023-05-02T06:47:58Z",
        "author_association": "MEMBER",
        "body": "#15772: This change turns onnxruntime-common into a ESModule/commonJS \"dual\" package, which means it is able to comsumed as either a ESM or CJS module.\r\n\r\nWhen this is merged, following-up work will start for onnxruntime-web.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1530968813/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1594519366",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/10913#issuecomment-1594519366",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/10913",
        "id": 1594519366,
        "node_id": "IC_kwDOCVq1mM5fCm9G",
        "user": {
            "login": "josephrocca",
            "id": 1167575,
            "node_id": "MDQ6VXNlcjExNjc1NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1167575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephrocca",
            "html_url": "https://github.com/josephrocca",
            "followers_url": "https://api.github.com/users/josephrocca/followers",
            "following_url": "https://api.github.com/users/josephrocca/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephrocca/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephrocca/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephrocca/subscriptions",
            "organizations_url": "https://api.github.com/users/josephrocca/orgs",
            "repos_url": "https://api.github.com/users/josephrocca/repos",
            "events_url": "https://api.github.com/users/josephrocca/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephrocca/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-06-16T11:18:10Z",
        "updated_at": "2023-06-16T11:18:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just realised that OR Web currently works with Deno by simply setting `ort.env.wasm.wasmPaths` to avoid the issue I mentioned in my earlier comment. For example, this works:\r\n```js\r\nimport \"https://cdn.jsdelivr.net/npm/onnxruntime-web@1.15.0/dist/ort.js\";\r\nort.env.wasm.wasmPaths = \"https://cdn.jsdelivr.net/npm/onnxruntime-web@1.15.0/dist/\";\r\nlet onnxImageSession = await ort.InferenceSession.create(\"https://huggingface.co/rocca/openai-clip-js/resolve/main/clip-image-vit-32-float32.onnx\", { executionProviders: [\"wasm\"] });\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1594519366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]