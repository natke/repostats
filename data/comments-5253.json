[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/697734067",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-697734067",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 697734067,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzczNDA2Nw==",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-23T17:20:45Z",
        "updated_at": "2020-09-23T17:20:45Z",
        "author_association": "MEMBER",
        "body": "I compiled onnxruntime, release with debug information then used py-spy to profile:\r\n\r\n``py-spy record -r 5 -o profile.svg --native -- python perf_test_portable.py``\r\n\r\n![image](https://user-images.githubusercontent.com/22452781/94046947-a5ceb100-fdd1-11ea-960e-a3bfa8978cc9.png)\r\n\r\nonnxruntime spends some time in PrepareForReduce. It may be optimized.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/697734067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/699153960",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-699153960",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 699153960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTE1Mzk2MA==",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-25T21:03:09Z",
        "updated_at": "2020-09-25T21:03:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "@xadupre Could you also share the full output from the profiler? I'd be curious to see how the 70% of time outside `SequentialExecutor::Execute()` breaks down.\r\n\r\n(+1 to it being suspicious that `PrepareForReduce()` is taking a lot of time, but there must be something else to account for the difference between ORT and TF!)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/699153960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/699155861",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-699155861",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 699155861,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTE1NTg2MQ==",
        "user": {
            "login": "TomWildenhain-Microsoft",
            "id": 67606533,
            "node_id": "MDQ6VXNlcjY3NjA2NTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67606533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomWildenhain-Microsoft",
            "html_url": "https://github.com/TomWildenhain-Microsoft",
            "followers_url": "https://api.github.com/users/TomWildenhain-Microsoft/followers",
            "following_url": "https://api.github.com/users/TomWildenhain-Microsoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomWildenhain-Microsoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomWildenhain-Microsoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomWildenhain-Microsoft/subscriptions",
            "organizations_url": "https://api.github.com/users/TomWildenhain-Microsoft/orgs",
            "repos_url": "https://api.github.com/users/TomWildenhain-Microsoft/repos",
            "events_url": "https://api.github.com/users/TomWildenhain-Microsoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomWildenhain-Microsoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-25T21:07:47Z",
        "updated_at": "2020-09-25T21:07:47Z",
        "author_association": "MEMBER",
        "body": "[profile.zip](https://github.com/microsoft/onnxruntime/files/5285410/profile.zip)\r\nHere is the full profile information.  The script runs both TF and ONNX so only 30% of the time is ONNX.  The rest is loading and TF.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/699155861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/700978081",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-700978081",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 700978081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDk3ODA4MQ==",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-29T20:49:01Z",
        "updated_at": "2020-09-29T20:49:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks! In that case I don't have anything particular to add... it looks like element-by-element transpose in `PrepareForReduce()` is the long pole here (if the line numbers can be trusted).\r\n\r\nIt's not obvious from the profile whether the operators are intra-op parallelized. I don't see any other threads in the profile, but I do see 2.6% of the total cycles spent on this line:\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/9cec98ec1bcb6b8a668733fcd00d81af61b44d93/include/onnxruntime/core/platform/EigenNonBlockingThreadPool.h#L619\r\n\r\nPerhaps if we're not using intra-op parallelism there's a possible micro-optimization that avoids calling `Wait()` when the work is handled synchronously? (@tlh20 Does that sound likely?)\r\n\r\nIf we are using intra-op parallelism, it might be necessary to gather a profile with all threads to track down the problem (and then it might also worthwhile to separate out the ORT and TensorFlow execution into different runs and grab a few more samples). ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/700978081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701272833",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-701272833",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 701272833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTI3MjgzMw==",
        "user": {
            "login": "tlh20",
            "id": 66783730,
            "node_id": "MDQ6VXNlcjY2NzgzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/66783730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlh20",
            "html_url": "https://github.com/tlh20",
            "followers_url": "https://api.github.com/users/tlh20/followers",
            "following_url": "https://api.github.com/users/tlh20/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlh20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlh20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlh20/subscriptions",
            "organizations_url": "https://api.github.com/users/tlh20/orgs",
            "repos_url": "https://api.github.com/users/tlh20/repos",
            "events_url": "https://api.github.com/users/tlh20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlh20/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2020-09-30T09:22:52Z",
        "updated_at": "2020-09-30T09:22:52Z",
        "author_association": "MEMBER",
        "body": "It's unexpected if we see costs there @mrry but no threading.  If we are not parallelising the work then we pull out the special cases earlier and run sequentially https://github.com/microsoft/onnxruntime/blob/9cec98ec1bcb6b8a668733fcd00d81af61b44d93/include/onnxruntime/core/platform/EigenNonBlockingThreadPool.h#L553-L555",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701272833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701339992",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-701339992",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 701339992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTMzOTk5Mg==",
        "user": {
            "login": "tlh20",
            "id": 66783730,
            "node_id": "MDQ6VXNlcjY2NzgzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/66783730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlh20",
            "html_url": "https://github.com/tlh20",
            "followers_url": "https://api.github.com/users/tlh20/followers",
            "following_url": "https://api.github.com/users/tlh20/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlh20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlh20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlh20/subscriptions",
            "organizations_url": "https://api.github.com/users/tlh20/orgs",
            "repos_url": "https://api.github.com/users/tlh20/repos",
            "events_url": "https://api.github.com/users/tlh20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlh20/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2020-09-30T11:49:19Z",
        "updated_at": "2020-09-30T11:49:19Z",
        "author_association": "MEMBER",
        "body": "Looking into this some more, we don't seem to be spending much time inside parallel sections.  Measuring just the ORT perf section here, I see ~25% of wall-clock time at 4 threads.  I am not sure if that is operators that we are not parallelizing, or some other sequential work outside the basic graph execution.\r\n\r\nIn more detail:\r\n\r\n1. I added some more profiling to the test case to record CPU load via time.process_time() before and after each series of inference requests.  From \r\n [tiharr-log-1.txt](https://github.com/microsoft/onnxruntime/files/5305014/tiharr-log-1.txt) I'm seeing load of ~4 in ORT and ~4.8 in PT.  This reflects the ORT default on my desktop machine with 8 h/w threads and 4 cores.  I experimented with increasing the ORT thread count in case we could improve performance via hyperthreading.  I tested with 1..8.  We don't get any further benefit going beyond 4 threads.  We get a slight benefit pulling back to 2 threads (~320ms vs ~350ms).\r\n\r\n2. I added some more extra profiling from branch https://github.com/microsoft/onnxruntime/tree/tiharr/threading-test.  This enables collection of extra statistics of how ORT parallelizes loops.  See the lines starting \"intra-op\" in the log, repeated here:\r\n\r\n~~~~\r\nintra-op id: 2 ran_own: 39383 ran_stolen: 0 tried_to_block: 64 blocked: 63 wall_ms: 69636 busy_ms: 8940 spin_ms: 25870 blocked_ms: 34689\r\nintra-op id: 1 ran_own: 39382 ran_stolen: 0 tried_to_block: 70 blocked: 69 wall_ms: 69636 busy_ms: 8991 spin_ms: 25807 blocked_ms: 34708\r\nintra-op id: 0 ran_own: 39371 ran_stolen: 0 tried_to_block: 75 blocked: 74 wall_ms: 69638 busy_ms: 8996 spin_ms: 25790 blocked_ms: 34718\r\nintra-op num_tasks_rejected: 0 stand_alone_tasks: 0 parallel_tasks: 39390 mean_d_o_p: 4 total_scheduled: 118170 total_revoked: 34\r\nintra-op time_pre_ms: 92 time_running_ms: 8721 time_post_ms: 79 time_waiting_ms: 970\r\n~~~~\r\n\r\nThere is one line for each thread in the pool (0, 1, 2), plus a separate line for overall statistics and work done in the main thread.  The ORT part of the workload is taking 34.7s (ref the main ONNX wall ms result), but we are only spending 8.7s inside parallel sections (time_running_ms).  ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701339992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701389856",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-701389856",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 701389856,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTM4OTg1Ng==",
        "user": {
            "login": "tlh20",
            "id": 66783730,
            "node_id": "MDQ6VXNlcjY2NzgzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/66783730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlh20",
            "html_url": "https://github.com/tlh20",
            "followers_url": "https://api.github.com/users/tlh20/followers",
            "following_url": "https://api.github.com/users/tlh20/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlh20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlh20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlh20/subscriptions",
            "organizations_url": "https://api.github.com/users/tlh20/orgs",
            "repos_url": "https://api.github.com/users/tlh20/repos",
            "events_url": "https://api.github.com/users/tlh20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlh20/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2020-09-30T13:27:06Z",
        "updated_at": "2020-09-30T13:27:06Z",
        "author_association": "MEMBER",
        "body": "BTW, I concur with the sequential blocksize=1 case in PrepareForReduce being significant here.  ReduceMean stands out in the edge://tracing/ profiling.  Breaking down the time there via extra rdtsc calls shows ~90% of those operators being in the prepare step for this workload.  I do not have enough context on how the reductions work to know whether we should be parallelizing the PrepareForReduce, or looking to combine the transformation there with the actual reduction, or something else.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701389856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701452548",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-701452548",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 701452548,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTQ1MjU0OA==",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-30T15:08:28Z",
        "updated_at": "2020-09-30T15:08:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks Tim! I just learned that @zhanghuanrong is looking into the potential optimizations for the PrepareForReduce path.\r\n\r\nThe pyspy profiling seems a little confusing in this case, because it only appears to include the main thread. (Also, for comparison the TF C++ symbols seem to be broken, but it looks like the C and Win32 symbols are correct.)",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/701452548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/702457618",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-702457618",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 702457618,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjQ1NzYxOA==",
        "user": {
            "login": "xadupre",
            "id": 22452781,
            "node_id": "MDQ6VXNlcjIyNDUyNzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22452781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xadupre",
            "html_url": "https://github.com/xadupre",
            "followers_url": "https://api.github.com/users/xadupre/followers",
            "following_url": "https://api.github.com/users/xadupre/following{/other_user}",
            "gists_url": "https://api.github.com/users/xadupre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xadupre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xadupre/subscriptions",
            "organizations_url": "https://api.github.com/users/xadupre/orgs",
            "repos_url": "https://api.github.com/users/xadupre/repos",
            "events_url": "https://api.github.com/users/xadupre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xadupre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-02T00:02:29Z",
        "updated_at": "2020-10-02T00:02:29Z",
        "author_association": "MEMBER",
        "body": "I compared to numpy and tensorflow implementation. The ratio is good if the reduction happens on the last axes. When the reduction happens before, the matrix is transposed to move reduced dimensions to the last positions. The reduction is faster when it is done on the last axis but the transposition increases the processing time.\r\n\r\n![image](https://user-images.githubusercontent.com/22452781/94874464-5b44d880-0452-11eb-9252-3778a4cf3e77.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/702457618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748439619",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/5253#issuecomment-748439619",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/5253",
        "id": 748439619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODQzOTYxOQ==",
        "user": {
            "login": "stale[bot]",
            "id": 26384082,
            "node_id": "MDM6Qm90MjYzODQwODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stale%5Bbot%5D",
            "html_url": "https://github.com/apps/stale",
            "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2020-12-19T08:13:00Z",
        "updated_at": "2020-12-19T08:13:00Z",
        "author_association": "NONE",
        "body": "This issue has been automatically marked as stale due to inactivity and will be closed in 7 days if no further activity occurs. If further support is needed, please provide an update and/or more details.\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/748439619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]