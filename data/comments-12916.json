[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1243105145",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12916#issuecomment-1243105145",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12916",
        "id": 1243105145,
        "node_id": "IC_kwDOCVq1mM5KGEd5",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-12T01:23:33Z",
        "updated_at": "2022-09-12T01:23:33Z",
        "author_association": "MEMBER",
        "body": "The 'Add' operator had some additional types added in opset 14. Those types aren't relevant here, so the existing implementation should work as is.\r\n\r\nCan you try updating the supported opset versions for Add in all places where it has '{7, 13}' to be '{7, 13, 14}'?\r\n\r\ne.g.\r\nhttps://github.com/microsoft/onnxruntime/blob/1e34440c370d40085fad5fd1b1002b4a04c5991d/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc#L165-L167\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1243105145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1244593626",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12916#issuecomment-1244593626",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12916",
        "id": 1244593626,
        "node_id": "IC_kwDOCVq1mM5KLv3a",
        "user": {
            "login": "sunnyshu-intel",
            "id": 102830081,
            "node_id": "U_kgDOBiEQAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/102830081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunnyshu-intel",
            "html_url": "https://github.com/sunnyshu-intel",
            "followers_url": "https://api.github.com/users/sunnyshu-intel/followers",
            "following_url": "https://api.github.com/users/sunnyshu-intel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunnyshu-intel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunnyshu-intel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunnyshu-intel/subscriptions",
            "organizations_url": "https://api.github.com/users/sunnyshu-intel/orgs",
            "repos_url": "https://api.github.com/users/sunnyshu-intel/repos",
            "events_url": "https://api.github.com/users/sunnyshu-intel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunnyshu-intel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-12T22:17:59Z",
        "updated_at": "2022-09-12T22:17:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "> The 'Add' operator had some additional types added in opset 14. Those types aren't relevant here, so the existing implementation should work as is.\r\n> \r\n> Can you try updating the supported opset versions for Add in all places where it has '{7, 13}' to be '{7, 13, 14}'?\r\n> \r\n> e.g.\r\n> \r\n> https://github.com/microsoft/onnxruntime/blob/1e34440c370d40085fad5fd1b1002b4a04c5991d/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc#L165-L167\r\n\r\nI applied changes as follow, recompiled and reinstalled the ort, but it is giving me the same results.\r\n\r\n```bash\r\ndiff --git a/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc b/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc\r\nindex a81ca6705..c980905d8 100644\r\n--- a/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc\r\n+++ b/onnxruntime/core/optimizer/skip_layer_norm_fusion.cc\r\n@@ -163,8 +163,8 @@ Status SkipLayerNormFusion::ApplyImpl(Graph& graph, bool& modified, int graph_le\r\n\r\n     // Format 1\r\n     std::vector<graph_utils::EdgeEndToMatch> format1_parent_path{\r\n-        {0, 0, \"Add\", {7, 13}, kOnnxDomain},\r\n-        {0, 0, \"Add\", {7, 13}, kOnnxDomain}};\r\n+        {0, 0, \"Add\", {7, 13, 14}, kOnnxDomain},\r\n+        {0, 0, \"Add\", {7, 13, 14}, kOnnxDomain}};\r\n\r\n     std::vector<const Node::EdgeEnd*> edges;\r\n     if (graph_utils::FindPath(ln_node, true, format1_parent_path, edges, logger)) {\r\n@@ -182,8 +182,8 @@ Status SkipLayerNormFusion::ApplyImpl(Graph& graph, bool& modified, int graph_le\r\n     if (matched_format == Format::None) {\r\n       // Format 2\r\n       std::vector<graph_utils::EdgeEndToMatch> format2_parent_path{\r\n-          {0, 0, \"Add\", {7, 13}, kOnnxDomain},\r\n-          {0, 1, \"Add\", {7, 13}, kOnnxDomain}};\r\n+          {0, 0, \"Add\", {7, 13, 14}, kOnnxDomain},\r\n+          {0, 1, \"Add\", {7, 13, 14}, kOnnxDomain}};\r\n\r\n       if (graph_utils::FindPath(ln_node, true, format2_parent_path, edges, logger)) {\r\n         p_add1 = const_cast<Node*>(&edges[0]->GetNode());\r\n@@ -201,7 +201,7 @@ Status SkipLayerNormFusion::ApplyImpl(Graph& graph, bool& modified, int graph_le\r\n     if (matched_format == Format::None) {\r\n       // Format 3\r\n       std::vector<graph_utils::EdgeEndToMatch> format3_parent_path{\r\n-          {0, 0, \"Add\", {7, 13}, kOnnxDomain}};\r\n+          {0, 0, \"Add\", {7, 13, 14}, kOnnxDomain}};\r\n\r\n       if (graph_utils::FindPath(ln_node, true, format3_parent_path, edges, logger)) {\r\n         p_add1 = const_cast<Node*>(&edges[0]->GetNode());\r\n```\r\n\r\nOne more thing when I checked graph optimization with **CPUExecutionProvider**, for both the cases the desired and undesired results was exactly as described in the question. But when I changed execution provider to **DnnlExecutionProvider** in **_ort.InferenceSession_**, for both the  cases I get the following error.\r\n\r\n```bash\r\nonnxruntime.capi.onnxruntime_pybind11_state.Fail: [ONNXRuntimeError] : 1 : FAIL : Unable to serialize model as it contains compiled nodes. Please disable any execution providers which generate compiled nodes.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1244593626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1247913027",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12916#issuecomment-1247913027",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12916",
        "id": 1247913027,
        "node_id": "IC_kwDOCVq1mM5KYaRD",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-15T10:34:01Z",
        "updated_at": "2022-09-15T10:34:01Z",
        "author_association": "MEMBER",
        "body": "Couple of factors here. \r\n\r\nOriginally LayerNormalization was an ORT internal operator. Unfortunately when it was created it was defined as using the ONNX domain which slightly confuses things as it's using the ONNX opset instead of the ORT domain's opset to match a kernel.\r\n\r\nThe latest version of ONNX adds an official LayerNormalization operator, and because the internal operator is using the ONNX domain instead of our internal domain, it now matches the ONNX operator in opset 17. The ONNX LayerNormalization is defined as a function. As there's no kernel registered for ONNX opset 17 in ORT to handle LayerNormalization the function gets expanded into the nodes that you see, which happens prior to fusion.\r\n\r\nQuickest option would be to use opset 16 for your model (would still require the update to add opset 14 of 'Add' to the optimizer).\r\n\r\nThis draft PR (#12978) will do the fusion as expected, but I haven't verified that there are no diffs between the ONNX spec and what the contrib op does.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1247913027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1252725055",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/12916#issuecomment-1252725055",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/12916",
        "id": 1252725055,
        "node_id": "IC_kwDOCVq1mM5KqxE_",
        "user": {
            "login": "sunnyshu-intel",
            "id": 102830081,
            "node_id": "U_kgDOBiEQAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/102830081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunnyshu-intel",
            "html_url": "https://github.com/sunnyshu-intel",
            "followers_url": "https://api.github.com/users/sunnyshu-intel/followers",
            "following_url": "https://api.github.com/users/sunnyshu-intel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunnyshu-intel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunnyshu-intel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunnyshu-intel/subscriptions",
            "organizations_url": "https://api.github.com/users/sunnyshu-intel/orgs",
            "repos_url": "https://api.github.com/users/sunnyshu-intel/repos",
            "events_url": "https://api.github.com/users/sunnyshu-intel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunnyshu-intel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-20T18:08:59Z",
        "updated_at": "2022-09-20T20:59:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "This issue is taken care of by the draft PR (#12978). I have checked it with the latest [patch](https://patch-diff.githubusercontent.com/raw/microsoft/onnxruntime/pull/12978.patch). The method I used to check is described in this [reply](https://github.com/microsoft/onnxruntime/pull/12978#issuecomment-1248743483) to the draft PR (#12978) which is the same as the [start](https://github.com/microsoft/onnxruntime/issues/12916#issue-1368347620) of the current issue (#12916). It seems to work and give the desired results.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1252725055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]