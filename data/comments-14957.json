[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1473010722",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14957#issuecomment-1473010722",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14957",
        "id": 1473010722,
        "node_id": "IC_kwDOCVq1mM5XzFwi",
        "user": {
            "login": "t107598066",
            "id": 48681566,
            "node_id": "MDQ6VXNlcjQ4NjgxNTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48681566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t107598066",
            "html_url": "https://github.com/t107598066",
            "followers_url": "https://api.github.com/users/t107598066/followers",
            "following_url": "https://api.github.com/users/t107598066/following{/other_user}",
            "gists_url": "https://api.github.com/users/t107598066/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t107598066/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t107598066/subscriptions",
            "organizations_url": "https://api.github.com/users/t107598066/orgs",
            "repos_url": "https://api.github.com/users/t107598066/repos",
            "events_url": "https://api.github.com/users/t107598066/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t107598066/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-17T02:10:49Z",
        "updated_at": "2023-03-17T02:21:21Z",
        "author_association": "NONE",
        "body": "I predict the image with onnxruntime sample code is under below.\r\nCheck the cpu memory and gpu memory changed.\r\nIs cpu and gpu memory is not entire release too?\r\n\r\nCould anyone give me some answer or suggestion?\r\nthanks.\r\n\r\nDebug at begin ,before release and return.\r\n![image](https://user-images.githubusercontent.com/48681566/225795370-638d351e-cadd-4d15-93da-26f7122fb34f.png)\r\n![image](https://user-images.githubusercontent.com/48681566/225795490-161365fb-1469-48df-be24-42f0e1e7774f.png)\r\n![image](https://user-images.githubusercontent.com/48681566/225795581-10ff3bc2-0e07-4092-860f-c249d1b37eca.png)\r\n\r\n\r\n\r\n```\r\n#include <iostream>\r\n#include <string>\r\n#include <onnxruntime_cxx_api.h>\r\n#include <opencv2\\opencv.hpp>\r\n#include <ctime>\r\n#include <vector>\r\n\r\nconst OrtApi* g_ort = NULL;\r\n\r\nint test_onnx(\r\n    int test_onnx(\r\n    cv::Mat blob,\r\n    OrtSession* session,\r\n    OrtAllocator* allocator,\r\n    OrtMemoryInfo* memory_info,\r\n    OrtCUDAProviderOptionsV2* cuda_options,\r\n    std::vector<const char*> input_node_names,\r\n    std::vector<const char*> output_node_names,\r\n    int model_height,\r\n    int model_width) {\r\n\r\n    std::vector<int64_t> input_node_dims = { 1, 3, model_height, model_width };\r\n\r\n    OrtValue* input_tensor = NULL;\r\n    OrtValue* output_tensor = NULL;\r\n\r\n    g_ort->CreateTensorWithDataAsOrtValue(memory_info, blob.ptr<float>(), blob.total() * sizeof(float), input_node_dims.data(), input_node_dims.size(), ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT, &input_tensor);\r\n    \r\n    int startTime = clock();\r\n    \r\n    auto output_tensors = g_ort->Run(\r\n        session,\r\n        Ort::RunOptions{ nullptr },\r\n        input_node_names.data(),\r\n        (const OrtValue* const*)& input_tensor,\r\n        input_node_names.size(),\r\n        output_node_names.data(),\r\n        output_node_names.size(),\r\n        &output_tensor);\r\n\r\n    int detect_time = clock() - startTime;\r\n    std::cout << clock() - startTime << std::endl;\r\n\r\n    float* floatarr;\r\n    g_ort->GetTensorMutableData(output_tensor, (void**)&floatarr);    \r\n\r\n    /*\r\n    cv::Mat mask = cv::Mat::zeros(input_node_dims[2], input_node_dims[3], CV_32F);    \r\n\r\n    for (int i = 0; i < input_node_dims[2]; i++) {\r\n        for (int j = 0; j < input_node_dims[3]; j++) {\r\n            mask.at<float>(i, j) = floatarr[i * input_node_dims[2] + j];\r\n        }\r\n    }\r\n    */\r\n\r\n    g_ort->ReleaseValue(output_tensor);\r\n    g_ort->ReleaseValue(input_tensor);\r\n    output_tensor = nullptr;\r\n    input_tensor = nullptr;\r\n\r\n    return detect_time;\r\n}\r\n\r\nint main() {\r\n\r\n    const wchar_t* model_path = L\"C:/Users/uese/Desktop/en/Project1/model.onnx\";    \r\n    \r\n    const OrtApiBase* ptr_api_base = OrtGetApiBase();\r\n    g_ort = ptr_api_base->GetApi(ORT_API_VERSION);    \r\n\r\n    printf(\"Using Onnxruntime C++ API\\n\");\r\n\r\n    OrtEnv* env;\r\n    g_ort->CreateEnv(ORT_LOGGING_LEVEL_ERROR, \"test\", &env);\r\n    OrtSessionOptions* session_options;\r\n    g_ort->CreateSessionOptions(&session_options);\r\n\r\n    OrtCUDAProviderOptionsV2* cuda_options = nullptr;\r\n    g_ort->CreateCUDAProviderOptions(&cuda_options);\r\n\r\n    std::vector<const char*> keys{ \"device_id\", \"gpu_mem_limit\", \"arena_extend_strategy\", \"cudnn_conv_algo_search\", \"do_copy_in_default_stream\", \"cudnn_conv_use_max_workspace\", \"cudnn_conv1d_pad_to_nc1d\" };\r\n    std::vector<const char*> values{ \"0\", \"2147483648\", \"kSameAsRequested\", \"DEFAULT\", \"1\", \"1\", \"1\" };\r\n\r\n    g_ort->UpdateCUDAProviderOptions(cuda_options, keys.data(), values.data(), keys.size());\r\n    g_ort->SessionOptionsAppendExecutionProvider_CUDA_V2(session_options, cuda_options);\r\n       \r\n    OrtSession* session;\r\n    g_ort->CreateSession(env, model_path, session_options, &session);\r\n\r\n    g_ort->DisableCpuMemArena(session_options);\r\n    g_ort->DisableMemPattern(session_options);        \r\n\r\n    OrtAllocator* allocator;\r\n    g_ort->GetAllocatorWithDefaultOptions(&allocator);\r\n\r\n    OrtMemoryInfo* memory_info;\r\n    g_ort->CreateCpuMemoryInfo(OrtArenaAllocator, OrtMemTypeDefault, &memory_info);\r\n\r\n    OrtTypeInfo* inputTypeInfo = nullptr;\r\n    OrtStatus* status = g_ort->SessionGetInputTypeInfo(session, 0, &inputTypeInfo);\r\n    const OrtTensorTypeAndShapeInfo* inputTensorInfo;\r\n    g_ort->CastTypeInfoToTensorInfo(inputTypeInfo, &inputTensorInfo);\r\n\r\n    size_t numDims = -1;\r\n    g_ort->GetDimensionsCount(inputTensorInfo, &numDims);\r\n    std::vector<int64_t> inputNodeDims = std::vector<int64_t>(numDims);\r\n    g_ort->GetDimensions(inputTensorInfo, inputNodeDims.data(), numDims);\r\n\r\n    int model_height = static_cast<int>(inputNodeDims[2]);\r\n    int model_width = static_cast<int>(inputNodeDims[3]);\r\n\r\n    g_ort->ReleaseTypeInfo(inputTypeInfo);\r\n\r\n    long long t = 0;\r\n\r\n    int start = clock();\r\n\r\n    char* input_name = nullptr;\r\n    char* output_name = nullptr;\r\n\r\n    g_ort->SessionGetInputName(session, 0, allocator, &input_name);\r\n    g_ort->SessionGetOutputName(session, 0, allocator, &output_name);\r\n\r\n    std::vector<const char*> input_node_names = { input_name };\r\n    std::vector<const char*> output_node_names = { output_name };\r\n\r\n    for (int i = 1801; i < 1810; i++) {       \r\n        std::string path = \"C:/Users/user/Desktop/en/Project1/rcm.bmp\";\r\n\r\n        cv::Mat image = cv::imread(path);\r\n        cv::resize(image, image, cv::Size(1024, 1024));\r\n        cv::Mat normalized_image = normalize(image);\r\n        cv::Mat blob = blobFromImage(normalized_image);\r\n\r\n        int per_detect_time = test_onnx(\r\n            blob, \r\n            session, \r\n            allocator, \r\n            memory_info, \r\n            cuda_options, \r\n            input_node_names,\r\n            output_node_names,\r\n            model_height,\r\n            model_width);\r\n    }\r\n\r\n    g_ort->ReleaseMemoryInfo(memory_info);\r\n    allocator->Free(allocator, input_name);\r\n    allocator->Free(allocator, output_name);\r\n\r\n    g_ort->ReleaseCUDAProviderOptions(cuda_options);\r\n    g_ort->ReleaseSession(session);\r\n    g_ort->ReleaseSessionOptions(session_options);\r\n    g_ort->ReleaseEnv(env);\r\n\r\n    printf(\"Done\");\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1473010722/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1475739295",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14957#issuecomment-1475739295",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14957",
        "id": 1475739295,
        "node_id": "IC_kwDOCVq1mM5X9f6f",
        "user": {
            "login": "rytisaugustauskas",
            "id": 114000033,
            "node_id": "U_kgDOBsuAoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/114000033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rytisaugustauskas",
            "html_url": "https://github.com/rytisaugustauskas",
            "followers_url": "https://api.github.com/users/rytisaugustauskas/followers",
            "following_url": "https://api.github.com/users/rytisaugustauskas/following{/other_user}",
            "gists_url": "https://api.github.com/users/rytisaugustauskas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rytisaugustauskas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rytisaugustauskas/subscriptions",
            "organizations_url": "https://api.github.com/users/rytisaugustauskas/orgs",
            "repos_url": "https://api.github.com/users/rytisaugustauskas/repos",
            "events_url": "https://api.github.com/users/rytisaugustauskas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rytisaugustauskas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-20T07:22:39Z",
        "updated_at": "2023-03-20T07:23:01Z",
        "author_association": "NONE",
        "body": "I can see similar behavior [only related to CUDA]. After releasing the model it leaves some memory allocated in the RAM. Although, reloading the model multiple times does not allocate memory again (seems that it is reusing the same allocated memory). Note that the same model's memory loaded for CPU inference is managed nicely.\r\n\r\nStill, it would be nice to know if it is possible to do the full cleanup in CUDA inference.\r\n\r\nI am using C++ API",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1475739295/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1475741574",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14957#issuecomment-1475741574",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14957",
        "id": 1475741574,
        "node_id": "IC_kwDOCVq1mM5X9geG",
        "user": {
            "login": "rytisaugustauskas",
            "id": 114000033,
            "node_id": "U_kgDOBsuAoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/114000033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rytisaugustauskas",
            "html_url": "https://github.com/rytisaugustauskas",
            "followers_url": "https://api.github.com/users/rytisaugustauskas/followers",
            "following_url": "https://api.github.com/users/rytisaugustauskas/following{/other_user}",
            "gists_url": "https://api.github.com/users/rytisaugustauskas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rytisaugustauskas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rytisaugustauskas/subscriptions",
            "organizations_url": "https://api.github.com/users/rytisaugustauskas/orgs",
            "repos_url": "https://api.github.com/users/rytisaugustauskas/repos",
            "events_url": "https://api.github.com/users/rytisaugustauskas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rytisaugustauskas/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-20T07:25:18Z",
        "updated_at": "2023-03-20T07:25:18Z",
        "author_association": "NONE",
        "body": "Seems to be fixed here: #15040 ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1475741574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]