[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4017",
        "id": 622824098,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIxNjE1ODMx",
        "number": 4017,
        "title": "Clean up CUDAExecutionProvider's associated PerThreadContexts on destruction",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-21T22:16:34Z",
        "updated_at": "2020-05-27T18:01:45Z",
        "closed_at": "2020-05-27T18:01:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4017",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4017",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4017.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4017.patch",
            "merged_at": "2020-05-27T18:01:44Z"
        },
        "body": "**Description**\r\nClean up a CUDAExecutionProvider's associated PerThreadContext instances when that CUDAExecutionProvider is destroyed.\r\n\r\nRevert workaround (introduced in #3767) to lazily initialize CUDA handles to avoid segmentation fault. For that case, the CUDA handle cleanup was happening quite a bit later than the CUDAExecutionProvider destructor. This should be a cleaner way to fix that.\r\n\r\n**Motivation and Context**\r\nClean up a workaround.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4017/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4018",
        "id": 622867286,
        "node_id": "MDU6SXNzdWU2MjI4NjcyODY=",
        "number": 4018,
        "title": "Significant loading time with TensorRT compared to not",
        "user": {
            "login": "solarflarefx",
            "id": 45402633,
            "node_id": "MDQ6VXNlcjQ1NDAyNjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/45402633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solarflarefx",
            "html_url": "https://github.com/solarflarefx",
            "followers_url": "https://api.github.com/users/solarflarefx/followers",
            "following_url": "https://api.github.com/users/solarflarefx/following{/other_user}",
            "gists_url": "https://api.github.com/users/solarflarefx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solarflarefx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solarflarefx/subscriptions",
            "organizations_url": "https://api.github.com/users/solarflarefx/orgs",
            "repos_url": "https://api.github.com/users/solarflarefx/repos",
            "events_url": "https://api.github.com/users/solarflarefx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solarflarefx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2204061391,
                "node_id": "MDU6TGFiZWwyMjA0MDYxMzkx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:TensorRT",
                "name": "ep:TensorRT",
                "color": "0052CC",
                "default": false,
                "description": "issues related to TensorRT execution provider"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-22T00:21:29Z",
        "updated_at": "2020-09-20T20:40:09Z",
        "closed_at": "2020-09-20T20:40:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI built ONNX Runtime from source with TensorRT.  I am noticing that it's taking a significant amount of time to load the model and run the first inference as compared to not using TensorRT.\r\n\r\nUpon trying to load the model, I get: Your ONNX model has been generated with INT64 weights, while TensorRT does not natively support INT64. Attempting to cast down to INT32.\r\n\r\nThis cast down takes a long time.\r\n\r\n- It takes ~35X longer to load with network with TRT compared to not using it\r\n- It takes ~40X longer to run the first inference with TRT compared to not using it\r\n- From thereon, inference is faster by ~20-25% with TRT compared to not using it\r\n\r\nIs there something that can be done?  Anything I can do to pre-condition the ONNX model or would that cause more of a problem?  Is there another approach?  Do the numbers I am showing here seem normal or do they indicate that something is off?\r\n\r\nMy two modes of comparison:\r\n\r\n`\r\n            // Create session options and set the graph optimization level for the session\r\n            SessionOptions options = new SessionOptions();\r\n            int gpuDeviceId = 0; // The GPU device ID to execute on\r\n            options.AppendExecutionProvider_CUDA(gpuDeviceId);\r\n            //options.AppendExecutionProvider_Tensorrt(gpuDeviceId);\r\n            options.GraphOptimizationLevel = GraphOptimizationLevel.ORT_ENABLE_ALL;\r\n\r\n            ...\r\n\r\n            using (var session = new InferenceSession(modelPath, options))\r\n            {\r\n                 ....\r\n            }\r\n`\r\n\r\n\r\nTRT Version:\r\n`\r\n                 // Create session options and set the graph optimization level for the session\r\n                SessionOptions options = new SessionOptions();\r\n                int gpuDeviceId = 0; // The GPU device ID to execute on\r\n                //options.AppendExecutionProvider_CUDA(gpuDeviceId);\r\n                options.AppendExecutionProvider_Tensorrt(gpuDeviceId);\r\n                options.GraphOptimizationLevel = GraphOptimizationLevel.ORT_ENABLE_ALL;\r\n`\r\n`\r\n            ...\r\n\r\n            using (var session = new InferenceSession(modelPath, options))\r\n            {\r\n                 ....\r\n            }\r\n`\r\n\r\n\r\nWhen I say loading time, I am referring to executing the using statement.  I put a stopwatch before and directly after the using statement.\r\n\r\n**System information**\r\n- Onnx Runtime Version: 1.2.0 Built from source (RelWithDebInfo)\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 64-Bit\r\n- Visual Studio: VS 2019\r\n- API: C#\r\n- TensorRT Version 7\r\n- CUDA version: 10.1 w/ cuDNN\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4018/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4019",
        "id": 623395323,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyMDc1Mjky",
        "number": 4019,
        "title": "Refactor delayloading",
        "user": {
            "login": "tiagoshibata",
            "id": 5521887,
            "node_id": "MDQ6VXNlcjU1MjE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5521887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tiagoshibata",
            "html_url": "https://github.com/tiagoshibata",
            "followers_url": "https://api.github.com/users/tiagoshibata/followers",
            "following_url": "https://api.github.com/users/tiagoshibata/following{/other_user}",
            "gists_url": "https://api.github.com/users/tiagoshibata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tiagoshibata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tiagoshibata/subscriptions",
            "organizations_url": "https://api.github.com/users/tiagoshibata/orgs",
            "repos_url": "https://api.github.com/users/tiagoshibata/repos",
            "events_url": "https://api.github.com/users/tiagoshibata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tiagoshibata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-22T18:11:32Z",
        "updated_at": "2020-05-25T06:26:32Z",
        "closed_at": "2020-05-25T06:26:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4019",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4019",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4019.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4019.patch",
            "merged_at": "2020-05-25T06:26:31Z"
        },
        "body": "**Description**: Add `target_delayload` to avoid having to repeat the Windows Store condition every time we delayload. Also fixes some hardcoded usages of delayimp.lib",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4019/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4020",
        "id": 623592626,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyMjI5ODk5",
        "number": 4020,
        "title": "Enlarge protobuf read buffer size",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-23T06:21:17Z",
        "updated_at": "2020-05-24T23:31:12Z",
        "closed_at": "2020-05-24T23:31:11Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4020",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4020",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4020.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4020.patch",
            "merged_at": "2020-05-24T23:31:11Z"
        },
        "body": "**Description**: \r\n1. Enlarge protobuf read buffer size from 8KB(default) to 1MB.\r\n\r\nOur Azure build VM has a IOPS cap of 500, which is far less a physical SSD can do.\r\nhttps://azure.microsoft.com/en-us/pricing/details/managed-disks/\r\n\r\nA real SSD can do 100k-500k reads per second!\r\nhttps://www.intel.com/content/dam/www/public/us/en/documents/product-specifications/ssd-750-spec.pdf\r\n\r\nWith 500 IOPS and 8KB buffer size, we can only achieve 3.9MB/s disk speed, which means it need about 2-3 minutes to load an ONNX model zoo model, 2 hours to read all of our test data, which is not acceptable.  That's why you can frequently see job timeout in our Windows CI build pipeline.\r\n\r\n2. Temporarily disable windows static analysis CI job\r\n\r\nBecause the latest protobuf changed the proto classes to final, so some of our code can't be compiled. I don't know how to fix it. In order to unblock the other PRs, I'll temporarily disable the job and try to seek help in the next week when everyone is back. \r\n\r\np.s. Don't use std::fstream. The buffer size is hard coded to 4095, there is no way to change it.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4021",
        "id": 623687682,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyMjkxODgy",
        "number": 4021,
        "title": "Pad: Add support for all datatypes in opset-11 spec",
        "user": {
            "login": "mayeut",
            "id": 9768336,
            "node_id": "MDQ6VXNlcjk3NjgzMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9768336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mayeut",
            "html_url": "https://github.com/mayeut",
            "followers_url": "https://api.github.com/users/mayeut/followers",
            "following_url": "https://api.github.com/users/mayeut/following{/other_user}",
            "gists_url": "https://api.github.com/users/mayeut/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mayeut/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mayeut/subscriptions",
            "organizations_url": "https://api.github.com/users/mayeut/orgs",
            "repos_url": "https://api.github.com/users/mayeut/repos",
            "events_url": "https://api.github.com/users/mayeut/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mayeut/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-05-23T15:52:34Z",
        "updated_at": "2020-05-27T22:16:42Z",
        "closed_at": "2020-05-27T22:05:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4021",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4021",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4021.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4021.patch",
            "merged_at": "2020-05-27T22:05:14Z"
        },
        "body": "**Description**:\r\n\r\nPad opset-11 implementation supports:\r\nint32, int64, float & double\r\n\r\nPer specification, Pad opset-11 also supports:\r\nuint8, uint16, uint32, uint64, int8, int16 & float16\r\n\r\nThis commit add support for those types to get full coverage of Pad opset-11 operator.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n\r\nThe main motivation is to get uint8/int8 support as it allows usage of Pad in quantized network.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4022",
        "id": 623979809,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyNDk0MDAz",
        "number": 4022,
        "title": "remove --use_openmp in build.sh",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-25T00:34:10Z",
        "updated_at": "2020-05-25T21:17:50Z",
        "closed_at": "2020-05-25T21:17:49Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4022",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4022",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4022.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4022.patch",
            "merged_at": "2020-05-25T21:17:49Z"
        },
        "body": "**Description**: \r\n\r\nSee #3657\r\n\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4022/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4023",
        "id": 624109398,
        "node_id": "MDU6SXNzdWU2MjQxMDkzOTg=",
        "number": 4023,
        "title": "Reduce libraries disk footprint on mobile device",
        "user": {
            "login": "ThomasRetornaz",
            "id": 1019047,
            "node_id": "MDQ6VXNlcjEwMTkwNDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1019047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ThomasRetornaz",
            "html_url": "https://github.com/ThomasRetornaz",
            "followers_url": "https://api.github.com/users/ThomasRetornaz/followers",
            "following_url": "https://api.github.com/users/ThomasRetornaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ThomasRetornaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ThomasRetornaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ThomasRetornaz/subscriptions",
            "organizations_url": "https://api.github.com/users/ThomasRetornaz/orgs",
            "repos_url": "https://api.github.com/users/ThomasRetornaz/repos",
            "events_url": "https://api.github.com/users/ThomasRetornaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ThomasRetornaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "guoyu-wang",
            "id": 62914304,
            "node_id": "MDQ6VXNlcjYyOTE0MzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guoyu-wang",
            "html_url": "https://github.com/guoyu-wang",
            "followers_url": "https://api.github.com/users/guoyu-wang/followers",
            "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
            "repos_url": "https://api.github.com/users/guoyu-wang/repos",
            "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "guoyu-wang",
                "id": 62914304,
                "node_id": "MDQ6VXNlcjYyOTE0MzA0",
                "avatar_url": "https://avatars.githubusercontent.com/u/62914304?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/guoyu-wang",
                "html_url": "https://github.com/guoyu-wang",
                "followers_url": "https://api.github.com/users/guoyu-wang/followers",
                "following_url": "https://api.github.com/users/guoyu-wang/following{/other_user}",
                "gists_url": "https://api.github.com/users/guoyu-wang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/guoyu-wang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guoyu-wang/subscriptions",
                "organizations_url": "https://api.github.com/users/guoyu-wang/orgs",
                "repos_url": "https://api.github.com/users/guoyu-wang/repos",
                "events_url": "https://api.github.com/users/guoyu-wang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/guoyu-wang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2020-05-25T07:40:11Z",
        "updated_at": "2020-07-23T11:38:15Z",
        "closed_at": "2020-07-23T11:38:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, first off all thank you for this awesome library !\r\nwe are very impress of the inference speed of the lib both on desktop and device.\r\n\r\n**Describe the bug**\r\nUnfortunately, In mobile case,  ort libraries sizes are a **no go for any industrial deployment** (that's why i don't put this demand as a feature request)\r\nIn fact Ort library footprint is near 300 Mo for android case\r\nOf course we can't use linker to reduce the size because the linker couldn't know the symbols it should keep, it will depend on the DNN models.\r\n\r\n**Urgency**\r\nWe benchmark many different DNN inference library (torch,MNN,TensorFlow,etc...)  and we are happy with ort both on desktop and device\r\nThis bug/feature request prevent (on your sides) the choice of ort as a new inner DNN engine in addition of our legacy one\r\nSo its important but not critical for the moment\r\n\r\n**System information**\r\n- OS Platform and Distribution Debian stretch,we are migrating to debian buster\r\n- ONNX Runtime installed from source\r\n- ONNX Runtime version: 1.2\r\n- Python version: (Not relevant)\r\n- Visual Studio version (if applicable): Visual Studio 15 2017\r\n- GCC/Compiler version (if compiling from source):g++ 6.3.0\r\n- CUDA/cuDNN version:(Not relevant)\r\n- GPU model and memory:(Not relevant)\r\n\r\n**To Reproduce**\r\n- follow linux steps of https://github.com/microsoft/onnxruntime/blob/master/BUILD.md#Android\r\n\r\n**Expected behavior**\r\nAt least an option for building only inference part \r\nsome bonus will be a  prunning tool which regarding the descriptions of NN models (if we don't use CNN no need to build or link this part) prune the library (Similar to pytorch mecanism maybee).\r\n\r\n**Screenshots**\r\nNot applicable\r\n\r\n**Additional context**\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4023/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4024",
        "id": 624271012,
        "node_id": "MDU6SXNzdWU2MjQyNzEwMTI=",
        "number": 4024,
        "title": "MaskRCNN model fails on GPU if there are no predictions",
        "user": {
            "login": "Chmielok",
            "id": 11256341,
            "node_id": "MDQ6VXNlcjExMjU2MzQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11256341?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chmielok",
            "html_url": "https://github.com/Chmielok",
            "followers_url": "https://api.github.com/users/Chmielok/followers",
            "following_url": "https://api.github.com/users/Chmielok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chmielok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chmielok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chmielok/subscriptions",
            "organizations_url": "https://api.github.com/users/Chmielok/orgs",
            "repos_url": "https://api.github.com/users/Chmielok/repos",
            "events_url": "https://api.github.com/users/Chmielok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chmielok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-25T12:31:09Z",
        "updated_at": "2020-08-02T05:43:56Z",
        "closed_at": "2020-08-02T05:43:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nThere is a CUDA error if 2 requirements are fulfilled:\r\n- the inference uses GPU\r\n- the MaskRCNN model does not detect anything\r\n\r\nThe error looks like this:\r\n```\r\n2020-05-25 12:31:47.9397309 [E:onnxruntime:CSharpOnnxRuntime, cuda_call.cc:119 onnxruntime::CudaCall] CUDNN failure 3: CUDNN_STATUS_BAD_PARAM ; GPU=0 ; hostname=ML-SPARE01 ; expr=cudnnConvolutionBackwardData( CudnnHandle(), &alpha, s_.filter_desc, w_data, s_.x_tensor, x_data, s_.conv_desc, s_.algo, workspace.get(), s_.workspace_bytes, &beta, s_.y_tensor, y_data);\r\n\r\n2020-05-25 12:31:47.9399519 [E:onnxruntime:, sequential_executor.cc:281 onnxruntime::SequentialExecutor::Execute] Non-zero status code returned while running ConvTranspose node. Name:'ConvTranspose_2167' Status Message: CUDNN error executing cudnnConvolutionBackwardData( CudnnHandle(), &alpha, s_.filter_desc, w_data, s_.x_tensor, x_data, s_.conv_desc, s_.algo, workspace.get(), s_.workspace_bytes, &beta, s_.y_tensor, y_data)\r\n```\r\n\r\n**Urgency**\r\nHigh - we couldn't come up with a reliable workaround and using a different model is not an option.\r\n\r\n**System information**\r\n- OS Platform and Distribution: Windows 10\r\n- ONNX Runtime installed from: NuGet\r\n- ONNX Runtime version: 1.3.0\r\n- Visual Studio version: 2019\r\n- CUDA/cuDNN version: 10.1/7.6.5.32\r\n- GPU model and memory: GTX 1060 (6GB) + GTX 1070 (8GB)\r\n\r\n**To Reproduce**\r\n- Export MaskRCNN model using nightly versions of TorchVision and PyTorch.\r\n- Create InferenceSession on GPU.\r\n- Prepare an input that does not produce any results, e.g. zero values tensor.\r\n- Run the inference.\r\n- CUDA (or more specifically: cuDNN) throws errors.\r\n\r\n**Expected behavior**\r\nInstead of a failure, the result tensors should be empty.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4024/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4025",
        "id": 624384953,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyODE5MzE3",
        "number": 4025,
        "title": "[docs] Python 3.8 support",
        "user": {
            "login": "cjermain",
            "id": 4521567,
            "node_id": "MDQ6VXNlcjQ1MjE1Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4521567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjermain",
            "html_url": "https://github.com/cjermain",
            "followers_url": "https://api.github.com/users/cjermain/followers",
            "following_url": "https://api.github.com/users/cjermain/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjermain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjermain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjermain/subscriptions",
            "organizations_url": "https://api.github.com/users/cjermain/orgs",
            "repos_url": "https://api.github.com/users/cjermain/repos",
            "events_url": "https://api.github.com/users/cjermain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjermain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-05-25T16:11:03Z",
        "updated_at": "2020-08-13T16:44:59Z",
        "closed_at": "2020-08-13T16:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4025",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4025",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4025.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4025.patch",
            "merged_at": null
        },
        "body": "While PyPI provides wheels for Python 3.8 after #2664, this support is not clear from the documentation. This PR adds Python 3.8 to the `setup.py` and `README.md` files.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4025/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4026",
        "id": 624414830,
        "node_id": "MDU6SXNzdWU2MjQ0MTQ4MzA=",
        "number": 4026,
        "title": "Possibility to change protobuf version",
        "user": {
            "login": "CAMOBAP",
            "id": 2169738,
            "node_id": "MDQ6VXNlcjIxNjk3Mzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2169738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CAMOBAP",
            "html_url": "https://github.com/CAMOBAP",
            "followers_url": "https://api.github.com/users/CAMOBAP/followers",
            "following_url": "https://api.github.com/users/CAMOBAP/following{/other_user}",
            "gists_url": "https://api.github.com/users/CAMOBAP/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CAMOBAP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CAMOBAP/subscriptions",
            "organizations_url": "https://api.github.com/users/CAMOBAP/orgs",
            "repos_url": "https://api.github.com/users/CAMOBAP/repos",
            "events_url": "https://api.github.com/users/CAMOBAP/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CAMOBAP/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-25T17:31:32Z",
        "updated_at": "2020-06-01T22:54:56Z",
        "closed_at": "2020-05-25T22:01:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI faced with a conflict between different protobuf version (probably this is problem of linker on android)\r\n\r\n```\r\n[libprotobuf FATAL /Users/camobap/.conan/data/onnxruntime/1.2.0/alpr/local/build/f502a074061dd809bc2f0d02202f07e31b204b22/onnxruntime/cmake/external/protobuf/src/google/protobuf/stubs/common.cc:87] This program was compiled against version 3.0.0 of the Protocol Buffer runtime library, which is not compatible with the installed version (3.11.3).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"out/soong/.intermediates/frameworks/av/drm/libmediadrm/libmediadrm/android_x86_64_shared_core/gen/proto/frameworks/av/drm/libmediadrm/protos/plugin_metrics.pb.cc\".)terminating with uncaught exception of type google::protobuf::FatalException: This program was compiled against version 3.0.0 of the Protocol Buffer runtime library, which is not compatible with the installed version (3.11.3).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"out/soong/.intermediates/frameworks/av/drm/libmediadrm/libmediadrm/android_x86_64_shared_core/gen/proto/frameworks/av/drm/libmediadrm/protos/plugin_metrics.pb.cc\".)\r\n```\r\n\r\nI cannot chance `protobuf` version of `libmediadrm` because this is system library.\r\n\r\nSo it will be nice to have a possibility to change version `protobuf` library.\r\n\r\nAre there some requirements for the minimal `protobuf` version?\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): 1.2.0\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt will be nice to have some options on `build.[sh|bat]` or CMakeLists.txt\r\n\r\n`./build.sh --protobuf_prefix ...` or `./build.sh --protobuf_version ...` or \r\n\r\n**Describe alternatives you've considered**\r\n\r\nA possible workaround is to use `dlopen`, but it doesn't quite fit my needshttps://stackoverflow.com/questions/52203862/building-an-android-executable-grpc-server-that-uses-protocol-buffers-without-a\r\n\r\n**Additional context**\r\n\r\n - \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4026/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4027",
        "id": 624438993,
        "node_id": "MDU6SXNzdWU2MjQ0Mzg5OTM=",
        "number": 4027,
        "title": "Convert Python build script to CMake",
        "user": {
            "login": "jgbradley1",
            "id": 654554,
            "node_id": "MDQ6VXNlcjY1NDU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgbradley1",
            "html_url": "https://github.com/jgbradley1",
            "followers_url": "https://api.github.com/users/jgbradley1/followers",
            "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
            "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
            "repos_url": "https://api.github.com/users/jgbradley1/repos",
            "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1122493981,
                "node_id": "MDU6TGFiZWwxMTIyNDkzOTgx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/feature%20request",
                "name": "feature request",
                "color": "5319E7",
                "default": false,
                "description": "request for unsupported feature or enhancement"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-05-25T18:41:59Z",
        "updated_at": "2022-03-18T17:13:01Z",
        "closed_at": "2020-06-22T23:57:49Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Description**\r\nPerhaps it was a design choice, but why does ORT use a python build script instead of a more formal build system setup like CMake? After reading the [build script](https://github.com/microsoft/onnxruntime/blob/master/tools/ci_build/build.py), it seems that most (or all) of the installation logic could be ported over to CMake and would resolve a lot of future integration issues.\r\n\r\n**System information**\r\n- ONNX Runtime version (you are using): Github master branch\r\n\r\n**Describe the solution you'd like**\r\nA CMake build script that replaces the python script and allows for first-time parallel builds.\r\n\r\n**Additional context**\r\nBuilding ORT the first time is limited to a single process because the parallel logic is not implemented in the python script correctly. A CMake build script would greatly improve the usability and dev experience of ORT in the long-term. It would also allow better integration of ORT into other projects ([related issue](https://github.com/microsoft/onnxruntime/issues/3124)) and CI workflows.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4028",
        "id": 624564336,
        "node_id": "MDU6SXNzdWU2MjQ1NjQzMzY=",
        "number": 4028,
        "title": "when I install onnxruntime in a virtual  windows system, there is always a \"import error\"   ",
        "user": {
            "login": "lightfate",
            "id": 41222646,
            "node_id": "MDQ6VXNlcjQxMjIyNjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/41222646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lightfate",
            "html_url": "https://github.com/lightfate",
            "followers_url": "https://api.github.com/users/lightfate/followers",
            "following_url": "https://api.github.com/users/lightfate/following{/other_user}",
            "gists_url": "https://api.github.com/users/lightfate/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lightfate/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lightfate/subscriptions",
            "organizations_url": "https://api.github.com/users/lightfate/orgs",
            "repos_url": "https://api.github.com/users/lightfate/repos",
            "events_url": "https://api.github.com/users/lightfate/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lightfate/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-26T02:43:05Z",
        "updated_at": "2020-05-26T11:18:43Z",
        "closed_at": "2020-05-26T11:17:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n![webwxgetmsgimg](https://user-images.githubusercontent.com/41222646/82856793-9cc3f500-9f41-11ea-967b-788a8794d00a.jpeg)\r\n**Describe the bug**\r\nwhen I install onnxruntime in a virtual  windows system, there is always a \"import error\" .\r\nI have tried many windows system（win10/winserver2012/win server2016）、python version（3.6/3.8）、onnxruntime(1.2.0/1.3.0)、 virsual system(VM virtualBox/VM ware), but when i install it in the virsual system, this problem always appeared, But in Physical Machine ，There is no such problem.\r\n\r\nC:\\Users\\zzx>pip list\r\nPackage           Version\r\n----------------- -------\r\n-nnxruntime       1.2.0\r\nnumpy             1.18.4\r\nonnx              1.7.0\r\nonnxruntime       1.3.0\r\npip               19.2.3\r\nprotobuf          3.11.3\r\nsetuptools        41.2.0\r\nsix               1.14.0\r\ntyping-extensions 3.7.4.2\r\nWARNING: You are using pip version 19.2.3, however version 20.1.1 is available.\r\nYou should consider upgrading via the 'python -m pip install --upgrade pip' command.\r\n\r\nC:\\Users\\zzx>python\r\nPython 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import onnxruntime\r\nC:\\Program Files\\Python38\\lib\\site-packages\\onnxruntime\\capi\\_pybind_state.py:13: UserWarning: Cannot load onnxruntime.capi. Error: 'DLL load failed while importing onnxruntime_pybind11_state: 找不到指定的模块。'\r\n  warnings.warn(\"Cannot load onnxruntime.capi. Error: '{0}'\".format(str(e)))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files\\Python38\\lib\\site-packages\\onnxruntime\\__init__.py\", line 12, in <module>\r\n    from onnxruntime.capi._pybind_state import get_all_providers, get_available_providers, get_device, set_seed, RunOptions, SessionOptions, set_default_logger_severity, NodeArg, ModelMetadata, GraphOptimizationLevel, ExecutionMode, OrtDevice, SessionIOBinding\r\nImportError: cannot import name 'get_all_providers' from 'onnxruntime.capi._pybind_state' (C:\\Program Files\\Python38\\lib\\site-packages\\onnxruntime\\capi\\_pybind_state.py)\r\n\r\n**Urgency**\r\nHigh, our project is based on onnxruntime, and now it cannot run in virsual windows system\r\n\r\n**System information**\r\n- Win10/Win server2012/Win Server2016 (virsual System, use VM virtualBox or VM ware):\r\n- pip insatll onnxruntime:\r\n- onnxruntime 1.3.0:\r\n- python 3.8.2\r\n- use cpu:\r\n\r\n\r\n**To Reproduce**\r\nwhen I install onnxruntime in a virtual  windows system(use VM virtualBox or VM ware), there is always a \"import error\" . But in Physical Machine ，There is no such problem.\r\n\r\n\r\n**Expected behavior**\r\nno import error\r\n\r\n**Screenshots**\r\n![webwxgetmsgimg](https://user-images.githubusercontent.com/41222646/82856813-a8afb700-9f41-11ea-89ad-91f4e5cfb7ad.jpeg)\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4028/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4029",
        "id": 624626685,
        "node_id": "MDU6SXNzdWU2MjQ2MjY2ODU=",
        "number": 4029,
        "title": "onnxruntime openvino docker inference very slow",
        "user": {
            "login": "happog",
            "id": 30194023,
            "node_id": "MDQ6VXNlcjMwMTk0MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30194023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/happog",
            "html_url": "https://github.com/happog",
            "followers_url": "https://api.github.com/users/happog/followers",
            "following_url": "https://api.github.com/users/happog/following{/other_user}",
            "gists_url": "https://api.github.com/users/happog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/happog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/happog/subscriptions",
            "organizations_url": "https://api.github.com/users/happog/orgs",
            "repos_url": "https://api.github.com/users/happog/repos",
            "events_url": "https://api.github.com/users/happog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/happog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1624868154,
                "node_id": "MDU6TGFiZWwxNjI0ODY4MTU0",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:OpenVINO",
                "name": "ep:OpenVINO",
                "color": "0052CC",
                "default": false,
                "description": "issues related to OpenVINO execution provider"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-26T06:15:36Z",
        "updated_at": "2020-05-31T14:46:35Z",
        "closed_at": "2020-05-31T14:46:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I pull onnxruntime openvino docker  using:\r\ndocker pull mcr.microsoft.com/azureml/onnxruntime:latest-openvino-cpu\r\n\r\nWhen I run a model in the docker, the inference is very slow (45 seconds), and output the following info:\r\n\r\n[WARN] 2020-05-26T06:04:53z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.ml' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:53z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.mlfeaturizers' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:53z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.preview.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.nchwc' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.ml' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.mlfeaturizers' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.preview.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.nchwc' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.ml' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.mlfeaturizers' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.preview.training' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.nchwc' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.ml' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'com.microsoft.mlfeaturizers' not recognized by nGraph\r\n[WARN] 2020-05-26T06:04:54z src/ngraph/frontend/onnx_import/ops_bridge.cpp 190\tDomain 'ai.onnx.training' not recognized by nGraph\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4029/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4030",
        "id": 624655104,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzMDI4Mjg5",
        "number": 4030,
        "title": "MLAS: qgemm refactoring",
        "user": {
            "login": "tracysh",
            "id": 42477615,
            "node_id": "MDQ6VXNlcjQyNDc3NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42477615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tracysh",
            "html_url": "https://github.com/tracysh",
            "followers_url": "https://api.github.com/users/tracysh/followers",
            "following_url": "https://api.github.com/users/tracysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tracysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tracysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tracysh/subscriptions",
            "organizations_url": "https://api.github.com/users/tracysh/orgs",
            "repos_url": "https://api.github.com/users/tracysh/repos",
            "events_url": "https://api.github.com/users/tracysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tracysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T07:18:26Z",
        "updated_at": "2020-05-27T00:27:35Z",
        "closed_at": "2020-05-27T00:27:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4030",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4030",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4030.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4030.patch",
            "merged_at": "2020-05-27T00:27:33Z"
        },
        "body": "**Description**: Refactor the quantized GEMM in preparation for more pre-packing work. These changes eliminates the dedicated U8U8 GEMM for VNNI and instead implements this using the faster U8S8 GEMM by adjusting the data during packing.\r\n\r\n**Motivation and Context**\r\nFor VNNI, using U8U8 or U8S8 as the data format yields the same performance with these changes and is smaller as a result of not needing another kernel. The backup SSE path for older systems has also been simplified and optimized. AVX2/AVX512 performance is unchanged.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4030/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4031",
        "id": 624682272,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzMDQ4ODc4",
        "number": 4031,
        "title": "Handle edge case with implicit input and multiple levels of subgraphs",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T08:05:01Z",
        "updated_at": "2020-05-29T21:08:23Z",
        "closed_at": "2020-05-29T21:08:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4031",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4031",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4031.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4031.patch",
            "merged_at": "2020-05-29T21:08:22Z"
        },
        "body": "**Description**: \r\nHandle edge case where an implicit input for a subgraph may not get wired in correctly.\r\n\r\nConditions required:\r\n  - two or more levels of nested subgraph\r\n  - an implicit input from above the bottom two levels is used in both levels of subgraph\r\n    - this creates a NodeArg for the implicit input at both levels\r\n  - something changes to the first level subgraph to no longer use the implicit input\r\n    - could be constant folding, could be partitioning of nodes results in a copy of the implicit input being made to a different device\r\n\r\nWhen that occurs we lose the wiring through to the second level of nested subgraph as there's a NodeArg in the first level but the implicit input is no longer used there. Fix that by doing a final check for outer scope values once we know all the outputs produced by the current graph.\r\n\r\nFound by commenting out the CUDA implementations of the control flow nodes and running ssd_mobilenet_300 from the mlperf models.\r\n\r\n\r\n**Motivation and Context**\r\nFix issue that could break a valid model.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4031/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4032",
        "id": 624716515,
        "node_id": "MDU6SXNzdWU2MjQ3MTY1MTU=",
        "number": 4032,
        "title": "DequantizeLinear crash in Compute",
        "user": {
            "login": "pmarcinkiewicz",
            "id": 4891521,
            "node_id": "MDQ6VXNlcjQ4OTE1MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4891521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmarcinkiewicz",
            "html_url": "https://github.com/pmarcinkiewicz",
            "followers_url": "https://api.github.com/users/pmarcinkiewicz/followers",
            "following_url": "https://api.github.com/users/pmarcinkiewicz/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmarcinkiewicz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmarcinkiewicz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmarcinkiewicz/subscriptions",
            "organizations_url": "https://api.github.com/users/pmarcinkiewicz/orgs",
            "repos_url": "https://api.github.com/users/pmarcinkiewicz/repos",
            "events_url": "https://api.github.com/users/pmarcinkiewicz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmarcinkiewicz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T08:56:39Z",
        "updated_at": "2020-06-04T03:21:42Z",
        "closed_at": "2020-06-04T03:21:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nDequantizeLinear is generating SIGSEG signal in Compute.\r\n\r\n**Urgency**\r\nAny SIGSEG crash indicates possible security issue.\r\n\r\n**System information**\r\n- 18.04\r\n- ONNX Runtime installed from binary:\r\n- ONNX Runtime version: 1.2.0\r\n- Python version: 3.6.9\r\n- CUDA/cuDNN version: CUDA 9.1\r\n- GPU model and memory: GV100 [TITAN V] 12 GB\r\n\r\n**To Reproduce**\r\n```\r\nimport onnxruntime\r\nsess = onnxruntime.InferenceSession(\"dequantizelinear_crash.onnx\", None)\r\n```\r\nRun inference session for model:\r\nhttps://github.com/pmarcinkiewicz/onnxruntime/blob/dequantizelinear_crash/onnxruntime/test/providers/cpu/nn/dequantizelinear_crash.onnx\r\n\r\n**Expected behavior**\r\nA session is created and model loaded.\r\n\r\n**Additional context**\r\nA model can be loaded with onnx.load and printed without any issues.\r\n\r\nA stack was inspected for crashing session loader but without debugging symbols. A SIGSEG signal is emitted inside DequantizeLinear::Compute function.\r\n\r\nStack bellow:\r\n\r\n```\r\nThread 1 \"ipython\" received signal SIGSEGV, Segmentation fault.\r\n0x00007fcd05d698a6 in onnxruntime::DequantizeLinear<unsigned char>::Compute(onnxruntime::OpKernelContext*) const ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n(gdb) bt\r\n#0  0x00007fcd05d698a6 in onnxruntime::DequantizeLinear<unsigned char>::Compute(onnxruntime::OpKernelContext*) const ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#1  0x00007fcd05b56df0 in onnxruntime::ConstantFolding::ApplyImpl(onnxruntime::Graph&, bool&, int, onnxruntime::logging::Logger const&) const ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#2  0x00007fcd05b215b4 in onnxruntime::GraphTransformer::Apply(onnxruntime::Graph&, bool&, onnxruntime::logging::Logger const&) const ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#3  0x00007fcd05b218df in onnxruntime::GraphTransformerManager::ApplyTransformers(onnxruntime::Graph&, onnxruntime::TransformerLevel, onnxruntime::logging::Logger const&) const ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#4  0x00007fcd05af4f05 in onnxruntime::InferenceSession::TransformGraph(onnxruntime::Graph&, onnxruntime::GraphTransformerManager const&, onnxruntime::ExecutionProviders const&, onnxruntime::KernelRegistryManager&, onnxruntime::InsertCastTransformer const&, onnxruntime::SessionState&) ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#5  0x00007fcd05af6260 in onnxruntime::InferenceSession::Initialize() ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#6  0x00007fcd05abb527 in onnxruntime::python::InitializeSession(onnxruntime::InferenceSession*, std::vector<std::string, std::allocator<std::string> > const&) ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#7  0x00007fcd05adc806 in void pybind11::cpp_function::initialize<onnxruntime::python::addObjectMethods(pybind11::module&)::{lambda(onnxruntime::InferenceSession*, std::vector<std::string, std::allocator<std::string> >&)#7}, void, onnxruntime::InferenceSession*, std::vector<std::string, std::allocator<std::string> >&, pybind11::name, pybind11::is_method, pybind11::sibling, char [35]>(onnxruntime::python::addObjectMethods(pybind11::module&)::{lambda(onnxruntime::InferenceSession*, std::vector<std::string, std::allocator<std::string> >&)#7}&&, void (*)(onnxruntime::InferenceSession*, std::vector<std::string, std::allocator<std::string> >&), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [35])::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call) ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#8  0x00007fcd05ad3953 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) ()\r\n   from /home/piotrm/.local/lib/python3.6/site-packages/onnxruntime/capi/onnxruntime_pybind11_state.cpython-36m-x86_64-linux-gnu.so\r\n#9  0x00000000005674fc in _PyCFunction_FastCallDict ()\r\n```\r\n\r\n\r\nModel load dump:\r\n\r\n```\r\n\r\nIn [1]: import onnx                                                                                                             \r\nIn [2]: onnx.load(\"dequantizelinear_crash.onnx\")                                                                                \r\nOut[2]: \r\nir_version: 6\r\nproducer_name: \"test\"\r\ngraph {\r\n  node {\r\n    input: \"x\"\r\n    output: \"x_abs_out\"\r\n    name: \"x_abs\"\r\n    op_type: \"Abs\"\r\n  }\r\n  node {\r\n    input: \"x_abs_out\"\r\n    output: \"x_max_out\"\r\n    name: \"x_reduce_max\"\r\n    op_type: \"ReduceMax\"\r\n    attribute {\r\n      name: \"keepdims\"\r\n      i: 0\r\n      type: INT\r\n    }\r\n  }\r\n  node {\r\n    input: \"x_max_out\"\r\n    input: \"quantization_range_signed\"\r\n    output: \"x_div_out\"\r\n    name: \"x_div\"\r\n    op_type: \"Div\"\r\n  }\r\n  node {\r\n    input: \"x\"\r\n    input: \"x_div_out\"\r\n    input: \"zero_value_signed\"\r\n    output: \"x_quantized\"\r\n    name: \"x_quantize\"\r\n    op_type: \"QuantizeLinear\"\r\n  }\r\n  node {\r\n    input: \"x_quantized\"\r\n    input: \"quantize_convs_one_float\"\r\n    output: \"x_quantized_dequantized\"\r\n    name: \"x_Conv_quantized_dequantization_activation\"\r\n    op_type: \"DequantizeLinear\"\r\n  }\r\n  node {\r\n    input: \"w_quantized\"\r\n    input: \"quantize_convs_one_float\"\r\n    output: \"w_quantized_dequantized\"\r\n    name: \"x_Conv_quantized_dequantization_weight\"\r\n    op_type: \"DequantizeLinear\"\r\n  }\r\n  node {\r\n    input: \"x_quantized_dequantized\"\r\n    input: \"w_quantized_dequantized\"\r\n    output: \"y_quantized_not_quantized_cliped\"\r\n    name: \"x_Conv_quantized_fake_ConvInteger\"\r\n    op_type: \"Conv\"\r\n    attribute {\r\n      name: \"kernel_shape\"\r\n      ints: 3\r\n      ints: 3\r\n      type: INTS\r\n    }\r\n    attribute {\r\n      name: \"pads\"\r\n      ints: 1\r\n      ints: 1\r\n      ints: 1\r\n      ints: 1\r\n      type: INTS\r\n    }\r\n  }\r\n  node {\r\n    input: \"y_quantized_not_quantized_cliped\"\r\n    input: \"quantize_convs_INT32_MIN\"\r\n    input: \"quantize_convs_INT32_MAX\"\r\n    output: \"y_quantized_not_quantized\"\r\n    name: \"x_Conv_quantized_Clip\"\r\n    op_type: \"Clip\"\r\n  }\r\n  node {\r\n    input: \"y_quantized_not_quantized\"\r\n    output: \"y_quantized\"\r\n    op_type: \"Cast\"\r\n    attribute {\r\n      name: \"to\"\r\n      i: 6\r\n      type: INT\r\n    }\r\n  }\r\n  node {\r\n    input: \"y_quantized\"\r\n    input: \"x_div_out\"\r\n    output: \"y_dequant_out\"\r\n    name: \"y_dequant\"\r\n    op_type: \"DequantizeLinear\"\r\n  }\r\n  node {\r\n    input: \"y_dequant_out\"\r\n    input: \"dims: 1\\ndims: 1\\ndims: 3\\ndims: 3\\ndata_type: 1\\nname: \\\"w\\\"\\nraw_data: \\\"\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\"\\n_scale_quantized\"\r\n    output: \"y\"\r\n    name: \"y_per_channel_scale\"\r\n    op_type: \"Mul\"\r\n  }\r\n  name: \"graph\"\r\n  initializer {\r\n    data_type: 1\r\n    float_data: 1.0\r\n    name: \"quantize_convs_one_float\"\r\n  }\r\n  initializer {\r\n    data_type: 1\r\n    float_data: 2147483648.0\r\n    name: \"quantize_convs_INT32_MAX\"\r\n  }\r\n  initializer {\r\n    data_type: 1\r\n    float_data: -2147483648.0\r\n    name: \"quantize_convs_INT32_MIN\"\r\n  }\r\n  initializer {\r\n    dims: 1\r\n    dims: 1\r\n    dims: 3\r\n    dims: 3\r\n    data_type: 2\r\n    name: \"w_quantized\"\r\n    raw_data: \"\\377\\377\\377\\377\\377\\377\\377\\377\\377\"\r\n  }\r\n  initializer {\r\n    dims: 1\r\n    data_type: 1\r\n    name: \"dims: 1\\ndims: 1\\ndims: 3\\ndims: 3\\ndata_type: 1\\nname: \\\"w\\\"\\nraw_data: \\\"\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\\000\\\\000\\\\200?\\\"\\n_scale_quantized\"\r\n    raw_data: \"\\201\\200\\200;\"\r\n  }\r\n  initializer {\r\n    data_type: 1\r\n    float_data: 127.0\r\n    name: \"quantization_range_signed\"\r\n  }\r\n  initializer {\r\n    data_type: 1\r\n    float_data: 255.0\r\n    name: \"quantization_range_unsigned\"\r\n  }\r\n  initializer {\r\n    data_type: 3\r\n    int32_data: 0\r\n    name: \"zero_value_signed\"\r\n  }\r\n  initializer {\r\n    data_type: 2\r\n    int32_data: 0\r\n    name: \"zero_value_unsigned\"\r\n  }\r\n  input {\r\n    name: \"x\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 1\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  output {\r\n    name: \"y\"\r\n    type {\r\n      tensor_type {\r\n        elem_type: 1\r\n        shape {\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n          dim {\r\n            dim_value: 1\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n          dim {\r\n            dim_value: 5\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nopset_import {\r\n  version: 11\r\n}\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4032/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4033",
        "id": 624764884,
        "node_id": "MDU6SXNzdWU2MjQ3NjQ4ODQ=",
        "number": 4033,
        "title": "Initializer appears in graph inputs and will not be treated as constant value/weight.",
        "user": {
            "login": "zr526799544",
            "id": 37580152,
            "node_id": "MDQ6VXNlcjM3NTgwMTUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/37580152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zr526799544",
            "html_url": "https://github.com/zr526799544",
            "followers_url": "https://api.github.com/users/zr526799544/followers",
            "following_url": "https://api.github.com/users/zr526799544/following{/other_user}",
            "gists_url": "https://api.github.com/users/zr526799544/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zr526799544/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zr526799544/subscriptions",
            "organizations_url": "https://api.github.com/users/zr526799544/orgs",
            "repos_url": "https://api.github.com/users/zr526799544/repos",
            "events_url": "https://api.github.com/users/zr526799544/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zr526799544/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-26T10:08:15Z",
        "updated_at": "2020-08-03T09:40:23Z",
        "closed_at": "2020-05-26T10:19:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI use pytorch 1.3 onnx 1.6 to export an onnx model with onnx optimizer to optimize passes = [\"extract_constant_to_initializer\", \"eliminate_unused_initializer\"]. and run it on onnxruntime 1.1.2 python 3.6.9 with no warnning.but got bunch of warning in c++ with onnxruntime 1.1.2\r\njust like:\r\nInitializer backbone.bn1.bias appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python/remove_initializer_from_input.py.\r\n\r\n\r\nInitializer 997 appears in graph inputs and will not be treated as constant value/weight. This may fail some of the graph optimizations, like const folding. Move it out of graph inputs if there is no need to override it, by either re-generating the model with latest exporter/converter or with the tool onnxruntime/tools/python\r\n\r\n\r\n**System information**\r\n- Linux Ubuntu 16.04:\r\n- ONNX Runtime installed from source:\r\n- ONNX Runtime version:1.1.2 cpu\r\n\r\n\r\n\r\n**To Reproduce**\r\n- onnx model url : https://pan.baidu.com/s/1ry3SpsyPNQsO3BVlF6szXw 提取码：czzc\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screensho\r\n![onnx1](https://user-images.githubusercontent.com/37580152/82887719-fa286800-9f7a-11ea-830a-06029545052f.PNG)\r\n![onnx2](https://user-images.githubusercontent.com/37580152/82887724-fbf22b80-9f7a-11ea-846f-f741185e8dea.PNG)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4033/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4034",
        "id": 624837552,
        "node_id": "MDU6SXNzdWU2MjQ4Mzc1NTI=",
        "number": 4034,
        "title": "ONNX RNN op activations attribute not supported.",
        "user": {
            "login": "arogowie-intel",
            "id": 36447190,
            "node_id": "MDQ6VXNlcjM2NDQ3MTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36447190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arogowie-intel",
            "html_url": "https://github.com/arogowie-intel",
            "followers_url": "https://api.github.com/users/arogowie-intel/followers",
            "following_url": "https://api.github.com/users/arogowie-intel/following{/other_user}",
            "gists_url": "https://api.github.com/users/arogowie-intel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arogowie-intel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arogowie-intel/subscriptions",
            "organizations_url": "https://api.github.com/users/arogowie-intel/orgs",
            "repos_url": "https://api.github.com/users/arogowie-intel/repos",
            "events_url": "https://api.github.com/users/arogowie-intel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arogowie-intel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-26T12:15:25Z",
        "updated_at": "2020-05-27T22:11:49Z",
        "closed_at": "2020-05-27T22:11:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, when I tried to compute output of ONNX model with `RNN` operator it turned out that it always uses `Tanh` activation function, no matter what I pass in `activations` attribute. \r\n\r\n**System information**\r\n- Linux Ubuntu 18.04  4.4.0-165-generic \r\n- ONNX Runtime installed from PyPI binary \r\n- ONNX Runtime version: onnxruntime==1.3.0\r\n- Python version: Python 3.6.7\r\n- GCC/Compiler version:  [GCC 8.2.0]\r\n\r\n**To Reproduce**\r\nI attach model in `.onnx` and `.prototxt` version as well as python script to run.\r\n[rnn_activations.zip](https://github.com/microsoft/onnxruntime/files/4682072/rnn_activations.zip)\r\n```python\r\n\r\n\r\nimport numpy as np\r\nimport onnxruntime as rt\r\nimport onnx\r\n\r\nseq_length = 4\r\nbatch_size = 3\r\ninput_size = 2\r\nhiden_size = 5\r\ngates_cnt  = 1\r\nn_direction = 1\r\nnp.random.seed(133391)\r\n\r\nX = np.random.randn(seq_length, batch_size, input_size).astype(np.float32)\r\nW = np.random.randn(n_direction, gates_cnt * hiden_size, input_size).astype(np.float32)\r\nR = np.random.randn(n_direction, gates_cnt * hiden_size, hiden_size).astype(np.float32)\r\n\r\nprint('\\nX: \\n{}'.format(X))\r\nprint('\\nW: \\n{}'.format(W))\r\nprint('\\nR: \\n{}'.format(R))\r\n\r\ninput_data = [\r\n    X,\r\n    W,\r\n    R,\r\n]\r\n\r\nmodels = [\r\n    'rnn_fwd_activations.onnx',\r\n]\r\n\r\nfor m in models:\r\n    print('Inference for model: {}'.format(m))\r\n    onnx_model = onnx.load_model(m)\r\n    onnx.checker.check_model(onnx_model)\r\n\r\n    sess = rt.InferenceSession(m)\r\n    inputs = sess.get_inputs()\r\n\r\n    inputs_name = [n.name for n in sess.get_inputs()]\r\n    outputs_name = [n.name for n in sess.get_outputs()]\r\n\r\n    pred_onx = sess.run(outputs_name,\r\n                        dict(zip(inputs_name, input_data)))\r\n\r\n    for p in pred_onx:\r\n        print(p)\r\n```\r\n\r\n**Expected behavior**\r\nRNN operator use activation function passed in `activations` attribute.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4034/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4035",
        "id": 624959076,
        "node_id": "MDU6SXNzdWU2MjQ5NTkwNzY=",
        "number": 4035,
        "title": "Not able to install onnxruntime_gpu on windows server 2019",
        "user": {
            "login": "oujiafan",
            "id": 7483115,
            "node_id": "MDQ6VXNlcjc0ODMxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7483115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oujiafan",
            "html_url": "https://github.com/oujiafan",
            "followers_url": "https://api.github.com/users/oujiafan/followers",
            "following_url": "https://api.github.com/users/oujiafan/following{/other_user}",
            "gists_url": "https://api.github.com/users/oujiafan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oujiafan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oujiafan/subscriptions",
            "organizations_url": "https://api.github.com/users/oujiafan/orgs",
            "repos_url": "https://api.github.com/users/oujiafan/repos",
            "events_url": "https://api.github.com/users/oujiafan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oujiafan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-05-26T15:10:23Z",
        "updated_at": "2020-12-08T04:03:34Z",
        "closed_at": "2020-05-27T06:40:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI'm not able to install onnxruntime_gpu on windows server 2019\r\n\r\n**Urgency**\r\nIf there are particular important use cases blocked by this or strict project-related timelines, please share more information and dates. If there are no hard deadlines, please specify none.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows server 2019\r\n- ONNX Runtime installed from (source or binary):\r\n- ONNX Runtime version:\r\n- Python version: 3.8.3\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory:\r\n\r\n**To Reproduce**\r\n>pip install onnxruntime_gpu-1.3.0-cp38-cp38-manylinux2010_x86_64.whl\r\nERROR: onnxruntime_gpu-1.3.0-cp38-cp38-manylinux2010_x86_64.whl is not a supported wheel on this platform.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4035/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4036",
        "id": 624971608,
        "node_id": "MDU6SXNzdWU2MjQ5NzE2MDg=",
        "number": 4036,
        "title": "Error in c_cxx samples: error: ‘OrtGetApi’ was not declared in this scope",
        "user": {
            "login": "ChenBoSyun",
            "id": 20232369,
            "node_id": "MDQ6VXNlcjIwMjMyMzY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20232369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChenBoSyun",
            "html_url": "https://github.com/ChenBoSyun",
            "followers_url": "https://api.github.com/users/ChenBoSyun/followers",
            "following_url": "https://api.github.com/users/ChenBoSyun/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChenBoSyun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChenBoSyun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChenBoSyun/subscriptions",
            "organizations_url": "https://api.github.com/users/ChenBoSyun/orgs",
            "repos_url": "https://api.github.com/users/ChenBoSyun/repos",
            "events_url": "https://api.github.com/users/ChenBoSyun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChenBoSyun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-26T15:25:10Z",
        "updated_at": "2021-11-09T13:37:09Z",
        "closed_at": "2020-05-27T06:07:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I follow [this](https://github.com/microsoft/onnxruntime/blob/rel-1.3.0/BUILD.md#Build-ONNX-Runtime-Server-on-Linux) to build onnxruntime from source.\r\n\r\nAfter that I compile the CXX_Api_Sample.cpp \r\n\r\nFirst, I got the error message \r\n\r\nIn function __static_initialization_and_destruction_0(int, int)':\r\nCXX_Api_Sample.cpp:(.text+0x8a1): undefined reference to `OrtGetApiBase'\r\ncollect2: error: ld returned 1 exit status\r\n\r\nI follow #1897 to solve the problem \r\nadd this code \r\n`const OrtApi* Ort::g_api = OrtGetApi(ORT_API_VERSION);\r\n`\r\n\r\nAnd I got another error message \r\n\r\nCXX_Api_Sample.cpp:10:20: error: ‘Ort::g_api’ should have been declared inside ‘Ort’\r\n const OrtApi* Ort::g_api = OrtGetApi(ORT_API_VERSION);\r\n                    ^\r\nCXX_Api_Sample.cpp:10:53: error: ‘OrtGetApi’ was not declared in this scope\r\n const OrtApi* Ort::g_api = OrtGetApi(ORT_API_VERSION);\r\n\r\nCould someone help me?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4036/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4037",
        "id": 624978226,
        "node_id": "MDU6SXNzdWU2MjQ5NzgyMjY=",
        "number": 4037,
        "title": "QLinearConv support in any of the providers",
        "user": {
            "login": "alexm-nm",
            "id": 59768536,
            "node_id": "MDQ6VXNlcjU5NzY4NTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/59768536?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexm-nm",
            "html_url": "https://github.com/alexm-nm",
            "followers_url": "https://api.github.com/users/alexm-nm/followers",
            "following_url": "https://api.github.com/users/alexm-nm/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexm-nm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexm-nm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexm-nm/subscriptions",
            "organizations_url": "https://api.github.com/users/alexm-nm/orgs",
            "repos_url": "https://api.github.com/users/alexm-nm/repos",
            "events_url": "https://api.github.com/users/alexm-nm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexm-nm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-26T15:33:39Z",
        "updated_at": "2020-08-02T01:43:54Z",
        "closed_at": "2020-08-02T01:43:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was able to convert an FP32 onnx resnet50-v2 to quantized onnx resnet50-v2 by using the onnxruntime calibrate.py script. However, when I try to run inference via InferenceSession(..) it says that the operator QLinearConv is not supported. This is for CPU provider. It looks like the problem is that the QLinearConv I'm using has unsigned activations and signed weights, and the onnxruntime supports only unsigned case for both activations and weights. Is there any other provider except CPU that can run u8 x s8 case?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4037/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4038",
        "id": 625010219,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzMzA5NTk0",
        "number": 4038,
        "title": "support model > 2GB in transformer optimizer",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1974915201,
                "node_id": "MDU6TGFiZWwxOTc0OTE1MjAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/model:transformer",
                "name": "model:transformer",
                "color": "4EF6CD",
                "default": false,
                "description": "issues related to a transformer model: BERT, GPT2, Hugging Face, Longformer, T5, etc."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T16:18:37Z",
        "updated_at": "2020-05-28T08:16:43Z",
        "closed_at": "2020-05-28T08:16:42Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4038",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4038",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4038.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4038.patch",
            "merged_at": "2020-05-28T08:16:42Z"
        },
        "body": "**Description**: \r\n- Support model > 2GB\r\n- Improve benchmark: (1) Add timestamp in benchmark detail and fusion results. (2) Add option --onnx_dir to benchmark.py for onnx model directory path\r\n- Refactor: Move each fusion to separated class\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nSupport onnx models > 2GB",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4038/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4039",
        "id": 625019531,
        "node_id": "MDU6SXNzdWU2MjUwMTk1MzE=",
        "number": 4039,
        "title": "The issue on Cast elimination in fusion",
        "user": {
            "login": "jiafatom",
            "id": 30608893,
            "node_id": "MDQ6VXNlcjMwNjA4ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30608893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiafatom",
            "html_url": "https://github.com/jiafatom",
            "followers_url": "https://api.github.com/users/jiafatom/followers",
            "following_url": "https://api.github.com/users/jiafatom/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiafatom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiafatom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiafatom/subscriptions",
            "organizations_url": "https://api.github.com/users/jiafatom/orgs",
            "repos_url": "https://api.github.com/users/jiafatom/repos",
            "events_url": "https://api.github.com/users/jiafatom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiafatom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-26T16:32:06Z",
        "updated_at": "2020-08-02T22:08:45Z",
        "closed_at": "2020-08-02T22:08:45Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nWhen I run an onnx model with two consecutive Cast node. The first Cast is to cast to integer from float32, followed by the Cast that is cast to float32. It seems that ORT gives a wrong result that the integer Cast does not make effects. I suspect there is Cast fusion going on, but in this case, the fist Cast should not be removed.\r\n\r\n**Urgency**\r\nNone\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows10 Version\t10.0.18363 Build 18363\r\n- ONNX Runtime installed from (source or binary): pypi\r\n- ONNX Runtime version: 1.3.0\r\n- Python version: 3.7",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4040",
        "id": 625023147,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzMzIwNjc3",
        "number": 4040,
        "title": "Allow optional cast in EmbedLayerNormalizaion fusion",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1974915201,
                "node_id": "MDU6TGFiZWwxOTc0OTE1MjAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/model:transformer",
                "name": "model:transformer",
                "color": "4EF6CD",
                "default": false,
                "description": "issues related to a transformer model: BERT, GPT2, Hugging Face, Longformer, T5, etc."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T16:35:38Z",
        "updated_at": "2020-05-27T21:55:06Z",
        "closed_at": "2020-05-27T21:55:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4040",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4040",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4040.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4040.patch",
            "merged_at": "2020-05-27T21:55:04Z"
        },
        "body": "**Description**: \r\nAllow optional Cast in EmbedLayerNormalizaion fusion.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nThe Cast node in bert embedding layer might be removed by other optimizers, which causes the fusion of EmbedLayerNormalizaion not working.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4040/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4041",
        "id": 625169818,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNDQwNDMy",
        "number": 4041,
        "title": "Add ONNX Training Post-Passes to Front-End - Cont",
        "user": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-26T20:15:13Z",
        "updated_at": "2020-06-15T17:33:28Z",
        "closed_at": "2020-06-15T17:33:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4041",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4041",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4041.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4041.patch",
            "merged_at": "2020-06-15T17:33:27Z"
        },
        "body": "Replacing #3942\r\n\r\nDescription: This PR adds ONNX post-process to the PyTorch front-end. The User can disable these passes by setting _enable_internal_postprocess to False (default is True).\r\n\r\nMotivation and Context\r\n\r\n    These are common training post-passes, by ading them to the front-end, we abstract complexity from the user.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4041/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4042",
        "id": 625202914,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNDY2OTU5",
        "number": 4042,
        "title": "Add provider specific info and custom CPU allocator to RunOptions",
        "user": {
            "login": "oreoero",
            "id": 6767830,
            "node_id": "MDQ6VXNlcjY3Njc4MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6767830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oreoero",
            "html_url": "https://github.com/oreoero",
            "followers_url": "https://api.github.com/users/oreoero/followers",
            "following_url": "https://api.github.com/users/oreoero/following{/other_user}",
            "gists_url": "https://api.github.com/users/oreoero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oreoero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oreoero/subscriptions",
            "organizations_url": "https://api.github.com/users/oreoero/orgs",
            "repos_url": "https://api.github.com/users/oreoero/repos",
            "events_url": "https://api.github.com/users/oreoero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oreoero/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-05-26T21:13:34Z",
        "updated_at": "2020-09-21T05:45:34Z",
        "closed_at": "2020-09-21T05:45:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4042",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4042",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4042.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4042.patch",
            "merged_at": null
        },
        "body": "\r\n[Proposal - Per Run Context in ONNX Runtime.docx](https://github.com/microsoft/onnxruntime/files/4685053/Proposal.-.Per.Run.Context.in.ONNX.Runtime.docx)\r\n**Description**: \r\nAdd an execution provider specific run option and add the ability to override the default CPU allocator with a custom allocator .\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nThis is a feature that add more context info at per run level.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4042/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4043",
        "id": 625212900,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNDc1MTE5",
        "number": 4043,
        "title": "Update benchmark of gpt2 model with past state",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T21:32:38Z",
        "updated_at": "2020-05-28T20:55:45Z",
        "closed_at": "2020-05-28T20:55:44Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4043",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4043",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4043.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4043.patch",
            "merged_at": "2020-05-28T20:55:44Z"
        },
        "body": "**Description**: \r\n\r\nExport gpt2 past state with correct input and output shape in benchmark_gpt2 script.\r\nRemove support of no past state since that is avaiable in benchmark.py so no need to duplicate here.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nBenchmark gpt2 with past state correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4044",
        "id": 625274103,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNTI1NDE4",
        "number": 4044,
        "title": "re-enable graph optimizations during build phase",
        "user": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T23:59:29Z",
        "updated_at": "2020-06-01T17:32:44Z",
        "closed_at": "2020-06-01T17:32:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4044",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4044",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4044.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4044.patch",
            "merged_at": "2020-06-01T17:32:43Z"
        },
        "body": "**Description**: Re enabling graph optimizations which were disabled after the recent onnx update\r\n(In progress)\r\n\r\n**Motivation and Context**\r\n- After the recent onnx update graph optimizations were disabled for onnx test runner because some tests were failing. This change is to re enable the optimizations.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4044/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4045",
        "id": 625286283,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNTM0OTg4",
        "number": 4045,
        "title": "Fix python packaging pipeline failure",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T00:33:42Z",
        "updated_at": "2020-08-12T22:29:43Z",
        "closed_at": "2020-05-27T01:31:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4045",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4045",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4045.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4045.patch",
            "merged_at": null
        },
        "body": "**Description**: \r\n\r\nFix python packaging pipeline failure\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n\r\nThe latest protobuf release(3.12) doesn't have a prebuilt package for python 3.8. We are using an older one with the py files that generated from protobuf 3.12. Then it fails. \r\n\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4045/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4046",
        "id": 625314056,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNTU3NzAy",
        "number": 4046,
        "title": "Use the corresponding keras model for plot_dl_keras",
        "user": {
            "login": "jiafatom",
            "id": 30608893,
            "node_id": "MDQ6VXNlcjMwNjA4ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/30608893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiafatom",
            "html_url": "https://github.com/jiafatom",
            "followers_url": "https://api.github.com/users/jiafatom/followers",
            "following_url": "https://api.github.com/users/jiafatom/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiafatom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiafatom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiafatom/subscriptions",
            "organizations_url": "https://api.github.com/users/jiafatom/orgs",
            "repos_url": "https://api.github.com/users/jiafatom/repos",
            "events_url": "https://api.github.com/users/jiafatom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiafatom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-27T01:51:20Z",
        "updated_at": "2020-08-16T07:04:43Z",
        "closed_at": "2020-08-16T07:04:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4046",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4046",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4046.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4046.patch",
            "merged_at": null
        },
        "body": "**Description**: Describe your changes.\r\nFor tf 2.0+, keras.applications.densenet is still a keras standalone model, but keras2onnx will treat the model format as tf.keras by default (a recent change on keras2onnx), this causes conversion failure. So we need use tf.keras.applications.densenet for tf 2.0+. Otherwise we need set is_tf_keras=False which is nontrivial.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nplot_dl_keras.py fails on keras2onnx, this PR fixes it.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4046/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4047",
        "id": 625339308,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNTc3MTYz",
        "number": 4047,
        "title": "fix crash in dequantizelinear/quantizelinear for optional zero point",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T03:04:11Z",
        "updated_at": "2020-05-28T00:11:57Z",
        "closed_at": "2020-05-28T00:11:56Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4047",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4047",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4047.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4047.patch",
            "merged_at": "2020-05-28T00:11:56Z"
        },
        "body": "**Description**: Describe your changes.\r\nfix the issue #4032 and #3802 in OnnxRuntime side. For the quantizeLinear, there also needs a fix in ONNX type inference. Will do that in ONNX repo.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4048",
        "id": 625340744,
        "node_id": "MDU6SXNzdWU2MjUzNDA3NDQ=",
        "number": 4048,
        "title": "Building a dynamic library without dependency",
        "user": {
            "login": "xiaoerqi",
            "id": 19380478,
            "node_id": "MDQ6VXNlcjE5MzgwNDc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19380478?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaoerqi",
            "html_url": "https://github.com/xiaoerqi",
            "followers_url": "https://api.github.com/users/xiaoerqi/followers",
            "following_url": "https://api.github.com/users/xiaoerqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaoerqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaoerqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaoerqi/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaoerqi/orgs",
            "repos_url": "https://api.github.com/users/xiaoerqi/repos",
            "events_url": "https://api.github.com/users/xiaoerqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaoerqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-05-27T03:08:48Z",
        "updated_at": "2020-10-11T11:41:35Z",
        "closed_at": "2020-10-11T11:41:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Because our server uses a lower version of GCC(4.8.4),and there are compilation errors when building，I need to build a libonnxruntime.so that does not depend on other dynamic libraries with a higher version of GCC ; I found that the release version of the dynamic library provided by the official does not depend on other dynamic libraries. It can be used in any environment. How can I compile it without relying on other dynamic libraries  , or whether this option is provided in the build option.Thanks！",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4048/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4049",
        "id": 625463954,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNjcyNTg0",
        "number": 4049,
        "title": "Add e2e measurement for training",
        "user": {
            "login": "pengwa",
            "id": 10530022,
            "node_id": "MDQ6VXNlcjEwNTMwMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10530022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwa",
            "html_url": "https://github.com/pengwa",
            "followers_url": "https://api.github.com/users/pengwa/followers",
            "following_url": "https://api.github.com/users/pengwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwa/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwa/orgs",
            "repos_url": "https://api.github.com/users/pengwa/repos",
            "events_url": "https://api.github.com/users/pengwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-27T07:51:23Z",
        "updated_at": "2020-05-29T02:08:31Z",
        "closed_at": "2020-05-29T02:08:30Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4049",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4049",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4049.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4049.patch",
            "merged_at": "2020-05-29T02:08:30Z"
        },
        "body": "**Description**: add e2e measurement\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4049/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4050",
        "id": 625467372,
        "node_id": "MDU6SXNzdWU2MjU0NjczNzI=",
        "number": 4050,
        "title": "Usage example of CreateMap API in C++. ",
        "user": {
            "login": "Karnav123",
            "id": 36244620,
            "node_id": "MDQ6VXNlcjM2MjQ0NjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36244620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Karnav123",
            "html_url": "https://github.com/Karnav123",
            "followers_url": "https://api.github.com/users/Karnav123/followers",
            "following_url": "https://api.github.com/users/Karnav123/following{/other_user}",
            "gists_url": "https://api.github.com/users/Karnav123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Karnav123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Karnav123/subscriptions",
            "organizations_url": "https://api.github.com/users/Karnav123/orgs",
            "repos_url": "https://api.github.com/users/Karnav123/repos",
            "events_url": "https://api.github.com/users/Karnav123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Karnav123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-27T07:56:36Z",
        "updated_at": "2020-06-18T14:08:48Z",
        "closed_at": "2020-06-18T14:08:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to use a sklearn onnx model in c++. The dataset is the titanic dataset.  I think we need to use CreateMap API for preparing the input data, but there is no proper documentation regarding the API usage. I need an example usage of the API.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4050/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4051",
        "id": 625523977,
        "node_id": "MDU6SXNzdWU2MjU1MjM5Nzc=",
        "number": 4051,
        "title": " tensor_info.GetShape() gives [-1, 1 ] as shape.",
        "user": {
            "login": "Karnav123",
            "id": 36244620,
            "node_id": "MDQ6VXNlcjM2MjQ0NjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36244620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Karnav123",
            "html_url": "https://github.com/Karnav123",
            "followers_url": "https://api.github.com/users/Karnav123/followers",
            "following_url": "https://api.github.com/users/Karnav123/following{/other_user}",
            "gists_url": "https://api.github.com/users/Karnav123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Karnav123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Karnav123/subscriptions",
            "organizations_url": "https://api.github.com/users/Karnav123/orgs",
            "repos_url": "https://api.github.com/users/Karnav123/repos",
            "events_url": "https://api.github.com/users/Karnav123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Karnav123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-05-27T09:15:25Z",
        "updated_at": "2020-06-18T14:07:34Z",
        "closed_at": "2020-06-18T14:07:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI have an xgboost model in onnx format trained on titanic dataset from Kaggle with 5 input nodes. When I load the model in onnx runtime using C++ API, the shape of the  input node comes out to be [-1, 1].\r\n\r\n**Urgency**\r\nI need to use this C++ API in a production code.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows  1909\r\n- ONNX Runtime installed from (source or binary): Nuget Package in VS2019\r\n- ONNX Runtime version: 1.2.0\r\n- Python version: 3.7\r\n- Visual Studio version (if applicable): 2019\r\n- GCC/Compiler version (if compiling from source): MSVC\r\n- CUDA/cuDNN version: NA\r\n- GPU model and memory: NA\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\n```\r\nint main(int argc, char* argv[]) {\r\n    //*************************************************************************\r\n    // initialize  enviroment...one enviroment per process\r\n    // enviroment maintains thread pools and other state info\r\n    Ort::Env env(ORT_LOGGING_LEVEL_WARNING, \"test\");\r\n\r\n    // initialize session options if needed\r\n    Ort::SessionOptions session_options;\r\n    session_options.SetIntraOpNumThreads(1);\r\n\r\n    // If onnxruntime.dll is built with CUDA enabled, we can uncomment out this line to use CUDA for this\r\n    // session (we also need to include cuda_provider_factory.h above which defines it)\r\n    // #include \"cuda_provider_factory.h\"\r\n    // OrtSessionOptionsAppendExecutionProvider_CUDA(session_options, 1);\r\n\r\n    // Sets graph optimization level\r\n    // Available levels are\r\n    // ORT_DISABLE_ALL -> To disable all optimizations\r\n    // ORT_ENABLE_BASIC -> To enable basic optimizations (Such as redundant node removals)\r\n    // ORT_ENABLE_EXTENDED -> To enable extended optimizations (Includes level 1 + more complex optimizations like node fusions)\r\n    // ORT_ENABLE_ALL -> To Enable All possible opitmizations\r\n    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_EXTENDED);\r\n\r\n    //*************************************************************************\r\n    // create session and load model into memory\r\n    // using squeezenet version 1.3\r\n    // URL = https://github.com/onnx/models/tree/master/squeezenet\r\n#ifdef _WIN32\r\n    const wchar_t* model_path = L\"pipeline_titanic.onnx\";\r\n#else\r\n    const char* model_path = \"squeezenet.onnx\";\r\n#endif\r\n\r\n    printf(\"Using Onnxruntime C++ API\\n\");\r\n    Ort::Session session(env, model_path, session_options);\r\n\r\n    //*************************************************************************\r\n    // print model input layer (node names, types, shape etc.)\r\n    Ort::AllocatorWithDefaultOptions allocator;\r\n\r\n    // print number of model input nodes\r\n    size_t num_input_nodes = session.GetInputCount();\r\n    std::vector<const char*> input_node_names(num_input_nodes);\r\n    std::vector<std::vector<int64_t>> input_node_dims(num_input_nodes);  // simplify... this model has only 1 input node {1, 3, 224, 224}.\r\n                                           // Otherwise need vector<vector<>>\r\n\r\n    printf(\"Number of inputs = %zu\\n\", num_input_nodes);\r\n\r\n    // iterate over all input nodes\r\n    for (int i = 0; i < num_input_nodes; i++) {\r\n        // print input node names\r\n        char* input_name = session.GetInputName(i, allocator);\r\n        printf(\"Input %d : name=%s\\n\", i, input_name);\r\n        input_node_names[i] = input_name;\r\n\r\n        // print input node types\r\n        Ort::TypeInfo type_info = session.GetInputTypeInfo(i);\r\n        auto tensor_info = type_info.GetTensorTypeAndShapeInfo();\r\n\r\n        ONNXTensorElementDataType type = tensor_info.GetElementType();\r\n        printf(\"Input %d : type=%d\\n\", i, type);\r\n\r\n        // print input shapes/dims\r\n        input_node_dims[i] = tensor_info.GetShape();\r\n        printf(\"Input %d : num_dims=%zu\\n\", i, input_node_dims.size());\r\n        for (int j = 0; j < input_node_dims[i].size(); j++)\r\n            printf(\"Input %d : dim %d=%jd\\n\", i, j, input_node_dims[i][j]);\r\n    }\r\n```\r\n\r\nThe output is;\r\nInput 0 : type=8\r\nInput 0 : num_dims=5\r\nInput 0 : dim 0=-1\r\nInput 0 : dim 1=1\r\nInput 1 : name=sex\r\nInput 1 : type=8\r\nInput 1 : num_dims=5\r\nInput 1 : dim 0=-1\r\nInput 1 : dim 1=1\r\nInput 2 : name=age\r\nInput 2 : type=1\r\nInput 2 : num_dims=5\r\nInput 2 : dim 0=-1\r\nInput 2 : dim 1=1\r\nInput 3 : name=fare\r\nInput 3 : type=1\r\nInput 3 : num_dims=5\r\nInput 3 : dim 0=-1\r\nInput 3 : dim 1=1\r\nInput 4 : name=embarked\r\nInput 4 : type=8\r\nInput 4 : num_dims=5\r\nInput 4 : **dim 0=-1**    // How dim is -1\r\nInput 4 : dim 1=1\r\n\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\nDownload the model from the following link.\r\n[(https://github.com/Karnav123/onnx_model/blob/master/pipeline_titanic.onnx)]\r\n\r\n**Expected behavior**\r\nThe dimension of the input node should not be negative.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4051/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4052",
        "id": 625902323,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MDE2NDU2",
        "number": 4052,
        "title": "Fix DropoutGrad schema",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "thiagocrepaldi",
                "id": 5469809,
                "node_id": "MDQ6VXNlcjU0Njk4MDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thiagocrepaldi",
                "html_url": "https://github.com/thiagocrepaldi",
                "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
                "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
                "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
                "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
                "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
                "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-27T17:47:51Z",
        "updated_at": "2020-06-04T22:00:05Z",
        "closed_at": "2020-06-04T22:00:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4052",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4052",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4052.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4052.patch",
            "merged_at": "2020-06-04T22:00:03Z"
        },
        "body": "Dropout op was recently changed to accept a new input named\r\n'trainin_mode', which is passed in to DropoutGrad automatically.\r\n\r\nThis PR updates the DropoutGrad schema to accomodate the new input.\r\nTests were also update to reflect the API change",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4052/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4053",
        "id": 625906434,
        "node_id": "MDU6SXNzdWU2MjU5MDY0MzQ=",
        "number": 4053,
        "title": "DropoutGrad input size error",
        "user": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "thiagocrepaldi",
                "id": 5469809,
                "node_id": "MDQ6VXNlcjU0Njk4MDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thiagocrepaldi",
                "html_url": "https://github.com/thiagocrepaldi",
                "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
                "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
                "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
                "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
                "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
                "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T17:53:56Z",
        "updated_at": "2020-06-04T22:00:03Z",
        "closed_at": "2020-06-04T22:00:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nTrain models with latest ORT, nightly pytorch, which model uses Dropouts with opset12\r\n\r\nDuring training, the following error is thrown:\r\n\r\nError in Node:Dropout_2975_Grad/DropoutGrad_0 : Node (Dropout_2975_Grad/DropoutGrad_0) has input size 4 not in range [min=2, max=3]\r\n\r\nReverting ORT to a commit before the one aforementioned, the model is trained successfully.\r\n\r\n**Urgency**\r\nThis bug blocks training models that uses Dropout with opset 12\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): source\r\n- ONNX Runtime version: master branch (commit a24c71a  or newer)\r\n- Python version: 3.7\r\n- GCC/Compiler version (if compiling from source): 5.4.0\r\n- CUDA/cuDNN version: 10.2\r\n- GPU model and memory: Tesla v100\r\n\r\n**To Reproduce**\r\nDescribe above. Proprietary model\r\n\r\n**Expected behavior**\r\nTraining models with Dropout opset 12\r\n\r\n**Additional context**\r\ncommit a24c71a adds a new parameter to Droupout called training_mode, which was not added to DropoutGrad.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4053/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4054",
        "id": 625920809,
        "node_id": "MDU6SXNzdWU2MjU5MjA4MDk=",
        "number": 4054,
        "title": "onnxruntime.capi_pybind_state on windows exe",
        "user": {
            "login": "CesMak",
            "id": 20240718,
            "node_id": "MDQ6VXNlcjIwMjQwNzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20240718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CesMak",
            "html_url": "https://github.com/CesMak",
            "followers_url": "https://api.github.com/users/CesMak/followers",
            "following_url": "https://api.github.com/users/CesMak/following{/other_user}",
            "gists_url": "https://api.github.com/users/CesMak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CesMak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CesMak/subscriptions",
            "organizations_url": "https://api.github.com/users/CesMak/orgs",
            "repos_url": "https://api.github.com/users/CesMak/repos",
            "events_url": "https://api.github.com/users/CesMak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CesMak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-27T18:15:05Z",
        "updated_at": "2020-05-28T17:06:32Z",
        "closed_at": "2020-05-28T17:06:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nHey there, \r\n\r\nI use pyinstaller to convert my python code (which requires onnxruntime) into an exe file.\r\n\r\nThis exe file runs without problems on my win10 pc with python 3.7 installed and PATH variable set.\r\n\r\nHowever on another win pc without python installed the erro message below pops up :( \r\nAs I have an exe I do not want to install the correct python version on every pc - is there a way to build the correct .dll file etc. that works on every pc?\r\n\r\nAny ideas how to solve this issue?\r\n\r\n![photo_2020-05-27_18-14-54](https://user-images.githubusercontent.com/20240718/83057104-bdca3a00-a056-11ea-81e9-5b0ca03e6cd8.jpg)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4054/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4055",
        "id": 625940336,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MDQ2NTgz",
        "number": 4055,
        "title": "Fix initial value of loop variable in RNN op",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T18:44:49Z",
        "updated_at": "2020-05-29T02:19:41Z",
        "closed_at": "2020-05-29T02:19:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4055",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4055",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4055.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4055.patch",
            "merged_at": "2020-05-29T02:19:40Z"
        },
        "body": "**Description**: The first activation function provided is not validated because of the incorrect initial value of the loop variable in the RNN operator. \r\n\r\n**Motivation and Context**\r\nTakeaway from https://github.com/microsoft/onnxruntime/issues/4034\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4055/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4056",
        "id": 625970416,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MDY5NjY5",
        "number": 4056,
        "title": "Add noexcept to various OrtCallback utility class methods to fix warnings.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T19:27:22Z",
        "updated_at": "2020-05-28T01:04:00Z",
        "closed_at": "2020-05-28T01:03:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4056",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4056",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4056.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4056.patch",
            "merged_at": "2020-05-28T01:03:59Z"
        },
        "body": "**Description**\r\nAdd noexcept to various OrtCallback utility class methods to fix warnings.\r\n\r\n**Motivation and Context**\r\nFixes warnings like this one:\r\nonnxruntime\\core\\framework\\callback.h(46,0): Warning C26439: This kind of function may not throw. Declare it 'noexcept' (f.6).\r\nhttps://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=161733&view=logs&j=0c0c570a-fc92-5ebc-bc7b-8fef68d9a271&t=1fc0a3b5-075f-5ff5-b04f-77c0e7cc68f6&l=1761\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4057",
        "id": 625982843,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MDc4NTQ4",
        "number": 4057,
        "title": "Add more symbolic compute support in symbolic shape inference",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T19:46:34Z",
        "updated_at": "2020-05-29T09:00:33Z",
        "closed_at": "2020-05-29T09:00:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4057",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4057",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4057.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4057.patch",
            "merged_at": "2020-05-29T09:00:31Z"
        },
        "body": "**Description**: This fixes some HuggingFace models for TensorRT\r\n**Motivation and Context**\r\n- Adding symbolic shape compute for ConstantOfShape, Equal and Where\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4057/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4058",
        "id": 626083419,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTUwMjA4",
        "number": 4058,
        "title": "Fix link in readme",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T22:41:44Z",
        "updated_at": "2020-05-28T13:58:00Z",
        "closed_at": "2020-05-28T13:57:59Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4058",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4058",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4058.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4058.patch",
            "merged_at": "2020-05-28T13:57:59Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4058/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4059",
        "id": 626099392,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTYxMTA2",
        "number": 4059,
        "title": "Enable disabled tests and add fixed model",
        "user": {
            "login": "ryanlai2",
            "id": 16694211,
            "node_id": "MDQ6VXNlcjE2Njk0MjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16694211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanlai2",
            "html_url": "https://github.com/ryanlai2",
            "followers_url": "https://api.github.com/users/ryanlai2/followers",
            "following_url": "https://api.github.com/users/ryanlai2/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanlai2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanlai2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanlai2/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanlai2/orgs",
            "repos_url": "https://api.github.com/users/ryanlai2/repos",
            "events_url": "https://api.github.com/users/ryanlai2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanlai2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-27T23:17:18Z",
        "updated_at": "2020-05-28T20:24:14Z",
        "closed_at": "2020-05-28T20:24:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4059",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4059",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4059.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4059.patch",
            "merged_at": "2020-05-28T20:24:13Z"
        },
        "body": "These tests were disabled because of licensing issues of FNS-Candy. This is not the case anymore so this change re-enables them.\r\n\r\nThis change adds model that has correct IR version fixed.\r\n\r\nWith this change, there will be no more disabled WinML tests.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4059/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4060",
        "id": 626118184,
        "node_id": "MDU6SXNzdWU2MjYxMTgxODQ=",
        "number": 4060,
        "title": "C and C++ API examples should not be located under csharp dir",
        "user": {
            "login": "KevinHake",
            "id": 35880456,
            "node_id": "MDQ6VXNlcjM1ODgwNDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/35880456?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KevinHake",
            "html_url": "https://github.com/KevinHake",
            "followers_url": "https://api.github.com/users/KevinHake/followers",
            "following_url": "https://api.github.com/users/KevinHake/following{/other_user}",
            "gists_url": "https://api.github.com/users/KevinHake/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KevinHake/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KevinHake/subscriptions",
            "organizations_url": "https://api.github.com/users/KevinHake/orgs",
            "repos_url": "https://api.github.com/users/KevinHake/repos",
            "events_url": "https://api.github.com/users/KevinHake/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KevinHake/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-28T00:06:59Z",
        "updated_at": "2020-06-03T03:30:58Z",
        "closed_at": "2020-06-02T20:25:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Confusingly enough there *is* a pure-cross platform, minimal C++ API sample, but it's under the `csharp` folder where no one would think to look:\r\n\r\nhttps://github.com/microsoft/onnxruntime/blob/master/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests.Capi/CXX_Api_Sample.cpp\r\n\r\n_Originally posted by @pranav-prakash in https://github.com/microsoft/onnxruntime/issues/3879#issuecomment-626068756_\r\n\r\nThe C API example(s)? also exists under \"csharp/test/\"\r\nPerhaps all sample files can be moved to the `samples` dir, which already exists and contains docs listing examples.\r\nIf we move these, we need to grep the repo for references and make sure docs reference the new locations",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4060/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4061",
        "id": 626131115,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTg1NDQy",
        "number": 4061,
        "title": "Bug fix for parameter names of models not using wrapper",
        "user": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-28T00:46:26Z",
        "updated_at": "2020-06-05T19:03:40Z",
        "closed_at": "2020-06-05T19:03:39Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4061",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4061",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4061.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4061.patch",
            "merged_at": "2020-06-05T19:03:39Z"
        },
        "body": "\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4061/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4062",
        "id": 626133417,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTg3MDYx",
        "number": 4062,
        "title": "Handle mem pattern allocation failure better. Make BFCArena behavior more consistent",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T00:53:48Z",
        "updated_at": "2020-06-05T08:54:03Z",
        "closed_at": "2020-06-05T08:54:02Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4062",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4062",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4062.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4062.patch",
            "merged_at": "2020-06-05T08:54:02Z"
        },
        "body": "**Description**: \r\nFixes from investigating issue running BERT-Squad model with larger batch sizes. When the batch size gets large enough the initial run will be successful (no memory pattern in use) but the second will fail to allocate the memory pattern block.\r\n\r\nThe cause of this failure is that we still have the smaller blocks from the first run allocated, as BFCArena has no logic to free those. This essentially results in 2x the memory being required to run the model.\r\n\r\nThere was inconsistency in BFCArena::Extend which on one path threw an exception if it couldn't do the allocation, and on another just returned false (resulting in Alloc returning a nullptr). Make the behavior consistent by always throwing if BFCArena fails to find a buffer to return. There are a large number of places in the code where we assume Alloc returns a valid pointer so throwing will result in more correct behavior as a whole. It's also consistent with what happens when CUDA or the standard library fails to allocate memory.\r\n\r\nNext, update ExecutionFrame to check for this failure and not insert a memory block entry if it happens. With the existing code if BFCArena Alloc returned a nullptr we happily inserted that in the blocks, delaying detection of the failure to when we attempted to use the block in AllocateMLValueTensorSelfOwnBufferHelper. This was the error reported in the Issue.\r\n\r\nFinally update AllocateMLValueTensorSelfOwnBufferHelper to expect a location may not have a block. A log message will be provided when the block allocation fails so it's not necessary to have more on each individual allocation that would have used the block. Falls through to default behavior of doing a normal allocation.\r\n\r\nFuture: \r\n  - May be able to use the logic from the Training code to figure out the memory pattern block size upfront. \r\n  - It would also be possible to 'fix' this if you knew how large a block was required and allocated that upfront in the arena. Requires a run with Info level logging to know that value from the BFCArena output, and a configuration mechanism to be able to tell BFCArena to use that as the initial size for a specific allocator. \r\n  - Possibly BFCArena could detect and free unused blocks when an Extend call fails. May not be trivial to do so, and need to think through if/how that would impact scenarios with concurrent requests and/or scenarios where a mix of batch sizes are provided as input (as the memory pattern block size is specific to the batch size). \r\n\r\n**Motivation and Context**\r\nFix issue running BERT-Squad. #4008 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4063",
        "id": 626133547,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTg3MTYx",
        "number": 4063,
        "title": "Training Python package fixes",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            },
            {
                "id": 2014185961,
                "node_id": "MDU6TGFiZWwyMDE0MTg1OTYx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/core%20runtime",
                "name": "core runtime",
                "color": "006B75",
                "default": false,
                "description": "issues related to core runtime"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T00:54:10Z",
        "updated_at": "2020-06-01T16:30:59Z",
        "closed_at": "2020-06-01T16:30:57Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4063",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4063",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4063.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4063.patch",
            "merged_at": "2020-06-01T16:30:57Z"
        },
        "body": "**Description**\r\n- Add support for ENABLE_LANGUAGE_INTEROP_OPS in training build which is enabled for nightly builds\r\n- Fix passing of environment variables to `sudo docker run` in build definitions\r\n- Fix setup.py package naming logic\r\n\r\n**Motivation and Context**\r\nFix issues found while enabling nightly training builds.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4063/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4064",
        "id": 626148223,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MTk3OTg5",
        "number": 4064,
        "title": "[OpenVINO-EP] Add missing dependency libs in Dockerfile",
        "user": {
            "login": "smkarlap",
            "id": 20327032,
            "node_id": "MDQ6VXNlcjIwMzI3MDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20327032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smkarlap",
            "html_url": "https://github.com/smkarlap",
            "followers_url": "https://api.github.com/users/smkarlap/followers",
            "following_url": "https://api.github.com/users/smkarlap/following{/other_user}",
            "gists_url": "https://api.github.com/users/smkarlap/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smkarlap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smkarlap/subscriptions",
            "organizations_url": "https://api.github.com/users/smkarlap/orgs",
            "repos_url": "https://api.github.com/users/smkarlap/repos",
            "events_url": "https://api.github.com/users/smkarlap/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smkarlap/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-05-28T01:40:07Z",
        "updated_at": "2020-06-19T00:00:37Z",
        "closed_at": "2020-06-02T09:42:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4064",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4064",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4064.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4064.patch",
            "merged_at": "2020-06-02T09:42:59Z"
        },
        "body": "**Description**: \r\n- Added missing VAD-M hardware dependency libs into Dockerfile.\r\n- Update documentation with instructions on starting HDDL Daemon.\r\n\r\n**Motivation and Context**\r\n- Required to be able to run the MCR Docker container on VAD-M hardware\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4064/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4065",
        "id": 626167681,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MjEyMjQ3",
        "number": 4065,
        "title": "Make CPU QuantizeLinear support optional zero point",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-28T02:37:51Z",
        "updated_at": "2020-05-28T21:33:28Z",
        "closed_at": "2020-05-28T21:33:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4065",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4065",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4065.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4065.patch",
            "merged_at": "2020-05-28T21:33:27Z"
        },
        "body": "**Description**: Describe your changes.\r\n1. Make CPU QuantizeLinear support optional zero poin\r\n2. Disable DequantizeLinear_Without_Zero_Point test for nGraph\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4065/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4066",
        "id": 626204096,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MjM5OTcx",
        "number": 4066,
        "title": "handle loss and name marching wrappers",
        "user": {
            "login": "liqunfu",
            "id": 3318051,
            "node_id": "MDQ6VXNlcjMzMTgwNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3318051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liqunfu",
            "html_url": "https://github.com/liqunfu",
            "followers_url": "https://api.github.com/users/liqunfu/followers",
            "following_url": "https://api.github.com/users/liqunfu/following{/other_user}",
            "gists_url": "https://api.github.com/users/liqunfu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liqunfu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liqunfu/subscriptions",
            "organizations_url": "https://api.github.com/users/liqunfu/orgs",
            "repos_url": "https://api.github.com/users/liqunfu/repos",
            "events_url": "https://api.github.com/users/liqunfu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liqunfu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T04:26:46Z",
        "updated_at": "2020-06-06T06:34:29Z",
        "closed_at": "2020-06-06T06:34:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4066",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4066",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4066.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4066.patch",
            "merged_at": "2020-06-06T06:34:27Z"
        },
        "body": "**Description**: Describe your changes.\r\nORTTrainer fails to handle cases where both WrapModel and model_loss_cls are needed.\r\n**Motivation and Context**\r\nfix the failing case\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4067",
        "id": 626216238,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MjQ5NTE5",
        "number": 4067,
        "title": "Delete google::protobuf::io::FileInputStream class from our source code",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T05:01:30Z",
        "updated_at": "2020-05-28T17:05:50Z",
        "closed_at": "2020-05-28T17:05:48Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4067",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4067",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4067.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4067.patch",
            "merged_at": "2020-05-28T17:05:48Z"
        },
        "body": "**Description**: \r\n\r\nThis class is already part of the protobuf-lite library. We don't need a copy here.\r\nAnd if we do,  we must ensure the signature of every function is exactly the same as the original. However, the upstream code may get changed over time. For example, recently protobuf added a \"const\" modifier to the FileInputStream::GetErrno(), which may break the build if a user want to use the latest protobuf. \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4068",
        "id": 626228837,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MjU5MzQ1",
        "number": 4068,
        "title": "Fix a macro and memory regression",
        "user": {
            "login": "wschin",
            "id": 3524474,
            "node_id": "MDQ6VXNlcjM1MjQ0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3524474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wschin",
            "html_url": "https://github.com/wschin",
            "followers_url": "https://api.github.com/users/wschin/followers",
            "following_url": "https://api.github.com/users/wschin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wschin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wschin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wschin/subscriptions",
            "organizations_url": "https://api.github.com/users/wschin/orgs",
            "repos_url": "https://api.github.com/users/wschin/repos",
            "events_url": "https://api.github.com/users/wschin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wschin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T05:33:46Z",
        "updated_at": "2020-05-29T16:24:42Z",
        "closed_at": "2020-05-29T16:24:41Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4068",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4068",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4068.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4068.patch",
            "merged_at": "2020-05-29T16:24:41Z"
        },
        "body": "1. Use the right symbol to enable or disable NVTX profile.\r\n2. Always launch `session_.Run(...)` from a thread to avoid OOM.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4068/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4069",
        "id": 626257639,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0MjgxOTk4",
        "number": 4069,
        "title": "Fix a problem in StacktraceTests::BasicTests",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T06:41:57Z",
        "updated_at": "2020-05-28T17:06:18Z",
        "closed_at": "2020-05-28T17:06:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4069",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4069",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4069.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4069.patch",
            "merged_at": "2020-05-28T17:06:17Z"
        },
        "body": "**Description**: \r\n\r\nFix a problem in StacktraceTests::BasicTests\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n\r\nresult.size() could be zero, in this case, we shouldn't access result[0]\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4069/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4070",
        "id": 626335420,
        "node_id": "MDU6SXNzdWU2MjYzMzU0MjA=",
        "number": 4070,
        "title": "Managed API: NativeMethods.OrtSetIntraOpNumThreads Crashes Application",
        "user": {
            "login": "mejas",
            "id": 5220815,
            "node_id": "MDQ6VXNlcjUyMjA4MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5220815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mejas",
            "html_url": "https://github.com/mejas",
            "followers_url": "https://api.github.com/users/mejas/followers",
            "following_url": "https://api.github.com/users/mejas/following{/other_user}",
            "gists_url": "https://api.github.com/users/mejas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mejas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mejas/subscriptions",
            "organizations_url": "https://api.github.com/users/mejas/orgs",
            "repos_url": "https://api.github.com/users/mejas/repos",
            "events_url": "https://api.github.com/users/mejas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mejas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pranavsharma",
                "id": 2732907,
                "node_id": "MDQ6VXNlcjI3MzI5MDc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pranavsharma",
                "html_url": "https://github.com/pranavsharma",
                "followers_url": "https://api.github.com/users/pranavsharma/followers",
                "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
                "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
                "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
                "repos_url": "https://api.github.com/users/pranavsharma/repos",
                "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-05-28T08:50:45Z",
        "updated_at": "2020-06-02T18:17:48Z",
        "closed_at": "2020-06-01T22:28:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nC# Application crashes without exception when setting `SessionOptions.IntraOpNumThreads`. This does not happen when building from source.\r\n\r\n**Urgency**\r\nHigh. This used to work back in 1.2.0\r\n\r\n**System information**\r\n- Windows 10 1803\r\n- ONNX Runtime installed from (source or binary): nuget package\r\n- ONNX Runtime version: 1.3.0\r\n- Python version: 3.7.8\r\n- Visual Studio version (if applicable): 16.7 Preview 1.0\r\n- GCC/Compiler version (if compiling from source): Msbuild 16.7.0.22806\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: Intel HD Graphics \r\n\r\n**To Reproduce**\r\n- Initialize `InferenceSession` object\r\n- Set `IntraOpNumThreads` to 1\r\n- Application crashes\r\n\r\n**Expected behavior**\r\nApplication should not crash and create the `InferenceSession` object.\r\n\r\n**Additional context**\r\nThis happens even when you don't have an ONNX model. See repro steps for procedure.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4070/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4071",
        "id": 626413978,
        "node_id": "MDU6SXNzdWU2MjY0MTM5Nzg=",
        "number": 4071,
        "title": "INVALID_ARGUMENT : Non-zero status code returned while running Conv node. Invalid input shape: {0,0} after successful convertation",
        "user": {
            "login": "zeleniyslonik",
            "id": 59884573,
            "node_id": "MDQ6VXNlcjU5ODg0NTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/59884573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zeleniyslonik",
            "html_url": "https://github.com/zeleniyslonik",
            "followers_url": "https://api.github.com/users/zeleniyslonik/followers",
            "following_url": "https://api.github.com/users/zeleniyslonik/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeleniyslonik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zeleniyslonik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeleniyslonik/subscriptions",
            "organizations_url": "https://api.github.com/users/zeleniyslonik/orgs",
            "repos_url": "https://api.github.com/users/zeleniyslonik/repos",
            "events_url": "https://api.github.com/users/zeleniyslonik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zeleniyslonik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-28T10:53:23Z",
        "updated_at": "2022-03-13T00:12:12Z",
        "closed_at": "2020-08-08T02:57:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nThis bug came up when trying to convert the mask_refine part of SiamMask network from https://github.com/STVIR/pysot (Pytorch -> ONNX)\r\nI`ve encountered a need to split the network into two parts and convert the mask_refine part of it into another ONNX file. However, during inference I get the following error:\r\n```\r\n2020-05-28 12:19:08.281828359 [E:onnxruntime:, sequential_executor.cc:183 Execute] Non-zero status code returned while running Conv node. Name:'Conv_149' Status Message: Invalid input shape: {0,0}\r\nTraceback (most recent call last):\r\n  File \"/home/zeleniyslonik/PycharmProjects/onnx_siammask_tracker_python/track_on_video_onnx.py\", line 230, in <module>\r\n    processor.Execute()\r\n  File \"/home/zeleniyslonik/PycharmProjects/onnx_siammask_tracker_python/track_on_video_onnx.py\", line 103, in Execute\r\n    outputs = self.tracker.track(roiFrame)\r\n  File \"/home/zeleniyslonik/PycharmProjects/onnx_siammask_tracker_python/tracker/siammask_tracker.py\", line 325, in track\r\n    mask = self.sess_mask.run(None, {self.input_name_mask_1: xf_refine_1,\r\n  File \"/usr/lib/python3.8/site-packages/onnxruntime/capi/session.py\", line 142, in run\r\n    return self._sess.run(output_names, input_feed, run_options)\r\nonnxruntime.capi.onnxruntime_pybind11_state.InvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Non-zero status code returned while running Conv node. Name:'Conv_149' Status Message: Invalid input shape: {0,0}\r\n```\r\n\r\nThe name of a layer and shape in the Status Message can vary. I believe, that this error can be linked to the TraceWarnings I get during conversion:\r\n\r\n/home/zeleniyslonik/.local/lib/python3.8/site-packages/torch/tensor.py:464: RuntimeWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\r\n  warnings.warn('Iterating over a tensor might cause the trace to be incorrect. '\r\n```\r\n/home/zeleniyslonik/PycharmProjects/pysot_tracker_standalone/pysot/models/head/mask.py:77: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  p0 = F.pad(f[0], [16, 16, 16, 16])[:, :, 4*pos[0]:4*pos[0]+61, 4*pos[1]:4*pos[1]+61]\r\n/home/zeleniyslonik/PycharmProjects/pysot_tracker_standalone/pysot/models/head/mask.py:78: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  p1 = F.pad(f[1], [8, 8, 8, 8])[:, :, 2*pos[0]:2*pos[0]+31, 2*pos[1]:2*pos[1]+31]\r\n/home/zeleniyslonik/PycharmProjects/pysot_tracker_standalone/pysot/models/head/mask.py:79: TracerWarning: Converting a tensor to a Python index might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\r\n  p2 = F.pad(f[2], [4, 4, 4, 4])[:, :, pos[0]:pos[0]+15, pos[1]:pos[1]+15]\r\n```\r\n\r\n**Urgency**\r\nNo dedlines, but it would be nice to solve this ASAP\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux PC 5.4.40-1-MANJARO #1 SMP PREEMPT Sun May 10 14:17:40 UTC 2020 x86_64 GNU/Linux\r\n- ONNX Runtime installed from (source or binary): source\r\n- ONNX Runtime version: 1.2.0-5\r\n- Python version: 3.8\r\n- Visual Studio version (if applicable): None\r\n- GCC/Compiler version (if compiling from source): 9.3.0 (Arch Linux 9.3.0-1) \r\n- CUDA/cuDNN version: 10.2.89-5/7.6.5.32-4\r\n- GPU model and memory: NVidia GeForce GTX 1050 Ti\r\n\r\n**To Reproduce**\r\nI am attaching the models with the code to convert and to reproduce the issue.\r\nModel: https://drive.google.com/open?id=1dWgAsTu6ivHVMMcIbF_KQ8wZRXApP8fe\r\nPut it into the PySOT project main folder.\r\nCode to convert:\r\n```\r\nimport torch.nn as nn\r\nimport torch.onnx\r\n\r\nfrom pysot.core.config import cfg\r\nfrom pysot.models.model_builder import ModelBuilder\r\n\r\nconfig = 'siammask_r50_l3/config.yaml'\r\nsnapshot = 'siammask_r50_l3/model.pth'\r\n\r\ncfg.merge_from_file(config)\r\ncfg.CUDA = torch.cuda.is_available() and cfg.CUDA\r\ndevice = torch.device('cuda' if cfg.CUDA else 'cpu')\r\n\r\nclass ConvertModel(nn.Module):\r\n    def __init__(self, model):\r\n        super(ConvertModel, self).__init__()\r\n        self.model = model\r\n\r\n    def forward(self, x1, x2, x3, mask_corr, pos):\r\n        mask_refine = self.model.refine_head([x1, x2, x3], mask_corr, pos)\r\n        return mask_refine\r\n\r\nmodel0 = ModelBuilder()\r\nmodel0.load_state_dict(torch.load(snapshot, map_location=lambda storage, loc: storage.cpu()))\r\n\r\nmodel0.eval()\r\n# print(model0)\r\nmodel = ConvertModel(model0)\r\n\r\nself_xf_dummy_0 = torch.randn(1, 64, 125, 125)\r\nself_xf_dummy_1 = torch.randn(1, 256, 63, 63)\r\nself_xf_dummy_2 = torch.randn(1, 512, 31, 31)\r\nmask_corr_feature_dummy = torch.randn(1, 256, 25, 25)\r\npos_dummy = torch.randint(low=0, high=20, size=(2,))\r\n\r\ntorch_out = torch.onnx._export(model, (self_xf_dummy_0, self_xf_dummy_1, self_xf_dummy_2, mask_corr_feature_dummy, pos_dummy),\r\n                                       \"siammask_r50_l3/siammask_mask_refine.onnx\",\r\n                                       export_params=True, opset_version=11, verbose=True)\r\n```\r\n\r\nCode to reproduce:\r\n\r\n```\r\nimport numpy as np\r\nimport onnxruntime as rt\r\n\r\nself_xf_dummy_0 = np.random.randn(1, 64, 125, 125)\r\nself_xf_dummy_1 = np.random.randn(1, 256, 63, 63)\r\nself_xf_dummy_2 = np.random.randn(1, 512, 31, 31)\r\nmask_corr_feature_dummy = np.random.randn(1, 256, 25, 25)\r\n\r\nsess_mask = rt.InferenceSession(\"siammask_r50_l3/siammask_mask_refine.onnx\")\r\n\r\ninput_name_mask_1 = sess_mask.get_inputs()[0].name\r\ninput_name_mask_2 = sess_mask.get_inputs()[1].name\r\ninput_name_mask_3 = sess_mask.get_inputs()[2].name\r\ninput_name_mask_4 = sess_mask.get_inputs()[3].name\r\ninput_name_mask_5 = sess_mask.get_inputs()[4].name\r\n\r\nouts_mask = sess_mask.run(None, {input_name_mask_1: self_xf_dummy_0,\r\n                                 input_name_mask_2: self_xf_dummy_1,\r\n                                 input_name_mask_3: self_xf_dummy_2,\r\n                                 input_name_mask_4: mask_corr_feature_dummy,\r\n                                 input_name_mask_5: np.asarray((20,20))})\r\n\r\nmask = outs_mask\r\nprint(mask.shape)\r\n```\r\n\r\nLaunch those snippets from the PySOT main folder.\r\n\r\n**Expected behavior**\r\nI expect the model to return a numpy array with shapes (1, 16129)\r\n\r\n**Screenshots**\r\nNone\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. If the issue is about a particular model, please share the model details as well to facilitate debugging.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4071/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4072",
        "id": 626511001,
        "node_id": "MDU6SXNzdWU2MjY1MTEwMDE=",
        "number": 4072,
        "title": "dead link in /README.md",
        "user": {
            "login": "q121q",
            "id": 885135,
            "node_id": "MDQ6VXNlcjg4NTEzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/885135?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/q121q",
            "html_url": "https://github.com/q121q",
            "followers_url": "https://api.github.com/users/q121q/followers",
            "following_url": "https://api.github.com/users/q121q/following{/other_user}",
            "gists_url": "https://api.github.com/users/q121q/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/q121q/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/q121q/subscriptions",
            "organizations_url": "https://api.github.com/users/q121q/orgs",
            "repos_url": "https://api.github.com/users/q121q/repos",
            "events_url": "https://api.github.com/users/q121q/events{/privacy}",
            "received_events_url": "https://api.github.com/users/q121q/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1311608287,
                "node_id": "MDU6TGFiZWwxMzExNjA4Mjg3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/documentation",
                "name": "documentation",
                "color": "1D76DB",
                "default": true,
                "description": "improvements or additions to documentation; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-28T13:30:49Z",
        "updated_at": "2020-06-01T22:26:02Z",
        "closed_at": "2020-06-01T22:25:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "there's a dead line to  https://github.com/microsoft/onnxruntime/blob/master/docs/HighLevelDesign.md \r\nin README.md",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4072/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4073",
        "id": 626590205,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NTUzNjQ4",
        "number": 4073,
        "title": "Remove ONNX from requirements.txt",
        "user": {
            "login": "prabhat00155",
            "id": 7043157,
            "node_id": "MDQ6VXNlcjcwNDMxNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7043157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhat00155",
            "html_url": "https://github.com/prabhat00155",
            "followers_url": "https://api.github.com/users/prabhat00155/followers",
            "following_url": "https://api.github.com/users/prabhat00155/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhat00155/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhat00155/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhat00155/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhat00155/orgs",
            "repos_url": "https://api.github.com/users/prabhat00155/repos",
            "events_url": "https://api.github.com/users/prabhat00155/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhat00155/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-28T15:10:08Z",
        "updated_at": "2020-05-29T16:14:56Z",
        "closed_at": "2020-05-29T16:14:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4073",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4073",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4073.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4073.patch",
            "merged_at": "2020-05-29T16:14:21Z"
        },
        "body": "**Description**: Remove ONNX package from requirements.txt, making it optional when using onnxruntime.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve? You can use onnxruntime to do inferencing without ONNX package installed. Having ONNX as a dependency causes issue on aarch devices as ONNX whl is not there for aarch64 platform and has to be built from source, which has a bunch of dependencies and is very slow on these devices with limited compute.\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4073/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4074",
        "id": 626693190,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NjM1OTUx",
        "number": 4074,
        "title": "Update WinRT_API.md to reflect 1.3 release",
        "user": {
            "login": "martinb35",
            "id": 42186431,
            "node_id": "MDQ6VXNlcjQyMTg2NDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/42186431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinb35",
            "html_url": "https://github.com/martinb35",
            "followers_url": "https://api.github.com/users/martinb35/followers",
            "following_url": "https://api.github.com/users/martinb35/following{/other_user}",
            "gists_url": "https://api.github.com/users/martinb35/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martinb35/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martinb35/subscriptions",
            "organizations_url": "https://api.github.com/users/martinb35/orgs",
            "repos_url": "https://api.github.com/users/martinb35/repos",
            "events_url": "https://api.github.com/users/martinb35/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martinb35/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T17:41:34Z",
        "updated_at": "2020-05-28T18:01:51Z",
        "closed_at": "2020-05-28T18:01:50Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4074",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4074",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4074.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4074.patch",
            "merged_at": "2020-05-28T18:01:50Z"
        },
        "body": "point to 1.3 nuget package and remove part about building DML from source.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4074/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4075",
        "id": 626839071,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NzU1Mjgw",
        "number": 4075,
        "title": "Re-enable PEP8 check in Win CI build ",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-05-28T21:51:13Z",
        "updated_at": "2020-05-29T23:10:07Z",
        "closed_at": "2020-05-29T23:10:06Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4075",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4075",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4075.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4075.patch",
            "merged_at": "2020-05-29T23:10:06Z"
        },
        "body": "**Description**: \r\nPEP8 check via flake8 was enabled in the static analysis build that is currently disabled so checks are not running. Add to Win-CPU build.\r\nFix build.py to be compliant again.\r\nAdd prefix to flake8 output so it's (hopefully) easier to identify the errors in build output.\r\n\r\n**Motivation and Context**\r\nRe-enable checks.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4075/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4076",
        "id": 626840767,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NzU2Njc3",
        "number": 4076,
        "title": "fixed typo in readme",
        "user": {
            "login": "linnealovespie",
            "id": 5448665,
            "node_id": "MDQ6VXNlcjU0NDg2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5448665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/linnealovespie",
            "html_url": "https://github.com/linnealovespie",
            "followers_url": "https://api.github.com/users/linnealovespie/followers",
            "following_url": "https://api.github.com/users/linnealovespie/following{/other_user}",
            "gists_url": "https://api.github.com/users/linnealovespie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/linnealovespie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/linnealovespie/subscriptions",
            "organizations_url": "https://api.github.com/users/linnealovespie/orgs",
            "repos_url": "https://api.github.com/users/linnealovespie/repos",
            "events_url": "https://api.github.com/users/linnealovespie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/linnealovespie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T21:54:33Z",
        "updated_at": "2020-05-29T19:39:30Z",
        "closed_at": "2020-05-29T19:39:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4076",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4076",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4076.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4076.patch",
            "merged_at": "2020-05-29T19:39:29Z"
        },
        "body": "**Description**: Fixed a typo in the readme. \r\n\r\n**Motivation and Context**\r\n- Improves the grammar in the readme. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4076/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4077",
        "id": 626861924,
        "node_id": "MDU6SXNzdWU2MjY4NjE5MjQ=",
        "number": 4077,
        "title": "Not able to build ONNX Runtime Server image",
        "user": {
            "login": "gaurang002",
            "id": 49882463,
            "node_id": "MDQ6VXNlcjQ5ODgyNDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/49882463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaurang002",
            "html_url": "https://github.com/gaurang002",
            "followers_url": "https://api.github.com/users/gaurang002/followers",
            "following_url": "https://api.github.com/users/gaurang002/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaurang002/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaurang002/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaurang002/subscriptions",
            "organizations_url": "https://api.github.com/users/gaurang002/orgs",
            "repos_url": "https://api.github.com/users/gaurang002/repos",
            "events_url": "https://api.github.com/users/gaurang002/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaurang002/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mrry",
                "id": 192142,
                "node_id": "MDQ6VXNlcjE5MjE0Mg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mrry",
                "html_url": "https://github.com/mrry",
                "followers_url": "https://api.github.com/users/mrry/followers",
                "following_url": "https://api.github.com/users/mrry/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
                "organizations_url": "https://api.github.com/users/mrry/orgs",
                "repos_url": "https://api.github.com/users/mrry/repos",
                "events_url": "https://api.github.com/users/mrry/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mrry/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-05-28T22:41:59Z",
        "updated_at": "2020-08-09T01:16:54Z",
        "closed_at": "2020-08-09T01:16:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nFollowing https://github.com/microsoft/onnxruntime/tree/master/dockerfiles#onnx-runtime-server, I am not able to build onnxruntime server image. \r\n\r\nI am getting following error:\r\n\r\n[ 88%] Building CXX object CMakeFiles/onnxruntime_server_tests.dir/test/unit_tests/prediction_service_impl_test.cc.o\r\n[ 90%] Building CXX object CMakeFiles/onnxruntime_server_tests.dir/test/unit_tests/server_configuration_test.cc.o\r\n[ 92%] Building CXX object CMakeFiles/onnxruntime_server_tests.dir/test/unit_tests/test_main.cc.o\r\n/onnxruntime/server/main.cc:23:44: note: #pragma message: SRV_VERSION=\"\"\r\n #pragma message(VAR_NAME_VALUE(SRV_VERSION))\r\n                                            ^\r\n/onnxruntime/server/main.cc:29:49: note: #pragma message: LATEST_COMMIT_ID=\"\"\r\n #pragma message(VAR_NAME_VALUE(LATEST_COMMIT_ID))\r\n                                                 ^\r\nIn file included from /usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h:33:0,\r\n                 from /usr/include/c++/5/bits/allocator.h:46,\r\n                 from /usr/include/c++/5/memory:63,\r\n                 from /onnxruntime/server/environment.h:6,\r\n                 from /onnxruntime/server/main.cc:4:\r\n/usr/include/c++/5/ext/new_allocator.h: In instantiation of 'void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = spdlog::sinks::syslog_sink<std::mutex>; _Args = {}; _Tp = spdlog::sinks::syslog_sink<std::mutex>]':\r\n/usr/include/c++/5/bits/alloc_traits.h:530:4:   required from 'static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = spdlog::sinks::syslog_sink<std::mutex>; _Args = {}; _Tp = spdlog::sinks::syslog_sink<std::mutex>; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >]'\r\n/usr/include/c++/5/bits/shared_ptr_base.h:522:39:   required from 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {}; _Tp = spdlog::sinks::syslog_sink<std::mutex>; _Alloc = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]'\r\n/usr/include/c++/5/bits/shared_ptr_base.h:617:4:   required from 'std::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = spdlog::sinks::syslog_sink<std::mutex>; _Alloc = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >; _Args = {}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]'\r\n/usr/include/c++/5/bits/shared_ptr_base.h:1097:35:   required from 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >; _Args = {}; _Tp = spdlog::sinks::syslog_sink<std::mutex>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]'\r\n/usr/include/c++/5/bits/shared_ptr.h:319:64:   required from 'std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >; _Args = {}; _Tp = spdlog::sinks::syslog_sink<std::mutex>]'\r\n/usr/include/c++/5/bits/shared_ptr.h:620:39:   required from 'std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = spdlog::sinks::syslog_sink<std::mutex>; _Alloc = std::allocator<spdlog::sinks::syslog_sink<std::mutex> >; _Args = {}]'\r\n/usr/include/c++/5/bits/shared_ptr.h:635:39:   required from 'std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = spdlog::sinks::syslog_sink<std::mutex>; _Args = {}]'\r\n/onnxruntime/server/main.cc:61:209:   required from here\r\n/usr/include/c++/5/ext/new_allocator.h:120:4: error: no matching function for call to 'spdlog::sinks::syslog_sink<std::mutex>::syslog_sink()'\r\n  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }\r\n    ^\r\nIn file included from /onnxruntime/server/main.cc:12:0:\r\n/onnxruntime/server/external/spdlog/include/spdlog/sinks/syslog_sink.h:23:5: note: candidate: spdlog::sinks::syslog_sink<Mutex>::syslog_sink(std::__cxx11::string, int, int, bool) [with Mutex = std::mutex; std::__cxx11::string = std::__cxx11::basic_string<char>]\r\n     syslog_sink(std::string ident, int syslog_option, int syslog_facility, bool enable_formatting)\r\n     ^\r\n/onnxruntime/server/external/spdlog/include/spdlog/sinks/syslog_sink.h:23:5: note:   candidate expects 4 arguments, 0 provided\r\n[ 94%] Building CXX object CMakeFiles/onnxruntime_server_tests.dir/test/unit_tests/test_server_environment.cc.o\r\nmake[2]: *** [CMakeFiles/onnxruntime_server.dir/main.cc.o] Error 1\r\nCMakeFiles/onnxruntime_server.dir/build.make:62: recipe for target 'CMakeFiles/onnxruntime_server.dir/main.cc.o' failed\r\nCMakeFiles/Makefile2:254: recipe for target 'CMakeFiles/onnxruntime_server.dir/all' failed\r\nmake[1]: *** [CMakeFiles/onnxruntime_server.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[ 96%] Building CXX object CMakeFiles/onnxruntime_server_tests.dir/test/unit_tests/util_tests.cc.o\r\n[ 98%] Linking CXX executable onnxruntime_server_tests\r\nRunning /usr/local/bin/grpc_python_plugin on /onnxruntime/server/protobuf/prediction_service.proto\r\n[ 98%] Built target onnxruntime_server_tests\r\nmake: *** [all] Error 2\r\nMakefile:83: recipe for target 'all' failed\r\nThe command '/bin/sh -c mkdir -p /onnxruntime/build && cd /onnxruntime/build && cmake -DCMAKE_BUILD_TYPE=Release /onnxruntime/server     && make -j$(getconf _NPROCESSORS_ONLN)' returned a non-zero code: 2\r\n\r\n**Urgency**\r\nNone\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\r\n\r\n**To Reproduce**\r\nRunning docker build command as per documentation:\r\ndocker build -t {docker_image_name} -f Dockerfile.server .\r\n\r\n**Expected behavior**\r\nSuccessful building of onnxruntime server image.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4077/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4078",
        "id": 626892761,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0ODAwMjgx",
        "number": 4078,
        "title": "Clean up training E2E test",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-28T23:40:36Z",
        "updated_at": "2020-05-29T16:20:49Z",
        "closed_at": "2020-05-29T16:20:48Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4078",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4078",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4078.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4078.patch",
            "merged_at": "2020-05-29T16:20:48Z"
        },
        "body": "**Description**\r\nUpdate training E2E build to not go through CTest and call test scripts directly.\r\n\r\n**Motivation and Context**\r\nSimplify the build and improve the output.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4078/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4079",
        "id": 626915970,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0ODIwNjI5",
        "number": 4079,
        "title": "Support binding input only for IOBinding in python api.",
        "user": {
            "login": "duli2012",
            "id": 2879800,
            "node_id": "MDQ6VXNlcjI4Nzk4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2879800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/duli2012",
            "html_url": "https://github.com/duli2012",
            "followers_url": "https://api.github.com/users/duli2012/followers",
            "following_url": "https://api.github.com/users/duli2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/duli2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/duli2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/duli2012/subscriptions",
            "organizations_url": "https://api.github.com/users/duli2012/orgs",
            "repos_url": "https://api.github.com/users/duli2012/repos",
            "events_url": "https://api.github.com/users/duli2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/duli2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-05-29T00:27:14Z",
        "updated_at": "2020-06-26T03:24:32Z",
        "closed_at": "2020-06-25T19:20:03Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4079",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4079",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4079.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4079.patch",
            "merged_at": "2020-06-25T19:20:03Z"
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\nFor models with dynamic output shape, current python api cannot use IO Binding. This PR will fix this issue by:\r\n1. add bind_output_name() interface to bind just an output name.\r\n2. add get_outputs() api to retrieve output.\r\n\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4079/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4080",
        "id": 626944761,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0ODQyNzk4",
        "number": 4080,
        "title": "Orttraining rc1 master merge",
        "user": {
            "login": "Tixxx",
            "id": 26332583,
            "node_id": "MDQ6VXNlcjI2MzMyNTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26332583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tixxx",
            "html_url": "https://github.com/Tixxx",
            "followers_url": "https://api.github.com/users/Tixxx/followers",
            "following_url": "https://api.github.com/users/Tixxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tixxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tixxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tixxx/subscriptions",
            "organizations_url": "https://api.github.com/users/Tixxx/orgs",
            "repos_url": "https://api.github.com/users/Tixxx/repos",
            "events_url": "https://api.github.com/users/Tixxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tixxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-29T02:03:24Z",
        "updated_at": "2020-05-29T19:28:14Z",
        "closed_at": "2020-05-29T19:28:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4080",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4080",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4080.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4080.patch",
            "merged_at": "2020-05-29T19:28:13Z"
        },
        "body": "**Description**: Describe your changes.\r\nChanges from rc1 branch that were checked in to prepare for Build.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4080/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4081",
        "id": 627139023,
        "node_id": "MDU6SXNzdWU2MjcxMzkwMjM=",
        "number": 4081,
        "title": "AttributeError: 'InferenceSession' object has no attribute 'get_providers'",
        "user": {
            "login": "Nfekih",
            "id": 36096342,
            "node_id": "MDQ6VXNlcjM2MDk2MzQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36096342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nfekih",
            "html_url": "https://github.com/Nfekih",
            "followers_url": "https://api.github.com/users/Nfekih/followers",
            "following_url": "https://api.github.com/users/Nfekih/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nfekih/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nfekih/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nfekih/subscriptions",
            "organizations_url": "https://api.github.com/users/Nfekih/orgs",
            "repos_url": "https://api.github.com/users/Nfekih/repos",
            "events_url": "https://api.github.com/users/Nfekih/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nfekih/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-29T09:40:28Z",
        "updated_at": "2021-03-08T20:03:55Z",
        "closed_at": "2020-06-01T14:46:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nAfter installing onnxruntime-gpu via pip install inside a conda enviornement as recommended, I successfully convert a BERT torch model (Transformres) into .onnx format.\r\nThen, I try this code sample:\r\n\r\n`import onnxruntime\r\nprint (onnxruntime.get_device ())\r\nmodel_path = \"model.onnx\"\r\nsession = onnxruntime.InferenceSession (model_path)\r\nprint (session.get_providers ())`\r\n\r\nI get this error: `AttributeError: 'InferenceSession' object has no attribute 'get_providers'`\r\n\r\n**System information**\r\n- OS: Linux Ubuntu 18.04\r\n- ONNX Runtime installed from (source or binary): source \r\n- ONNX version: 1.7.0\r\n- ONNX Runtime version: 1.3.0\r\n- ONNX Runtime gpu version: 1.2.0\r\n- Python version: Python 3.8 (Anaconda)\r\n- GCC/Compiler version : 7.5.0\r\n- CUDA/cuDNN version: 10.1/7.6\r\n- GPU model and memory:  RTX 2060 8G\r\n\r\nAm I mistaken a compatible version between packages or what is wrong? \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4081/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4082",
        "id": 627282250,
        "node_id": "MDU6SXNzdWU2MjcyODIyNTA=",
        "number": 4082,
        "title": "rel-1.3.0 Eigen revision is invalid",
        "user": {
            "login": "neuralwilltor",
            "id": 61754561,
            "node_id": "MDQ6VXNlcjYxNzU0NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/61754561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neuralwilltor",
            "html_url": "https://github.com/neuralwilltor",
            "followers_url": "https://api.github.com/users/neuralwilltor/followers",
            "following_url": "https://api.github.com/users/neuralwilltor/following{/other_user}",
            "gists_url": "https://api.github.com/users/neuralwilltor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neuralwilltor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neuralwilltor/subscriptions",
            "organizations_url": "https://api.github.com/users/neuralwilltor/orgs",
            "repos_url": "https://api.github.com/users/neuralwilltor/repos",
            "events_url": "https://api.github.com/users/neuralwilltor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neuralwilltor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-29T13:49:23Z",
        "updated_at": "2020-05-29T17:36:50Z",
        "closed_at": "2020-05-29T17:36:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nThe revision of the Eigen submodule is invalid and doesn't fetch from Github.\r\n\r\n**Urgency**\r\nLow for developers, I suspect -- it's just problematic for building ONNX Runtime from source.\r\n\r\n**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Any\r\n- ONNX Runtime installed from (source or binary): source\r\n- ONNX Runtime version: rel-1.3.0\r\n- Python version: Any\r\n- Visual Studio version (if applicable):\r\n- GCC/Compiler version (if compiling from source): Any\r\n- CUDA/cuDNN version: Any\r\n- GPU model and memory: Any\r\n\r\n**To Reproduce**\r\nClone the repository with its submodules.\r\n\r\n**Expected behavior**\r\nA successful clone without errors.\r\n\r\n**Screenshots**\r\nNone.\r\n\r\n**Additional context**\r\nNone.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4082/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4083",
        "id": 627389867,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MjAzNzMz",
        "number": 4083,
        "title": "WinML custom operator header is missing from nuget package.",
        "user": {
            "login": "smk2007",
            "id": 6754002,
            "node_id": "MDQ6VXNlcjY3NTQwMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6754002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smk2007",
            "html_url": "https://github.com/smk2007",
            "followers_url": "https://api.github.com/users/smk2007/followers",
            "following_url": "https://api.github.com/users/smk2007/following{/other_user}",
            "gists_url": "https://api.github.com/users/smk2007/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smk2007/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smk2007/subscriptions",
            "organizations_url": "https://api.github.com/users/smk2007/orgs",
            "repos_url": "https://api.github.com/users/smk2007/repos",
            "events_url": "https://api.github.com/users/smk2007/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smk2007/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-29T16:31:19Z",
        "updated_at": "2020-05-29T20:24:25Z",
        "closed_at": "2020-05-29T20:24:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4083",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4083",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4083.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4083.patch",
            "merged_at": "2020-05-29T20:24:23Z"
        },
        "body": "Issue: WinML custom operator header is missing from nuget package, forcing customers of the nuget package to have to manually download the missing MLOperatorAuthor.h header in order to implement their custom operators.\r\n\r\nFix: Add MLOperatorAuthor.h header to the package.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4083/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4084",
        "id": 627491114,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjg3NTU3",
        "number": 4084,
        "title": "Fix the daily pipeline failures",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-29T19:27:58Z",
        "updated_at": "2020-06-01T21:44:51Z",
        "closed_at": "2020-06-01T21:44:50Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4084",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4084",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4084.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4084.patch",
            "merged_at": "2020-06-01T21:44:50Z"
        },
        "body": "**Description**: \r\n\r\n1. Fix the nuget cpu pipeline and put code coverage pipeline back. \r\n2. Reduce onnx_test_runner's default logging level from WARNING to ERROR. Because there are too many log messages now. \r\n3. Enlarge the protobuf read buffer size for onnx_test_runner. It was missed from PR #4020.\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n\r\nCurrently, \r\n1. The nuget CPU pipeline fails with error of:\r\n\"curl: command not found\" \r\nwhile downloading azcopy which is for downloading the test data. But because I've put azcopy and all the test on the machines, so there is no need to re-download them from Azure again. To fix the problem, instead of installing curl on the machines, I deleted the data downloading step. If later on we need to add the step back, please only bring the \"Download test data\" step back, not the \"Download azcopy\". Because the azcopy command is already available at \"/usr/bin/\".\r\n\r\n2. The code coverage pipeline fails because it uses latest protobuf release and our code isn't compatible with that. I've sent the issue to Pranav. Before we get a fix,  I want to migrate the pipeline to Linux and LLVM. The LLVM code coverage tool has better documentation and it is easier to configure. It can merge the coverage result from multiple runs without extra tools. \r\n\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4084/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4085",
        "id": 627508622,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MzAxODQ2",
        "number": 4085,
        "title": "New perf metric - e2e throughput",
        "user": {
            "login": "ytaous",
            "id": 4484531,
            "node_id": "MDQ6VXNlcjQ0ODQ1MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4484531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ytaous",
            "html_url": "https://github.com/ytaous",
            "followers_url": "https://api.github.com/users/ytaous/followers",
            "following_url": "https://api.github.com/users/ytaous/following{/other_user}",
            "gists_url": "https://api.github.com/users/ytaous/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ytaous/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ytaous/subscriptions",
            "organizations_url": "https://api.github.com/users/ytaous/orgs",
            "repos_url": "https://api.github.com/users/ytaous/repos",
            "events_url": "https://api.github.com/users/ytaous/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ytaous/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-29T20:03:29Z",
        "updated_at": "2020-06-01T19:11:36Z",
        "closed_at": "2020-06-01T19:11:35Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4085",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4085",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4085.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4085.patch",
            "merged_at": "2020-06-01T19:11:35Z"
        },
        "body": "**Description**: Adding new throughput metric for reporting.\r\n\r\n**Motivation and Context**\r\n- We'll switch to the new throughput for dashboard monitoring.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4085/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4086",
        "id": 627524735,
        "node_id": "MDU6SXNzdWU2Mjc1MjQ3MzU=",
        "number": 4086,
        "title": "ConvTranspose auto_pad=SAME_UPPER/SAME_LOWER not working properly",
        "user": {
            "login": "vuzelac-cadence",
            "id": 26289656,
            "node_id": "MDQ6VXNlcjI2Mjg5NjU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/26289656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuzelac-cadence",
            "html_url": "https://github.com/vuzelac-cadence",
            "followers_url": "https://api.github.com/users/vuzelac-cadence/followers",
            "following_url": "https://api.github.com/users/vuzelac-cadence/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuzelac-cadence/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuzelac-cadence/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuzelac-cadence/subscriptions",
            "organizations_url": "https://api.github.com/users/vuzelac-cadence/orgs",
            "repos_url": "https://api.github.com/users/vuzelac-cadence/repos",
            "events_url": "https://api.github.com/users/vuzelac-cadence/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuzelac-cadence/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hariharans29",
                "id": 9969784,
                "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hariharans29",
                "html_url": "https://github.com/hariharans29",
                "followers_url": "https://api.github.com/users/hariharans29/followers",
                "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
                "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
                "organizations_url": "https://api.github.com/users/hariharans29/orgs",
                "repos_url": "https://api.github.com/users/hariharans29/repos",
                "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hariharans29/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-05-29T20:37:01Z",
        "updated_at": "2020-10-11T11:41:41Z",
        "closed_at": "2020-10-11T11:41:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nUsing ConvTranspose with auto_pad=SAME_UPPER. Program below prints output shape as `(1, 1, 4, 4)` which is different than the input shape. Should have been the same shape.\r\nBut also, node is created with the correct shape` (1,1,2,2) `and the checker passed. The actual output values indicate auto_pad=VALID is likely used internally.\r\n\r\n**Urgency**\r\nNone\r\n\r\n**System information**\r\nWindows 10\r\nONNX Runtime installed from binary:\r\nONNX Runtime version: 1.3.0\r\nPython version:  3.5.6\r\nCUDA/cuDNN version: None\r\n\r\n**To Reproduce**\r\n```\r\nfrom onnx import helper, checker, AttributeProto, TensorProto, GraphProto\r\nimport onnxruntime as rt\r\nimport numpy as np\r\n\r\nX = helper.make_tensor_value_info('X', TensorProto.FLOAT, [1, 1, 2, 2])\r\nW = helper.make_tensor_value_info('W', TensorProto.FLOAT, [1, 1, 3, 3])\r\nY = helper.make_tensor_value_info('Y', TensorProto.FLOAT, [1, 1, 2, 2])\r\nnode_def = helper.make_node(\"ConvTranspose\", [\"X\", \"W\"], [\"Y\"], auto_pad=\"SAME_UPPER\", strides=[1, 1])\r\ngraph_def = helper.make_graph([node_def], 'deconv-model', [X, W], [Y])\r\nmodel_def = helper.make_model(graph_def, producer_name='')\r\n\r\nchecker.check_model(model_def)\r\nwith open(\"deconv.onnx\", \"wb\") as f:\r\n    f.write(model_def.SerializeToString())\r\n\r\nsess = rt.InferenceSession(\"deconv.onnx\")\r\n\r\nX = np.arange(2, 6, 1).reshape(1, 1, 2, 2)\r\nW = np.arange(2, 11, 1).reshape(1, 1, 3, 3)\r\n\r\nonnx_pred = sess.run([\"Y\"], {\"X\": X.astype(np.float32), \"W\": W.astype(np.float32)})[0]\r\nprint(onnx_pred.shape)\r\n```\r\n**Expected behavior**\r\nshould print `(1, 1, 2, 2)`, prints` (1, 1, 4, 4)`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4086/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4087",
        "id": 627537665,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MzI1NTM3",
        "number": 4087,
        "title": "Set spdlog submodule branch to \"master\" explicitly.",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-29T21:05:13Z",
        "updated_at": "2020-06-02T11:00:37Z",
        "closed_at": "2020-05-30T00:53:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4087",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4087",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4087.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4087.patch",
            "merged_at": "2020-05-30T00:53:41Z"
        },
        "body": "**Description**: Updates the `.gitmodules` to use the \"master\" branch for the spdlog submodule. \r\n\r\n**Motivation and Context**\r\n- The default branch for the spdlog repository on GitHub recently changed from \"master\"\r\nto \"v1.x\", which has a different API for `syslog_sink::syslog_sink()`.\r\n- Building with the \"v1.x\" branch breaks builds of the server for anyone who has checked out the submodules since that change.\r\n- Fixes #4077.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4087/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4088",
        "id": 627596531,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Mzc0ODEw",
        "number": 4088,
        "title": "Update GPT2 Model Benchmark Script to Support IO Binding",
        "user": {
            "login": "liuziyue",
            "id": 9273813,
            "node_id": "MDQ6VXNlcjkyNzM4MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9273813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuziyue",
            "html_url": "https://github.com/liuziyue",
            "followers_url": "https://api.github.com/users/liuziyue/followers",
            "following_url": "https://api.github.com/users/liuziyue/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuziyue/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuziyue/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuziyue/subscriptions",
            "organizations_url": "https://api.github.com/users/liuziyue/orgs",
            "repos_url": "https://api.github.com/users/liuziyue/repos",
            "events_url": "https://api.github.com/users/liuziyue/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuziyue/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-29T23:31:37Z",
        "updated_at": "2020-06-01T22:07:50Z",
        "closed_at": "2020-06-01T22:07:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4088",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4088",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4088.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4088.patch",
            "merged_at": "2020-06-01T22:07:49Z"
        },
        "body": "**Description**: Describe your changes.\r\nAdd an option to run onnxruntime with io binding for benchmark. \r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\nWith IO binding, inputs and outputs are preallocated in memory, and copying across devices is avoided. Therefore for gpt2 model on GPU, the latency of ort is greatly improved . ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4088/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4089",
        "id": 627600201,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Mzc3Nzcw",
        "number": 4089,
        "title": "Run autopep8 on generate_nuspec_for_native_nuget.py",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-29T23:46:40Z",
        "updated_at": "2020-06-01T17:32:24Z",
        "closed_at": "2020-06-01T17:32:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4089",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4089",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4089.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4089.patch",
            "merged_at": "2020-06-01T17:32:23Z"
        },
        "body": "**Description**: \r\n\r\n1. Create new variable opheader_path to resolve the code line too line issue.\r\n2. Run autopep8 on generate_nuspec_for_native_nuget.py. \r\n\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n\r\nThe master branch is failing.\r\n\r\n         [flake8 PEP8 ERROR] C:/agent/_work/1/s/tools/nuget\\generate_nuspec_for_native_nuget.py:187:121: E501 line too long (124 > 120 characters)\r\n\r\n\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4089/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4090",
        "id": 627612998,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Mzg3OTE4",
        "number": 4090,
        "title": "Symbolic shape inference exit on models without onnx opset used",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-30T00:44:48Z",
        "updated_at": "2020-06-03T02:39:48Z",
        "closed_at": "2020-06-03T02:39:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4090",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4090",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4090.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4090.patch",
            "merged_at": "2020-06-03T02:39:47Z"
        },
        "body": "**Description**: Some traditional ml models failed because no onnx opset is specified\r\n\r\n**Motivation and Context**\r\n- To allow adding traditional ml models to test data\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4090/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4091",
        "id": 627622439,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MzkzOTg0",
        "number": 4091,
        "title": "Fix crash reported in #4070.",
        "user": {
            "login": "pranavsharma",
            "id": 2732907,
            "node_id": "MDQ6VXNlcjI3MzI5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2732907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavsharma",
            "html_url": "https://github.com/pranavsharma",
            "followers_url": "https://api.github.com/users/pranavsharma/followers",
            "following_url": "https://api.github.com/users/pranavsharma/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavsharma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavsharma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavsharma/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavsharma/orgs",
            "repos_url": "https://api.github.com/users/pranavsharma/repos",
            "events_url": "https://api.github.com/users/pranavsharma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavsharma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-30T01:30:28Z",
        "updated_at": "2020-06-01T22:27:17Z",
        "closed_at": "2020-06-01T22:27:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4091",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4091",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4091.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4091.patch",
            "merged_at": "2020-06-01T22:27:15Z"
        },
        "body": "**Description**: Fix crash reported in #4070.\r\nNo logger is available when the session options APIs are used before creating an env. This went undetected in all our tests since we've a default logger setup in the test env and we always create the env before using any of the other APIs. I would've expected the issue to show up in [this](https://github.com/microsoft/onnxruntime/blob/master/csharp/test/Microsoft.ML.OnnxRuntime.Tests/InferenceTest.cs#L73) test. However, the C# tests are not run sequentially and a later test always ends up setting up the env and hence the default logger. Hence I added a test that does not rely on any test env.\r\n\r\nI'm logging a message here and not returning an error to avoid breaking existing code. Ideally users should be able to upgrade ORT without changing their code.\r\n\r\n**Motivation and Context**\r\nFixes issue #4070.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4091/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4092",
        "id": 627634613,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1NDAyMTQz",
        "number": 4092,
        "title": "Remove evaluation output from training e2e test baseline data.",
        "user": {
            "login": "edgchen1",
            "id": 18449977,
            "node_id": "MDQ6VXNlcjE4NDQ5OTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18449977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgchen1",
            "html_url": "https://github.com/edgchen1",
            "followers_url": "https://api.github.com/users/edgchen1/followers",
            "following_url": "https://api.github.com/users/edgchen1/following{/other_user}",
            "gists_url": "https://api.github.com/users/edgchen1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edgchen1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edgchen1/subscriptions",
            "organizations_url": "https://api.github.com/users/edgchen1/orgs",
            "repos_url": "https://api.github.com/users/edgchen1/repos",
            "events_url": "https://api.github.com/users/edgchen1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edgchen1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-30T02:36:16Z",
        "updated_at": "2020-06-01T22:06:23Z",
        "closed_at": "2020-06-01T22:06:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4092",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4092",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4092.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4092.patch",
            "merged_at": "2020-06-01T22:06:22Z"
        },
        "body": "**Description**\r\nRemove evaluation output from training e2e test baseline data.\r\n\r\n**Motivation and Context**\r\nonnxruntime_training_bert changed to not run evaluation anymore so the test baseline needs updating.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4092/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4093",
        "id": 627780075,
        "node_id": "MDU6SXNzdWU2Mjc3ODAwNzU=",
        "number": 4093,
        "title": "Memory leak and thread pools not closing",
        "user": {
            "login": "pfeatherstone",
            "id": 45853521,
            "node_id": "MDQ6VXNlcjQ1ODUzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45853521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pfeatherstone",
            "html_url": "https://github.com/pfeatherstone",
            "followers_url": "https://api.github.com/users/pfeatherstone/followers",
            "following_url": "https://api.github.com/users/pfeatherstone/following{/other_user}",
            "gists_url": "https://api.github.com/users/pfeatherstone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pfeatherstone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pfeatherstone/subscriptions",
            "organizations_url": "https://api.github.com/users/pfeatherstone/orgs",
            "repos_url": "https://api.github.com/users/pfeatherstone/repos",
            "events_url": "https://api.github.com/users/pfeatherstone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pfeatherstone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 33,
        "created_at": "2020-05-30T17:28:37Z",
        "updated_at": "2020-06-04T17:04:16Z",
        "closed_at": "2020-06-04T17:04:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nI'm encapsulating ORT as much as possible in an object with the aim that whenever the object is deallocated, all resources are freed, including memory arenas and thread pools. I cannot achieve this using the API. I could live with a global thread pool lingering, but it seems there is a memory arena that never gets freed. \r\nFor example, if i create multiple objects sequentially like so:\r\n```\r\n{ onnx_model_impl net1(...);}\r\n{ onnx_model_impl net2(...);}\r\n{ onnx_model_impl net3(...);}\r\n```\r\nthere is a linear increase in memory without it ever getting freed. So it would seem there is a memory leak somewhere.\r\n\r\nThe code i'm using is below.\r\nHas it got something to do with The environment (Ort:Env) ?\r\nHow can global thread pools be swapped for local thread pools? Or even better, disabled entirely?\r\nHow can memory arenas be disabled? Note i'm not using ```OrtArenaAllocator```\r\n\r\n\r\n```\r\nOrt::Env create_env()\r\n{\r\n//    OrtThreadingOptions* envOpts = 0;\r\n//    assert(Ort::Global<void>::api_.CreateThreadingOptions(&envOpts) == 0);\r\n    Ort::Env env(/*envOpts,*/ ORT_LOGGING_LEVEL_WARNING, \"test\");\r\n//    Ort::Global<void>::api_.ReleaseThreadingOptions(envOpts);\r\n    return env;\r\n}\r\n\r\nOrt::Env& default_env()\r\n{\r\n    static Ort::Env INSTANCE = create_env();\r\n    return INSTANCE;\r\n}\r\n\r\nstruct onnx_model_impl\r\n{\r\n    onnx_model_impl(const void* modeldata, size_t modelsize, int cuda_device)\r\n    {\r\n        Ort::Env& env = default_env();\r\n        session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_ALL);\r\n//        session_options.SetInterOpNumThreads(1); //already using openmp. Using more threads slows the whole thing down\r\n//        session_options.SetIntraOpNumThreads(1); //already using openmp. Using more threads slows the whole thing down\r\n        if (cuda_device >= 0)\r\n        {\r\n            session_options.SetInterOpNumThreads(1);\r\n            session_options.SetIntraOpNumThreads(1);\r\n            session_options.DisableCpuMemArena();\r\n//            session_options.DisablePerSessionThreads();\r\n            assert(OrtSessionOptionsAppendExecutionProvider_CUDA(session_options, cuda_device) == 0);\r\n        }\r\n        \r\n        session.reset(new Ort::Session(env, modeldata, modelsize, session_options));\r\n\r\n        size_t num_input_nodes = session->GetInputCount();\r\n        \r\n        for (size_t i = 0; i < num_input_nodes; i++) \r\n        {\r\n            // print input node names\r\n            char* input_name = session->GetInputName(i, allocator);\r\n            input_names.push_back(input_name);\r\n\r\n            // print input node types\r\n            Ort::TypeInfo type_info = session->GetInputTypeInfo(i);\r\n            auto object_type        = type_info.GetONNXType();\r\n            auto tensor_info        = type_info.GetTensorTypeAndShapeInfo();\r\n            auto value_type         = tensor_info.GetElementType();\r\n            auto shape              = tensor_info.GetShape();\r\n            input_shapes.push_back(shape);\r\n            string shape_str_all = \"\";\r\n            for (auto s : shape)\r\n                shape_str_all += std::to_string(s) + \",\";\r\n            printf(\"input  %lu name %s obj type %i val type %i shape %s\\n\", i,\r\n                                                                               input_name,\r\n                                                                               (int)object_type,\r\n                                                                               (int)value_type,\r\n                                                                               shape_str_all.c_str());\r\n        }\r\n    \r\n        size_t num_output_nodes = session->GetOutputCount();\r\n\r\n        for (size_t i = 0; i < num_output_nodes; i++) \r\n        {\r\n            // print input node names\r\n            char* output_name = session->GetOutputName(i, allocator);\r\n            output_names.push_back(output_name);\r\n\r\n            // print input node types\r\n            Ort::TypeInfo type_info = session->GetOutputTypeInfo(i);\r\n            auto object_type        = type_info.GetONNXType();\r\n            auto tensor_info        = type_info.GetTensorTypeAndShapeInfo();\r\n            auto value_type         = tensor_info.GetElementType();\r\n            auto shape              = tensor_info.GetShape();\r\n            output_shapes.push_back(shape);\r\n            string shape_str_all = \"\";\r\n            for (auto s : shape)\r\n                shape_str_all += std::to_string(s) + \",\";\r\n            printf(\"output %lu name %s obj type %i val type %i shape %s\\n\", i,\r\n                                                                               output_name,\r\n                                                                               (int)object_type,\r\n                                                                               (int)value_type,\r\n                                                                               shape_str_all.c_str());\r\n        }\r\n    }\r\n       \r\n    void infer(vector<vector<int64_t>>  inputshapes, \r\n               vector<const float*>     inputs,\r\n               vector<vector<int64_t>>& outputshapes,\r\n               vector<vector<float>>&   outputs)\r\n    {\r\n        assert(inputshapes.size() == inputs.size());\r\n        assert(inputs.size() == input_names.size());\r\n        \r\n        vector<Ort::Value> input_tensors;\r\n        for (size_t i = 0 ; i < inputs.size() ; i++)\r\n        {\r\n            //check shape\r\n            auto& shape = inputshapes[i];\r\n            auto& exp   = input_shapes[i];\r\n            for (size_t d = 0 ; d < shape.size() ; d++)\r\n                if (exp[d] > 0)\r\n                    assert(exp[d] == shape[d]);\r\n            //total size\r\n            int64_t size = std::accumulate(shape.begin(), shape.end(), 1, [](int64_t p, int64_t s){return p*s;});\r\n            //load tensor\r\n            auto memory_info = Ort::MemoryInfo::CreateCpu(OrtDeviceAllocator, OrtMemTypeDefault);\r\n            input_tensors.push_back(Ort::Value::CreateTensor<float>(memory_info, \r\n                                                                    const_cast<float*>(inputs[i]), \r\n                                                                    size, \r\n                                                                    shape.data(), \r\n                                                                    shape.size()));\r\n            assert(input_tensors.back().IsTensor());\r\n        }\r\n\r\n        auto output_tensors = session->Run(Ort::RunOptions{nullptr}, input_names.data(), &input_tensors[0], input_tensors.size(), output_names.data(), output_names.size());\r\n\r\n        for (auto& output_tensor : output_tensors)\r\n        {\r\n            auto type_info = output_tensor.GetTypeInfo();\r\n//            auto object_type        = type_info.GetONNXType();\r\n            auto tensor_info        = type_info.GetTensorTypeAndShapeInfo();\r\n//            auto value_type         = tensor_info.GetElementType();\r\n            auto shape              = tensor_info.GetShape();\r\n            outputshapes.push_back(shape);\r\n            int64_t size = std::accumulate(shape.begin(), shape.end(), 1, [](int64_t p, int64_t s){return p*s;});\r\n            float* ptr = output_tensor.GetTensorMutableData<float>();\r\n            outputs.emplace_back(ptr, ptr + size);\r\n        }\r\n    }\r\n    \r\n    Ort::SessionOptions                 session_options;\r\n    Ort::AllocatorWithDefaultOptions    allocator;\r\n    std::unique_ptr<Ort::Session>       session;\r\n    std::vector<const char*>            input_names;\r\n    std::vector<std::vector<int64_t>>   input_shapes;\r\n    std::vector<const char*>            output_names;\r\n    std::vector<std::vector<int64_t>>   output_shapes;\r\n};\r\n```\r\n\r\n**System information**\r\n- Linux Ubuntu 18.04\r\n- ONNX Runtime installed : latest GPU release): https://github.com/microsoft/onnxruntime/releases/download/v1.3.0/onnxruntime-linux-x64-gpu-1.3.0.tgz\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4093/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4094",
        "id": 628038015,
        "node_id": "MDU6SXNzdWU2MjgwMzgwMTU=",
        "number": 4094,
        "title": "Improve C++ API with support for modern C++ standards",
        "user": {
            "login": "jgbradley1",
            "id": 654554,
            "node_id": "MDQ6VXNlcjY1NDU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/654554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgbradley1",
            "html_url": "https://github.com/jgbradley1",
            "followers_url": "https://api.github.com/users/jgbradley1/followers",
            "following_url": "https://api.github.com/users/jgbradley1/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgbradley1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgbradley1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgbradley1/subscriptions",
            "organizations_url": "https://api.github.com/users/jgbradley1/orgs",
            "repos_url": "https://api.github.com/users/jgbradley1/repos",
            "events_url": "https://api.github.com/users/jgbradley1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgbradley1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2020-05-31T20:28:49Z",
        "updated_at": "2023-01-27T02:41:30Z",
        "closed_at": "2020-10-11T11:41:36Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Is there interest in updating the C++ API to use modern C++ best practices? From what I can tell, the C++ API is just a simple wrapper around the C API. It could in theory be more supportive of modern C++ standards and handle the necessary conversions to the C API.\r\n\r\nFor example, support for `std::string` over `const char *` would improve the ability to integrate with other frameworks/libraries instead of forcing C++ devs to drop down to C-style syntax.\r\n\r\nFor example\r\n```\r\n// works only because of implicit conversion\r\nsize_t num_nodes = session.GetInputCount();\r\nstd::vector<std::string> input_node_names;\r\nfor (int i=0; i<num_nodes; i++) {\r\n    input_node_names.push_back( session.GetInputName(i, allocator) );\r\n}\r\n\r\nsize_t num_nodes = session.GetOutputCount();\r\nstd::vector<std::string> output_node_names;\r\nfor (int i=0; i<num_nodes; i++) {\r\n    output_node_names.push_back( session.GetOututName(i, allocator) );\r\n}\r\n```\r\n\r\nBut when trying to run inferrence:\r\n```\r\n// will not work\r\nstd::vector<Ort::Value> output_tensors = session.Run(Ort::RunOptions{nullptr}, input_node_names.data(), input_tensors.data(), input_tensors.size(), output_node_names.data(), output_node_names.size());\r\n```\r\n\r\nbecause `input_node_names` and `output_node_names` are strings.\r\n\r\n**Describe the solution you'd like**\r\nAdd support for the string type in the public API functions. This could also lead to simplifying the `Run()` call to something like:\r\n\r\n```cpp\r\nstd::vector<Ort::Value> output_tensors = session.Run(Ort::RunOptions{nullptr}, input_node_names, input_tensors.data(), input_tensors.size(), output_node_names);\r\n```\r\n\r\n**Additional context**\r\nIn general, I would appreciate more modern C++ standards supported by the C++ API with direct support for STL containers (i.e. std::vector) and the string type. Perhaps the C++ API could make better use of function templates to allow this - but starting by adding support for the `string` type would be a first step.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4094/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4095",
        "id": 628056521,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Njc5MTMy",
        "number": 4095,
        "title": "Support CUDA kernel for Einsum op",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-31T22:27:04Z",
        "updated_at": "2020-06-18T22:03:25Z",
        "closed_at": "2020-06-18T22:03:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4095",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4095",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4095.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4095.patch",
            "merged_at": "2020-06-18T22:03:24Z"
        },
        "body": "**Description**: Support CUDA kernel for Einsum op\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4096",
        "id": 628218171,
        "node_id": "MDU6SXNzdWU2MjgyMTgxNzE=",
        "number": 4096,
        "title": "directml provider and yolov3",
        "user": {
            "login": "boogeroo",
            "id": 66242562,
            "node_id": "MDQ6VXNlcjY2MjQyNTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/66242562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boogeroo",
            "html_url": "https://github.com/boogeroo",
            "followers_url": "https://api.github.com/users/boogeroo/followers",
            "following_url": "https://api.github.com/users/boogeroo/following{/other_user}",
            "gists_url": "https://api.github.com/users/boogeroo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boogeroo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boogeroo/subscriptions",
            "organizations_url": "https://api.github.com/users/boogeroo/orgs",
            "repos_url": "https://api.github.com/users/boogeroo/repos",
            "events_url": "https://api.github.com/users/boogeroo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boogeroo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1673018947,
                "node_id": "MDU6TGFiZWwxNjczMDE4OTQ3",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/ep:DML",
                "name": "ep:DML",
                "color": "0052CC",
                "default": false,
                "description": "issues related to the DirectML execution provider"
            },
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "fdwr",
                "id": 1809166,
                "node_id": "MDQ6VXNlcjE4MDkxNjY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fdwr",
                "html_url": "https://github.com/fdwr",
                "followers_url": "https://api.github.com/users/fdwr/followers",
                "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
                "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
                "organizations_url": "https://api.github.com/users/fdwr/orgs",
                "repos_url": "https://api.github.com/users/fdwr/repos",
                "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fdwr/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-06-01T07:30:13Z",
        "updated_at": "2020-09-05T19:32:40Z",
        "closed_at": "2020-09-05T19:32:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nUnable to run session with yolov3 model when directml provider is used\r\n\r\n\r\n**System information**\r\n- Win10\r\n- ONNX Runtime v1.3.0 built from source\r\n- C++\r\n- VS2019\r\n- nvidian gtx-1080ti\r\n\r\n**To Reproduce**\r\n- start onnxruntime with DML provider\r\n- load yolov3 model\r\n- do session.run()\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\n\r\n**Expected behavior**\r\nNot have a exception.\r\n\r\n**Screenshots**\r\n2020-06-01 15:15:49.5502695 [E:onnxruntime:, sequential_executor.cc:281 onnxruntime::SequentialExecutor::Execute] Non-zero status code returned while running Div node. Name:'TFNodes/yolo_evaluation_layer_1/truediv_16' Status Message: E:\\ub\\3rdparty\\UbersenseClient_Onnx_SRC\\onnxruntime\\core\\providers\\dml\\DmlExecutionProvider\\src\\MLOperatorAuthorImpl.cpp(1540)\\onnxruntime.dll!00007FFC80416DAD: (caller: 00007FFC804C6E94) Exception(3) tid(4b7c) 80070057 The parameter is incorrect.\r\n    [Windows::AI::MachineLearning::Adapter::AbiOpKernel::Compute::<lambda_8eef6be26e5ff445ae381ec117e758fa>::operator ()(m_operatorFactory->CreateKernel(kernelInfoWrapper.Get(), ret.GetAddressOf()))]\r\n\r\n**Additional context**\r\nmodel: [https://1drv.ms/u/s!AvULrRUyhRhzhIQynjJOcI2d0OINsg?e=puaLcc](url)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4096/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4097",
        "id": 628395951,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1OTQ0OTE0",
        "number": 4097,
        "title": "Optimize GatherND",
        "user": {
            "login": "pengwa",
            "id": 10530022,
            "node_id": "MDQ6VXNlcjEwNTMwMDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10530022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengwa",
            "html_url": "https://github.com/pengwa",
            "followers_url": "https://api.github.com/users/pengwa/followers",
            "following_url": "https://api.github.com/users/pengwa/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengwa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengwa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengwa/subscriptions",
            "organizations_url": "https://api.github.com/users/pengwa/orgs",
            "repos_url": "https://api.github.com/users/pengwa/repos",
            "events_url": "https://api.github.com/users/pengwa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengwa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-01T12:20:39Z",
        "updated_at": "2020-07-03T11:42:34Z",
        "closed_at": "2020-07-03T11:42:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4097",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4097",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4097.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4097.patch",
            "merged_at": "2020-07-03T11:42:33Z"
        },
        "body": "**Description**: Move GatherND as early as possible to reduce computation \r\n\r\n**Goal/Non-Goal for this PR**\r\n\r\n- In current phase, this PR might not be expected  to be generic enough to handle pivot operators besides GatherND. It means only GatherND node (with batch_dims be 1, indices shape being [batch, predic_count, 1])  will be the \"trigger\" to exchanges nodes, resulting in making GatherND happen earlier. \r\n- And specifically, even for GatherND, current implementation is only covering few operators exchanges. Making the BERT transformer work is a good starting point, we can gradually improve it to more coverage. \r\n\r\n**Perf Notes:**\r\n- On 16G V100, phase 1, batch size 64, Mixed Precision run, The E2E throughput improved from 185.894 to 196.513 (Examples / Second),  5.7+%. \r\n\r\n- On 16G V100, phase 2, batch size 8, Mixed Precision run, The E2E throughput improved from 33.9135 to 35.2809 (Examples / Second),  4.03%. \r\n\r\n- On 32G V100 DGX2 testing, there is roughly 5.8% improvements on phase 1 batch size 128, (1440 clock rate: 206.126 v.s. 218.591 Examples / Second ).\r\n\r\n**Maximum Batch Size**\r\n- On 16G V100, phase 1 maximum batch size increased from 66 to 70. phase 2 maximum batch size increased from 10 to 11.\r\n\r\n**Switch**\r\n\r\nThere is a switch called  --optimize_gathernd for C++ frontend, by default it is off. I am working on more aggressive optimization, will enable the feature by default once the logic is validated to be mature enough on all transformer based models. \r\n\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4097/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4098",
        "id": 628568826,
        "node_id": "MDU6SXNzdWU2Mjg1Njg4MjY=",
        "number": 4098,
        "title": "Build with TensorRT : onnxruntime_test_all fails",
        "user": {
            "login": "pfeatherstone",
            "id": 45853521,
            "node_id": "MDQ6VXNlcjQ1ODUzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45853521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pfeatherstone",
            "html_url": "https://github.com/pfeatherstone",
            "followers_url": "https://api.github.com/users/pfeatherstone/followers",
            "following_url": "https://api.github.com/users/pfeatherstone/following{/other_user}",
            "gists_url": "https://api.github.com/users/pfeatherstone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pfeatherstone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pfeatherstone/subscriptions",
            "organizations_url": "https://api.github.com/users/pfeatherstone/orgs",
            "repos_url": "https://api.github.com/users/pfeatherstone/repos",
            "events_url": "https://api.github.com/users/pfeatherstone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pfeatherstone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "stevenlix",
            "id": 38092805,
            "node_id": "MDQ6VXNlcjM4MDkyODA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38092805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevenlix",
            "html_url": "https://github.com/stevenlix",
            "followers_url": "https://api.github.com/users/stevenlix/followers",
            "following_url": "https://api.github.com/users/stevenlix/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevenlix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stevenlix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevenlix/subscriptions",
            "organizations_url": "https://api.github.com/users/stevenlix/orgs",
            "repos_url": "https://api.github.com/users/stevenlix/repos",
            "events_url": "https://api.github.com/users/stevenlix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stevenlix/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "stevenlix",
                "id": 38092805,
                "node_id": "MDQ6VXNlcjM4MDkyODA1",
                "avatar_url": "https://avatars.githubusercontent.com/u/38092805?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/stevenlix",
                "html_url": "https://github.com/stevenlix",
                "followers_url": "https://api.github.com/users/stevenlix/followers",
                "following_url": "https://api.github.com/users/stevenlix/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevenlix/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/stevenlix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevenlix/subscriptions",
                "organizations_url": "https://api.github.com/users/stevenlix/orgs",
                "repos_url": "https://api.github.com/users/stevenlix/repos",
                "events_url": "https://api.github.com/users/stevenlix/events{/privacy}",
                "received_events_url": "https://api.github.com/users/stevenlix/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-06-01T16:25:25Z",
        "updated_at": "2020-06-05T09:32:19Z",
        "closed_at": "2020-06-04T03:19:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nTrying to build onnxruntime 1.3.0 with the following command:\r\n```\r\n./build.sh \\\r\n        --use_opemp \\\r\n        --use_cuda \\\r\n        --cuda_version=10.2 \\\r\n        --cuda_home=/usr/local/cuda \\\r\n        --cudnn_home=/usr/local/cuda \\\r\n        --use_tensorrt --tensorrt_home=$HOME/TensorRT \\\r\n        --build_shared_lib \\\r\n        --config Release\r\n```\r\nThe build fails on the following tests:\r\n1: [  FAILED  ] QAttentionTest.AttentionBatch1\r\n1: [  FAILED  ] QAttentionTest.AttentionBatch1_Float16\r\n1: [  FAILED  ] QAttentionTest.AttentionBatch2\r\n1: [  FAILED  ] QAttentionTest.AttentionMaskPartialSequence\r\n1: [  FAILED  ] QAttentionTest.AttentionMaskExceedSequence\r\n1: [  FAILED  ] QAttentionTest.AttentionNoMaskIndex\r\n\r\n**System information**\r\n- Ubuntu 18.04\r\n- Onnxruntime 1.3.0 (source)\r\n- CUDA/cuDNN version: 10.2 - 7.65",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4098/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4099",
        "id": 628574497,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MDkxODc1",
        "number": 4099,
        "title": "Exclude non-trainable torch buffers from trainable weights",
        "user": {
            "login": "ashbhandare",
            "id": 14295305,
            "node_id": "MDQ6VXNlcjE0Mjk1MzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14295305?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashbhandare",
            "html_url": "https://github.com/ashbhandare",
            "followers_url": "https://api.github.com/users/ashbhandare/followers",
            "following_url": "https://api.github.com/users/ashbhandare/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashbhandare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashbhandare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashbhandare/subscriptions",
            "organizations_url": "https://api.github.com/users/ashbhandare/orgs",
            "repos_url": "https://api.github.com/users/ashbhandare/repos",
            "events_url": "https://api.github.com/users/ashbhandare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashbhandare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-01T16:35:08Z",
        "updated_at": "2020-06-02T21:05:47Z",
        "closed_at": "2020-06-02T21:05:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4099",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4099",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4099.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4099.patch",
            "merged_at": "2020-06-02T21:05:45Z"
        },
        "body": "Non-trainable torch buffers must not be trained in ORT. This can be achieved by adding them to frozen weights.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4099/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4100",
        "id": 628582012,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MDk3OTU3",
        "number": 4100,
        "title": "Actually switch the spdlog submodule to the master branch",
        "user": {
            "login": "mrry",
            "id": 192142,
            "node_id": "MDQ6VXNlcjE5MjE0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrry",
            "html_url": "https://github.com/mrry",
            "followers_url": "https://api.github.com/users/mrry/followers",
            "following_url": "https://api.github.com/users/mrry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrry/subscriptions",
            "organizations_url": "https://api.github.com/users/mrry/orgs",
            "repos_url": "https://api.github.com/users/mrry/repos",
            "events_url": "https://api.github.com/users/mrry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-06-01T16:48:40Z",
        "updated_at": "2020-06-01T21:32:18Z",
        "closed_at": "2020-06-01T21:32:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4100",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4100",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4100.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4100.patch",
            "merged_at": "2020-06-01T21:32:17Z"
        },
        "body": "**Description**: Follow-up to #4087, also updating the commit at which the spdlog submodule is checked out.\r\n\r\n**Motivation and Context**\r\n- Fixes #4077 and the server build.\r\n- My previous PR #4087 was incomplete: it only updated \".gitmodules\", but I also needed to commit a change to the checked out commit of the submodule.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4101",
        "id": 628689601,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MTg1MjI3",
        "number": 4101,
        "title": "MLAS: more code cleanup",
        "user": {
            "login": "tracysh",
            "id": 42477615,
            "node_id": "MDQ6VXNlcjQyNDc3NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/42477615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tracysh",
            "html_url": "https://github.com/tracysh",
            "followers_url": "https://api.github.com/users/tracysh/followers",
            "following_url": "https://api.github.com/users/tracysh/following{/other_user}",
            "gists_url": "https://api.github.com/users/tracysh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tracysh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tracysh/subscriptions",
            "organizations_url": "https://api.github.com/users/tracysh/orgs",
            "repos_url": "https://api.github.com/users/tracysh/repos",
            "events_url": "https://api.github.com/users/tracysh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tracysh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-01T20:01:23Z",
        "updated_at": "2020-06-02T04:19:45Z",
        "closed_at": "2020-06-02T04:19:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4101",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4101",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4101.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4101.patch",
            "merged_at": "2020-06-02T04:19:43Z"
        },
        "body": "Various cleanup changes:\r\n1. Fix up the remaining vector usage to be more \"portable\" to architectures that have at least the gcc/clang vector language extensions. This allows the code to compile using the RISC-V compiler as an example (but not link as there is not a stock GEMM available yet).\r\n2. Remove the \"(std:min)\" workaround for windows.h defining min/max macros and go with the NOMINMAX workaround instead. Makes the code a little less weird looking.\r\n3. Reduce the code size of the SSE2 quantized GEMM routine further without affecting performance.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4102",
        "id": 628718347,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MjA3OTg3",
        "number": 4102,
        "title": "Clarify telemetry collection",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-06-01T20:51:07Z",
        "updated_at": "2020-06-02T20:12:29Z",
        "closed_at": "2020-06-02T20:12:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4102",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4102",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4102.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4102.patch",
            "merged_at": "2020-06-02T20:12:28Z"
        },
        "body": "Clarify telemetry collection. #3898 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4103",
        "id": 628730866,
        "node_id": "MDU6SXNzdWU2Mjg3MzA4NjY=",
        "number": 4103,
        "title": "Crash with bus error on Android (arm-v7a) when creating InferenceSession with SSD model",
        "user": {
            "login": "muxyrmuc",
            "id": 3995881,
            "node_id": "MDQ6VXNlcjM5OTU4ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3995881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/muxyrmuc",
            "html_url": "https://github.com/muxyrmuc",
            "followers_url": "https://api.github.com/users/muxyrmuc/followers",
            "following_url": "https://api.github.com/users/muxyrmuc/following{/other_user}",
            "gists_url": "https://api.github.com/users/muxyrmuc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/muxyrmuc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/muxyrmuc/subscriptions",
            "organizations_url": "https://api.github.com/users/muxyrmuc/orgs",
            "repos_url": "https://api.github.com/users/muxyrmuc/repos",
            "events_url": "https://api.github.com/users/muxyrmuc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/muxyrmuc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-06-01T21:15:14Z",
        "updated_at": "2021-09-02T06:32:46Z",
        "closed_at": "2020-08-15T20:00:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nApplication linked with release build of libonnxruntime.so crashes due to SIGBUS. Logcat output:\r\n```\r\nF/libc    (30024): Fatal signal 7 (SIGBUS), code 1, fault addr 0xb7acf8a1 in tid 30024 (app)\r\nI/DEBUG   (  194): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\nI/DEBUG   (  194): Build fingerprint: 'lge/palman/palman:5.1/LMY47O.L017/1474611459:user/release-keys'\r\nI/DEBUG   (  194): Revision: '11'\r\nI/DEBUG   (  194): ABI: 'arm'\r\nI/DEBUG   (  194): pid: 30024, tid: 30024, name: app  >>> ./app <<<\r\nI/DEBUG   (  194): signal 7 (SIGBUS), code 1 (BUS_ADRALN), fault addr 0xb7acf8a1\r\nW/NativeCrashListener(  630): Couldn't find ProcessRecord for pid 30024\r\nI/DEBUG   (  194):     r0 b7b53938  r1 b7b53938  r2 b7b53940  r3 bed7e058\r\nE/DEBUG   (  194): AM write failure (32 / Broken pipe)\r\nI/DEBUG   (  194):     r4 b7acf8a9  r5 b7acf8a1  r6 00000000  r7 bed7e038\r\nI/DEBUG   (  194):     r8 00000000  r9 00000008  sl b64c4dd4  fp bed7e050\r\nI/DEBUG   (  194):     ip b64c064c  sp bed7e000  lr b649513b  pc b6536a78  cpsr 20010030\r\nI/DEBUG   (  194): \r\nI/DEBUG   (  194): backtrace:\r\nI/DEBUG   (  194):     #00 pc 00069a78  /data/local/tmp/libonnxruntime.so\r\nI/DEBUG   (  194):     #01 pc 0002b137  /system/lib/libc.so (dlmalloc_real+3486)\r\nI/DEBUG   (  194):     #02 pc 0020f4f4  [heap]\r\nI/DEBUG   (  194): \r\nI/DEBUG   (  194): Tombstone written to: /data/tombstones/tombstone_00\r\nI/BootReceiver(  630): Copying /data/tombstones/tombstone_00 to DropBox (SYSTEM_TOMBSTONE)\r\n```\r\n\r\n**Urgency**\r\nNone.\r\n\r\n**System information**\r\n- OS Platform and Distribution:  Android 5.1 on arm-v7a (NDK versions 21 and 19 were tested).\r\n- ONNX Runtime installed from source: yes.\r\n- ONNX Runtime version: 1.3.0 (1.2.0 is affected too).\r\n- Python version: none\r\n- Visual Studio version (if applicable): not applicable.\r\n- GCC/Compiler version (if compiling from source): clang from NDK version 21.\r\n- CUDA/cuDNN version: not applicable.\r\n- GPU model and memory: not applicable.\r\n\r\n**To Reproduce**\r\n- Describe steps/code to reproduce the behavior.\r\nCode to reproduce:\r\n```\r\nconst char *model_path = \"ssd-10.onnx\";\r\nOrt::Env env(ORT_LOGGING_LEVEL_WARNING, \"somestring\");\r\nOrt::SessionOptions session_options;\r\nsession_options.SetIntraOpNumThreads(1);\r\nsession_options.SetGraphOptimizationLevel(ORT_ENABLE_BASIC);\r\nOrt::Session session(env, model_path, session_options);\r\n```\r\nThis is how I build libonnxruntime.so:\r\n```\r\n./build.sh --android --android_sdk_path /home/username/Android/Sdk/ --android_ndk_path /home/username/Android/Sdk/ndk/21.0.6113669/ --android_abi armeabi-v7a --android_api 21 --build_shared_lib --config Release\r\n```\r\n\r\n- Attach the ONNX model to the issue (where applicable) to expedite investigation.\r\nhttps://github.com/onnx/models/tree/master/vision/object_detection_segmentation/ssd\r\n\r\n\r\n**Expected behavior**\r\nInferenceSession is created without errors.\r\n\r\n**Screenshots**\r\nNot applicable.\r\n\r\n**Additional context**\r\nDebug build works fine.\r\nOther models with NMS layers are affected too.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4103/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4104",
        "id": 628771364,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MjQ5NTkx",
        "number": 4104,
        "title": "[Nodejs binding] create a new pipeline to generate signed binaries",
        "user": {
            "login": "fs-eire",
            "id": 7679871,
            "node_id": "MDQ6VXNlcjc2Nzk4NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7679871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fs-eire",
            "html_url": "https://github.com/fs-eire",
            "followers_url": "https://api.github.com/users/fs-eire/followers",
            "following_url": "https://api.github.com/users/fs-eire/following{/other_user}",
            "gists_url": "https://api.github.com/users/fs-eire/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fs-eire/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fs-eire/subscriptions",
            "organizations_url": "https://api.github.com/users/fs-eire/orgs",
            "repos_url": "https://api.github.com/users/fs-eire/repos",
            "events_url": "https://api.github.com/users/fs-eire/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fs-eire/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-01T22:35:21Z",
        "updated_at": "2020-06-02T08:28:07Z",
        "closed_at": "2020-06-02T08:28:06Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4104",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4104",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4104.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4104.patch",
            "merged_at": "2020-06-02T08:28:06Z"
        },
        "body": "Create a new pipeline to generate signed binaries. currently this works on windows only",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4105",
        "id": 628796831,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MjY4Nzkx",
        "number": 4105,
        "title": "(documentation) Fix DML EP doc link to C API",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-01T23:39:21Z",
        "updated_at": "2020-06-01T23:49:19Z",
        "closed_at": "2020-06-01T23:49:18Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4105",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4105",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4105.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4105.patch",
            "merged_at": "2020-06-01T23:49:17Z"
        },
        "body": "**Description**: Doc path used \\ instead of /, which leads to 404.\r\n\r\n**Motivation and Context**\r\n- Because the link points to the wrong location.\r\n- No open existing issue.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4106",
        "id": 628805730,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2Mjc2MTI2",
        "number": 4106,
        "title": "Fix the nuget gpu pipeline",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T00:06:39Z",
        "updated_at": "2020-06-02T03:42:17Z",
        "closed_at": "2020-06-02T03:42:16Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4106",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4106",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4106.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4106.patch",
            "merged_at": "2020-06-02T03:42:16Z"
        },
        "body": "**Description**: \r\nThe $IMAGE doesn't exist anymore. It is undefined so the \"docker run\" command would fail.  It was a mistake when I made the PR #4084. I merged the PR #4084 first so that at least this night we'll see one of the nuget pipelines become green. \r\n\r\nThe no-contrib op nuget pipeline will still fail. We need a better way to filter out the test models.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4107",
        "id": 628830560,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2Mjk1NDU4",
        "number": 4107,
        "title": "Add past state support in Attention Op for GPT-2",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T01:23:19Z",
        "updated_at": "2020-06-11T21:20:29Z",
        "closed_at": "2020-06-11T21:19:56Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4107",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4107",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4107.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4107.patch",
            "merged_at": "2020-06-11T21:19:56Z"
        },
        "body": "**Description**: \r\n\r\nUpdate Attention op to support past  state. \r\n\r\nThe past state is the hidden state for K and V with shape (2, B, N, S', H), where S' is the sequence length for past state. The output of present state will be (2, B, N, S*, H) where S* = S' + S, and S is the sequence length for current input_ids.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n\r\nCurrent Attention does not support past state input and output. GPT2 model need past state to speed up decoding.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4108",
        "id": 628871246,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MzI3MTA0",
        "number": 4108,
        "title": "bump onnx version and add a bfloat16 test",
        "user": {
            "login": "souptc",
            "id": 11306809,
            "node_id": "MDQ6VXNlcjExMzA2ODA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11306809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/souptc",
            "html_url": "https://github.com/souptc",
            "followers_url": "https://api.github.com/users/souptc/followers",
            "following_url": "https://api.github.com/users/souptc/following{/other_user}",
            "gists_url": "https://api.github.com/users/souptc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/souptc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/souptc/subscriptions",
            "organizations_url": "https://api.github.com/users/souptc/orgs",
            "repos_url": "https://api.github.com/users/souptc/repos",
            "events_url": "https://api.github.com/users/souptc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/souptc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2286118846,
                "node_id": "MDU6TGFiZWwyMjg2MTE4ODQ2",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/stale",
                "name": "stale",
                "color": "C5DEF5",
                "default": false,
                "description": "issues that have not been addressed in a while; categorized by a bot"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-06-02T03:27:01Z",
        "updated_at": "2020-10-11T11:41:11Z",
        "closed_at": "2020-10-11T11:41:11Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4108",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4108",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4108.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4108.patch",
            "merged_at": null
        },
        "body": "**Description**: bump onnx version to get bfloat16 support in opset13. Also add a sign bfloat kernel test\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4109",
        "id": 628967791,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2NDAxNjc1",
        "number": 4109,
        "title": "General enhancements/cleanups to test exes",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T07:27:18Z",
        "updated_at": "2020-06-03T21:01:41Z",
        "closed_at": "2020-06-03T21:01:40Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4109",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4109",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4109.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4109.patch",
            "merged_at": "2020-06-03T21:01:40Z"
        },
        "body": "**Description**: \r\nGeneral enhancements/cleanups to onnx_test_runner and onnxruntime_perf_test\r\n  - Support running onnxruntime_perf_test with no output file\r\n    - if you're profiling the output file is often unused and can be very large\r\n  - Allow failure to override early success if doing multiple runs of a test using onnx_test_runner\r\n    - e.g. if the second run fails that's more important as a final status\r\n  - Clarify ownership semantics\r\n  - Misc. cleanups to naming, line lengths, usage of references for required parameters, const correctness etc.\r\n\r\n**Motivation and Context**\r\nFix a couple of pain points and improve code quality. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110/events",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/4110",
        "id": 629049809,
        "node_id": "MDU6SXNzdWU2MjkwNDk4MDk=",
        "number": 4110,
        "title": "Graph optimization break correctness",
        "user": {
            "login": "mzmssg",
            "id": 11887940,
            "node_id": "MDQ6VXNlcjExODg3OTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11887940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzmssg",
            "html_url": "https://github.com/mzmssg",
            "followers_url": "https://api.github.com/users/mzmssg/followers",
            "following_url": "https://api.github.com/users/mzmssg/following{/other_user}",
            "gists_url": "https://api.github.com/users/mzmssg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mzmssg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mzmssg/subscriptions",
            "organizations_url": "https://api.github.com/users/mzmssg/orgs",
            "repos_url": "https://api.github.com/users/mzmssg/repos",
            "events_url": "https://api.github.com/users/mzmssg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mzmssg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "askhade",
            "id": 6475296,
            "node_id": "MDQ6VXNlcjY0NzUyOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/askhade",
            "html_url": "https://github.com/askhade",
            "followers_url": "https://api.github.com/users/askhade/followers",
            "following_url": "https://api.github.com/users/askhade/following{/other_user}",
            "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
            "organizations_url": "https://api.github.com/users/askhade/orgs",
            "repos_url": "https://api.github.com/users/askhade/repos",
            "events_url": "https://api.github.com/users/askhade/events{/privacy}",
            "received_events_url": "https://api.github.com/users/askhade/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "askhade",
                "id": 6475296,
                "node_id": "MDQ6VXNlcjY0NzUyOTY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6475296?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/askhade",
                "html_url": "https://github.com/askhade",
                "followers_url": "https://api.github.com/users/askhade/followers",
                "following_url": "https://api.github.com/users/askhade/following{/other_user}",
                "gists_url": "https://api.github.com/users/askhade/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/askhade/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/askhade/subscriptions",
                "organizations_url": "https://api.github.com/users/askhade/orgs",
                "repos_url": "https://api.github.com/users/askhade/repos",
                "events_url": "https://api.github.com/users/askhade/events{/privacy}",
                "received_events_url": "https://api.github.com/users/askhade/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-06-02T09:29:29Z",
        "updated_at": "2020-06-13T22:09:38Z",
        "closed_at": "2020-06-13T22:09:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "**Describe the bug**\r\nTwo bugs:\r\n1. Inference session output differently with/without optimization\r\n2. Even we specify an intermediate node in a pattern as graph output, graph optimization still fuse them, then sess fail to find the output.\r\n\r\n**Urgency**\r\nNone\r\n\r\n**To Reproduce**\r\ncode:\r\n```python\r\nimport onnxruntime as ort\r\nimport numpy as np\r\nimport onnx\r\n\r\ndef remove_expand_shape(model):\r\n    expand_node = [n for n in model.graph.node if n.op_type == 'Expand']\r\n    if len(expand_node) != 1:\r\n        raise \"cannot find the single expand node in the BERT model.\"\r\n\r\n    for i, v_info in enumerate(model.graph.value_info):\r\n        if v_info.name == expand_node[0].output[0]:\r\n            break    \r\n    del model.graph.value_info[i]\r\n\r\ndef add_value_to_output(model, intermediate_tensor_name):\r\n    intermediate_layer_value_info = helper.ValueInfoProto()\r\n    intermediate_layer_value_info.name = intermediate_tensor_name\r\n    model.graph.output.extend([intermediate_layer_value_info])\r\n\r\nmodel_name = \"bert_for_pretraining_without_loss_optimized.onnx\"\r\nmodel = onnx.load(model_name)\r\n#remove_expand_shape(model)\r\n\r\n#n = find_input_node(model, \"209\")\r\n#print(n)\r\n#add_value_to_output(model, \"209\")\r\n\r\n# We convert model to accept variable-length batch size, so it can be any positive integer.\r\nbatch = 3\r\n# This should match --max_seq_length when calling nv_run_pretraining.py.\r\nsq_length = 512\r\n# This should match vocab_size in bert_config.json in DeepLearningExamples/PyTorch/LanguageModeling/BERT.\r\nvocab_size = 30528\r\n\r\n# Create a fake data point.\r\ninput_ids = np.random.randint(low=0, high=vocab_size, size=(batch, sq_length), dtype=np.int64)\r\nsegment_ids = np.random.randint(low=0, high=2, size=(batch, sq_length), dtype=np.int64)\r\ninput_mask = np.ones((batch, sq_length), dtype=np.int64)\r\n\r\nopt_enable_sess = ort.InferenceSession(model.SerializeToString())\r\nopt_enable_result = opt_enable_sess.run(None, {'input1': input_ids, 'input2': segment_ids, 'input3': input_mask})\r\n\r\nso = ort.SessionOptions()\r\nso.graph_optimization_level=ort.GraphOptimizationLevel.ORT_DISABLE_ALL\r\nopt_disable_sess = ort.InferenceSession(model.SerializeToString(), so)\r\nopt_disable_result = opt_disable_sess.run(None, {'input1': input_ids, 'input2': segment_ids, 'input3': input_mask})\r\n\r\nprint(opt_enable_result[1])\r\nprint(opt_disable_result[1])\r\n```\r\n\r\nmodel:\r\n[bert_for_pretraining_without_loss_optimized.onnx](https://github.com/mzmssg/onnx_models/blob/master/bert_for_pretraining_without_loss_optimized.onnx)\r\n\r\noutput:\r\n![image](https://user-images.githubusercontent.com/11887940/83501514-cdcc9880-a4f2-11ea-8d21-b00aa1ea7a58.png)\r\n\r\n\r\n**Expected behavior**\r\nsess with/without optimization should have a same result.\r\n\r\n**Additional context**\r\n1. It have a corrent result if remove expand shape by uncomment `#remove_expand_shape(model)`.\r\n2. I checked the intermedia value by value, seems it's caused by GELU fusion, because this two session have a same input before gelu part but output differently, but it should be irrelevant to the `Expand` operation.\r\n3. The second bug could be reproduced by uncomment \r\n```\r\n#n = find_input_node(model, \"209\")\r\n#print(n)\r\n#add_value_to_output(model, \"209\")\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4110/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4111",
        "id": 629351962,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2NzAzNjYw",
        "number": 4111,
        "title": "Implement quantized Attention on cpu",
        "user": {
            "login": "yufenglee",
            "id": 30486710,
            "node_id": "MDQ6VXNlcjMwNDg2NzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30486710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yufenglee",
            "html_url": "https://github.com/yufenglee",
            "followers_url": "https://api.github.com/users/yufenglee/followers",
            "following_url": "https://api.github.com/users/yufenglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/yufenglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yufenglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yufenglee/subscriptions",
            "organizations_url": "https://api.github.com/users/yufenglee/orgs",
            "repos_url": "https://api.github.com/users/yufenglee/repos",
            "events_url": "https://api.github.com/users/yufenglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yufenglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T16:42:12Z",
        "updated_at": "2020-06-03T20:42:02Z",
        "closed_at": "2020-06-03T20:42:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4111",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4111",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4111.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4111.patch",
            "merged_at": "2020-06-03T20:42:01Z"
        },
        "body": "**Description**: Describe your changes.\r\n1. Implement quantized attention on CPU\r\n2. Make both CPU and GPU support uni-direction\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4111/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4112",
        "id": 629409321,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2NzQ4MjU3",
        "number": 4112,
        "title": "[Test] faxu privacy update",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T18:08:45Z",
        "updated_at": "2020-06-02T18:09:12Z",
        "closed_at": "2020-06-02T18:09:09Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4112",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4112",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4112.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4112.patch",
            "merged_at": null
        },
        "body": "**Description**: Describe your changes.\r\n\r\n**Motivation and Context**\r\n- Why is this change required? What problem does it solve?\r\n- If it fixes an open issue, please link to the issue here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4112/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4113",
        "id": 629414684,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2NzUyMzUy",
        "number": 4113,
        "title": "enable pipeline to run with mixed precision",
        "user": {
            "login": "xzhu1900",
            "id": 40807589,
            "node_id": "MDQ6VXNlcjQwODA3NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40807589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xzhu1900",
            "html_url": "https://github.com/xzhu1900",
            "followers_url": "https://api.github.com/users/xzhu1900/followers",
            "following_url": "https://api.github.com/users/xzhu1900/following{/other_user}",
            "gists_url": "https://api.github.com/users/xzhu1900/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xzhu1900/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xzhu1900/subscriptions",
            "organizations_url": "https://api.github.com/users/xzhu1900/orgs",
            "repos_url": "https://api.github.com/users/xzhu1900/repos",
            "events_url": "https://api.github.com/users/xzhu1900/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xzhu1900/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2020-06-02T18:17:21Z",
        "updated_at": "2020-06-11T05:16:26Z",
        "closed_at": "2020-06-11T05:16:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4113",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4113",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4113.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4113.patch",
            "merged_at": "2020-06-11T05:16:25Z"
        },
        "body": "**Description**: Fix bugs and support FP16 for pipeline bert-large.\r\n\r\n**Motivation and Context**\r\n- To allow bert-large to run PipeDream with mixed precision \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4113/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4114",
        "id": 629489250,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2ODEwNDM3",
        "number": 4114,
        "title": "Nuphar build and test fixes for GCC 7 and onnx 1.7.0",
        "user": {
            "login": "ke1337",
            "id": 22626095,
            "node_id": "MDQ6VXNlcjIyNjI2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22626095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ke1337",
            "html_url": "https://github.com/ke1337",
            "followers_url": "https://api.github.com/users/ke1337/followers",
            "following_url": "https://api.github.com/users/ke1337/following{/other_user}",
            "gists_url": "https://api.github.com/users/ke1337/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ke1337/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ke1337/subscriptions",
            "organizations_url": "https://api.github.com/users/ke1337/orgs",
            "repos_url": "https://api.github.com/users/ke1337/repos",
            "events_url": "https://api.github.com/users/ke1337/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ke1337/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T20:23:35Z",
        "updated_at": "2020-06-03T01:03:40Z",
        "closed_at": "2020-06-03T01:03:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4114",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4114",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4114.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4114.patch",
            "merged_at": "2020-06-03T01:03:39Z"
        },
        "body": "**Description**: Fix build in gcc 7, fix test in onnx 1.7.0\r\n\r\n**Motivation and Context**\r\n- This fixes Nuphar on Ubuntu 18.04 with gcc 7\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4114/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4115",
        "id": 629611264,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2OTAyNzY2",
        "number": 4115,
        "title": "Use OrtMutex and OrtCondVar everywhere ",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-03T00:54:53Z",
        "updated_at": "2020-06-03T15:42:19Z",
        "closed_at": "2020-06-03T15:42:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4115",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4115",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4115.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4115.patch",
            "merged_at": "2020-06-03T15:42:17Z"
        },
        "body": "**Description**:\r\nA few usages of std::mutex/std::condition_variable remained or had crept in. Update those to use OrtMutex and OrtCondVar. \r\n\r\nNeeded to change the MissingTrack enum naming due to ort_mutex.h including Windows.h which #defines TRUE and FALSE (via inclusion of fdi_fci_types.h), breaking usage of MissingTrack::TRUE and MissingTrack::FALSE.\r\n\r\n**Motivation and Context**\r\nImprove consistency. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116",
        "repository_url": "https://api.github.com/repos/microsoft/onnxruntime",
        "labels_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116/labels{/name}",
        "comments_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116/comments",
        "events_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116/events",
        "html_url": "https://github.com/microsoft/onnxruntime/pull/4116",
        "id": 629627710,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2OTE0NDk4",
        "number": 4116,
        "title": "Discover trainable parameters using reverse DFS from loss node",
        "user": {
            "login": "suffiank",
            "id": 4366369,
            "node_id": "MDQ6VXNlcjQzNjYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4366369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suffiank",
            "html_url": "https://github.com/suffiank",
            "followers_url": "https://api.github.com/users/suffiank/followers",
            "following_url": "https://api.github.com/users/suffiank/following{/other_user}",
            "gists_url": "https://api.github.com/users/suffiank/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suffiank/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suffiank/subscriptions",
            "organizations_url": "https://api.github.com/users/suffiank/orgs",
            "repos_url": "https://api.github.com/users/suffiank/repos",
            "events_url": "https://api.github.com/users/suffiank/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suffiank/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1913759001,
                "node_id": "MDU6TGFiZWwxOTEzNzU5MDAx",
                "url": "https://api.github.com/repos/microsoft/onnxruntime/labels/training",
                "name": "training",
                "color": "BFD4F2",
                "default": false,
                "description": "issues related to ONNX Runtime training; typically submitted using template"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-03T01:45:04Z",
        "updated_at": "2020-06-08T21:16:12Z",
        "closed_at": "2020-06-08T21:16:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/pulls/4116",
            "html_url": "https://github.com/microsoft/onnxruntime/pull/4116",
            "diff_url": "https://github.com/microsoft/onnxruntime/pull/4116.diff",
            "patch_url": "https://github.com/microsoft/onnxruntime/pull/4116.patch",
            "merged_at": "2020-06-08T21:16:10Z"
        },
        "body": "**Description**: \r\nDiscover trainable parameters using reverse DFS from loss node, omitting recursion along untrainable inputs.\r\n\r\n_Why is this change required? What problem does it solve?_\r\nThe existing discovery process for trainable parameters assumes all initializers are trainable unless they they match a particular node op type and input index. This can fail to detect that an otherwise trainable parameter is blocked by a non-trainable parameter. For example, consider a => b => c. If c is trainable and b is non trainable, then this implies a is also not trainable.\r\n\r\nThe user can inspect the found list of trainable parameters with `TrainingSession::GetWeights()`",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/4116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]