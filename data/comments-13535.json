[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299138752",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13535#issuecomment-1299138752",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13535",
        "id": 1299138752,
        "node_id": "IC_kwDOCVq1mM5Nb0jA",
        "user": {
            "login": "fdwr",
            "id": 1809166,
            "node_id": "MDQ6VXNlcjE4MDkxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1809166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fdwr",
            "html_url": "https://github.com/fdwr",
            "followers_url": "https://api.github.com/users/fdwr/followers",
            "following_url": "https://api.github.com/users/fdwr/following{/other_user}",
            "gists_url": "https://api.github.com/users/fdwr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fdwr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fdwr/subscriptions",
            "organizations_url": "https://api.github.com/users/fdwr/orgs",
            "repos_url": "https://api.github.com/users/fdwr/repos",
            "events_url": "https://api.github.com/users/fdwr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fdwr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-01T20:55:08Z",
        "updated_at": "2022-11-01T20:55:08Z",
        "author_association": "MEMBER",
        "body": "@sumitsays I had a related pending PR https://github.com/microsoft/onnxruntime/pull/11346 that avoided graph fusion when `SetOptimizedModelFilePath` had been called, but I held off knowing your transformer work would dramatically change how fusion occurred anyway. I don't expect that PR addresses this specific aspect of initializers, but you'll need parts of that PR to enable the model file to be reloadable (otherwise the .onnx file has just a large fused blob rather than individual ONNX operators).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299138752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299273187",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13535#issuecomment-1299273187",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13535",
        "id": 1299273187,
        "node_id": "IC_kwDOCVq1mM5NcVXj",
        "user": {
            "login": "sumitsays",
            "id": 11188170,
            "node_id": "MDQ6VXNlcjExMTg4MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11188170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sumitsays",
            "html_url": "https://github.com/sumitsays",
            "followers_url": "https://api.github.com/users/sumitsays/followers",
            "following_url": "https://api.github.com/users/sumitsays/following{/other_user}",
            "gists_url": "https://api.github.com/users/sumitsays/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sumitsays/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sumitsays/subscriptions",
            "organizations_url": "https://api.github.com/users/sumitsays/orgs",
            "repos_url": "https://api.github.com/users/sumitsays/repos",
            "events_url": "https://api.github.com/users/sumitsays/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sumitsays/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-01T21:56:10Z",
        "updated_at": "2022-11-01T21:57:03Z",
        "author_association": "MEMBER",
        "body": "@sclavel Thank you for raising this issue. This is not a regression in the latest release or main branch, because DML EP never worked with reloading of optimized onnx file. I would also like to mention DML EP never worked with .ort format also. And the fact that, .ort format is neither EP agonistic nor GPU agonistic nor ORT version agonistic, an .ort file exported from any other EP or GPU, won't work on DML EP.\r\nWe are working on to support both optimized onnx file and .ort file format. Stay tuned!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299273187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299775881",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/13535#issuecomment-1299775881",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/13535",
        "id": 1299775881,
        "node_id": "IC_kwDOCVq1mM5NeQGJ",
        "user": {
            "login": "sclavel",
            "id": 23158256,
            "node_id": "MDQ6VXNlcjIzMTU4MjU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/23158256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sclavel",
            "html_url": "https://github.com/sclavel",
            "followers_url": "https://api.github.com/users/sclavel/followers",
            "following_url": "https://api.github.com/users/sclavel/following{/other_user}",
            "gists_url": "https://api.github.com/users/sclavel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sclavel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sclavel/subscriptions",
            "organizations_url": "https://api.github.com/users/sclavel/orgs",
            "repos_url": "https://api.github.com/users/sclavel/repos",
            "events_url": "https://api.github.com/users/sclavel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sclavel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-02T08:14:56Z",
        "updated_at": "2022-11-02T08:14:56Z",
        "author_association": "NONE",
        "body": "I understand saving the fused DML node might not be possible without some deep changes.\r\n\r\nThe ideal then would be to save the graph before DML fusion is applied, and then keep applying the fusion (and that wouldn't break existing provider-agnostic code paths that disable optimizations when loading an optimized graph, since DML fusion is mandatory and bypass the optimization settings).\r\n\r\nShort of this, a short-term fix would be to at least throw an error in FinalizeSession when saveModel is set, and dml fusion has been applied (same as it throw a warning for nchwc now).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1299775881/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]