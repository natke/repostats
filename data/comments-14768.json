[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1439946473",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1439946473",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1439946473,
        "node_id": "IC_kwDOCVq1mM5V09bp",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T12:34:39Z",
        "updated_at": "2023-02-22T12:49:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "Actually, I think it is a bug in ONNX Runtime. The original model opset is 13. The optimization introduces a `LayerNormalization` that requires opset >=17. https://github.com/onnx/onnx/blob/main/docs/Operators.md#layernormalization . Despite this, the optimized ONNX model still imports `ai.onnx v13`.\r\n\r\nONNX Runtime optimizer should probably raise an error that the produced ONNX model will be invalid due to the opset mismatch.\r\n\r\nEdit: or is the LayerNormalization in the graph from com.microsoft?\r\n\r\nSo if the `LayerNormalization` is expected to come from `com.microsoft`, could it be a name collision due to https://github.com/microsoft/onnxruntime/blob/df45b12fdf8fbeb68c314b2475eabbc7c2ea3af8/onnxruntime/contrib_ops/cpu/layer_norm.cc#L13? `onnx.checker.check_model` should be able to deal with imported domains: https://github.com/onnx/onnx/issues/3544#issuecomment-867845074",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1439946473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1439977157",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1439977157",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1439977157,
        "node_id": "IC_kwDOCVq1mM5V1E7F",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T12:59:20Z",
        "updated_at": "2023-02-22T13:03:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Actually getting as well `No Op registered for MemcpyFromHost with domain_version of 17` as well when using `convert_float_to_float16` optimization + `opt_level=2`, and this op is not in https://github.com/onnx/onnx/blob/main/docs/Operators.md",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1439977157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440595558",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1440595558",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1440595558,
        "node_id": "IC_kwDOCVq1mM5V3b5m",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T18:40:00Z",
        "updated_at": "2023-02-22T20:12:51Z",
        "author_association": "MEMBER",
        "body": "Before LayerNormalization added to ONNX specification, it has been supported in ONNX Runtime. However, it was added by mistake to onnx domain (it shall be added to com.microsoft domain at that time) before it became official onnx operator. Later it was kept in onnx domain for backward compatible.\r\n\r\nEven though onnx checker raises error, the model can run in ONNX Runtime.\r\n\r\n@jcwchen, is it possible to add an option to ignore some operators in onnx.checker?\r\n\r\nHere is a list of operators with such problems:\r\nhttps://github.com/microsoft/onnxruntime/blob/b3b9be19b140ba073f0b1c44bfc3ffc011768cbc/tools/ci_build/op_registration_validator.py#L18-L30\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440595558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440808772",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1440808772",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1440808772,
        "node_id": "IC_kwDOCVq1mM5V4P9E",
        "user": {
            "login": "jcwchen",
            "id": 14194980,
            "node_id": "MDQ6VXNlcjE0MTk0OTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14194980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcwchen",
            "html_url": "https://github.com/jcwchen",
            "followers_url": "https://api.github.com/users/jcwchen/followers",
            "following_url": "https://api.github.com/users/jcwchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcwchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcwchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcwchen/subscriptions",
            "organizations_url": "https://api.github.com/users/jcwchen/orgs",
            "repos_url": "https://api.github.com/users/jcwchen/repos",
            "events_url": "https://api.github.com/users/jcwchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcwchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T21:17:23Z",
        "updated_at": "2023-02-22T21:17:23Z",
        "author_association": "MEMBER",
        "body": "> @jcwchen, is it possible to add an option to ignore some operators in onnx.checker?\r\n\r\nFrom ONNX perspective, this model has some operators which are not included in official spec. That is to say, it cannot run normally by ONNX utilities such as shape_inference, version_converter, or even other ONNX related tools (except ONNX Runtime). ONNX checker's job is to validate whether such an ONNX model follows ONNX spec and so it seems fine to report an error here. I don't see a strong use case for enabling ONNX checker to ignore some specified operators.\r\n\r\ncc @gramalingam @liqunfu in case you have other thoughts on this topic.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440808772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440847049",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1440847049",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1440847049,
        "node_id": "IC_kwDOCVq1mM5V4ZTJ",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T21:46:54Z",
        "updated_at": "2023-02-22T21:46:54Z",
        "author_association": "MEMBER",
        "body": "@jcwchen, it is fine that we keep current onnx checker behavior. \r\n\r\nI would suggest users to run ONNX checker on raw onnx model only. For optimized model, it is better to create an inference session to test whether the model is good for an execution provider (since some execution provider only supports a limited set of operators).",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1440847049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1441417559",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1441417559",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1441417559,
        "node_id": "IC_kwDOCVq1mM5V6klX",
        "user": {
            "login": "fxmarty",
            "id": 9808326,
            "node_id": "MDQ6VXNlcjk4MDgzMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9808326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fxmarty",
            "html_url": "https://github.com/fxmarty",
            "followers_url": "https://api.github.com/users/fxmarty/followers",
            "following_url": "https://api.github.com/users/fxmarty/following{/other_user}",
            "gists_url": "https://api.github.com/users/fxmarty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fxmarty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fxmarty/subscriptions",
            "organizations_url": "https://api.github.com/users/fxmarty/orgs",
            "repos_url": "https://api.github.com/users/fxmarty/repos",
            "events_url": "https://api.github.com/users/fxmarty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fxmarty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-23T09:12:41Z",
        "updated_at": "2023-02-23T09:12:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you for your answers! So I understand `onnx.checker.check_model` can only only validate operators in the onnx domain, and not from imported domains (like I guess LayerNormalization, MemcpyFromHost are?), contrary to what I understood in https://github.com/onnx/onnx/issues/3544#issuecomment-867845074. I'll use `InferenceSession` loading to check validity for now.\r\n\r\nFeel free to close!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1441417559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1470301521",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1470301521",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1470301521,
        "node_id": "IC_kwDOCVq1mM5XowVR",
        "user": {
            "login": "barathbheeman",
            "id": 23279260,
            "node_id": "MDQ6VXNlcjIzMjc5MjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/23279260?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/barathbheeman",
            "html_url": "https://github.com/barathbheeman",
            "followers_url": "https://api.github.com/users/barathbheeman/followers",
            "following_url": "https://api.github.com/users/barathbheeman/following{/other_user}",
            "gists_url": "https://api.github.com/users/barathbheeman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/barathbheeman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/barathbheeman/subscriptions",
            "organizations_url": "https://api.github.com/users/barathbheeman/orgs",
            "repos_url": "https://api.github.com/users/barathbheeman/repos",
            "events_url": "https://api.github.com/users/barathbheeman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/barathbheeman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-15T15:56:12Z",
        "updated_at": "2023-03-15T15:56:12Z",
        "author_association": "NONE",
        "body": "This is a related question. I'm getting the same error and I found this out while trying to convert the onnx model to tensor-rt engine using the `trtexec` command.\r\n\r\nI get the following output:\r\n\r\n```\r\n[03/15/2023-15:53:28] [I] [TRT] No importer registered for op: LayerNormalization. Attempting to import as plugin.\r\n[03/15/2023-15:53:28] [I] [TRT] Searching for plugin: LayerNormalization, plugin_version: 1, plugin_namespace: \r\n[03/15/2023-15:53:28] [E] [TRT] ModelImporter.cpp:726: While parsing node number 9 [LayerNormalization -> \"/distilbert/embeddings/LayerNorm/Add_1_output_0\"]:\r\n[03/15/2023-15:53:28] [E] [TRT] ModelImporter.cpp:727: --- Begin node ---\r\n[03/15/2023-15:53:28] [E] [TRT] ModelImporter.cpp:728: input: \"/distilbert/embeddings/Add_output_0\"\r\ninput: \"distilbert.embeddings.LayerNorm.weight\"\r\ninput: \"distilbert.embeddings.LayerNorm.bias\"\r\noutput: \"/distilbert/embeddings/LayerNorm/Add_1_output_0\"\r\nname: \"LayerNormalization\"\r\nop_type: \"LayerNormalization\"\r\nattribute {\r\n  name: \"stash_type\"\r\n  i: 1\r\n  type: INT\r\n}\r\nattribute {\r\n  name: \"axis\"\r\n  i: -1\r\n  type: INT\r\n}\r\nattribute {\r\n  name: \"epsilon\"\r\n  f: 1e-12\r\n  type: FLOAT\r\n}\r\ndoc_string: \"fused LayerNorm subgraphs \"\r\n\r\n[03/15/2023-15:53:28] [E] [TRT] ModelImporter.cpp:729: --- End node ---\r\n[03/15/2023-15:53:28] [E] [TRT] ModelImporter.cpp:732: ERROR: builtin_op_importers.cpp:5428 In function importFallbackPluginImporter:\r\n[8] Assertion failed: creator && \"Plugin not found, are the plugin name, version, and namespace correct?\"\r\n[03/15/2023-15:53:28] [E] Failed to parse onnx file\r\n[03/15/2023-15:53:28] [I] Finish parsing network model\r\n[03/15/2023-15:53:28] [E] Parsing model failed\r\n[03/15/2023-15:53:28] [E] Failed to create engine from model or file.\r\n[03/15/2023-15:53:28] [E] Engine set up failed\r\n\r\n```\r\n\r\nIs there a workaround for this?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1470301521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1470533921",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/14768#issuecomment-1470533921",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/14768",
        "id": 1470533921,
        "node_id": "IC_kwDOCVq1mM5XppEh",
        "user": {
            "login": "tianleiwu",
            "id": 30328909,
            "node_id": "MDQ6VXNlcjMwMzI4OTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30328909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianleiwu",
            "html_url": "https://github.com/tianleiwu",
            "followers_url": "https://api.github.com/users/tianleiwu/followers",
            "following_url": "https://api.github.com/users/tianleiwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianleiwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianleiwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianleiwu/subscriptions",
            "organizations_url": "https://api.github.com/users/tianleiwu/orgs",
            "repos_url": "https://api.github.com/users/tianleiwu/repos",
            "events_url": "https://api.github.com/users/tianleiwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianleiwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-15T18:19:11Z",
        "updated_at": "2023-03-15T18:19:11Z",
        "author_association": "MEMBER",
        "body": "@barathbheeman, for TRT you need use the original (not optimized) onnx model exported from Pytorch to build TRT engine. There is no LayerNormalization plugin in TRT. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/1470533921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]