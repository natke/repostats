[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/483977249",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-483977249",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 483977249,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzk3NzI0OQ==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T07:51:28Z",
        "updated_at": "2019-04-17T07:51:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Note that this model is a bit whacky in that it has some very small kernel weights and also very small batchnorm variances. Still, it works for instance in mxnet (GPU & CPU) and with the onnxruntime (CPU), so the CUDA execution provider should also be fixed to be able to cope with it...\r\n\r\nI narrowed down the problem to the batchnorm operation. The first batchnorm is where the nan's start appearing and they then propagate through the graph until everything is nan.\r\n\r\nBut I haven't figured out what the difference between mxnet and onnxruntime might be...\r\n\r\nAny ideas would be appreciated!",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/483977249/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485040155",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-485040155",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 485040155,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTA0MDE1NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-19T23:53:49Z",
        "updated_at": "2019-04-19T23:53:49Z",
        "author_association": "MEMBER",
        "body": "Hi @mika-fischer,\r\n\r\nAre you noticing the first nans in the node \"bn0\" (the first batchnorm operation) ? As a first step to quickly repro - I wrote a test case that simulated running this specific node alone - luckily scale, B, mean. var all seem to be initializers - so I took their values directly from the model file. They are all having shape - [64], so I gave it arbitrary input X of shape [1, 64, 1, 1]  (i.e.) 64 values and the test passed for gpu.\r\n\r\nLet me try running the full model.   ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485040155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485062990",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-485062990",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 485062990,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTA2Mjk5MA==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-20T06:30:31Z",
        "updated_at": "2019-04-20T06:30:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "By now I figured out that the model works correctly if you change the \"spatial\" attribute of all BatchNormalization nodes from 0 to 1.\r\n\r\nHowever, I'm not really sure why that helps. Maybe the cudnn computations are more numerically stable in that mode...",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485062990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485064581",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-485064581",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 485064581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTA2NDU4MQ==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-20T06:59:48Z",
        "updated_at": "2019-04-20T06:59:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh, and I think the numerical issue comes from the fact that the first conversation layer had some filters that are very close to zero. So the activations are also very close to zero. Therefore the BatchNormalization variance is also very close to zero. And therefore the BatchNormalization computation runs into numerical issues.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485064581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485065439",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-485065439",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 485065439,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTA2NTQzOQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-20T07:14:33Z",
        "updated_at": "2019-04-20T07:14:33Z",
        "author_association": "MEMBER",
        "body": "Hi @mika-fischer ,\r\n\r\nThanks for your reply. \r\n\r\nIn my debugging I could see that \"bn0\" (the very first BN node) produces the first NaNs (as you indicated). But here is where it gets strange - since for BN the output shape is the same as the input shape, I tried to take a corresponding input to an output value which was NaN. One such input (output of the convolutional layer) was -0.001681. \r\n\r\nNext, I tried to write a \"single node\" test case to repro this - I copied over the initializer values for mean/var/scale/bias - all 1D tensors of shape [64]. I created a \"fake\" input tensor of shape [1, 64, 1, 1] all filled with  -0.001681 (spread across all channels - so as to trigger the NaN creation in atleast one of them). I expect atleast one of the output values to be a NaN. It is not and it produces correct results (both for spatial = 1 and spatial = 0).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485065439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485079054",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-485079054",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 485079054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTA3OTA1NA==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-20T09:35:28Z",
        "updated_at": "2019-04-20T09:35:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, something strange is going on, which I don't yet understand. Note that the BatchNorm as used in this model is spatial, i.e. in the model the input dimensions are never [1, 64, 1, 1] but rather [1, 64, H, W] and the batchnorm uses broadcasting to apply the same transformation to all locations. This is spatial mode, so it would make sense that the model would use spatial = 1 in the first place.\r\n\r\nAlso do note that onnxruntime uses a different cudnn batchnorm mode for spatial == 1 and spatial == 0 (see https://github.com/Microsoft/onnxruntime/blob/7e1edbb9a2cc0dce75940fc7e5695a852a2337e2/onnxruntime/core/providers/cuda/nn/batch_norm.h#L28-L30).\r\n\r\nHowever, I still don't understand what's actually happening with spatial = 0. I had actually assumed that that mode would not even work, since I assumed that cudnn then expects the dimensions of input, output, mean, variance, etc. to all match exactly (except the batch size), which is not the case in this model.\r\n\r\nBut it does in fact accept the values, just gives different (wrong) results. Does it broadcast also? Does it perform different calculations with more numerical issues? I have no idea...\r\n\r\nWhat's also strange is that the resnet34 models (just as an example) have basically the same structure and also specify spatial = 0. But they do in fact work correctly!\r\n\r\nThanks for taking a look at this! I'll also take another look on Tuesday when I'm back at the office.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/485079054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/488501465",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-488501465",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 488501465,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODUwMTQ2NQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-01T23:49:08Z",
        "updated_at": "2019-05-01T23:49:08Z",
        "author_association": "MEMBER",
        "body": "Hi @mika-fischer,\r\n\r\n1) True, the model input dimensions are never [1, 64, 1, 1] but rather [1, 64, H, W], but the idea was to find an input value amongst the (1 * 64 * H * W) values that leads to a NaN output value and spread it out across all channels and try and repro the NaN generation by using a single BN node (and other initializers as provided in the model).\r\n\r\nAs far as I see (I could be wrong - please correct me if I am), there doesn't seem to be any mention of broadcasting in the BN spec. AFAIK, BN simply does this per channel -\r\n   output_value = scale * ((input_value - channel_mean) / sqrt(channel_var + epsilon)) + shift\r\n\r\nHence, my decision to spread the value  -0.001681 across all the 64 channels to get a repro.\r\n\r\n2) Please refer to PR #890 - the CPU provider does not support spatial != 1 in it's implementation and hence should never have loaded the model - this is now fixed. So, this model as is should never have been able to run using the CPU package. When modified to spatial == 1, it will run.\r\n\r\n3) Also, do you know why the model has BN nodes with spatial == 0 when the results are correct even when they are modified to spatial == 1 ? \r\n\r\nThanks!\r\n    ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/488501465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/488593406",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-488593406",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 488593406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODU5MzQwNg==",
        "user": {
            "login": "mika-fischer",
            "id": 426158,
            "node_id": "MDQ6VXNlcjQyNjE1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/426158?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mika-fischer",
            "html_url": "https://github.com/mika-fischer",
            "followers_url": "https://api.github.com/users/mika-fischer/followers",
            "following_url": "https://api.github.com/users/mika-fischer/following{/other_user}",
            "gists_url": "https://api.github.com/users/mika-fischer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mika-fischer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mika-fischer/subscriptions",
            "organizations_url": "https://api.github.com/users/mika-fischer/orgs",
            "repos_url": "https://api.github.com/users/mika-fischer/repos",
            "events_url": "https://api.github.com/users/mika-fischer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mika-fischer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-02T08:41:52Z",
        "updated_at": "2019-05-02T08:41:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi, @hariharans29,\r\n\r\nThanks for getting back to me and sorry for not being able to continue my investigation (I'll probably not find enough time to debug this in the next few weeks either...).\r\n\r\nQuoting from https://github.com/onnx/onnx/blob/master/docs/Changelog.md#batchnormalization-7:\r\n> Input data tensor from the previous operator; dimensions for image case are (N x C x H x W), where N is the batch size, C is the number of channels, and H and W are the height and the width of the data. For non image case, the dimensions are in the form of (N x C x D1 x D2 ... Dn), where N is the batch size.\r\n\r\n> If spatial is true, the dimension of the running mean (training) or the estimated mean (testing) is (C). If spatial is false, the dimensions of the running mean (training) or the estimated mean (testing) are (C x D1 x ... x Dn).\r\n\r\nAnd similarly for the variance.\r\n\r\nConversely this means that if you have an input shape of [1, 64, 1, 1] the mean present in the model has the correct number of elements for both spatial == 1 and spatial == 0, albeit for spatial == 0, the shape is incorrect (should be [64, 1, 1] but is [64]).\r\n\r\nWhereas with an input shape of [1, 64, H, W] with H>1 and W>1, the mean and variance in the model don't have the right shape *and* don't have the correct number of elements.\r\n\r\nApparently in the onnx spec, broadcasting is always explicitly mentioned, and it isn't mentioned for the BatchNorm operator. So it is probably a bug that onnxruntime even accepts the model with spatial == 0 with the CUDA provider...\r\n\r\nBut nevertheless, there is another issue:\r\nAt the bottom of it, the only difference between spatial == 0 and spatial == 1 I can see in the CUDA provider is whether the cudnn Tensors and cudnn BatchNorm function are called with CUDNN_BATCHNORM_SPATIAL or CUDNN_BATCHNORM_PER_ACTIVATION.\r\n\r\nQuoting https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnBatchNormMode_t:\r\n> CUDNN_BATCHNORM_PER_ACTIVATION\r\nNormalization is performed per-activation. This mode is intended to be used after non-convolutional network layers. In this mode the tensor dimensions of bnBias and bnScale, the parameters used in the cudnnBatchNormalization* functions, are 1xCxHxW.\r\n\r\n> CUDNN_BATCHNORM_SPATIAL\r\nNormalization is performed over N+spatial dimensions. This mode is intended for use after convolutional layers (where spatial invariance is desired). In this mode the bnBias, bnScale tensor dimensions are 1xCx1x1.\r\n\r\nSo, also for cudnn the model in question should not work with spatial == 0, because the mean and variance in the model have the wrong shape and wrong number of elements. _And yet it does work correctly_ (for instance for the resnet models https://github.com/onnx/models/tree/master/models/image_classification/resnet).\r\n\r\nSo I assume that either onnxruntime broadcasts the shape of the mean and variance so that it matches what cudnn expects, or cudnn itself does this...\r\n\r\nIf in fact broadcasting is happening somewhere, then the two cases spatial == 0 and spatial == 1 should do exactly the same thing.\r\n\r\nAnd yet with this model, they don't. I can only assume that the two cudnn BatchNorm implementations don't do the same thing internally (i.e. have numerical differences).\r\n\r\nI hope this helps you track down the remaining issues. If you have more questions please feel free to ask.\r\n\r\nRegarding your commit: Might I suggest not just disabeling the tests for this model, but actually fixing the model (by setting spatial = 1), and also forward this problem and the fix to the onnx model zoo, where basically every model exported from mxnet will have this issue. They won't work with the CPU provider after your commit and they don't work reliably with the CUDA provider, either...",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/488593406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492746823",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-492746823",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 492746823,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Mjc0NjgyMw==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-15T17:25:11Z",
        "updated_at": "2019-05-15T17:25:11Z",
        "author_association": "MEMBER",
        "body": "Updated the title because the model doesn't work on CPU.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/492746823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/499689142",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-499689142",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 499689142,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTY4OTE0Mg==",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2019-06-06T22:20:25Z",
        "updated_at": "2019-06-06T22:20:25Z",
        "author_association": "MEMBER",
        "body": "https://github.com/onnx/models/issues/156",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/499689142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538842683",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-538842683",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 538842683,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0MjY4Mw==",
        "user": {
            "login": "luan1412167",
            "id": 37315746,
            "node_id": "MDQ6VXNlcjM3MzE1NzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37315746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luan1412167",
            "html_url": "https://github.com/luan1412167",
            "followers_url": "https://api.github.com/users/luan1412167/followers",
            "following_url": "https://api.github.com/users/luan1412167/following{/other_user}",
            "gists_url": "https://api.github.com/users/luan1412167/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luan1412167/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luan1412167/subscriptions",
            "organizations_url": "https://api.github.com/users/luan1412167/orgs",
            "repos_url": "https://api.github.com/users/luan1412167/repos",
            "events_url": "https://api.github.com/users/luan1412167/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luan1412167/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-07T05:15:19Z",
        "updated_at": "2019-10-07T05:15:19Z",
        "author_association": "NONE",
        "body": "Hi, I'm facing such the error. Can't you help me pointing out where I can modify spatial for BatchNorm. \r\n`2019-10-07 11:54:01.026045667 [E:onnxruntime:test, inference_session.cc:547 Initialize] Exception during initialization: /onnxruntime_src/onnxruntime/core/providers/cpu/nn/batch_norm.h:39 onnxruntime::BatchNorm<T>::BatchNorm(const onnxruntime::OpKernelInfo&) [with T = float] spatial == 1 was false. BatchNormalization kernel for CPU provider does not support non-spatial cases\r\n`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538842683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538842965",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-538842965",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 538842965,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0Mjk2NQ==",
        "user": {
            "login": "snnn",
            "id": 856316,
            "node_id": "MDQ6VXNlcjg1NjMxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856316?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snnn",
            "html_url": "https://github.com/snnn",
            "followers_url": "https://api.github.com/users/snnn/followers",
            "following_url": "https://api.github.com/users/snnn/following{/other_user}",
            "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snnn/subscriptions",
            "organizations_url": "https://api.github.com/users/snnn/orgs",
            "repos_url": "https://api.github.com/users/snnn/repos",
            "events_url": "https://api.github.com/users/snnn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snnn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-07T05:17:17Z",
        "updated_at": "2019-10-07T05:17:17Z",
        "author_association": "MEMBER",
        "body": "Hi @luan1412167  Sorry, onnxruntime doesn't support this model yet.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538842965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538848663",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-538848663",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 538848663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0ODY2Mw==",
        "user": {
            "login": "luan1412167",
            "id": 37315746,
            "node_id": "MDQ6VXNlcjM3MzE1NzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37315746?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luan1412167",
            "html_url": "https://github.com/luan1412167",
            "followers_url": "https://api.github.com/users/luan1412167/followers",
            "following_url": "https://api.github.com/users/luan1412167/following{/other_user}",
            "gists_url": "https://api.github.com/users/luan1412167/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luan1412167/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luan1412167/subscriptions",
            "organizations_url": "https://api.github.com/users/luan1412167/orgs",
            "repos_url": "https://api.github.com/users/luan1412167/repos",
            "events_url": "https://api.github.com/users/luan1412167/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luan1412167/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-07T05:47:52Z",
        "updated_at": "2019-10-07T05:48:15Z",
        "author_association": "NONE",
        "body": "@snnn thanks for your reply. Have you procedure for fixing it?. Can I run it on GPU?",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/538848663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/540871578",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/831#issuecomment-540871578",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/831",
        "id": 540871578,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDg3MTU3OA==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-11T02:21:34Z",
        "updated_at": "2019-10-11T02:22:38Z",
        "author_association": "MEMBER",
        "body": "Hi @mika-fischer,\r\n\r\nWe finally resolved why the model produces NaNs in the CUDA provider. This is because the **ONNX equivalent** of the original model is **invalid**. We have requested an update to the model here -  https://github.com/onnx/models/issues/156. Please see my reply in the thread wherein I detail why it is invalid.\r\n\r\nThe reason why CUDA provider outputs NaNs is that it tries to access memory that is outside bounds of the input to the BatchNorm node. The MxNet exporter seems to have a bug wherein it **means** spatial == 1 but incorrectly stamps BatchNorm nodes with spatial == 0 and this leads to incorrect assumptions regarding input data shapes and illegal memory is accessed.\r\n\r\nPlease wait for the updated model and try again. (You can try updating the model yourself by changing the ModelProto so that the BatchNorm nodes are stamped with spatial == 1).\r\n\r\nClosing this issue as this is not an ORT issue.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/540871578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]