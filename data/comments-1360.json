[
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509581812",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-509581812",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 509581812,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTU4MTgxMg==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-09T10:11:24Z",
        "updated_at": "2019-07-09T10:11:24Z",
        "author_association": "MEMBER",
        "body": "I created some random input for padded_sequences with shape 1, 1, 20, 24 (matching the shape defined in the model) and a single entry in 'lengths' with value of '20' which I expected should be <= the third dimension in padded_sequences. When it got to the LSTM node the sequence length from the first input is 5, so the value of 20 in the 'lengths' array was incorrect. What is the expected sequence length at that point?\r\n\r\nCan you provide the shape of the padded_sequences value you were using and the actual 'lengths' values?\r\n\r\nI would have expected the model inputs to use a dim_param for the unknown dimensions so a concrete shape of {1, 1, 20, 24} for padded_sequences is not what I would have expected. Something like { -1, 1, -1, 24 } where the -1 values are dim_param entries would be more normal in this case. Possibly there's an issue with the exporter causing that. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509581812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509721543",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-509721543",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 509721543,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTcyMTU0Mw==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-09T16:52:39Z",
        "updated_at": "2019-07-09T16:52:39Z",
        "author_association": "NONE",
        "body": "Thanks for your response. \r\n\r\nSorry, I forgot to mention that the values in the 'lengths' vector should contain the lengths of the sequences after being processed by the two CNN layers, just before being input to the LSTM. Hence, the original values should be divided by 4 (the lengths of the original sequences must be multiple of 4), which is the CNN granularity . In your experiment, the value in 'lengths' should be 5 (20/4). \r\n\r\nI have tried the same model on branches created from different commits. The code corresponding to the commit a92998c235ee280013ac6ee0fd304a7458b4d0c8\r\n\r\n```\r\nCommit a92998c2\r\nby Dmitri Smirnov, 06/10/2019 11:36 PM\r\ncommitted by GitHub\r\nparent f72c1501\r\nUncomment ConstantOfShape tests. (#1059)\r\n\r\n```\r\nalready manifests the issue. On the other hand, the code from commit 7cd2d9f3c41ede8427fb5c4270eceae678e8638a works as expected\r\n\r\n```\r\nCommit 7cd2d9f3\r\nby Ryan Hill, 06/05/2019 08:05 PM\r\ncommitted by GitHub\r\nparent 7c4494a0\r\nchild c6abb17b\r\n\r\nChange Path_lib to not use Shlwapi.dll if compiled as WINAPI_PARTITION_APP (#1161)\r\n```\r\nAside from the issue with reshape, I think that there are more problems in the model and/or ORT. In order to get a decent performance I have to compile the library without MKLML\r\n\r\n`build.bat --config RelWithDebInfo --use_mkldnn --use_cuda --build_shared_lib  --cudnn_home %CUDNN_PATH% --cuda_home \"%CUDA_PATH%\"`\r\n\r\nWhen I compile with MKLML\r\n\r\n`build.bat --config RelWithDebInfo --use_mkldnn --use_mklml --use_cuda --build_shared_lib  --cudnn_home %CUDNN_PATH% --cuda_home \"%CUDA_PATH%\"`\r\n\r\nit takes minutes for a single inference, and the execution is mostly concentrated in a spin lock (BTW, wouldn't a condition variable be more appropriate in this case as the operations are not trivial?)\r\n\r\n```\r\nrnn_helpers.h, line 241\r\n\r\nint totalTasks = max / (step > 0 ? step : 1) + (max % step > 0 ? 1 : 0);\r\nwhile (done != totalTasks) ;\r\n```\r\nIn addition, when I run the model on GPU the accuracy is much worse than with CPU. I am compiling the library with support for CUDA 10.1, and this problem does not occur when I use the same library on other models.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509721543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509729351",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-509729351",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 509729351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTcyOTM1MQ==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-09T17:15:56Z",
        "updated_at": "2019-07-09T17:15:56Z",
        "author_association": "NONE",
        "body": "> I would have expected the model inputs to use a dim_param for the unknown dimensions so a concrete shape of {1, 1, 20, 24} for padded_sequences is not what I would have expected. Something like { -1, 1, -1, 24 } where the -1 values are dim_param entries would be more normal in this case. Possibly there's an issue with the exporter causing that.\r\n\r\nI can try this. How can I make the PyTorch ONNX exporter label a dimension as unknown? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509729351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509764061",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-509764061",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 509764061,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTc2NDA2MQ==",
        "user": {
            "login": "hariharans29",
            "id": 9969784,
            "node_id": "MDQ6VXNlcjk5Njk3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9969784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hariharans29",
            "html_url": "https://github.com/hariharans29",
            "followers_url": "https://api.github.com/users/hariharans29/followers",
            "following_url": "https://api.github.com/users/hariharans29/following{/other_user}",
            "gists_url": "https://api.github.com/users/hariharans29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hariharans29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hariharans29/subscriptions",
            "organizations_url": "https://api.github.com/users/hariharans29/orgs",
            "repos_url": "https://api.github.com/users/hariharans29/repos",
            "events_url": "https://api.github.com/users/hariharans29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hariharans29/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-09T18:55:09Z",
        "updated_at": "2019-07-09T18:55:09Z",
        "author_association": "MEMBER",
        "body": "Tagging @spandantiwari @lara-hdr for PyTorch exporter expertise :) ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/509764061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510140566",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-510140566",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 510140566,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDE0MDU2Ng==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-10T16:47:05Z",
        "updated_at": "2019-07-10T16:47:05Z",
        "author_association": "NONE",
        "body": "I have more information: It appears that the problem started with commit 32c6c71e8678df299f06fbeeef26f46646a830bf.\r\n\r\n```\r\nCommit 32c6c71e\r\nby Konstantinos Karanasos, 06/07/2019 11:15 PM\r\ncommitted by Changming Sun\r\nparent cdb27de0\r\nchild ccab8165\r\n\r\nConvert Shape operator to initializer (#1159)\r\n\r\nThis PR introduces a rewrite rule that replaces a Shape node with an initializer when the shape of the input is statically known through shape inference.\r\n```\r\nAny idea?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510140566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510329766",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-510329766",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 510329766,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMyOTc2Ng==",
        "user": {
            "login": "skottmckay",
            "id": 979079,
            "node_id": "MDQ6VXNlcjk3OTA3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skottmckay",
            "html_url": "https://github.com/skottmckay",
            "followers_url": "https://api.github.com/users/skottmckay/followers",
            "following_url": "https://api.github.com/users/skottmckay/following{/other_user}",
            "gists_url": "https://api.github.com/users/skottmckay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skottmckay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skottmckay/subscriptions",
            "organizations_url": "https://api.github.com/users/skottmckay/orgs",
            "repos_url": "https://api.github.com/users/skottmckay/repos",
            "events_url": "https://api.github.com/users/skottmckay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skottmckay/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-11T05:00:10Z",
        "updated_at": "2019-07-11T05:00:10Z",
        "author_association": "MEMBER",
        "body": "The root cause will be the pytorch conversion using a concrete shape instead of having symbolic dimensions. That results in the ORT optimizer believing these values will be fixed at runtime, and it replaces nodes where input to a node is constant. \r\n\r\nIf the shapes in the model had one or more symbolic dimensions the optimizer would not touch them. \r\n\r\nWorkaround pending some insight from the pytorch converter folks would be to disable optimizations by providing a SessionOptions instance to the InferenceSession constructor with graph_optimization_level set to 0.\r\n\r\n>>> import onnxruntime as rt\r\n>>> so = rt.SessionOptions()\r\n>>> so.set_graph_optimization_level(0)\r\n>>> so.graph_optimization_level\r\n0\r\n>>> sess = rt.InferenceSession('model.onnx', so)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510329766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510370078",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-510370078",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 510370078,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDM3MDA3OA==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-11T07:43:20Z",
        "updated_at": "2019-07-11T08:23:51Z",
        "author_association": "NONE",
        "body": "Would it be possible to edit the ONNX model and replace the incorrect constant dimensions by symbolic tags? ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510370078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510610347",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-510610347",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 510610347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDYxMDM0Nw==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-11T18:53:31Z",
        "updated_at": "2019-07-11T18:53:31Z",
        "author_association": "NONE",
        "body": "I managed to replace the incorrect constant dimensions by 'dim_param' entries in the ONNX model using the following code in Python:\r\n\r\n```\r\nimport onnx\r\nfrom onnx import optimizer\r\n\r\ndef find_node( model_, type_, name_ ) :\r\n    l = list(filter( lambda x: x.name == name_, getattr(model_.graph,type_)))\r\n    assert( len(l) == 1 )\r\n    return l[ 0 ]\r\n\r\ndef fix_model( path_src_, path_dst_ ) :\r\n    \r\n    #Load model from disk\r\n    model = onnx.load(path_src_)\r\n    \r\n    # Fix padded sequences\r\n    padded_sequences = find_node(model,\"input\",\"padded_sequences\")\r\n    shape = padded_sequences.type.tensor_type.shape.dim\r\n    shape[ 0 ].dim_param = \"dim_param_0\"  # Batch axis\r\n    shape[ 2 ].dim_param = \"dim_param_1\"  # Sequence axis\r\n    \r\n    # Fix lengths\r\n    lengths = find_node(model,\"input\",\"lengths\")\r\n    shape = lengths.type.tensor_type.shape.dim\r\n    shape[ 0 ].dim_param = \"dim_param_2\"  # Batch axis\r\n    \r\n    # Fix output\r\n    output = find_node(model,\"output\",\"output\")\r\n    shape = output.type.tensor_type.shape.dim\r\n    shape[ 0 ].dim_param = \"dim_param_3\"  # Batch axis\r\n    shape[ 1 ].dim_param = \"dim_param_4\"  # Sequence axis\r\n    \r\n    # Tidy up\r\n    onnx.checker.check_model(model)\r\n    model = onnx.optimizer.optimize( model )\r\n    \r\n    #Save the corrected model\r\n    onnx.save( model, path_dst_ )\r\n```\r\n\r\nAfter running the 'fix_model' function the resulting model is: [batch_of_sequences_dim_param.zip](https://github.com/microsoft/onnxruntime/files/3383394/batch_of_sequences_dim_param.zip)\r\n\r\n Now I am able to run the model on the code pulled today from the master branch. However, I think there is something wrong in the GPU implementation. When supplied with a tensor containing sequences of varying lengths the output of the GPU provider is very different from the one obtained with CPU. The divergence corresponding to the longest sequence is the batch is small, though.\r\n\r\n This occurs in all branches I have tested, including the current master branch. I am sure that the GPU implementation is the one that has the problem because when compared to the ground truth, the error of the CPU provider is of the same order as the one I got from PyTorch during training. In addition, when using batches containing a single sequence the results obtained from both GPU and CPU providers are comparable.\r\n\r\nAnother observation I would like to make is that when evaluating the model on GPU using the code in master, the execution takes a 50% longer than when employing the code pulled from commit 7cd2d9f3c41ede8427fb5c4270eceae678e8638a, for instance.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/510610347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/512029486",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-512029486",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 512029486,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjAyOTQ4Ng==",
        "user": {
            "login": "linkerzhang",
            "id": 5194557,
            "node_id": "MDQ6VXNlcjUxOTQ1NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5194557?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/linkerzhang",
            "html_url": "https://github.com/linkerzhang",
            "followers_url": "https://api.github.com/users/linkerzhang/followers",
            "following_url": "https://api.github.com/users/linkerzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/linkerzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/linkerzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/linkerzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/linkerzhang/orgs",
            "repos_url": "https://api.github.com/users/linkerzhang/repos",
            "events_url": "https://api.github.com/users/linkerzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/linkerzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-16T22:42:44Z",
        "updated_at": "2019-07-16T22:43:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "re: \"Would it be possible to edit the ONNX model and replace the incorrect constant dimensions by symbolic tags?\"\r\n\r\nthere is no such tool right now :).\r\n\r\nre: \" However, I think there is something wrong in the GPU implementation. When supplied with a tensor containing sequences of varying lengths the output of the GPU provider is very different from the one obtained with CPU. The divergence corresponding to the longest sequence is the batch is small, though.\" \r\n\r\nthis is the same issue as you issued #1400, right? \r\n\r\nre: \"Another observation I would like to make is that when evaluating the model on GPU using the code in master, the execution takes a 50% longer than when employing the code pulled from commit 7cd2d9f, for instance.\" \r\n\r\nthanks for heads up. we'll check it in detail.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/512029486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/512329015",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-512329015",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 512329015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjMyOTAxNQ==",
        "user": {
            "login": "xgirones",
            "id": 30896820,
            "node_id": "MDQ6VXNlcjMwODk2ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30896820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xgirones",
            "html_url": "https://github.com/xgirones",
            "followers_url": "https://api.github.com/users/xgirones/followers",
            "following_url": "https://api.github.com/users/xgirones/following{/other_user}",
            "gists_url": "https://api.github.com/users/xgirones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xgirones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xgirones/subscriptions",
            "organizations_url": "https://api.github.com/users/xgirones/orgs",
            "repos_url": "https://api.github.com/users/xgirones/repos",
            "events_url": "https://api.github.com/users/xgirones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xgirones/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-07-17T15:24:35Z",
        "updated_at": "2019-07-17T15:26:22Z",
        "author_association": "NONE",
        "body": "> there is no such tool right now :).\r\n\r\nI tried editing the model using the ONNX API. So far the ORT does not complain, but it would be great if the PyTorch ONNX exporter could provide a way to specify which axes are dynamic.\r\n\r\n> this is the same issue as you issued #1400, right?\r\n\r\nYes, I opened a new issue because that one did not appear to be related to the PyTorch exporter.\r\n\r\n> thanks for heads up. we'll check it in detail.\r\n\r\nThanks, I will keep posting any finding that might help to improve the product. ",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/512329015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514008290",
        "html_url": "https://github.com/microsoft/onnxruntime/issues/1360#issuecomment-514008290",
        "issue_url": "https://api.github.com/repos/microsoft/onnxruntime/issues/1360",
        "id": 514008290,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDAwODI5MA==",
        "user": {
            "login": "faxu",
            "id": 20780999,
            "node_id": "MDQ6VXNlcjIwNzgwOTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/20780999?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faxu",
            "html_url": "https://github.com/faxu",
            "followers_url": "https://api.github.com/users/faxu/followers",
            "following_url": "https://api.github.com/users/faxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/faxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faxu/subscriptions",
            "organizations_url": "https://api.github.com/users/faxu/orgs",
            "repos_url": "https://api.github.com/users/faxu/repos",
            "events_url": "https://api.github.com/users/faxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faxu/received_events",
            "type": "User",
            "site_admin": true
        },
        "created_at": "2019-07-23T00:43:09Z",
        "updated_at": "2019-07-23T00:43:09Z",
        "author_association": "MEMBER",
        "body": "Closing the issue. For suggestions or issue for PyTorch-> ONNX, please file it in the PyTorch github.",
        "reactions": {
            "url": "https://api.github.com/repos/microsoft/onnxruntime/issues/comments/514008290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]